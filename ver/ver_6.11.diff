diff --git a/TartanClasses.py b/TartanClasses.py
index f2bf53d..1c9394f 100644
--- a/TartanClasses.py
+++ b/TartanClasses.py
@@ -498,6 +498,8 @@ try:
     class MyMessageBox(object):
         def __init__(self, parent, dtype, title, mess, butt=None, dflt=None):
             self.parent = parent
+            if self.parent is None:
+                self.parent = tk._default_root
             if self.parent:
                 if self.parent.winfo_toplevel().state() == "withdrawn":
                     self.parent.winfo_toplevel().deiconify()
@@ -2810,6 +2812,8 @@ Table %s in Program %s""" % (err, table, self.prog))
 
 class CCD(object):
     """
+    This class is used for checking data based on the type and size.
+
     Data Types
     ============================================================================
     CB = CheckButton Box
@@ -3865,13 +3869,13 @@ class TartanDialog(object):
                     server = [ctlsys["sys_msvr"], ctlsys["sys_mprt"],
                         ctlsys["sys_msec"], ctlsys["sys_maut"],
                         ctlsys["sys_mnam"], ctlsys["sys_mpwd"]]
-                    if sendMail(server, "", "", "", check=True,
-                            errwid=self.mf.body,
-                            wrkdir=self.mf.rcdic["wrkdir"]):
-                        self.repeml = ["Y", "", "", "", "Y"]
-                    else:
+                    err = sendMail(server, "", "", "", check=True,
+                        wrkdir=self.mf.rcdic["wrkdir"])
+                    if err:
                         showError(self.mf.body, "Error",
-                            "Mail Server Invalid or Unavailable")
+                            "Mail Server Invalid or Unavailable.\n\n%s" % err)
+                    else:
+                        self.repeml = ["Y", "", "", "", "Y"]
             except:
                 pass
         if self.view or self.mail:
@@ -8889,6 +8893,10 @@ class Balances(object):
             "A" = returns all transactions
         """
         ages = [0,0,0,0,0]
+        if trans == "Y":
+            cdt = self.curdt
+        else:
+            cdt = None
         if self.system == "CRS":
             whr = [("crt_cono", "=", self.conum), ("crt_acno", "=", self.acno)]
             w = copyList(whr)
@@ -8900,7 +8908,7 @@ class Balances(object):
             else:
                 obal = obal[0]
             cbal = 0.0
-            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=self.curdt,
+            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=cdt,
                 whr=whr, zer=trans)
         elif self.system == "DRS":
             whr = [("drt_cono", "=", self.conum), ("drt_chain", "=",
@@ -8914,7 +8922,7 @@ class Balances(object):
             else:
                 obal = obal[0]
             cbal = 0.0
-            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=self.curdt,
+            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=cdt,
                 whr=whr, zer=trans)
         elif self.system == "MEM":
             whr = [("mlt_cono","=",self.conum), ("mlt_memno","=",self.memno)]
@@ -8927,7 +8935,7 @@ class Balances(object):
             else:
                 obal = obal[0]
             cbal = 0.0
-            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=self.curdt,
+            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=cdt,
                 whr=whr, zer=trans)
         else:
             return
@@ -13325,9 +13333,9 @@ class PrintDraw(object):
                                 fill=1, border="TLB", ln=0)
         key = "%s_%s" % (self.conum, self.date)
         pdfnam = getModName(self.mf.rcdic["wrkdir"], "draw", key, ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.mf, conum=self.conum, pdfnam=pdfnam,
-            repprt=self.repprt)
+        if self.fpdf.saveFile(pdfnam):
+            doPrinter(mf=self.mf, conum=self.conum, pdfnam=pdfnam,
+                repprt=self.repprt)
 
     def pageHeading(self, htyp="A", grn="A"):
         if not self.cdes:
@@ -14435,10 +14443,10 @@ class RepPrt(object):
                     self.fpdf.setFont(style="B")
                     for tail in self.tails:
                         self.fpdf.drawText(txt=tail)
-                self.fpdf.output(self.pdfnam)
-                doPrinter(mf=self.mf, conum=self.conum, pdfnam=self.pdfnam,
-                    header=self.heads[-1], fromad=self.fromad,
-                    repprt=self.repprt, repeml=self.repeml)
+                if self.fpdf.saveFile(self.pdfnam):
+                    doPrinter(mf=self.mf, conum=self.conum, pdfnam=self.pdfnam,
+                        header=self.heads[-1], fromad=self.fromad,
+                        repprt=self.repprt, repeml=self.repeml)
         except:
             pass
 
@@ -15187,7 +15195,7 @@ class TarBckRes(object):
         self.smtp = False
         if csys:
             self.budays = csys[0]
-            if csys[1] and sendMail(csys[1:], "", "", "", check=True,
+            if csys[1] and not sendMail(csys[1:], "", "", "", check=True,
                     wrkdir=self.mf.rcdic["wrkdir"]):
                 self.smtp = csys[1:]
         self.ver = ver
@@ -15202,6 +15210,8 @@ class TarBckRes(object):
             else:
                 self.startRes()
                 self.mf.startLoop()
+            if os.path.isdir(self.tmpdir):
+                shutil.rmtree(self.tmpdir)
 
     def setVariables(self):
         t = time.localtime()
@@ -15308,8 +15318,8 @@ class TarBckRes(object):
     def startRes(self):
         dat = []
         dat = glob.glob(os.path.join(self.archdir, "*.tar"))
-        dat.sort()
-        fst = os.path.join(self.archdir, dat[-1])
+        dat.sort(reverse=True)
+        fst = os.path.join(self.archdir, dat[0])
         arc = {
             "stype": "F",
             "types": "fle",
@@ -15371,16 +15381,11 @@ class TarBckRes(object):
         cwd = os.getcwd()
         os.chdir(self.tmpdir)
         tarfle = tarfile.open(os.path.join(self.archdir, arcfle), "r")
-        try:
-            # Only available since 2.5
-            tarfle.extractall()
-        except:
-            for member in tarfle.getmembers():
-                tarfle.extract(member)
+        tarfle.extractall()
         tarfle.close()
         os.chdir(cwd)
         if not os.path.isfile(os.path.join(self.tmpdir, "verupd_0.dat")):
-            return
+            return "Invalid Restore Archive"
         zipfle = gzip.open(os.path.join(self.tmpdir, "verupd_0.dat"), mode="rb")
         data = zipfle.readlines()
         data = data[0].decode("utf-8").replace("[[", "").replace("]]", "")
@@ -15481,7 +15486,7 @@ class TarBckRes(object):
                 self.mf.closeLoop()
             return
         self.bu.closeProcess()
-        ok = askQuestion(self.mf.body, "Restore", "Are You Certain this is "\
+        ok = askQuestion(self.mf.body, "Restore", "Are You Sure this is "\
             "what you want to do?\n\nExisting Data in the Database Will be "\
             "Replaced and will Not be Recoverable.", default="no")
         if ok == "no":
@@ -15607,7 +15612,7 @@ class TarBckRes(object):
                     continue
                 else:
                     whr = None
-                flenam = "%s_%s.dat" % (tab, coy[0])
+                flenam = "%s_%03i.dat" % (tab, coy[0])
                 names.append(flenam)
                 zipfle = gzip.open(os.path.join(self.tmpdir, flenam),
                     mode="wb", compresslevel=5)
@@ -16788,6 +16793,13 @@ class MyFpdf(fpdf.FPDF):
         if not self.page or m >= pd:
             return True
 
+    def saveFile(self, pdfnam, scrn=None):
+        try:
+            self.output(pdfnam, "F")
+            return True
+        except Exception as err:
+            showError(scrn, "Error", err)
+
 class TartanLabel(MyFpdf):
     def __init__(self, label, unit="mm", posY=1, posX=1):
         super().__init__(name=__name__, head=90, font="arial", foot=False)
@@ -18579,8 +18591,7 @@ class ViewPDF(object):
                     self.server = [ctlsys["sys_msvr"], ctlsys["sys_mprt"],
                         ctlsys["sys_msec"], ctlsys["sys_maut"],
                         ctlsys["sys_mnam"], ctlsys["sys_mpwd"]]
-                    if sendMail(self.server, "", "", "", check=True,
-                            errwid=self.mf.window,
+                    if not sendMail(self.server, "", "", "", check=True,
                             wrkdir=self.mf.rcdic["wrkdir"]):
                         mods.insert(0, ("Email", self.doEmail))
             except:
diff --git a/ass/ar3010.py b/ass/ar3010.py
index 6a1bdb7..ee81550 100644
--- a/ass/ar3010.py
+++ b/ass/ar3010.py
@@ -159,9 +159,9 @@ class ar3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/ass/ar3020.py b/ass/ar3020.py
index cc7dbc2..fb089a1 100644
--- a/ass/ar3020.py
+++ b/ass/ar3020.py
@@ -220,10 +220,10 @@ class ar3020(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml, fromad=self.fromad)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml, fromad=self.fromad)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/ass/ar3030.py b/ass/ar3030.py
index 2334882..258405c 100644
--- a/ass/ar3030.py
+++ b/ass/ar3030.py
@@ -187,10 +187,10 @@ class ar3030(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml, fromad=self.fromad)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml, fromad=self.fromad)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/ass/ar3040.py b/ass/ar3040.py
index 0d3a189..f9132f7 100644
--- a/ass/ar3040.py
+++ b/ass/ar3040.py
@@ -250,10 +250,10 @@ class ar3040(object):
             if self.pglin > (self.fpdf.lpp - 2):
                 self.pageHeading(grp)
             self.grandTotal()
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml, fromad=self.fromad)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml, fromad=self.fromad)
 
     def getValues(self, data):
         bals = Balances(self.opts["mf"], "ASS", self.opts["conum"], self.sper,
diff --git a/ass/ar4010.py b/ass/ar4010.py
index 562154c..885d36a 100644
--- a/ass/ar4010.py
+++ b/ass/ar4010.py
@@ -277,31 +277,35 @@ class ar4010(object):
             self.pageHeading()
             self.printInfo()
         if opt == "B":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "A":
             dat, atc, col = self.getTrans()
             if not dat:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans(dat, atc)
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             dat, atc, col = self.getTrans()
             if dat:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans(dat, atc)
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         for x in range(0, len(self.df.topf[0])):
diff --git a/bkm/bk1020.py b/bkm/bk1020.py
index f0499a3..b49787c 100644
--- a/bkm/bk1020.py
+++ b/bkm/bk1020.py
@@ -1733,10 +1733,10 @@ class bk1020(object):
                     wrkdir=self.opts["mf"].rcdic["wrkdir"])]
             else:
                 att = None
-            self.form.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.pr.repprt,
-                fromad=self.fromad, repeml=self.pr.repeml, attach=att)
+            if self.form.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.pr.repprt,
+                    fromad=self.fromad, repeml=self.pr.repeml, attach=att)
 
     def doLoadStatic(self):
         cmc = self.sql.ctlmst_col
diff --git a/bkm/bk3010.py b/bkm/bk3010.py
index 8786b70..56d2374 100644
--- a/bkm/bk3010.py
+++ b/bkm/bk3010.py
@@ -180,10 +180,10 @@ class bk3010(object):
         if self.fpdf.page:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                header=self.head, pdfnam=pdfnam, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    header=self.head, pdfnam=pdfnam, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         if "wait" not in self.opts:
             self.opts["mf"].closeLoop()
 
diff --git a/bkm/bk3020.py b/bkm/bk3020.py
index 6f65bd4..6499ff8 100644
--- a/bkm/bk3020.py
+++ b/bkm/bk3020.py
@@ -292,10 +292,10 @@ class bk3020(object):
             self.batchTotal()
             self.typeTotal()
             self.grandTotal()
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         bkmno = CCD(data[0], "UI", 7)
diff --git a/bkm/bk3030.py b/bkm/bk3030.py
index 933f422..25f90d8 100644
--- a/bkm/bk3030.py
+++ b/bkm/bk3030.py
@@ -217,13 +217,13 @@ class bk3030(object):
                 self.fpdf.add_page()
             self.doHKeeping()
         if self.fpdf.page:
+            subj = "%s - %s" % (self.cdes, self.hdes)
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            subj = "%s - %s" % (self.cdes, self.hdes)
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=subj, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=subj, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         if self.prtinv == "Y" and self.docs:
             # Print Invoice
             self.docs.sort()
diff --git a/bkm/bk3040.py b/bkm/bk3040.py
index 55d1719..115fa9d 100644
--- a/bkm/bk3040.py
+++ b/bkm/bk3040.py
@@ -174,10 +174,10 @@ class bk3040(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         num = CCD(data[0], "UI", 7)
diff --git a/bkm/bk3050.py b/bkm/bk3050.py
index 7333f00..662783b 100644
--- a/bkm/bk3050.py
+++ b/bkm/bk3050.py
@@ -121,9 +121,9 @@ class bk3050(object):
             if self.fpdf.page and not p.quit:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
         self.closeProcess()
 
     def doProcess(self, dat):
diff --git a/bkm/bk3070.py b/bkm/bk3070.py
index 00fa6e0..2ed4997 100644
--- a/bkm/bk3070.py
+++ b/bkm/bk3070.py
@@ -272,10 +272,11 @@ class bk3070(object):
             key = "%s_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement at %s" % (self.opts["conam"], self.sysdtd),
-            repprt=self.repprt, fromad=self.fromad, repeml=self.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Statement at %s" % (self.opts["conam"], self.sysdtd)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.repprt,
+                fromad=self.fromad, repeml=self.repeml)
         if self.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/bks/bs3010.py b/bks/bs3010.py
index 43e610a..b3a01b2 100644
--- a/bks/bs3010.py
+++ b/bks/bs3010.py
@@ -192,10 +192,10 @@ Thanks and Regards.
             sp.closeSplash()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
         head = "Book List as at %s" % (self.curdt)
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=head, repprt=self.df.repprt, repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=head, repprt=self.df.repprt, repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def pageHeading(self, new=False):
diff --git a/bwl/bc2020.py b/bwl/bc2020.py
index a39c4c4..561f275 100644
--- a/bwl/bc2020.py
+++ b/bwl/bc2020.py
@@ -680,10 +680,11 @@ Captains (C) are responsible to distribute and return assessment forms, complete
 
 %s""" % (txt, self.pr.t_work[0][0][0], self.pr.t_work[0][0][1])
             fpdf.drawText(x=10.0*cw, y=(last+3)*ld, txt=txt, ctyp="M")
-        fpdf.output(pdfnam, "F")
         head = "Match Selections for %s" % self.disp
-        doPrinter(mf=self.opts["mf"], header=head, pdfnam=pdfnam,
-            repprt=self.pr.repprt, fromad=self.fromad, repeml=self.pr.repeml)
+        if fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], header=head, pdfnam=pdfnam,
+                repprt=self.pr.repprt, fromad=self.fromad,
+                repeml=self.pr.repeml)
 
     def getName(self, snam, fnam):
         if fnam:
diff --git a/bwl/bc2040.py b/bwl/bc2040.py
index ad4a5ef..9e11287 100644
--- a/bwl/bc2040.py
+++ b/bwl/bc2040.py
@@ -134,8 +134,9 @@ class bc2040(object):
                     "This Sectional Competition Has Been Completed.")
                 return "rf"
             gme = self.sql.getRec("bwlgme", cols=["count(*)"],
-                where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
-                self.ccod), ("bcg_ocod", "<>", 0)], limit=1)
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod), ("bcg_ocod", "<>", 0)],
+                limit=1)
             if gme[0]:
                 ok = askQuestion(self.opts["mf"].body, "Error",
                     """This Competition Has Already Been Drawn.
@@ -345,10 +346,6 @@ Do You Want to Erase All Draws and Results?""", default="no")
                             cols=["bce_scod"], where=[("bce_cono",
                             "=", self.opts["conum"]), ("bce_ccod",
                             "=", self.ccod)], order="bce_scod")
-                        skips = []
-                        for rec in recs:
-                            skips.append(rec[0])
-                        self.doPopulate(skips)
                 data.append(self.cmp[self.sql.bwlcmp_col.index("bcm_xflag")])
                 self.sql.updRec("bwlcmp", data=data, where=[("bcm_cono", "=",
                     self.opts["conum"]), ("bcm_code", "=", self.ccod)])
@@ -358,8 +355,6 @@ Do You Want to Erase All Draws and Results?""", default="no")
             if self.newent:
                 self.sql.insRec("bwlent", data=[self.opts["conum"], self.ccod,
                     self.scod, self.tcod, self.paid])
-                if self.cfmat in ("T", "X"):
-                    self.doPopulate([self.scod])
             else:
                 self.sql.updRec("bwlent", cols=["bce_tcod", "bce_paid"],
                     data=[self.tcod, self.paid], where=[("bce_cono", "=",
@@ -368,22 +363,6 @@ Do You Want to Erase All Draws and Results?""", default="no")
             self.loadButton()
             self.df.advanceLine(0)
 
-    def doPopulate(self, scods):
-        # Populate bwlgme records
-        num = self.typ[self.sql.bwltyp_col.index("bct_games")]
-        dgm = self.typ[self.sql.bwltyp_col.index("bct_drawn")]
-        for scod in scods:
-            data = [self.opts["conum"], self.ccod, scod, 0, "",
-                0, 0, "", 0, 0, 0, 0, 0, 0, 0, "", 0, 0]
-            for x in range(0, dgm):
-                data[3] = x + 1
-                data[4] = "D"
-                self.sql.insRec("bwlgme", data=data)
-            for x in range(dgm, num):
-                data[3] = x + 1
-                data[4] = "S"
-                self.sql.insRec("bwlgme", data=data)
-
     def loadButton(self):
         rec = self.sql.getRec("bwlent", cols=["count(*)"],
             where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
diff --git a/bwl/bc2050.py b/bwl/bc2050.py
index 62da5e5..23ccbe1 100644
--- a/bwl/bc2050.py
+++ b/bwl/bc2050.py
@@ -55,7 +55,9 @@ class bc2050(object):
         self.opts = opts
         if self.setVariables():
             self.mainProcess()
-            if "wait" in self.opts:
+            if "args" in self.opts:
+                pass
+            elif "wait" in self.opts:
                 self.df.mstFrame.wait_window()
             else:
                 self.opts["mf"].startLoop()
@@ -120,7 +122,7 @@ class bc2050(object):
                 0,"N",self.doGrpNum,None,None,("in", (0, 2, 3))),
             (("T",0,5,0),("IRB",r2s),0,"Smallest Groups","",
                 "F","N",self.doGrpSml,None,None,None),
-            (("T",0,6,0),"IUA",30,"Greens","Greens (A,B,C)",
+            (("T",0,6,0),"IUA",35,"Greens","Greens (A,B,C)",
                 "","N",self.doGreens,None,None,("notblank",),None,"Available "\
                 "Greens in the format A,B or A,B345 showing Green Code and "\
                 "Rinks. If the Rinks are Not Entered they will Default to 6. "\
@@ -134,13 +136,25 @@ class bc2050(object):
                 "E","N",self.doTypCards,None,None,None),
             (("T",0,10,0),("IRB",r1s),0,"All Cards","",
                 "Y","N",self.doAllCards,None,None,None))
-        tnd = ((self.doEnd,"y"),)
+        if "args" in self.opts:
+            tnd = ((self.doEnd,"n"),)
+        else:
+            tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         self.df = TartanDialog(self.opts["mf"], tops=False,
             eflds=fld, tend=tnd, txit=txt, view=("X","V"), mail=("Y","Y"))
         self.df.setWidget(self.df.topEntry[0][12][2][0], state="hide")
         if len(self.df.topEntry[0][12]) == 4:
             self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
+        if "args" in self.opts:
+            self.df.window.withdraw()
+            self.df.doKeyPressed("T", 0, 0, self.opts["args"][0])
+            self.df.doKeyPressed("T", 0, 2, self.opts["args"][1])
+            self.df.doKeyPressed("T", 0, 3, self.today)
+            self.df.doKeyPressed("T", 0, 4, "N")
+            self.df.doKeyPressed("T", 0, 7, "A7,B7,C7,D7")
+            self.df.doKeyPressed("T", 0, 9, "N")
+            self.df.doKeyPressed("T", 0, 12, "N")
 
     def doCmpCod(self, frt, pag, r, c, p, i, w):
         dogme = False
@@ -169,6 +183,10 @@ class bc2050(object):
         ents = self.sql.getRec("bwlent", cols=["bce_scod"],
             where=[("bce_cono", "=", self.opts["conum"]),
             ("bce_ccod", "=", self.ccod)])
+        if not ents:
+            showError(self.opts["mf"].body, "Entries",
+                "There Are No Entries for this Competition.")
+            return "rf"
         teams = []
         for ent in ents:
             teams.append(ent[0])
@@ -226,78 +244,95 @@ class bc2050(object):
                 limit=1)
             if not bwlpts[0] and not bwlpts[1]:
                 self.cchoice = True
-        gme = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_type",
-            "bcg_date", "bcg_aflag", "sum(bcg_points)"], where=[("bcg_cono",
-            "=", self.opts["conum"]), ("bcg_ccod", "=", self.ccod)],
-            group="bcg_game, bcg_type, bcg_aflag", order="bcg_game")
-        if not gme and self.cfmat in ("D", "K", "R"):
-            if self.cfmat == "R":
-                lbye = 1
-                self.doSections()
-                random.shuffle(teams)
-                if self.sects:
-                    if self.ssiz % 2 or self.totskp % self.ssiz:
-                        ok = askQuestion(self.opts["mf"].body, "Mismatch",
-                            "Uneven Number of Teams or Entries/Section (%s)\n"\
-                            "Do You Want Byes?" % self.ssiz)
-                        if ok == "no":
-                            return "rf"
-                    for x in range(0, len(teams), self.ssiz):
-                        team = teams[x:x+self.ssiz]
-                        while len(team) < self.ssiz:
-                            team.append(900000 + lbye)
-                            lbye += 1
-                        if self.ssiz % 2:
-                            team.append(900000 + lbye)
-                            lbye += 1
-                        self.doPopulate(team, sect=int((x/self.ssiz)+1))
+        if self.cfmat in ("T", "X"):
+            gme = self.sql.getRec("bwlgme", cols=["max(bcg_game)"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod)], limit=1)
+            if gme[0] is None or gme[0] < self.games:
+                if gme[0] is None:
+                    self.game = 1
                 else:
-                    if self.totskp % 2:
-                        ok = askQuestion(self.opts["mf"].body, "Mismatch",
-                            "There is an Uneven Number of Teams (%s), "\
-                            "Do You Want Byes?" % self.totskp)
-                        if ok == "yes":
-                            teams.append(900000 + lbye)
-                            self.totskp += 1
-                            self.games += 1
-                            lbye += 1
-                        else:
-                            return "rf"
-                    self.doPopulate(teams)
-            elif self.cfmat == "D":
-                # Drawn Knockout, Create Teams
-                self.doPopulate(self.doDrawTeams(copyList(teams)))
-            else:
+                    self.game = gme[0] + 1
+                if self.game <= self.drawn:
+                    self.gtyp = "D"
+                else:
+                    self.gtyp = "S"
                 self.doPopulate(teams)
-            self.game = 1
-            self.gtyp = "D"
-            self.df.loadEntry(frt, pag, p+2, data=self.game)
-            if self.cfmat == "R":
-                return "sk1"
-            else:
-                self.grpsel = False
-                self.grpgrn = "N"
-                return "sk11"
-        elif self.cfmat in ("D", "K"):
-            if not self.ctyp:
-                ok = "yes"
-            else:
-                ok = askQuestion(self.opts["mf"].body, "Drawn",
-                    "This Knockout Competition has Already Been Drawn."\
-                    "\n\nDo You Want to Reprint?")
-            if ok == "yes":
-                self.reprint = True
-                return "sk11"
-            else:
-                return "rf"
-        for game in gme:
-            if self.cfmat == "R":
-                if not game[2]:
+                self.df.loadEntry(frt, pag, p+2, data=self.game)
+                return
+        if self.cfmat in ("D", "K", "R"):
+            gme = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_type",
+                "bcg_date", "bcg_aflag", "sum(bcg_points)"], where=[("bcg_cono",
+                "=", self.opts["conum"]), ("bcg_ccod", "=", self.ccod)],
+                group="bcg_game, bcg_type, bcg_aflag", order="bcg_game")
+            if not gme:
+                if self.cfmat == "R":
+                    lbye = 1
+                    self.doSections()
+                    random.shuffle(teams)
+                    if self.sects:
+                        if self.ssiz % 2 or self.totskp % self.ssiz:
+                            ok = askQuestion(self.opts["mf"].body, "Mismatch",
+                                "Uneven Number of Teams or Entries/Section "\
+                                "(%s)\nDo You Want Byes?" % self.ssiz)
+                            if ok == "no":
+                                return "rf"
+                        for x in range(0, len(teams), self.ssiz):
+                            team = teams[x:x+self.ssiz]
+                            while len(team) < self.ssiz:
+                                team.append(900000 + lbye)
+                                lbye += 1
+                            if self.ssiz % 2:
+                                team.append(900000 + lbye)
+                                lbye += 1
+                            self.doPopulate(team, sect=int((x/self.ssiz)+1))
+                    else:
+                        if self.totskp % 2:
+                            ok = askQuestion(self.opts["mf"].body, "Mismatch",
+                                "There is an Uneven Number of Teams (%s), "\
+                                "Do You Want Byes?" % self.totskp)
+                            if ok == "yes":
+                                teams.append(900000 + lbye)
+                                self.totskp += 1
+                                self.games += 1
+                                lbye += 1
+                            else:
+                                return "rf"
+                        self.doPopulate(teams)
+                elif self.cfmat == "D":
+                    # Drawn Knockout, Create Teams
+                    self.doPopulate(self.doDrawTeams(copyList(teams)))
+                else:
+                    self.doPopulate(teams)
+                self.game = 1
+                self.gtyp = "D"
+                self.df.loadEntry(frt, pag, p+2, data=self.game)
+                if self.cfmat == "R":
+                    return "sk1"
+                else:
+                    self.grpsel = False
+                    self.grpgrn = "N"
+                    return "sk11"
+            elif self.cfmat in ("D", "K"):
+                if not self.ctyp:
+                    ok = "yes"
+                else:
+                    ok = askQuestion(self.opts["mf"].body, "Drawn",
+                        "This Knockout Competition has Already Been Drawn."\
+                        "\n\nDo You Want to Reprint?")
+                if ok == "yes":
+                    self.reprint = True
+                    return "sk11"
+                else:
+                    return "rf"
+            for game in gme:
+                if self.cfmat == "R":
+                    if not game[2]:
+                        dogme = True
+                        break
+                elif not game[3] and not game[4]:
                     dogme = True
                     break
-            elif not game[3] and not game[4]:
-                dogme = True
-                break
         if dogme:
             self.game = game[0]
             self.gtyp = game[1]
@@ -429,7 +464,19 @@ class bc2050(object):
         # Populate bwlgme records
         data = [self.opts["conum"], self.ccod, 0, 0, "D", 0, 0, "",
             0, 0, 0, 0, 0, 0, 0, "", 0, 1]
-        if self.cfmat == "R":
+        if self.cfmat in ("T", "X"):
+            # Check if already populated (Old Method)
+            chk = self.sql.getRec("bwlgme", where=[("bcg_cono", "=",
+                self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                ("bcg_game", "=", self.game)])
+            if chk:
+                return
+            for skip in teams:
+                data[2] = skip
+                data[3] = self.game
+                data[4] = self.gtyp
+                self.sql.insRec("bwlgme", data=data)
+        elif self.cfmat == "R":
             sch = self.doMakeSchedule(teams)
             games = len(teams) - 1
             for game in range(games):
@@ -445,11 +492,11 @@ class bc2050(object):
                     data[2] = opp
                     data[6] = skp
                     self.sql.insRec("bwlgme", data=data)
-            return
-        for num, skip in enumerate(teams):
-            data[2] = skip
-            data[3] = self.game + 1
-            self.sql.insRec("bwlgme", data=data)
+        else:
+            for skip in teams:
+                data[2] = skip
+                data[3] = self.game + 1
+                self.sql.insRec("bwlgme", data=data)
 
     def doMakeSchedule(self, teams):
         grps = [0+i for i in range(len(teams))]
@@ -676,10 +723,11 @@ class bc2050(object):
                 else:
                     self.allocateRinks(final=True)
             pb.closeProgress()
-            if self.best[0]:
+            if self.best[0] >= 10:
                 showWarning(self.opts["mf"].body, "Anomalies",
                     "There are Some Draw Anomalies, Please Print a Draw "\
-                    "Summary Sheet and, if required, Change the Draw Manually.")
+                    "Summary Sheet and, if required, Change the Draw "\
+                    "Manually.")
         if self.reprint and self.prtcards == "O":
             pass
         else:
@@ -690,14 +738,14 @@ class bc2050(object):
                     self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
                         self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
                         ("bcg_game", ">", self.games)])
-            elif not self.drawall:
+            elif not self.drawall and not "args" in self.opts:
                 ok = askQuestion(self.opts["mf"].body, "Summary",
                     "Do You Want to Print a Draw Summary?", default="no")
                 if ok == "yes":
                     callModule(self.opts["mf"], None, "bc3090",
                         coy=[self.opts["conum"], self.opts["conam"]],
                         args=[self.ccod, self.igend, self.df.repprt,
-                            self.df.repeml])
+                        self.df.repeml])
         if self.drawall:
             self.sql.updRec("bwlgme", cols=["bcg_aflag"], data=["D"],
                 where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
@@ -719,7 +767,11 @@ class bc2050(object):
         if not self.drawall or self.fini:
             self.df.closeProcess()
             if not self.reprint:
-                self.opts["mf"].dbm.commitDbase(ask=True, rback=False)
+                if "args" in self.opts:
+                    ask = False
+                else:
+                    ask = True
+                self.opts["mf"].dbm.commitDbase(ask=ask, rback=False)
             if self.drawall:
                 ok = askQuestion(self.opts["mf"].body, "Summary",
                     "Do You Want to Print a Draw Summary?", default="no")
@@ -737,7 +789,8 @@ class bc2050(object):
                         self.printCards()
                 else:
                     self.printBoards()
-            self.opts["mf"].closeLoop()
+            if "args" not in self.opts:
+                self.opts["mf"].closeLoop()
 
     def pairSkips(self):
         if self.cfmat in ("D", "K"):
@@ -984,49 +1037,55 @@ class bc2050(object):
         if self.cfmat == "T" and self.gtyp == "D":
             repeat = 10
         else:
-            repeat = 100
+            repeat = 1000
         for _ in range(repeat):
             err = 0
             again = False
             cpydic = copyList(skpdic)
             cpyrnk = copyList(allrnk)
             random.shuffle(cpyrnk)
-            for y in range(0, len(self.skips), 2):
-                one = self.skips[y]
-                if one in cpydic:
-                    continue
-                two = self.skips[y + 1]
-                # Check if bye
-                if one > 900000 or two > 900000:
-                    cpydic[one] = (two, "BY")
-                    continue
-                # Check if end rinker
-                endr = bool(self.endrks and self.checkEnds(one, two))
-                done = False
-                for rk in cpyrnk:
-                    if endr and rk in self.endrks:
-                        # Skip end rinks
+            for x in range(2):
+                # x = 0 - End Rinkers Only
+                # x = 1 - All the Rest
+                for y in range(0, len(self.skips), 2):
+                    one = self.skips[y]
+                    if one in cpydic:
+                        # Leader already allocated rink
                         continue
-                    # Check for repeat rinks
-                    if not self.checkRink(one, two, rk):
-                        cpydic[one] = (two, rk)
-                        cpyrnk.remove(rk)
-                        done = True
-                        break
-                # Check if available rink found
-                if not done:
-                    err += 1
-                    again = True
-                    fixed = False
+                    two = self.skips[y + 1]
+                    # Check if bye
+                    if one > 900000 or two > 900000:
+                        cpydic[one] = (two, "BY")
+                        continue
+                    # Check if end rinker
+                    endr = bool(self.endrks and self.checkEnds(one, two))
+                    if not x and not endr:
+                        continue
+                    done = False
                     for rk in cpyrnk:
+                        if endr and rk in self.endrks:
+                            # Skip end rinks
+                            continue
                         # Check for repeat rinks
-                        if not self.checkRink(one, two, rk, final):
+                        if not self.checkRink(one, two, rk):
                             cpydic[one] = (two, rk)
                             cpyrnk.remove(rk)
-                            fixed = True
+                            done = True
                             break
-                    if not fixed:
-                        err += 9
+                    if x and not done:
+                        # Check if available rink found
+                        err += 1
+                        again = True
+                        fixed = False
+                        for rk in cpyrnk:
+                            # Check for repeat rinks
+                            if not self.checkRink(one, two, rk, final):
+                                cpydic[one] = (two, rk)
+                                cpyrnk.remove(rk)
+                                fixed = True
+                                break
+                        if not fixed:
+                            err += 9
             if err < self.best[0]:
                 self.best = [err, copyList(cpydic)]
             if not again:
@@ -1201,23 +1260,6 @@ class bc2050(object):
             return
         return chk
 
-    def getRate(self, skp, opp, rnk):
-        dup = self.sql.getRec("bwlgme", cols=["count(*)"],
-            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
-            "=", self.ccod), ("bcg_scod", "=", skp), ("bcg_ocod",
-            "=", opp)], limit=1)[0] + 1
-        rnk = self.sql.getRec("bwlgme", cols=["count(*)"],
-            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
-            "=", self.ccod), ("bcg_scod", "=", skp), ("bcg_rink",
-            "=", rnk)], limit=1)[0] + 1
-        eds = self.sql.getRec("bwlgme", cols=["count(*)"],
-            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
-            "=", self.ccod), ("bcg_scod", "=", skp), ("bcg_rink",
-            "in", self.endrks)], limit=1)[0]
-        if rnk in self.endrks:
-            eds += 1
-        return (skp + dup + rnk + eds)
-
     def printTeams(self):
         def getNames(mem):
             rec = self.sql.getRec("bwltab", cols=["btb_surname",
@@ -1484,11 +1526,11 @@ class bc2050(object):
         else:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
             head = "%s Draw" % self.cdes
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                header=head, pdfnam=pdfnam, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    header=head, pdfnam=pdfnam, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def doCompletionDates(self):
@@ -2018,11 +2060,15 @@ class bc2050(object):
                 recs = self.sql.getRec(tables=["bwlgme", "bwltab"],
                     cols=["btb_tab", "btb_surname", "btb_names", "bcg_ocod",
                     "bcg_rink"], where=where, order="btb_surname, btb_names")
+            if len(recs) > 50:
+                h = 4.4
+            else:
+                h = 4.7
             for skp in recs:
                 if self.pglin > self.fpdf.lpp:
                     self.pageHeading()
                 if g[0] != lastg:
-                    if len(recs) > (self.fpdf.lpp - self.pglin - 4):
+                    if len(recs) > (self.fpdf.lpp - self.pglin - 3):
                         self.pageHeading()
                     self.groupHeading(g[0])
                     lastg = g[0]
@@ -2045,11 +2091,10 @@ class bc2050(object):
                 else:
                     nam = "Unknown"
                 c = CCD(nam, "NA", 30)
-                self.printLine(a.disp, " %s " % b.disp, c.disp, 4.7)
+                self.printLine(a.disp, " %s " % b.disp, c.disp, h)
                 self.pglin += 1
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, "report", ext="pdf")
-        self.fpdf.output(pdfnam, "F")
         if self.game in (1, 21, 31, 41, 51, 61, 71, 81, 91):
             desc = "%sst" % self.game
         elif self.game in (2, 22, 32, 42, 52, 62, 72, 82, 92):
@@ -2059,9 +2104,10 @@ class bc2050(object):
         else:
             desc = "%sth" % self.game
         head = "%s Draw for the %s game" % (self.cdes, desc)
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=head, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, date=False):
         self.fpdf.add_page()
@@ -2238,9 +2284,9 @@ class bc2050(object):
             last, table = doDrawTable(fpdf, nff, ppad=1, spad=5, cw=cw, ld=ld)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            repprt=self.df.repprt)
+        if fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, repprt=self.df.repprt)
 
     def doExit(self):
         self.df.closeProcess()
diff --git a/bwl/bc2060.py b/bwl/bc2060.py
index 81064b4..3bd1a53 100644
--- a/bwl/bc2060.py
+++ b/bwl/bc2060.py
@@ -79,7 +79,7 @@ class bc2060(object):
                 1,"N",self.doGame,None,None,("efld",)),
             (("T",0,1,0),"I@bcg_date",0,"Date","",
                 self.today,"N",self.doDate,None,None,("efld",)),
-            (("T",0,2,0),"IUA",30,"Greens","Greens (A,B,C)",
+            (("T",0,2,0),"IUA",35,"Greens","Greens (A,B,C)",
                 "","N",self.doGreens,None,None,("efld",),None,"Available "\
                 "Greens in the format A,B or A,B345 showing Green Code and "\
                 "Rinks. If the Rinks are Not Entered they will Default to 6."),
diff --git a/bwl/bc2080.py b/bwl/bc2080.py
index 14f3b11..533c464 100644
--- a/bwl/bc2080.py
+++ b/bwl/bc2080.py
@@ -577,6 +577,7 @@ Try to Allocate Different Rinks""" % self.weeks),
                     break
         for gme in self.games:
             gme.insert(0, self.rinks1.pop())
+        self.games.sort()
         self.drawn = True
         txt = "Random 321 Draw"
         self.doShowDraw(txt, self.games)
@@ -732,9 +733,9 @@ Try to Allocate Different Rinks""" % self.weeks),
                     font=["Arial", "B", self.fsiz], border="TLRB", ln=ln)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"], "draw",
             "%s_%s" % (self.opts["conum"], self.date), ext="pdf")
-        self.fpdf.output(pdfnam)
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            repprt=self.pd.repprt)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                repprt=self.pd.repprt)
 
     def doPHead(self, htyp="A", ww=None):
         hd1 = "321 Draw for the %s of %s (History %s)" % (self.timed,
diff --git a/bwl/bc3020.py b/bwl/bc3020.py
index ce49e19..5409662 100644
--- a/bwl/bc3020.py
+++ b/bwl/bc3020.py
@@ -250,12 +250,12 @@ class bc3020(object):
                     self.fpdf.cell(cwth*20, 8, right[x][1], 0, 1, "L")
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
         head = "Tabs Draw Summary for the period %s to %s" % (self.start.disp,
             self.end.disp)
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=head, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=head, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def getName(self, tab, cls=True):
diff --git a/bwl/bc3030.py b/bwl/bc3030.py
index 781d82c..97ee706 100644
--- a/bwl/bc3030.py
+++ b/bwl/bc3030.py
@@ -303,10 +303,11 @@ class bc3030(object):
                     else:
                         posy = fpdf.get_y() + 30.25
                     fpdf.drawText(x=posx, y=posy, txt="XXXXXXX")
-        fpdf.output(pdfnam, "F")
         head = "Match Assessment Forms for %s" % self.disp
-        doPrinter(mf=self.opts["mf"], header=head, pdfnam=pdfnam,
-            repprt=self.df.repprt, fromad=self.fromad, repeml=self.df.repeml)
+        if fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], header=head, pdfnam=pdfnam,
+                repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def doExit(self):
diff --git a/bwl/bc3040.py b/bwl/bc3040.py
index c94fe20..2a3f39c 100644
--- a/bwl/bc3040.py
+++ b/bwl/bc3040.py
@@ -228,10 +228,11 @@ class bc3040(object):
                 "to this match")
             fpdf.drawText(x=10*cw, y=63*ld, txt="CAPTAIN:   _________________")
             fpdf.drawText(x=26*cw, y=64*ld, txt="(Signature)")
-        fpdf.output(pdfnam, "F")
         head = "Match Declaration Forms for %s" % self.disp
-        doPrinter(mf=self.opts["mf"], header=head, pdfnam=pdfnam,
-            repprt=self.df.repprt, fromad=self.fromad, repeml=self.df.repeml)
+        if fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], header=head, pdfnam=pdfnam,
+                repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         self.closeProcess()
 
     def doExit(self):
diff --git a/bwl/bc3070.py b/bwl/bc3070.py
index 76ccc83..3a07e52 100644
--- a/bwl/bc3070.py
+++ b/bwl/bc3070.py
@@ -62,12 +62,15 @@ class bc3070(object):
                 ("bcm_name", "", 0, "Name", "Y"),
                 ("bcm_date", "", 0, "Date")),
             "where": [("bcm_cono", "=", self.opts["conum"])]}
-        r1s = (("Alphabtic", "A"), ("Numeric", "N"))
+        r1s = (("All", "A"), ("Paid", "P"), ("Unpaid", "U"))
+        r2s = (("Alphabtic", "A"), ("Numeric", "N"))
         fld = (
             (("T",0,0,0),"I@bcm_code",0,"","",
                 "","N",self.doCmpCod,com,None,("notzero",)),
             (("T",0,0,0),"ONA",30,""),
-            (("T",0,1,0),("IRB",r1s),0,"Order","",
+            (("T",0,1,0),("IRB",r1s),0,"Entries","",
+                "A","N",self.doCmpEnt,com,None,None,None),
+            (("T",0,2,0),("IRB",r2s),0,"Order","",
                 "A","N",self.doCmpOrd,None,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
@@ -75,27 +78,40 @@ class bc3070(object):
             eflds=fld, tend=tnd, txit=txt, view=("N","V"), mail=("Y","Y"))
 
     def doCmpCod(self, frt, pag, r, c, p, i, w):
-        chk = self.sql.getRec("bwlcmp", cols=["bcm_name"],
-            where=[("bcm_cono", "=", self.opts["conum"]), ("bcm_code", "=",
-            w)], limit=1)
+        chk = self.sql.getRec("bwlcmp", cols=["bcm_name", "bcm_type"],
+            where=[("bcm_cono", "=", self.opts["conum"]),
+            ("bcm_code", "=", w)], limit=1)
         if not chk:
             return "Invalid Competition Code"
         self.ccod = w
         self.cnam = chk[0]
+        chk = self.sql.getRec("bwltyp", cols=["bct_cfmat"],
+            where=[("bct_cono", "=", self.opts["conum"]),
+            ("bct_code", "=", chk[1])], limit=1)
+        self.ctyp = chk[0]
         self.df.loadEntry(frt, pag, p+1, data=self.cnam)
 
+    def doCmpEnt(self, frt, pag, r, c, p, i, w):
+        self.enttyp = w
+
     def doCmpOrd(self, frt, pag, r, c, p, i, w):
         self.cord = w
 
     def doEnd(self):
         self.df.closeProcess()
         col = ["btb_tab", "btb_surname", "btb_names", "btb_cell",
-            "btb_mail", "bce_tcod"]
+            "btb_mail", "bce_paid"]
+        if self.ctyp == "X":
+            col.insert(5, "bce_tcod")
         whr = [
             ("bce_cono", "=", self.opts["conum"]),
             ("bce_ccod", "=", self.ccod),
             ("btb_cono=bce_cono",),
             ("btb_tab=bce_scod",)]
+        if self.enttyp == "P":
+            whr.insert(2, ("bce_paid", "=", "Y"))
+        elif self.enttyp == "U":
+            whr.insert(2, ("bce_paid", "=", "N"))
         if self.cord == "A":
             odr = "btb_surname"
         else:
@@ -117,14 +133,18 @@ class bc3070(object):
                 self.fpdf.drawText(txt=nm, w=cwth*31, h=5, ln=0)
                 self.fpdf.drawText(txt=rec[3], w=cwth*16, h=5, ln=0)
                 self.fpdf.drawText(txt=rec[4], w=cwth*41, h=5, ln=0)
-                self.fpdf.drawText(txt=rec[5], w=cwth*2, h=5, ln=1)
+                idx = 5
+                if self.ctyp == "X":
+                    self.fpdf.drawText(txt=rec[idx], w=cwth*2, h=5, ln=0)
+                    idx += 1
+                self.fpdf.drawText(txt=rec[idx], w=cwth*2, h=5, ln=1)
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
             head = "%s - Entered Teams" % self.cnam
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=head, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=head, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def doHead(self):
@@ -132,11 +152,19 @@ class bc3070(object):
             self.fpdf.image(self.image, 10, 10, 15, 11)
         self.fpdf.set_font("Arial","B",15)
         self.fpdf.cell(20)
-        self.fpdf.cell(0,10,"Players Entered in the %s" % self.cnam,1,0,"C")
+        txt = "Players Entered in the %s" % self.cnam
+        if self.enttyp == "P":
+            txt = "Paid %s" % txt
+        elif self.enttyp == "U":
+            txt = "Unpaid %s" % txt
+        self.fpdf.cell(0, 10, txt, 1, 0, "C")
         self.fpdf.ln(20)
-        self.fpdf.set_font("Courier","B",9)
-        self.fpdf.cell(0, 5, "%-6s %-30s %-15s %-40s %1s" % \
-            ("Number", "Name", "Mobile", "Email", "T"), "B")
+        self.fpdf.set_font("Courier", "B", 9)
+        txt = "%-6s %-30s %-15s %-40s" % ("Number", "Name", "Mobile", "Email")
+        if self.ctyp == "X":
+            txt += " %1s" % "T"
+        txt += " %1s" % "P"
+        self.fpdf.cell(0, 5, txt, "B")
         self.fpdf.ln(5)
 
     def doExit(self):
diff --git a/bwl/bc3080.py b/bwl/bc3080.py
index 966475f..bb85c4c 100644
--- a/bwl/bc3080.py
+++ b/bwl/bc3080.py
@@ -144,9 +144,9 @@ Burnt Ends - Replay the end."""),
         self.drawFormat()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=hdr,
-            repprt=prt, fromad=self.fromad, repeml=eml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=hdr,
+                repprt=prt, fromad=self.fromad, repeml=eml)
         if "wait" not in self.opts:
             self.opts["mf"].closeLoop()
 
@@ -208,10 +208,14 @@ Burnt Ends - Replay the end."""),
             else:
                 if ldic["bct_drawn"] == 1:
                     txt = "The First Game will be a Random Draw and "\
-                        "thereafter Strength v Strength."
+                        "thereafter"
                 else:
                     txt = "The First %s Games will be Random Draws and "\
-                        "thereafter Strength v Strength." % ldic["bct_drawn"]
+                        "thereafter" % ldic["bct_drawn"]
+                if ldic["bct_strict"] == "Y":
+                    txt += " Strict Strength v Strength."
+                else:
+                    txt += " Strength v Strength."
             self.fpdf.drawText(txt=txt, x=x1, h=h, ctyp="M")
             if ldic["bct_games"]:
                 self.fpdf.drawText(txt=self.sql.bwltyp_dic["bct_games"][4],
diff --git a/bwl/bc3090.py b/bwl/bc3090.py
index 3c77ac5..8cf0d79 100644
--- a/bwl/bc3090.py
+++ b/bwl/bc3090.py
@@ -93,6 +93,7 @@ class bc3090(object):
         bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
             self.opts["conum"]), ("bct_code", "=", ctyp)], limit=1)
         self.cfmat = bwltyp[self.sql.bwltyp_col.index("bct_cfmat")]
+        self.games = bwltyp[self.sql.bwltyp_col.index("bct_games")]
         if self.cfmat in ("D", "K"):
             return "Knockout Competitions has No Summary"
         if self.cfmat == "R":
@@ -100,13 +101,18 @@ class bc3090(object):
                 where=[("bcg_cono", "=", self.opts["conum"]),
                 ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", 1)],
                 group="bcg_group")
-            self.games = 0
+            self.game = 0
             for gme in games:
                 if gme[0] > self.games:
                     self.games = gme[0]
-            self.games -= 1
+            self.game -= 1
         else:
-            self.games = bwltyp[self.sql.bwltyp_col.index("bct_games")]
+            games = self.sql.getRec("bwlgme", cols=["max(bcg_game)"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod)], limit=1)
+            if games[0] is None:
+                return "No Drawn Games"
+            self.game = games[0]
         self.grgame = bwltyp[self.sql.bwltyp_col.index("bct_grgame")]
 
     def doExcFin(self, frt, pag, r, c, p, i, w):
@@ -115,9 +121,9 @@ class bc3090(object):
     def doEnd(self):
         if "args" not in self.opts:
             self.df.closeProcess()
-        lst = self.sql.getRec("bwlgme", cols=["bcg_game",
-            "sum(bcg_points)"], where=[("bcg_cono", "=", self.opts["conum"]),
-            ("bcg_ccod", "=", self.ccod)], group="bcg_game", order="bcg_game")
+        lst = self.sql.getRec("bwlgme", cols=["bcg_game", "sum(bcg_points)"],
+            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
+            self.ccod)], group="bcg_game", order="bcg_game")
         lgame = 0
         for l in lst:
             if l[1]:
@@ -154,6 +160,7 @@ class bc3090(object):
         for rnk in rinks:
             if rnk[0] and rnk[0][1] == "7":
                 endrk.remove("%s6" % rnk[0][0])
+                endrk.append(rnk[0])
             elif rnk[0] and rnk[0][1] in ("1", "6"):
                 endrk.append(rnk[0])
         data = []
@@ -167,9 +174,10 @@ class bc3090(object):
             eds = 0
             dup = ["-", "-"]
             games = self.sql.getRec("bwlgme", where=[("bcg_cono", "=",
-                self.opts["conum"]), ("bcg_ccod", "=", self.ccod), ("bcg_scod",
-                "=", skip[0])], order="bcg_group, bcg_game")
+                self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                ("bcg_scod", "=", skip[0])], order="bcg_group, bcg_game")
             for game in games:
+                gme = game[self.sql.bwlgme_col.index("bcg_game")]
                 grp = game[self.sql.bwlgme_col.index("bcg_group")]
                 opp = game[self.sql.bwlgme_col.index("bcg_ocod")]
                 if opp > 900000:
@@ -177,19 +185,19 @@ class bc3090(object):
                     rnk = ""
                 else:
                     rnk = game[self.sql.bwlgme_col.index("bcg_rink")]
-                    if self.excfin == "Y" and game == games[-1]:
+                    if self.excfin == "Y" and gme == self.games:
                         pass
                     elif rnk and rnk in endrk:
                         eds += 1
                 dat.extend([opp, rnk])
                 if opp:
-                    if self.excfin == "Y" and game == games[-1]:
+                    if self.excfin == "Y" and gme == self.games:
                         pass
                     elif opp in ops:
                         dup[0] = "X"
                     ops.append(opp)
                 if rnk:
-                    if self.excfin == "Y" and game == games[-1]:
+                    if self.excfin == "Y" and gme == self.games:
                         pass
                     elif rnk in rks:
                         dup[1] = "X"
@@ -211,7 +219,7 @@ class bc3090(object):
             cols.append(["c", "UA",  1, "S",    "y"])
         else:
             cols.append(["c", "UA",  1, "G",    "y"])
-        for x in range(self.games):
+        for x in range(self.game):
             cols.extend([
                 ["d%s" % x, "UI", 6, "Opp", "y"],
                 ["e%s" % x, "UA", 2, "Rk",  "y"]])
diff --git a/bwl/bc3100.py b/bwl/bc3100.py
index 86f5586..2d7fa55 100644
--- a/bwl/bc3100.py
+++ b/bwl/bc3100.py
@@ -301,7 +301,6 @@ class bc3100(object):
             self.doMatchWin()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, "report", ext="pdf")
-        self.fpdf.output(pdfnam, "F")
         if self.df.repeml[1] == "Y":
             if not self.df.repeml[2]:
                 col = ["btb_mail"]
@@ -317,9 +316,10 @@ class bc3100(object):
                 for rec in recs:
                     self.df.repeml[2].append(rec[0])
         head = "%s - Results after game %s" % (self.cdes, self.pgame)
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=head, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=head, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         if self.pgame == self.lgame and self.cfmat == "R" and \
                 groups == "Y" and not self.poff:
             ok = askQuestion(self.opts["mf"].body, "Play-Offs",
@@ -368,7 +368,12 @@ class bc3100(object):
         self.groupHeading(rtyp, grp)
         if self.cfmat == "X":
             tms = {"H": [0, 0, 0, 0], "V": [0, 0, 0, 0]}
+        pgno = 1
         for num, (scod,snam,fnam,sfor,sagt,agg,pts) in enumerate(recs):
+            if pgno == 1 and num > 41:
+                pgno = 2
+                self.pageHeading()
+                self.groupHeading(rtyp, grp)
             if fnam:
                 nam = "%s, %s" % (snam.upper(), fnam.split()[0].upper())
             else:
diff --git a/bwl/bc3110.py b/bwl/bc3110.py
index cb039e8..b417310 100644
--- a/bwl/bc3110.py
+++ b/bwl/bc3110.py
@@ -99,8 +99,9 @@ class bc3110(object):
                 fpdf.drawText()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, repprt=self.df.repprt)
+            if fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], pdfnam=pdfnam,
+                    repprt=self.df.repprt)
         self.opts["mf"].closeLoop()
 
     def doExit(self):
diff --git a/bwl/bc6030.py b/bwl/bc6030.py
index 7d2fac7..e32e058 100644
--- a/bwl/bc6030.py
+++ b/bwl/bc6030.py
@@ -121,9 +121,9 @@ class bc6030:
                     if self.mems > 1:
                         fpdf.drawText(x=0, y=60, align="C", txt=mems[z],
                             font=font)
-        fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-            pdfnam=pdfnam, header="Envelopes", repprt=self.df.repprt)
+        if fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header="Envelopes", repprt=self.df.repprt)
         self.opts["mf"].closeLoop()
 
     def doExit(self):
diff --git a/crs/cr3010.py b/crs/cr3010.py
index c04323d..f8cd0e3 100644
--- a/crs/cr3010.py
+++ b/crs/cr3010.py
@@ -163,10 +163,10 @@ class cr3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/crs/cr3020.py b/crs/cr3020.py
index 9e58fce..e38c27d 100644
--- a/crs/cr3020.py
+++ b/crs/cr3020.py
@@ -302,10 +302,10 @@ class cr3020(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         acno = CCD(data[0], "NA", 7)
diff --git a/crs/cr3030.py b/crs/cr3030.py
index 696c26a..0aeb3c6 100644
--- a/crs/cr3030.py
+++ b/crs/cr3030.py
@@ -213,10 +213,10 @@ class cr3030(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, acno, name, ptyp):
         self.fpdf.add_page()
diff --git a/crs/cr3040.py b/crs/cr3040.py
index 2f7e4c9..62811a5 100644
--- a/crs/cr3040.py
+++ b/crs/cr3040.py
@@ -156,10 +156,10 @@ class cr3040(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, acno, name):
         self.fpdf.add_page()
diff --git a/crs/cr3050.py b/crs/cr3050.py
index a29ae20..a924670 100644
--- a/crs/cr3050.py
+++ b/crs/cr3050.py
@@ -264,10 +264,10 @@ Curdt: Produce a report based on Financial Period"""),
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         acc = CCD(data[0], "NA", 7)
diff --git a/crs/cr3070.py b/crs/cr3070.py
index 84c34b7..038cf20 100644
--- a/crs/cr3070.py
+++ b/crs/cr3070.py
@@ -108,10 +108,10 @@ class cr3070(object):
         if self.prnt == "Y" and self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.df.setWidget(self.df.mstFrame, state="show")
         self.df.focusField("T", 0, 1)
 
diff --git a/crs/cr3080.py b/crs/cr3080.py
index 42f56f9..53acb74 100644
--- a/crs/cr3080.py
+++ b/crs/cr3080.py
@@ -470,10 +470,11 @@ If you decide to do this, you must remember to upload the BEST file to the Bank
             key = "%s_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Remittance Advice" % self.opts["conam"],
-            repprt=self.df.repprt, fromad=self.fromad, repeml=self.df.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Remittance Advice" % self.opts["conam"]
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
         if self.df.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/crs/cr3090.py b/crs/cr3090.py
index 8ed0043..6bc80e9 100644
--- a/crs/cr3090.py
+++ b/crs/cr3090.py
@@ -123,9 +123,9 @@ class cr3090(object):
             if self.fpdf.page and not p.quit:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
         self.closeProcess()
 
     def doProcess(self, dat):
diff --git a/crs/cr3110.py b/crs/cr3110.py
index 4800bfe..960e200 100644
--- a/crs/cr3110.py
+++ b/crs/cr3110.py
@@ -170,10 +170,10 @@ class cr3110(object):
         self.grandTotal()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         if self.df.repprt[1] == "X":
             return
         CreateChart(self.opts["mf"], self.opts["conum"], self.opts["conam"],
diff --git a/crs/cr6020.py b/crs/cr6020.py
index 0076219..0ca203e 100644
--- a/crs/cr6020.py
+++ b/crs/cr6020.py
@@ -146,10 +146,10 @@ class cr6020(object):
                 for tr in age.data:
                     if tr[6]:
                         w = copyList(whr)
-                        w.extend([("crt_type", "=", tr[2]),
-                            ("crt_ref1", "=", tr[1])])
+                        w.extend([("crt_type", "=", tr[1]),
+                            ("crt_ref1", "=", tr[0])])
                         self.sql.insRec("crsage", data=[self.opts["conum"],
-                            self.acno, tr[2], tr[1], self.curdt, tr[2], tr[1],
+                            self.acno, tr[1], tr[0], self.curdt, tr[1], tr[0],
                             tr[6], 0])
             else:
                 self.key = "cancel"
diff --git a/csh/cs3010.py b/csh/cs3010.py
index 13b6fdf..8d8077e 100644
--- a/csh/cs3010.py
+++ b/csh/cs3010.py
@@ -136,10 +136,10 @@ class cs3010(object):
         if not self.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.closeProcess()
 
     def printExpTak(self, recs, ptyp=None):
diff --git a/doc/SYS.rst b/doc/SYS.rst
index 1ba1e0e..bc20ab1 100644
--- a/doc/SYS.rst
+++ b/doc/SYS.rst
@@ -3,7 +3,7 @@ Tartan Systems - Reference Manual
 =================================
 .. _GPL: http://www.gnu.org/licenses/gpl.html
 
-:Version:   6.10
+:Version:   6.11
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
diff --git a/drs/dr3010.py b/drs/dr3010.py
index ba1da19..b96eede 100644
--- a/drs/dr3010.py
+++ b/drs/dr3010.py
@@ -163,10 +163,10 @@ class dr3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/drs/dr3020.py b/drs/dr3020.py
index 8bbb52d..016eaa8 100644
--- a/drs/dr3020.py
+++ b/drs/dr3020.py
@@ -350,10 +350,10 @@ class dr3020(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         chain = CCD(data[0], "UI", 3)
diff --git a/drs/dr3030.py b/drs/dr3030.py
index 2fd88e0..10b4cf2 100644
--- a/drs/dr3030.py
+++ b/drs/dr3030.py
@@ -145,10 +145,10 @@ class dr3030(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, chn, acno, name):
         self.fpdf.add_page()
diff --git a/drs/dr3040.py b/drs/dr3040.py
index 32ff6d4..0be3ee9 100644
--- a/drs/dr3040.py
+++ b/drs/dr3040.py
@@ -160,10 +160,10 @@ class dr3040(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, chn, acno, name):
         self.fpdf.add_page()
diff --git a/drs/dr3050.py b/drs/dr3050.py
index fb41f37..0152725 100644
--- a/drs/dr3050.py
+++ b/drs/dr3050.py
@@ -274,10 +274,10 @@ Curdt: Produce a report based on Financial Period"""),
         if self.fpdf.page:
             self.grandTotal()
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         chn = CCD(data[0], "UI", 3)
diff --git a/drs/dr3060.py b/drs/dr3060.py
index 2a0a9e8..fc39044 100644
--- a/drs/dr3060.py
+++ b/drs/dr3060.py
@@ -220,10 +220,10 @@ class dr3060(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, dat):
         col = self.sql.drsmst_col
diff --git a/drs/dr3080.py b/drs/dr3080.py
index 55a8610..2053c0c 100644
--- a/drs/dr3080.py
+++ b/drs/dr3080.py
@@ -420,11 +420,12 @@ class dr3080(object):
             key = "%s_all_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement for %s as at %s" % (self.opts["conam"],
-            self.acc, self.dated), repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Statement for %s as at %s" % (self.opts["conam"],
+                self.acc, self.dated)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
         if self.df.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/drs/dr3090.py b/drs/dr3090.py
index 9513304..c9e6d43 100644
--- a/drs/dr3090.py
+++ b/drs/dr3090.py
@@ -123,9 +123,9 @@ class dr3090(object):
             if self.fpdf.page and not p.quit:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
         self.closeProcess()
 
     def doProcess(self, dat):
diff --git a/drs/dr3110.py b/drs/dr3110.py
index 94c7bea..ac4f72a 100644
--- a/drs/dr3110.py
+++ b/drs/dr3110.py
@@ -234,10 +234,10 @@ class dr3110(object):
         if self.rep == "Y" or self.act == "Y" or self.typ == "Y":
             self.doTotals(ttype="S")
         self.doTotals(ttype="G")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         if self.df.repprt[1] == "X":
             return
         CreateChart(self.opts["mf"], self.opts["conum"], self.opts["conam"],
diff --git a/drs/dr3120.py b/drs/dr3120.py
index 9c5c9c5..b442402 100644
--- a/drs/dr3120.py
+++ b/drs/dr3120.py
@@ -144,10 +144,10 @@ class dr3120(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/drs/dr6020.py b/drs/dr6020.py
index bdcfe58..5a40c4b 100644
--- a/drs/dr6020.py
+++ b/drs/dr6020.py
@@ -188,8 +188,8 @@ class dr6020(object):
                         w.extend([("drt_type", "=", tr[2]),
                             ("drt_ref1", "=", tr[1])])
                         self.sql.insRec("drsage", data=[self.opts["conum"],
-                            self.chain, self.acno, tr[2], tr[1], self.curdt,
-                            tr[2], tr[1], tr[6], 0])
+                            self.chain, self.acno, tr[1], tr[0], self.curdt,
+                            tr[1], tr[0], tr[6], 0])
             else:
                 self.key = "cancel"
         self.agevar.set(False)
diff --git a/drs/drc520.py b/drs/drc520.py
index a0338a7..3e77d3f 100644
--- a/drs/drc520.py
+++ b/drs/drc520.py
@@ -115,9 +115,9 @@ class drc520(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, 0, ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=self.tit,
-                repprt=self.df.repprt)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=self.tit,
+                    repprt=self.df.repprt)
         self.closeProcess()
 
     def pageHeading(self):
diff --git a/gen/gl3010.py b/gen/gl3010.py
index 5647d87..99f9bd2 100644
--- a/gen/gl3010.py
+++ b/gen/gl3010.py
@@ -157,10 +157,10 @@ class gl3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/gen/gl3020.py b/gen/gl3020.py
index 2e8a70c..be3e621 100644
--- a/gen/gl3020.py
+++ b/gen/gl3020.py
@@ -405,10 +405,10 @@ class gl3020(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        repeml=self.df.repeml)
 
     def getValues(self, data):
         cono = CCD(data[0], "UI", 3)
diff --git a/gen/gl3030.py b/gen/gl3030.py
index 3c17292..1ce1ab7 100644
--- a/gen/gl3030.py
+++ b/gen/gl3030.py
@@ -52,7 +52,7 @@ class gl3030(object):
             "Typ", "Batch", "Remarks", "Debit", "Credit", "Balance"]
         self.forms = [("UI", 3), ("UI", 7), ("NA", 30), ("D1", 10),
             ("Na", 9), ("NA", 3), ("Na", 7), ("NA", 30), ("SD", 13.2),
-            ("SD", 13.2), ("SD", 13.2)]
+            ("SD", 13.2), ("SD", 14.2)]
         self.s_per = int(self.opts["period"][1][0] / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
         self.recs = None
@@ -240,22 +240,22 @@ class gl3030(object):
                 else:
                     self.newAccount()
             if acctot:
-                w1 = CCD(acctot, "SD", 13.2)
+                w1 = CCD(acctot, "SD", 14.2)
                 self.fpdf.drawText("%-10s %-9s %-3s %-7s %-30s %-13s %-13s "\
-                    "%-13s" % (self.sdate.disp + "-01", "", "", "",
+                    "%-14s" % (self.sdate.disp + "-01", "", "", "",
                     "Opening Balance", "", "", w1.disp))
             for acc in trn:
                 trdt, refno, trtp, batch, amt, dbt, crt, detail, curdt, \
                     curmth = self.getTrnValues(acc)
                 if self.fpdf.newPage():
                     self.pageHeading()
-                    bf = CCD(acctot, "SD", 13.2)
+                    bf = CCD(acctot, "SD", 14.2)
                     if bf.work:
-                        self.fpdf.drawText("%32s %-30s %27s %13s" % ("",
+                        self.fpdf.drawText("%32s %-30s %27s %14s" % ("",
                             "Brought Forward", "", bf.disp))
                 acctot = float(ASD(acctot) + ASD(amt.work))
-                w1 = CCD(acctot, "SD", 13.2)
-                self.fpdf.drawText("%-10s %-9s %-3s %-7s %-30s %13s %13s %13s"\
+                w1 = CCD(acctot, "SD", 14.2)
+                self.fpdf.drawText("%-10s %-9s %-3s %-7s %-30s %13s %13s %14s"\
                     % (trdt.disp, refno.disp, gltrtp[(trtp.work - 1)][0],
                     batch.disp, detail.disp, dbt.disp, crt.disp, w1.disp))
             if self.pages == "Y" and (acctot or trn):
@@ -266,10 +266,10 @@ class gl3030(object):
         if "args" not in self.opts or "noprint" not in self.opts["args"]:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml)
 
     def getAccValues(self, data):
         dic = self.sql.genmst_dic
@@ -279,18 +279,18 @@ class gl3030(object):
             where=[("glo_cono", "=", self.opts["conum"]), ("glo_acno", "=",
             acno.work), ("glo_trdt", "=", self.opts["period"][1][0])], limit=1)
         if o:
-            b = CCD(o[0], "SD", 13.2)
+            b = CCD(o[0], "SD", 14.2)
         else:
-            b = CCD(0, "SD", 13.2)
+            b = CCD(0, "SD", 14.2)
         ob = b.work
         o = self.sql.getRec("gentrn", cols=["round(sum(glt_tramt), 2)"],
             where=[("glt_cono", "=", self.opts["conum"]), ("glt_acno", "=",
             acno.work), ("glt_curdt", ">=", self.s_per), ("glt_curdt",
             "<", self.sdate.work)], limit=1)
         if o and o[0]:
-            b = CCD(o[0], "SD", 13.2)
+            b = CCD(o[0], "SD", 14.2)
         else:
-            b = CCD(0, "SD", 13.2)
+            b = CCD(0, "SD", 14.2)
         acctot = float(ASD(ob) + ASD(b.work))
         return (acno, desc, acctot)
 
diff --git a/gen/gl3040.py b/gen/gl3040.py
index e86dab9..38de31c 100644
--- a/gen/gl3040.py
+++ b/gen/gl3040.py
@@ -271,10 +271,10 @@ N - Period Movements will be Printed"""),
             if "args" not in self.opts:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.repprt,
-                    repeml=self.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.repprt,
+                        repeml=self.repeml)
 
     def getValues(self, data):
         acno = CCD(data[0], "UI", 7)
diff --git a/gen/gl3050.py b/gen/gl3050.py
index 6ffbbe0..f886238 100644
--- a/gen/gl3050.py
+++ b/gen/gl3050.py
@@ -1278,10 +1278,10 @@ Custom  - Customised Report"""),
             self.counter = dat[6]
         p.closeProgress()
         if "args" not in self.opts and self.fpdf.page:
-            self.fpdf.output(self.pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=self.pdfnam, header=self.emlhead,
-                repprt=self.repprt, repeml=self.repeml)
+            if self.fpdf.saveFile(self.pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=self.pdfnam, header=self.emlhead,
+                    repprt=self.repprt, repeml=self.repeml)
 
     def doLoadLine(self, col):
         text = self.titles[col[0]]
diff --git a/gen/gl3080.py b/gen/gl3080.py
index 0da2d3c..78521cf 100644
--- a/gen/gl3080.py
+++ b/gen/gl3080.py
@@ -181,10 +181,10 @@ class gl3080(object):
             bal.disp))
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-            pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                repeml=self.df.repeml)
 
     def printLine(self, num, mxs, dat, typ):
         trdt = CCD(dat[0], "D1", 10)
diff --git a/gen/gl4010.py b/gen/gl4010.py
index 32aed34..de387fa 100644
--- a/gen/gl4010.py
+++ b/gen/gl4010.py
@@ -102,11 +102,11 @@ class gl4010(object):
             (("T",0,0,0),"ONA",30,"Description"),
             (("T",0,0,0),"OUA",1,"Type"),
             (("T",0,0,0),"OUA",1,"Indicator"),
-            (("C",1,0,0),"OSD",13.2,"Actual","","","N",
+            (("C",1,0,0),"OSD",14.2,"Actual","","","N",
                 None,None,None,None,("Months",14)),
-            (("C",1,0,1),"OSD",13.2,"Budget"),
-            (("C",1,0,2),"OSD",13.2,"Variance"),
-            (("C",1,0,3),"OSD",13.2,"Last-Year"),
+            (("C",1,0,1),"OSD",14.2,"Budget"),
+            (("C",1,0,2),"OSD",14.2,"Variance"),
+            (("C",1,0,3),"OSD",14.2,"Last-Year"),
             (("T",2,0,0),"Id2",7,"Period (YYYYMM)","Financial Period (0=All)",
                 self.trnper,"Y",self.doPeriod,None,None,None))
         tag = (
@@ -272,7 +272,7 @@ class gl4010(object):
             ("glt_batch", "", 0, "Batch"),
             ("glt_tramt", "", 0, "       Debit"),
             ("glt_tramt", "", 0, "      Credit"),
-            ("balance", "SD", 13.2, "     Balance"),
+            ("balance", "SD", 14.2, "     Balance"),
             ("glt_desc", "", 0, "Remarks"),
             ("glt_seq", "", 0, "Sequence"))
         mthno, acctot = self.getObal()
@@ -405,10 +405,10 @@ class gl4010(object):
                     self.fpdf.drawText()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.pr.repprt,
-                repeml=self.pr.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.pr.repprt,
+                    repeml=self.pr.repeml)
         else:
             trn = self.getTrans()
             if trn:
@@ -428,7 +428,7 @@ class gl4010(object):
                     ["glt_batch", "Na", 7, "BatchNo"],
                     ["debit", "SD", 13.2, "       Debit "],
                     ["credit", "SD", 13.2, "      Credit "],
-                    ["balance", "SD", 13.2, "     Balance "],
+                    ["balance", "SD", 14.2, "     Balance "],
                     ["glt_desc", "NA", 30, "Remarks"]]
                 if acctot:
                     if acctot < 0:
diff --git a/gen/gl6030.py b/gen/gl6030.py
index c718b7b..f0168ca 100644
--- a/gen/gl6030.py
+++ b/gen/gl6030.py
@@ -656,9 +656,9 @@ class gl6030(object):
                 (des, a1.disp, a2.disp, a3.disp))
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def pageHeading(self, desc=None):
diff --git a/gen/gl6040.py b/gen/gl6040.py
index 15d58da..4653e30 100644
--- a/gen/gl6040.py
+++ b/gen/gl6040.py
@@ -128,9 +128,9 @@ class gl6040(object):
                 n.disp, a1.disp, a2.disp, a3.disp))
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, repeml=self.df.repeml)
         self.doExit()
 
     def pageHeading(self):
diff --git a/lon/ln3010.py b/lon/ln3010.py
index 70bf2c5..3f6881c 100644
--- a/lon/ln3010.py
+++ b/lon/ln3010.py
@@ -161,10 +161,10 @@ class ln3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         else:
             showError(self.opts["mf"].body, "Batch Errors",
                 "No Batch Transactions")
diff --git a/lon/ln3020.py b/lon/ln3020.py
index 57313ee..95ff884 100644
--- a/lon/ln3020.py
+++ b/lon/ln3020.py
@@ -253,10 +253,10 @@ class ln3020(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         col = self.sql.lontrn_col
diff --git a/lon/ln3030.py b/lon/ln3030.py
index 9daa897..509916f 100644
--- a/lon/ln3030.py
+++ b/lon/ln3030.py
@@ -165,10 +165,10 @@ class ln3030(object):
                 self.fpdf.drawText("%8s%-74s%13s" % ("", "Totals", ltot.disp))
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/lon/ln3040.py b/lon/ln3040.py
index 38c51c6..792c804 100644
--- a/lon/ln3040.py
+++ b/lon/ln3040.py
@@ -325,10 +325,11 @@ class ln3040(object):
             key = "%s_all_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement at %s" % (self.opts["conam"], self.date.disp),
-            repprt=self.df.repprt, fromad=self.fromad, repeml=self.df.repeml)
+        if self.form.saveFile(pdfnam, self.opus["mf"].window):
+            head = "%s Statement at %s" % (self.opts["conam"], self.date.disp)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
         if self.df.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/lon/ln4010.py b/lon/ln4010.py
index 57f5110..5b23bdd 100644
--- a/lon/ln4010.py
+++ b/lon/ln4010.py
@@ -294,29 +294,33 @@ class ln4010(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if opt == "I":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "B":
             if not self.lnt:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             if self.lnt:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         self.fpdf.drawText("%-5s %-20s %-25s %s" % ("", "",
diff --git a/mem/ml1010.py b/mem/ml1010.py
index 9d99f17..7a202af 100644
--- a/mem/ml1010.py
+++ b/mem/ml1010.py
@@ -1605,9 +1605,9 @@ Names:   %s
             form.doDrawDetail(l)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.tnamef, ext="pdf")
-        form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, splash=False,
-            repprt=self.pf.repprt)
+        if form.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, splash=False,
+                repprt=self.pf.repprt)
         if self.tnameb:
             doprint = False
             form = DrawForm(self.opts["mf"].dbm, self.tnameb,
@@ -1660,12 +1660,13 @@ Names:   %s
                     form.doDrawDetail(l)
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.tnameb, ext="pdf")
-                form.output(pdfnam, "F")
-                showWarning(self.opts["mf"].body, "Replace Card",
-                    "In Order to Print the Back of the Card, Please "\
-                    "Replace the Card, Reverse Side Up, in the Printer Tray.")
-                doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, splash=False,
-                    repprt=self.pf.repprt)
+                if form.saveFile(pdfnam, self.opts["mf"].body):
+                    showWarning(self.opts["mf"].body, "Replace Card",
+                        "In Order to Print the Back of the Card, Please "\
+                        "Replace the Card, Reverse Side Up, in the "\
+                        "Printer Tray.")
+                    doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, splash=False,
+                        repprt=self.pf.repprt)
 
     def doClear(self):
         if self.new or self.edit:
diff --git a/mem/ml3010.py b/mem/ml3010.py
index 57c9aae..2a16719 100644
--- a/mem/ml3010.py
+++ b/mem/ml3010.py
@@ -161,10 +161,10 @@ class ml3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/mem/ml3020.py b/mem/ml3020.py
index c1d5adf..f054b3d 100644
--- a/mem/ml3020.py
+++ b/mem/ml3020.py
@@ -317,10 +317,10 @@ class ml3020(object):
             self.batchTotal()
             self.typeTotal()
             self.grandTotal()
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.repprt,
-                fromad=self.fromad, repeml=self.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.repprt,
+                    fromad=self.fromad, repeml=self.repeml)
 
     def getValues(self, data):
         memno = CCD(data[0], "UI", 6)
diff --git a/mem/ml3030.py b/mem/ml3030.py
index 5150e7e..254f909 100644
--- a/mem/ml3030.py
+++ b/mem/ml3030.py
@@ -320,10 +320,10 @@ class ml3030(object):
             self.pageHeading()
         if self.fpdf.page:
             self.grandTotal()
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         acc = CCD(data[0], "UI", 6)
diff --git a/mem/ml3040.py b/mem/ml3040.py
index 6bbb9e6..e742a47 100644
--- a/mem/ml3040.py
+++ b/mem/ml3040.py
@@ -734,10 +734,11 @@ class ml3040(object):
             key = "%s_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement at %s" % (self.opts["conam"], self.dated),
-            fromad=self.fromad, repprt=self.repprt, repeml=self.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Statement at %s" % (self.opts["conam"], self.dated)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, fromad=self.fromad,
+                repprt=self.repprt, repeml=self.repeml)
         if self.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/mem/ml3060.py b/mem/ml3060.py
index 5804960..6d576ea 100644
--- a/mem/ml3060.py
+++ b/mem/ml3060.py
@@ -287,10 +287,10 @@ class ml3060(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.repprt,
-                fromad=self.fromad, repeml=self.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.repprt,
+                    fromad=self.fromad, repeml=self.repeml)
 
     def getValues(self, data):
         key = data[self.sql.chglog_col.index("chg_key")]
diff --git a/mem/ml3110.py b/mem/ml3110.py
index c6e0b0c..fc1eb42 100644
--- a/mem/ml3110.py
+++ b/mem/ml3110.py
@@ -184,9 +184,9 @@ class ml3110(object):
             if self.fpdf.page and not p.quit:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
         self.closeProcess()
 
     def doProcess(self, mlm):
diff --git a/mem/ml6010.py b/mem/ml6010.py
index 333f571..4e9068f 100644
--- a/mem/ml6010.py
+++ b/mem/ml6010.py
@@ -141,7 +141,7 @@ class ml6010(object):
                         w.extend([("mlt_type", "=", tr[2]),
                             ("mlt_refno", "=", tr[1])])
                         self.sql.insRec("memage", data=[self.opts["conum"],
-                            self.memno, tr[2], tr[1], self.curdt, tr[2], tr[1],
+                            self.memno, tr[1], tr[0], self.curdt, tr[1], tr[0],
                             tr[6], 0])
             else:
                 self.key = "cancel"
diff --git a/ms0000.py b/ms0000.py
index 4040ee6..5a953c5 100755
--- a/ms0000.py
+++ b/ms0000.py
@@ -63,7 +63,7 @@ if "TARVER" in os.environ:
     temp = tuple(os.environ["TARVER"].split("."))
     VERSION = (int(temp[0]), int(temp[1].rstrip()))
 else:
-    VERSION = (6, 10)
+    VERSION = (6, 11)
     os.environ["TARVER"] = "%s.%s" % VERSION
 
 class ms0000(object):
@@ -215,11 +215,13 @@ Options:
 """)
             self.doExit(dbm=False)
         if self.script:
+            if getattr(sys, "frozen", False):
+                sys.path.append(getPrgPath()[1])
             try:
                 exec("import %s" % self.script)
-            except:
-                pass
-            self.doExit()
+            except Exception as err:
+                print(err)
+            self.doExit(dbm=False)
         if not self.version and not self.xdisplay:
             nodisp = ("tarBck", "tarUpd")
             if not self.query and self.program not in nodisp:
@@ -230,7 +232,7 @@ Options:
                 self.doExit(dbm=False)
         if self.imods:
             # Import/Upgrade All modules
-            if getattr(sys, 'frozen', False):
+            if getattr(sys, "frozen", False):
                 print("Tartan is frozen, Upgrades not Possible.")
                 sys.exit()
             try:
@@ -241,7 +243,7 @@ Options:
                     raise Exception("pip Not Found")
                 cmd = [sys.executable, "-m", "pip", "install", "-qU"]
                 chke(cmd + ["pip"])
-                # Install and or Install all modules
+                # Install and or Upgrade all modules
                 for mod in pymoda + pymodb:
                     if len(mod) == 4 and sys.platform != mod[3]:
                         continue
@@ -1661,11 +1663,14 @@ System --> Change Password""")
             self.mf.rcdic["vwr"] = ""
         man = MakeManual(fle, vwr=self.mf.rcdic["vwr"])
         pdf = os.path.join(self.rcdic["wrkdir"], "Manual.pdf")
-        if os.path.exists(pdf):
-            os.remove(pdf)
-        man.fpdf.output(pdf, "F")
-        if os.path.exists(pdf):
-            ViewPDF(self.mf, pdf)
+        try:
+            if os.path.exists(pdf):
+                os.remove(pdf)
+            man.fpdf.output(pdf, "F")
+            if os.path.exists(pdf):
+                ViewPDF(self.mf, pdf)
+        except Exception as err:
+            showError(None, "Error", err)
         if FITZ:
             # Restore the viewer
             self.mf.rcdic["vwr"] = vwr
diff --git a/mst/ms3010.py b/mst/ms3010.py
index 21fd69c..ddeba25 100644
--- a/mst/ms3010.py
+++ b/mst/ms3010.py
@@ -426,10 +426,10 @@ class ms3010(object):
                 self.doPrintSummary()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml)
 
     def getValues1(self, data):
         code = data[self.sql.ctlvmf_col.index("vtm_code")]
diff --git a/mst/msc110.py b/mst/msc110.py
index 4c7aca4..1533c14 100644
--- a/mst/msc110.py
+++ b/mst/msc110.py
@@ -176,12 +176,11 @@ class msc110(object):
             aut = self.df.t_work[0][0][7]
             nam = self.df.t_work[0][0][9]
             pwd = self.df.t_work[0][0][10]
-            chk = sendMail([svr, prt, sec, aut, nam, pwd], "", "", "",
-                check=True, errwid=self.opts["mf"].body,
-                wrkdir=self.opts["mf"].rcdic["wrkdir"])
-            if not chk:
+            err = sendMail([svr, prt, sec, aut, nam, pwd], "", "", "",
+                check=True, wrkdir=self.opts["mf"].rcdic["wrkdir"])
+            if err:
                 showError(self.opts["mf"].body, "Error",
-                    "Invalid SMTP Server or Authentication.")
+                    "Invalid SMTP Server or Authentication.\n\n%s" % err)
                 self.df.focusField("T", 0, 6)
                 return
         tme = time.localtime()
diff --git a/rca/rc3010.py b/rca/rc3010.py
index e92489e..f50a89e 100644
--- a/rca/rc3010.py
+++ b/rca/rc3010.py
@@ -253,10 +253,10 @@ class rc3010(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/rca/rc3020.py b/rca/rc3020.py
index 53edef1..37519e2 100644
--- a/rca/rc3020.py
+++ b/rca/rc3020.py
@@ -254,10 +254,10 @@ class rc3020(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/rca/rc3030.py b/rca/rc3030.py
index 312b934..1e2bd04 100644
--- a/rca/rc3030.py
+++ b/rca/rc3030.py
@@ -125,10 +125,10 @@ class rc3030(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/rca/rc3040.py b/rca/rc3040.py
index 28c8dfd..ea61b74 100644
--- a/rca/rc3040.py
+++ b/rca/rc3040.py
@@ -252,10 +252,10 @@ class rc3040(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.closeProcess()
 
     def pageHeading(self):
diff --git a/rca/rc3050.py b/rca/rc3050.py
index f268f12..3a182da 100644
--- a/rca/rc3050.py
+++ b/rca/rc3050.py
@@ -278,10 +278,11 @@ class rc3050(object):
             key = "%s_all_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement at %s" % (self.opts["conam"], self.dated),
-            fromad=self.fromad, repprt=self.repprt, repeml=self.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Statement at %s" % (self.opts["conam"], self.dated)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, fromad=self.fromad,
+                repprt=self.repprt, repeml=self.repeml)
         if self.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/rca/rc3060.py b/rca/rc3060.py
index 6bbb48a..30985e7 100644
--- a/rca/rc3060.py
+++ b/rca/rc3060.py
@@ -333,10 +333,11 @@ class rc3060(object):
             key = "%s_all_all_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement at %s" % (self.opts["conam"], self.dated),
-            fromad=self.fromad, repprt=self.repprt, repeml=self.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Statement at %s" % (self.opts["conam"], self.dated)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, fromad=self.fromad,
+                repprt=self.repprt, repeml=self.repeml)
         if self.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/rca/rc3100.py b/rca/rc3100.py
index 3241059..44efbd6 100644
--- a/rca/rc3100.py
+++ b/rca/rc3100.py
@@ -262,10 +262,10 @@ class rc3100(object):
         if "args" not in self.opts or "noprint" not in self.opts["args"]:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    repeml=self.df.repeml)
 
     def getAccValues(self, data):
         dic = self.sql.rcaowm_dic
diff --git a/rca/rc4010.py b/rca/rc4010.py
index d4b723d..944f00b 100644
--- a/rca/rc4010.py
+++ b/rca/rc4010.py
@@ -206,29 +206,33 @@ class rc4010(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if opt == "I":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "B":
             if not self.trn:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             if self.trn:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         for x in range(0, len(self.df.topf[0])):
diff --git a/rca/rc4020.py b/rca/rc4020.py
index e63b937..325d77a 100644
--- a/rca/rc4020.py
+++ b/rca/rc4020.py
@@ -313,21 +313,24 @@ class rc4020(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if opt == "I":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "B":
             if not self.trn:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "D":
             recs = getDeposit(self.opts["mf"], self.opts["conum"], self.depdtw,
                 self.owner, self.code, self.acno)
@@ -335,17 +338,19 @@ class rc4020(object):
                 self.pageHeading(deposit=True)
                 self.pageHeadingDeposit()
                 self.printDeposit(recs)
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             if self.trn:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         for x in range(0, len(self.df.topf[0])):
diff --git a/rca/rcc220.py b/rca/rcc220.py
index f3e4031..df32e7d 100644
--- a/rca/rcc220.py
+++ b/rca/rcc220.py
@@ -110,10 +110,10 @@ class rcc220(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, 0, ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=self.tit,
-                repprt=self.df.repprt, fromad=self.fromad,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=self.tit,
+                    repprt=self.df.repprt, fromad=self.fromad,
+                    repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/rtl/rt3010.py b/rtl/rt3010.py
index 549eda9..1fb5a35 100644
--- a/rtl/rt3010.py
+++ b/rtl/rt3010.py
@@ -166,10 +166,10 @@ class rt3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/rtl/rt3020.py b/rtl/rt3020.py
index a32730c..faac2a9 100644
--- a/rtl/rt3020.py
+++ b/rtl/rt3020.py
@@ -287,10 +287,10 @@ class rt3020(object):
             self.batchTotal()
             self.typeTotal()
             self.grandTotal()
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         code = CCD(data[0], "NA", 7)
diff --git a/rtl/rt3030.py b/rtl/rt3030.py
index 293c79b..8cf777d 100644
--- a/rtl/rt3030.py
+++ b/rtl/rt3030.py
@@ -239,10 +239,10 @@ class rt3030(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.closeProcess()
 
     def pageHeading(self):
diff --git a/rtl/rt3040.py b/rtl/rt3040.py
index 14afceb..d094058 100644
--- a/rtl/rt3040.py
+++ b/rtl/rt3040.py
@@ -380,10 +380,11 @@ class rt3040(object):
             key = "%s_all_all" % self.opts["conum"]
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, key, ext="pdf")
-        self.form.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Statement at %s" % (self.opts["conam"], self.dated),
-            fromad=self.fromad, repprt=self.df.repprt, repeml=self.df.repeml)
+        if self.form.saveFile(pdfnam, self.opts["mf"].window):
+            head = "%s Statement at %s" % (self.opts["conam"], self.dated)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, fromad=self.fromad,
+                repprt=self.df.repprt, repeml=self.df.repeml)
         if self.df.repeml[1] == "Y":
             self.form = DrawForm(self.opts["mf"].dbm, self.tname,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"])
diff --git a/rtl/rt4010.py b/rtl/rt4010.py
index 7ab1a10..04b2078 100644
--- a/rtl/rt4010.py
+++ b/rtl/rt4010.py
@@ -265,29 +265,33 @@ class rt4010(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if opt == "I":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "B":
             if not self.trn:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             if self.trn:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         for x in range(0, len(self.df.topf[0])):
diff --git a/scp/sc2020.py b/scp/sc2020.py
index 2a155cf..e86d15a 100644
--- a/scp/sc2020.py
+++ b/scp/sc2020.py
@@ -770,9 +770,9 @@ class sc2020(object):
                 self.printPlayOffs()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=1, pdfnam=pdfnam,
-            repprt=self.df.repprt)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=1, pdfnam=pdfnam,
+                repprt=self.df.repprt)
         if not self.reprint:
             if "test" in self.opts:
                 self.opts["mf"].dbm.commitDbase()
diff --git a/scp/sc3010.py b/scp/sc3010.py
index 4edc1a5..a4869d9 100644
--- a/scp/sc3010.py
+++ b/scp/sc3010.py
@@ -100,10 +100,10 @@ class sc3010(object):
                 self.fpdf.drawText(txt=ph, w=cwth*16, h=5, ln=1)
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam,
-                repprt=self.df.repprt,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], pdfnam=pdfnam,
+                    repprt=self.df.repprt,
+                    repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def doHead(self):
diff --git a/sls/si2010.py b/sls/si2010.py
index c3f84d9..884fcaf 100644
--- a/sls/si2010.py
+++ b/sls/si2010.py
@@ -391,7 +391,7 @@ class si2010(object):
         r1s = [
             ("New", "N"),
             ("Amend", "A")]
-        if self.typs == "Q":
+        if self.typs in ("Q", "W"):
             r1s.append(("Convert to Order", "X"))
         r1s.extend([
             ("Despatch", "D"),
@@ -1596,8 +1596,8 @@ class si2010(object):
                 where=whr)
         if self.typs in ("O", "W", "Q") and self.acttyp in ("A", "N"):
             return
-        if self.typs == "Q" and self.acttyp == "X":
-            # Convert quote to order
+        if self.typs in ("Q", "W") and self.acttyp == "X":
+            # Convert document to sales order
             actdoc = self.docno
             self.doGetDocno("O")
             self.sql.updRec("slsiv1", cols=["si1_rtn","si1_docno","si1_date",
diff --git a/sls/si3010.py b/sls/si3010.py
index 2dc872c..a353d0b 100644
--- a/sls/si3010.py
+++ b/sls/si3010.py
@@ -216,10 +216,10 @@ class si3010(object):
         if not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         col = self.sql.slsiv1_col
diff --git a/sls/si3020.py b/sls/si3020.py
index cb894ea..05a95e4 100644
--- a/sls/si3020.py
+++ b/sls/si3020.py
@@ -219,10 +219,10 @@ class si3020(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         self.grp = CCD(data[0], "UA", 3)
diff --git a/sls/si3030.py b/sls/si3030.py
index 5f8840a..ef34c6d 100644
--- a/sls/si3030.py
+++ b/sls/si3030.py
@@ -204,10 +204,10 @@ class si3030(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/sls/si3040.py b/sls/si3040.py
index 2641b63..53e76b9 100644
--- a/sls/si3040.py
+++ b/sls/si3040.py
@@ -270,10 +270,10 @@ class si3040(object):
             return
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         if self.df.repprt[1] == "X" or not self.tipe:
             return
         CreateChart(self.opts["mf"], self.opts["conum"], self.opts["conam"],
diff --git a/sls/si3050.py b/sls/si3050.py
index 2540493..4dd2a89 100644
--- a/sls/si3050.py
+++ b/sls/si3050.py
@@ -264,10 +264,10 @@ class si3050(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/sls/si3060.py b/sls/si3060.py
index 19d55fa..269c2ee 100644
--- a/sls/si3060.py
+++ b/sls/si3060.py
@@ -177,10 +177,10 @@ class si3060(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/sls/si3070.py b/sls/si3070.py
index 0be97ec..1a2bae3 100644
--- a/sls/si3070.py
+++ b/sls/si3070.py
@@ -190,10 +190,10 @@ class si3070(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
                 CreateChart(self.opts["mf"], self.opts["conum"],
                     self.opts["conam"], [self.start, self.end],
                     [[self.opts["conam"], "Saleman's Sales History"],
diff --git a/str/st3010.py b/str/st3010.py
index cf2caee..73f8d5d 100644
--- a/str/st3010.py
+++ b/str/st3010.py
@@ -164,10 +164,10 @@ class st3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/str/st3020.py b/str/st3020.py
index e96159d..694edfc 100644
--- a/str/st3020.py
+++ b/str/st3020.py
@@ -303,10 +303,10 @@ class st3020(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         col = self.sql.strtrn_col
diff --git a/str/st3030.py b/str/st3030.py
index f93eb3c..9b96230 100644
--- a/str/st3030.py
+++ b/str/st3030.py
@@ -268,10 +268,10 @@ class st3030(object):
             old_grp = grp.work
         p.closeProgress()
         if self.fpdf.page and not p.quit:
-            self.fpdf.output(self.pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=self.pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(self.pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=self.pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def printCost(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
@@ -297,10 +297,10 @@ class st3030(object):
             old_grp = grp.work
         p.closeProgress()
         if self.fpdf.page and not p.quit:
-            self.fpdf.output(self.pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=self.pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(self.pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=self.pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         grp = CCD(data[0], "UA", 3)
diff --git a/str/st3040.py b/str/st3040.py
index 6e36687..5ea2984 100644
--- a/str/st3040.py
+++ b/str/st3040.py
@@ -169,10 +169,10 @@ class st3040(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         grp = CCD(data[0], "UA", 3)
diff --git a/str/st3050.py b/str/st3050.py
index 9094afc..d104165 100644
--- a/str/st3050.py
+++ b/str/st3050.py
@@ -188,10 +188,10 @@ class st3050(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, grp, cod, dsc, chg=False):
         if self.page == "N" and chg and self.pglin < (self.fpdf.lpp - 10):
diff --git a/str/st3060.py b/str/st3060.py
index 25c9535..5e4d3e8 100644
--- a/str/st3060.py
+++ b/str/st3060.py
@@ -210,10 +210,10 @@ class st3060(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.closeProcess()
 
     def getValues(self, data):
diff --git a/str/st3070.py b/str/st3070.py
index 9ddf029..5cb2b75 100644
--- a/str/st3070.py
+++ b/str/st3070.py
@@ -156,10 +156,10 @@ class st3070(object):
             if self.fpdf.page and not self.p.quit:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
         self.closeProcess()
 
     def printSetup(self, recs):
diff --git a/str/st3080.py b/str/st3080.py
index 80ef3d0..2465854 100644
--- a/str/st3080.py
+++ b/str/st3080.py
@@ -240,10 +240,10 @@ class st3080(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def getValues(self, data):
         grp = CCD(data[0], "UA", 3)
diff --git a/str/st3090.py b/str/st3090.py
index 92310b2..46fbab0 100644
--- a/str/st3090.py
+++ b/str/st3090.py
@@ -221,10 +221,10 @@ class st3090(object):
             if "args" not in self.opts or "noprint" not in self.opts["args"]:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                        fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, grp, cod, desc):
         self.fpdf.add_page()
diff --git a/str/st3110.py b/str/st3110.py
index 6acc8fe..7cf8da0 100644
--- a/str/st3110.py
+++ b/str/st3110.py
@@ -218,9 +218,9 @@ class st3110(object):
             if self.fpdf.page and not p.quit:
                 pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                     self.__class__.__name__, self.opts["conum"], ext="pdf")
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt)
         self.closeProcess()
 
     def doProcess(self, dat):
diff --git a/str/st3120.py b/str/st3120.py
index 0996b06..5326e64 100644
--- a/str/st3120.py
+++ b/str/st3120.py
@@ -202,10 +202,10 @@ class st3120(object):
         if self.fpdf.page and not p.quit:
             if self.pglin > (self.fpdf.lpp - 2):
                 self.pageHeading()
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         self.closeProcess()
 
     def getValues(self, data):
diff --git a/str/st5010.py b/str/st5010.py
index 778596d..51b4b8d 100644
--- a/str/st5010.py
+++ b/str/st5010.py
@@ -221,10 +221,10 @@ class st5010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/tab/tb3010.py b/tab/tb3010.py
index 2eb970a..6049f6a 100644
--- a/tab/tb3010.py
+++ b/tab/tb3010.py
@@ -141,10 +141,10 @@ class tb3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, 0, ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=1, pdfnam=pdfnam,
-                header="Table Fields and Indexes", repprt=self.df.repprt,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=1, pdfnam=pdfnam,
+                    header="Table Fields and Indexes", repprt=self.df.repprt,
+                    repeml=self.df.repeml)
 
     def doHeading(self, htyp, table):
         self.fpdf.setFont(style="B")
diff --git a/tartanFunctions.py b/tartanFunctions.py
index f25da01..a6dcc72 100644
--- a/tartanFunctions.py
+++ b/tartanFunctions.py
@@ -801,7 +801,7 @@ def findFile(start=".", name=None, ftyp="f", case="n"):
                     elif flenam.lower() == name.lower():
                         return os.path.join(root, flenam)
 
-def sendMail(server, ex, to, subj, mess="", attach=None, embed=None, check=False, timeout=30, local=None, lnkurl=None, errwid=False, wrkdir="."):
+def sendMail(server, ex, to, subj, mess="", attach=None, embed=None, check=False, timeout=30, local=None, lnkurl=None, wrkdir="."):
     """
     A routine to email a message, embed files and/or attach files.
 
@@ -817,7 +817,6 @@ def sendMail(server, ex, to, subj, mess="", attach=None, embed=None, check=False
         timeout = The number of seconds before timing out defaulting to 30.
         local   = The local hostname as fqdn.
         lnkurl  = An http link to add to the embedded attachments
-        errwid  = The widget to display the exception, defaults to None
         wrkdir  = The work directory, defaults to "."
     """
     import mimetypes, os, smtplib
@@ -860,12 +859,13 @@ def sendMail(server, ex, to, subj, mess="", attach=None, embed=None, check=False
             smtp.login(unam, upwd)
         if check:
             smtp.quit()
-            return True
+            return
     except Exception as err:
         if not check:
-            showException(errwid, wrkdir, "Mail Server (%s %s) "\
+            showException(None, wrkdir, "Mail Server (%s %s) "\
                 "Invalid or Unavailable\n\n%s" % (host, port, err))
-        return
+        else:
+            return err
     if type(to) == str:
         to = [to]
     if attach is None:
@@ -1918,6 +1918,8 @@ def getGreens(text, needed, keep=None):
                 greens[g].remove(num)
                 if rnk in endrks:
                     endrks.remove("%s%s" % (g, num))
+                    if num == 7:
+                        endrks.append("%s6" % g)
                 rem -= 1
             if not rem:
                 break
@@ -2433,9 +2435,9 @@ def roundup(number, places=0):
 
     if type(number) is float:
         number = str(number)
-    place = '1.'
+    place = "1."
     for i in range(places):
-        place = ''.join([place, '0'])
+        place = "".join([place, "0"])
     return float(dec(number).quantize(dec(place), rounding=ROUND_HALF_UP))
 
 def getColors(style, scheme):
@@ -2504,6 +2506,9 @@ def getColors(style, scheme):
     return color
 
 def chkMod(mod):
+    """
+    This function is used to check if a module is available.
+    """
     try:
         mod = __import__(mod)
         return mod
@@ -2511,6 +2516,9 @@ def chkMod(mod):
         return
 
 def doPublish(scrn, flenam):
+    """
+    This function is used to display a text, rst, md or html file.
+    """
     import io
     from TartanClasses import HTML, ScrollHtml, ScrollText
     try:
@@ -2796,7 +2804,11 @@ def doWriteExport(**args):
     if args["xtype"].upper() == "C":
         head = ""
         name = args["name"] + ".csv"
-        flenam = open(name, "w")
+        try:
+            flenam = open(name, "w")
+        except Exception as err:
+            showError(None, "Error", err)
+            return
         for valc in args["colsh"][-1]:
             if type(valc) in (list, tuple):
                 text = valc[0]
@@ -3063,9 +3075,12 @@ def doWriteExport(**args):
                 cellWrite(sheet, rowx+1, colx+1, valx, hxf)
         # Save the spreadsheet
         name = args["name"] + ".xlsx"
-        book.save(filename=name)
-        # View the spreadsheet
-        if view:
-            viewFile(exe, cmd, name, wait)
+        try:
+            book.save(filename=name)
+            # View the spreadsheet
+            if view:
+                viewFile(exe, cmd, name, wait)
+        except Exception as err:
+            showError(None, "Error", err)
 # END
 # vim:set ts=4 sw=4 sts=4 expandtab:
diff --git a/uty/fc1010.py b/uty/fc1010.py
index 83fa4c5..729a682 100644
--- a/uty/fc1010.py
+++ b/uty/fc1010.py
@@ -40,7 +40,7 @@ class fc1010(object):
         tit = ("Loans and Leases",)
         fld = (
             (("T",0,0,0),"IUD",13.2,"Capital Amount","",
-                "","Y",None,None,None,("notzero",)),
+                "","Y",self.doCap,None,None,("efld",)),
             (("T",0,1,0),"IUD",13.2,"Residual Value","",
                 "","N",None,None,None,("efld",)),
             (("T",0,2,0),"IUI",13.2,"Number of Months","",
@@ -57,19 +57,22 @@ class fc1010(object):
         self.df = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=fld, tend=tnd, txit=txt, butt=but)
 
+    def doCap(self, frt, pag, r, c, p, i, w):
+        self.cap = w
+
     def doRep(self, frt, pag, r, c, p, i, w):
-        if w != 0:
+        if self.cap and w != 0:
             return "nd"
 
     def doInt(self, frt, pag, r, c, p, i, w):
-        if w != 0:
-            return "nd"
-        else:
+        if not self.cap and not w:
             return "Invalid Rate"
 
     def doEnd(self):
         cap, res, mth, rep, rte = self.df.t_work[0][0]
-        if rep:
+        if not cap and mth and rep and rte:
+            self.doCapital(res, mth, rep, rte)
+        elif rep:
             self.doRate(cap, res, mth, rep)
         else:
             self.doRepay(cap, res, mth, rte)
@@ -84,6 +87,16 @@ class fc1010(object):
         self.df.closeProcess()
         self.opts["mf"].closeLoop()
 
+    def doCapital(self, res, mth, rep, rte):
+        cap = 100.0
+        rate = (rte / 1200.0)
+        while round((((cap * rate) * ((1 + rate) ** mth)) - (res * rate)) /
+                (((1 + rate) ** mth) - 1), 2) < rep:
+            cap += 100
+        self.df.loadEntry("T", 0, 0, data=round(cap, 2))
+        self.df.setWidget(self.df.topEntry[0][0], state="normal")
+        self.df.setWidget(self.df.topEntry[0][0], state="disabled")
+
     def doRepay(self, cap, res, mth, rte):
         rate = (rte / 1200.0)
         rep = round((((cap * rate) * ((1 + rate) ** mth)) - (res * rate)) /
diff --git a/uty/mklinux.py b/uty/mklinux.py
index 36c3011..2a9f266 100644
--- a/uty/mklinux.py
+++ b/uty/mklinux.py
@@ -1,5 +1,5 @@
 #!/usr/bin/env python
-import getopt, glob, os, pathlib, shutil, subprocess, sys
+import getopt, glob, os, pathlib, platform, shutil, subprocess, sys
 from zipfile import ZipFile
 
 """
@@ -25,13 +25,13 @@ def doUpgrade():
             print(err)
 
 HOM = str(pathlib.Path.home())
-DPT = os.path.join(HOM, "Tartan", "prg")        # Directory for pyinstaller exe
+DPT = os.path.join(HOM, "Tartan")               # Directory for pyinstaller
 EXE = os.path.join(HOM, "TartanExe")            # Destination of installer
 SRC = os.path.join(HOM, "TartanSve")            # Repository of tartan.zip
 TMP = os.path.join(HOM, "Temp")                 # Working Directory
 onefle = False                                  # Generate a single file
 UPG = False                                     # Upgrade python modules
-opts, args = getopt.getopt(sys.argv[1:], "a:d:e:fhs:t:u")
+opts, args = getopt.getopt(sys.argv[1:], "a:d:e:fhos:t:u")
 for o, v in opts:
     if o == "-a":
         PFX = v
@@ -53,12 +53,17 @@ Usage: python mklinux.py [options]
     -u Upgrade python modules
 """)
         sys.exit()
+    elif o == "-o":
+        onefle = True
     elif o == "-s":
         SRC = v
     elif o == "-t":
         TMP = v
     elif o == "-u":
         UPG = True
+# Go to HOM
+os.chdir(HOM)
+os.chmod(HOM, 0o777)
 # Set default variables
 fle = open(os.path.join(EXE, "current"), "r")
 VER = fle.read().strip()
@@ -66,13 +71,14 @@ fle.close()
 # Open the log file
 out = open("%s/log" % HOM, "w")
 # Delete installation directories
-shutil.rmtree(DPT, ignore_errors=True)
+shutil.rmtree(os.path.join(HOM, "Tartan"), ignore_errors=True)
 shutil.rmtree(TMP, ignore_errors=True)
 # Create new installation directories
-os.makedirs(TMP)
-os.chmod(HOM, 0o777)
+prgdir = os.path.join(DPT, "prg")
+os.makedirs(prgdir)
 for pth in ("fnt", "thm", "uty"):
-    os.makedirs(os.path.join(DPT, pth))
+    os.makedirs(os.path.join(prgdir, pth))
+os.makedirs(TMP)
 # Enter source directory
 os.chdir(TMP)
 # Unzip sources
@@ -107,19 +113,21 @@ if UPG:
 # Run pyinstaller
 os.chdir(os.path.join(TMP, "tartan"))
 if onefle:
-    os.rename("ms0000.fle", "ms0000.spec")
+    subprocess.call(["pyinstaller", "onefle.spec"], stdout=out, stderr=out)
 else:
-    os.rename("ms0000.dir", "ms0000.spec")
-subprocess.call(["pyinstaller", "ms0000.spec"], stdout=out, stderr=out)
+    subprocess.call(["pyinstaller", "onedir.spec"], stdout=out, stderr=out)
 # Copy files to DPT
-shutil.copy("tartan.ico", DPT)
+shutil.copy("tartan.ico", prgdir)
 if onefle:
-    shutil.copy(os.path.join("dist", "ms0000"), DPT)
+    shutil.copy(os.path.join("dist", "ms0000"), prgdir)
 else:
-    shutil.copytree(os.path.join("dist", "ms0000"), DPT, dirs_exist_ok=True)
+    shutil.copytree(os.path.join("dist", "ms0000"), prgdir, dirs_exist_ok=True)
 os.chdir(HOM)
-# Create tar file
-subprocess.call(["zip", "-rq", os.path.join(EXE, "tartan-6-lnx.zip"), "Tartan"])
+# Create zip file
+zipfl = os.path.join(EXE, "tartan-6-%s.zip" % platform.machine())
+if os.path.isfile(zipfl):
+    os.remove(zipfl)
+subprocess.call(["zip", "-rq", zipfl, "Tartan"])
 shutil.rmtree(TMP)
 shutil.rmtree(DPT)
 out.close()
diff --git a/uty/mkwindows.py b/uty/mkwindows.py
index f2774d8..58194b6 100644
--- a/uty/mkwindows.py
+++ b/uty/mkwindows.py
@@ -30,7 +30,7 @@ def doUpgrade():
         mods.append(mod[1])
     for mod in mods:
         try:
-            os.system("pip -q install %s --user "\
+            os.system("python -m pip -q install %s --user "\
                 "--no-warn-script-location --upgrade" % mod)
             print("Upgraded", mod)
         except Exception as err:
@@ -51,7 +51,7 @@ SRC = os.path.join("%s\\" % MAP, "TartanSve")   # Repository of tartan.zip
 TMP = os.path.join("%s\\" % HOM, "Temp")        # Working Directory
 onefle = False                                  # Generate a single file
 UPG = False                                     # Upgrade python modules
-opts, args = getopt.getopt(sys.argv[1:], "a:d:e:fhs:t:u")
+opts, args = getopt.getopt(sys.argv[1:], "a:d:e:hos:t:u")
 for o, v in opts:
     if o == "-a":
         PFX = v
@@ -59,8 +59,6 @@ for o, v in opts:
         DPT = v
     elif o == "-e":
         EXE = v
-    elif o == "-f":
-        onefle = True
     elif o == "-h":
         print("""
 Usage: python mkwindows.py [options]
@@ -68,12 +66,15 @@ Usage: python mkwindows.py [options]
     -a Architecture as in 7, 8, 32 and 64
     -d The Installed Path e.g. c:\Tartan\prg
     -e The Destination Path e.g. x:\TartanExe
-    -f generate Onefile
+    -h Print this Usage
+    -o Generate Onefile
     -s The Source path e.g. x:\TartanSve
     -t Temporary Work Directory e.g. x:\Temp
     -u Upgrade python modules
 """)
         sys.exit()
+    elif o == "-o":
+        onefle = True
     elif o == "-s":
         SRC = v
     elif o == "-t":
@@ -130,14 +131,13 @@ if UPG:
 # Run pyinstaller
 os.chdir(os.path.join(TMP, "tartan"))
 if onefle:
-    os.rename("ms0000.fle", "ms0000.spec")
+    subprocess.call(["pyinstaller", "onefle.spec"], stdout=out, stderr=out)
 else:
-    os.rename("ms0000.dir", "ms0000.spec")
-subprocess.call(["pyinstaller", "ms0000.spec"], stdout=out, stderr=out)
+    subprocess.call(["pyinstaller", "onedir.spec"], stdout=out, stderr=out)
 # Copy files to DPT
 shutil.copy("tartan.ico", DPT)
 if onefle:
-    shutil.copy(os.path.join("dist", "ms0000"), DPT)
+    shutil.copy(os.path.join("dist", "ms0000.exe"), DPT)
 else:
     shutil.copytree(os.path.join("dist", "ms0000"), DPT, dirs_exist_ok=True)
 # Create installers and Copy installers to EXE
diff --git a/uty/onedir.spec b/uty/onedir.spec
index c85f0ed..6845a3e 100755
--- a/uty/onedir.spec
+++ b/uty/onedir.spec
@@ -1,10 +1,13 @@
 # -*- mode: python -*-
+import sys
 from PyInstaller.utils.hooks import collect_data_files
 
 block_cipher = None
 data = [
     ('doc/*', 'doc'),
     ('../pygal/css/*.css', 'pygal/css')]
+if sys.platform == "win32":
+    data.append(('c:/windows/system32/api-ms-win-crt-*.dll', '.'))
 data.extend(collect_data_files('tkinterhtml'))
 a = Analysis(['ms0000.py'],
         pathex=['.'],
@@ -15,7 +18,8 @@ a = Analysis(['ms0000.py'],
             'pyexcel_xls', 'pyexcel_xls.xlsr', 'pyexcel_xls.xlsw',
             'pyexcel_io.writers', 'pyexcel_io.writers.csvw',
             'pyexcel_io.writers.csvz', 'pyexcel_io.writers.tsv',
-            'pyexcel_io.writers.tsvz', 'PIL._tkinter_finder'],
+            'pyexcel_io.writers.tsvz', 'PIL._tkinter_finder',
+            'pywintypes'],
         hookspath=[],
         runtime_hooks=[],
         excludes=['PyQt4', 'PyQt5'],
diff --git a/uty/onefle.spec b/uty/onefle.spec
index a0b6c72..ca1151c 100755
--- a/uty/onefle.spec
+++ b/uty/onefle.spec
@@ -1,10 +1,13 @@
 # -*- mode: python ; coding: utf-8 -*-
+import sys
 from PyInstaller.utils.hooks import collect_data_files
 
 block_cipher = None
 data = [
     ('doc/*', 'doc'),
     ('../pygal/css/*.css', 'pygal/css')]
+if sys.platform == "win32":
+    data.append(('c:/windows/system32/api-ms-win-crt-*.dll', '.'))
 data.extend(collect_data_files('tkinterhtml'))
 a = Analysis(['ms0000.py'],
         pathex=['.'],
@@ -15,7 +18,8 @@ a = Analysis(['ms0000.py'],
             'pyexcel_xls', 'pyexcel_xls.xlsr', 'pyexcel_xls.xlsw',
             'pyexcel_io.writers', 'pyexcel_io.writers.csvw',
             'pyexcel_io.writers.csvz', 'pyexcel_io.writers.tsv',
-            'pyexcel_io.writers.tsvz', 'PIL._tkinter_finder'],
+            'pyexcel_io.writers.tsvz', 'PIL._tkinter_finder',
+            'pywintypes'],
         hookspath=[],
         hooksconfig={},
         runtime_hooks=[],
diff --git a/uty/pkgprg.py b/uty/pkgprg.py
index 9a29961..44fd4bd 100644
--- a/uty/pkgprg.py
+++ b/uty/pkgprg.py
@@ -79,7 +79,7 @@ linux = False
 onefle = False
 tmpfle = None
 try:
-    opts, args = getopt.getopt(sys.argv[1:], "b:cefghilpt:uv:w:")
+    opts, args = getopt.getopt(sys.argv[1:], "b:ceghilopt:uv:w:")
 except:
     print("Required arguments missing", sys.argv[1:])
     sys.exit()
@@ -95,9 +95,9 @@ Usage: python pkgprg.py [options]
     -b Base Directory
     -c Create a cd
     -e Email changes
-    -f Onefile
     -g Exclude Uncommitted
     -h This Help
+    -o Generate Onefile
     -i Increment Version
     -l Linux Executable
     -p Publish Version
@@ -113,14 +113,14 @@ Usage: python pkgprg.py [options]
         mkcd = True
     elif o == "-e":
         email = True
-    elif o == "-f":
-        onefle = True
     elif o == "-g":
         incunc = False
     elif o == "-i":
         verinc = True
     elif o == "-l":
         linux = True
+    elif o == "-o":
+        onefle = True
     elif o == "-p":
         publish = True
         windows = True
@@ -317,8 +317,16 @@ if os.path.exists("%s/%s" % (bd, sn)):
 os.mkdir(os.path.join(bd, sn))
 # Change directory to system directory
 os.chdir("%s/%s" % (bd, sn))
-# Copy files
-for fle in ("tartan.iss","ucrtbase.7","ucrtbase.8","ms0000.dir","ms0000.fle"):
+# Copy file
+if windows:
+    fles = ["tartan.iss","ucrtbase.7","ucrtbase.8"]
+else:
+    fles = []
+if onefle:
+    fles.append("onefle.spec")
+else:
+    fles.append("onedir.spec")
+for fle in fles:
     shutil.copy(os.path.join(vd, "uty", fle), ".")
 # Unzip the repository into the system directory
 exeCmd("unzip -qq %s/tarzip" % bd)
@@ -352,7 +360,7 @@ if windows:
                     bits.remove(bit)
                 cmd = "%s\\\\mkwindows.py -a%s" % (url, bit)
                 if onefle:
-                    cmd += " -f"
+                    cmd += " -o"
                 if upgpip:
                     # Update dependancies
                     cmd += " -u"
@@ -368,6 +376,8 @@ if windows:
         if not os.path.exists(xpth):
             os.symlink(home, xpth)
         cmd = "%s cmd /c python %s/uty/mkwindows.py -a%s" % (cmd, bv, bit)
+        if onefle:
+            cmd += " -o"
         if upgpip:
             cmd += " -u"
         if tmpfle:
@@ -376,7 +386,7 @@ if windows:
 if linux:
     cmd = "python %s/uty/mklinux.py" % bv
     if onefle:
-        cmd += " -f"
+        cmd += " -o"
     exeCmd(cmd)
 if publish:
     # Publish
diff --git a/uty/pm1010.py b/uty/pm1010.py
index 47250bb..94af258 100644
--- a/uty/pm1010.py
+++ b/uty/pm1010.py
@@ -258,9 +258,9 @@ This file will be treated as a Temporary File when Exiting Tartan.""" % fle)
                     ctyp = "S"
                 self.fpdf.drawText(text, w=51*self.fpdf.cwth, align="L",
                     border="TLRB", ctyp=ctyp, ln=num)
-        self.fpdf.output("secrets.pdf", "F")
-        doPrinter(mf=self.opts["mf"], pdfnam="secrets.pdf", splash=False,
-            repprt=["N", "V", "view"])
+        if self.fpdf.saveFile("secrets.pdf", self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], pdfnam="secrets.pdf", splash=False,
+                repprt=["N", "V", "view"])
         os.remove("secrets.pdf")
 
     def doHead(self):
diff --git a/uty/rp1020.py b/uty/rp1020.py
index bb7d2e9..392c15b 100644
--- a/uty/rp1020.py
+++ b/uty/rp1020.py
@@ -281,7 +281,7 @@ Therefore No Emailing will be Possible.""")
                 if var:
                     nam = os.path.join(self.tmp, "report%s.pdf" % self.count)
                     self.fles.append(nam)
-                    var["fpdf"].output(nam)
+                    var["fpdf"].saveFile(nam)
                     self.mess = "%s\n%2s) %s - %s" % (self.mess, self.count,
                         mod[2], mod[3])
                     self.sql.insRec("rptstr", data=[self.opts["conum"],
@@ -390,7 +390,7 @@ Therefore No Emailing will be Possible.""")
             if var:
                 nam = os.path.join(self.tmp, "report%s.pdf" % self.count)
                 self.fles.append(nam)
-                var["fpdf"].output(nam)
+                var["fpdf"].saveFile(nam)
                 des = var["emlhead"].lower()
                 des = " ".join(w.capitalize() for w in des.split())
                 self.mess = "%s\n%2s) %s - %s" % (self.mess, self.count,
diff --git a/wag/sl3010.py b/wag/sl3010.py
index 1e2a774..48ed1ba 100644
--- a/wag/sl3010.py
+++ b/wag/sl3010.py
@@ -164,10 +164,10 @@ class sl3010(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         else:
             showError(self.opts["mf"].body, "Batch Errors",
                 "No Batch Transactions")
diff --git a/wag/sl3020.py b/wag/sl3020.py
index 738b3b2..7a38938 100644
--- a/wag/sl3020.py
+++ b/wag/sl3020.py
@@ -228,10 +228,10 @@ class sl3020(object):
             self.grandTotal()
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/wag/sl3030.py b/wag/sl3030.py
index 247bf38..1462522 100644
--- a/wag/sl3030.py
+++ b/wag/sl3030.py
@@ -140,10 +140,10 @@ class sl3030(object):
             self.fpdf.drawText("%5s %-100s%s" % ("", "Total", tot.disp))
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
diff --git a/wag/sl3040.py b/wag/sl3040.py
index bca95f2..80ff464 100644
--- a/wag/sl3040.py
+++ b/wag/sl3040.py
@@ -237,10 +237,10 @@ class sl3040(object):
     def doPrint(self):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header="%s Loan Statement at %s" % (self.opts["conam"], self.dated),
-            fromad=self.fromad, repprt=self.df.repprt, repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header="%s Loan Statement at %s" % (self.opts["conam"], self.dated),
+                fromad=self.fromad, repprt=self.df.repprt, repeml=self.df.repeml)
 
     def doExit(self):
         self.df.closeProcess()
diff --git a/wag/sl4010.py b/wag/sl4010.py
index f221056..30b4fe2 100644
--- a/wag/sl4010.py
+++ b/wag/sl4010.py
@@ -285,31 +285,35 @@ class sl4010(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if opt == "I":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "B":
             if not self.wlt:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.acctot = 0.0
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             if self.wlt:
                 self.acctot = 0.0
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         self.fpdf.drawText("%-5s %-20s %-25s %s" % ("", "",
diff --git a/wag/wg3010.py b/wag/wg3010.py
index e2bae3c..249d639 100644
--- a/wag/wg3010.py
+++ b/wag/wg3010.py
@@ -140,10 +140,10 @@ class wg3010(object):
                             dic[c][2], dic[c][3]).disp)
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.head, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.head, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
         else:
             cols = [
                 ["wgm_empno",  "UI",  5, "EmpNo", "y"],
diff --git a/wag/wg3020.py b/wag/wg3020.py
index e0d01af..49e37de 100644
--- a/wag/wg3020.py
+++ b/wag/wg3020.py
@@ -113,10 +113,10 @@ class wg3020(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
+                    fromad=self.fromad, repeml=self.df.repeml)
 
     def doPageHeading(self):
         self.fpdf.add_page()
diff --git a/wag/wg3030.py b/wag/wg3030.py
index 1fa9a72..0b3c427 100644
--- a/wag/wg3030.py
+++ b/wag/wg3030.py
@@ -177,10 +177,10 @@ class wg3030(object):
             t = CCD(emp[k][0], "SD", 13.2)
             s = CCD((int(emp[k][1]) / 100.0), "SD", 13.2)
             self.fpdf.drawText("%2s %-54s %13s %13s" % (k, n, t.disp, s.disp))
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def doExit(self):
diff --git a/wag/wg3050.py b/wag/wg3050.py
index 585ef71..7027329 100644
--- a/wag/wg3050.py
+++ b/wag/wg3050.py
@@ -862,10 +862,10 @@ Please Amend the Earnings or Deduction Codes containing It and then Try Again.""
         self.irp5fl.write(self.emprec)
 
     def doPrint(self):
-        self.fpdf.output(self.pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-            pdfnam=self.pdfnam, header=self.tit, repprt=self.df.repprt,
-            fromad=self.fromad, repeml=self.df.repeml)
+        if self.fpdf.saveFile(self.pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=self.pdfnam, header=self.tit, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
 
     def doExit(self):
         self.df.closeProcess()
diff --git a/wag/wg3080.py b/wag/wg3080.py
index f405f04..13a9758 100644
--- a/wag/wg3080.py
+++ b/wag/wg3080.py
@@ -188,10 +188,10 @@ class wg3080(object):
             else:
                 gtot[n] = CCD(w, "SD", 10.2).disp
         self.fpdf.drawText(dsc % tuple(gtot), font="B")
-        self.fpdf.output(pdfnam, "F")
-        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-            header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
-            repeml=self.df.repeml)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+                header=self.tit, repprt=self.df.repprt, fromad=self.fromad,
+                repeml=self.df.repeml)
 
     def getValues(self):
         data = {}
diff --git a/wag/wg4010.py b/wag/wg4010.py
index b28f28a..729f4f8 100644
--- a/wag/wg4010.py
+++ b/wag/wg4010.py
@@ -303,31 +303,35 @@ class wg4010(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if opt == "I":
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                    pdfnam=pdfnam, header=self.tit,
+                    repprt=["N", "V", "view"])
         elif opt == "B":
             self.wagtrn = self.doGetTrans()
             if not self.wagtrn:
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
         elif opt == "T":
             self.wagtrn = self.doGetTrans()
             if self.wagtrn:
                 self.pageHeading()
                 self.pageHeadingTrans()
                 self.printTrans()
-                self.fpdf.output(pdfnam, "F")
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
+                if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                    doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                        pdfnam=pdfnam, header=self.tit,
+                        repprt=["N", "V", "view"])
 
     def printInfo(self):
         self.fpdf.drawText("%15s %-25s %s" % \
diff --git a/wag/wgc420.py b/wag/wgc420.py
index 22199ab..d8f3097 100644
--- a/wag/wgc420.py
+++ b/wag/wgc420.py
@@ -108,10 +108,10 @@ class wgc420(object):
         if self.fpdf.page and not p.quit:
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
                 self.__class__.__name__, 0, ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=self.tit,
-                repprt=self.df.repprt, fromad=self.fromad,
-                repeml=self.df.repeml)
+            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+                doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, header=self.tit,
+                    repprt=self.df.repprt, fromad=self.fromad,
+                    repeml=self.df.repeml)
 
     def pageHeading(self):
         self.fpdf.add_page()
