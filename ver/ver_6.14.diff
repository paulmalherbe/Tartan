diff --git a/TartanClasses.py b/TartanClasses.py
index 9511a15..cca9c50 100644
--- a/TartanClasses.py
+++ b/TartanClasses.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -1173,7 +1173,7 @@ class MainFrame(object):
                     print("Missing Tkinter and/or ttk modules")
                     sys.exit()
                 if not title:
-                    title = "Tartan Systems - Copyright %s 2004-2022 "\
+                    title = "Tartan Systems - Copyright %s 2004-2023 "\
                         "Paul Malherbe" % chr(0xa9)
                 self.window = MkWindow(title=title, icon="tartan",
                     size=self.geo, resiz=False).newwin
@@ -6194,7 +6194,7 @@ Export - The report in the selected format will be opened
             if dflt == "d":
                 self.mf.status.bind("<Return>", self.checkYesNo)
                 self.mf.status.bind("<KP_Enter>", self.checkYesNo)
-            self.mf.status.focus_set()
+            self.mf.status.focus_force()
             self.mf.status.wait_variable(self.answer)
             if dflt == "d" and self.answer.get() in ("return", "kp_enter"):
                 self.answer.set("y")
@@ -6759,6 +6759,7 @@ class SelectChoice(object):
     butt   - A list of tuples of buttons, in addition to Exit, to draw,
                 with their respective commands and if a selection must
                 be returned. An Exit button will override the default one.
+                (("Exit", self.doExit, Tooltip), ("Quit", self.doQuit))
     neww   - Whether to create a new window, defaults to True
     deco   - Whether or not the window must be decorated, default True.
     modal  - Whether or not the window is modal.
@@ -6961,6 +6962,8 @@ class SelectChoice(object):
             for num, but in enumerate(butt):
                 b = self.bbox.addButton(but[0], (self.doButton, but))
                 self.buttons.append(b)
+                if len(but) == 3:
+                    ToolTip(b, but[2])
 
     def doButton(self, button):
         self.button = None
@@ -8727,7 +8730,7 @@ class AgeTrans(object):
         self.lb = SelectChoice(self.mf.window, "Available Transactions",
             self.cols, self.work, sort=False, wait=False, cmnd=self.enterAll,
             posn=self.posn, escape=False)
-        # Allocation Fields
+        # Allocation Fields and Buttons
         hbox = MyFrame(self.lb.window)
         hbox.pack(fill="x", expand="yes")
         hbox.columnconfigure(0, weight=1)
@@ -8744,14 +8747,12 @@ class AgeTrans(object):
         self.allBal.grid(row=0, column=3, sticky="ew")
         bbox = MyButtonBox(self.lb.window)
         self.allBut = bbox.addButton(text="Apply", cmd=self.enterAmt)
+        ToolTip(self.allBut, "Apply this Allocation")
         self.allBut.configure(state="disabled")
         if self.xits:
             xitBut = bbox.addButton(text="Exit", cmd=self.exitAge)
-        canBut = bbox.addButton(text="Cancel", cmd=self.cancelAll)
-        # Button Tooltips
-        ToolTip(self.allBut, "Apply this Allocation")
-        if self.xits:
             ToolTip(xitBut, "Leave the Balance as Unallocated")
+        canBut = bbox.addButton(text="Cancel", cmd=self.cancelAll)
         ToolTip(canBut, "Cancel All Allocations")
         # Main Loop
         placeWindow(self.lb.window, self.mf.window)
@@ -8898,11 +8899,7 @@ class Balances(object):
             "N" = does not return transactions
             "A" = returns all transactions
         """
-        ages = [0,0,0,0,0]
-        if trans == "Y":
-            cdt = self.curdt
-        else:
-            cdt = None
+        ages = [0, 0, 0, 0, 0]
         if self.system == "CRS":
             whr = [("crt_cono", "=", self.conum), ("crt_acno", "=", self.acno)]
             w = copyList(whr)
@@ -8914,8 +8911,8 @@ class Balances(object):
             else:
                 obal = obal[0]
             cbal = 0.0
-            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=cdt,
-                whr=whr, zer=trans)
+            col, trns = getTrn(self.mf.dbm, self.system.lower(),
+                cdt=self.curdt, whr=whr, zer=trans)
         elif self.system == "DRS":
             whr = [("drt_cono", "=", self.conum), ("drt_chain", "=",
                 self.chain), ("drt_acno", "=", self.acno)]
@@ -8928,8 +8925,8 @@ class Balances(object):
             else:
                 obal = obal[0]
             cbal = 0.0
-            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=cdt,
-                whr=whr, zer=trans)
+            col, trns = getTrn(self.mf.dbm, self.system.lower(),
+                cdt=self.curdt, whr=whr, zer=trans)
         elif self.system == "MEM":
             whr = [("mlt_cono","=",self.conum), ("mlt_memno","=",self.memno)]
             w = copyList(whr)
@@ -8941,8 +8938,8 @@ class Balances(object):
             else:
                 obal = obal[0]
             cbal = 0.0
-            col, trns = getTrn(self.mf.dbm, self.system.lower(), cdt=cdt,
-                whr=whr, zer=trans)
+            col, trns = getTrn(self.mf.dbm, self.system.lower(),
+                cdt=self.curdt, whr=whr, zer=trans)
         else:
             return
         if trns:
@@ -13104,7 +13101,7 @@ class PrintCards(object):
         else:
             return "* Bye *"
 
-class PrintDraw(object):
+class PrintTabDraw(object):
     def __init__(self, mf, conum, date, dtim, **args):
         self.mf = mf
         self.conum = conum
@@ -15490,10 +15487,10 @@ class TarBckRes(object):
             self.doBackup()
             if self.mf.window and self.smtp and self.smtp[0]:
                 if self.bu.repeml[2]:
-                    dated = CCD(self.sysdtw, "D1", 10).disp
+                    txt = "Tartan Backup for %s at %s" % (self.coys[0][1],
+                        CCD(self.sysdtw, "D1", 10).disp)
                     sendMail(self.smtp, self.coys[0][2], self.bu.repeml[2],
-                        "Tartan Backup for %s at %s" % (self.coys[0][1],
-                        dated), self.bu.repeml[3], attach=self.arcfle,
+                        txt, self.bu.repeml[3], attach=self.arcfle,
                         wrkdir=self.mf.rcdic["wrkdir"], err=self.mf.body)
                 self.mf.closeLoop()
             return
@@ -19189,16 +19186,16 @@ class ViewPDF(object):
             while not ok:
                 sp = SplashScreen(self.mf.window.focus_displayof(),
                     "E-Mailing the Report to:\n\n%s\n\nPlease Wait....." % add)
-                ok = sendMail(self.server, fromad, add, subj, mess=body,
+                err = sendMail(self.server, fromad, add, subj, mess=body,
                     attach=att, wrkdir=self.mf.rcdic["wrkdir"])
                 sp.closeSplash()
-                if not ok:
+                if err:
                     ok = askQuestion(self.mf.window.focus_displayof(),
                         "E-Mail Error", "Problem Delivering This "\
-                        "Message.\n\nTo: %s\nSubject: %s\n\nWould "\
-                        "You Like to Retry?" % (add, subj))
+                        "Message.\n\nTo: %s\nSubject: %s\n\n%s\n\nWould "\
+                        "You Like to Retry?" % (add, subj, err))
                     if ok == "yes":
-                        ok = None
+                        ok = False
                     else:
                         ok = "Failed"
                 else:
diff --git a/ass/ar1010.py b/ass/ar1010.py
index e0cb17c..8de2f7c 100644
--- a/ass/ar1010.py
+++ b/ass/ar1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar2010.py b/ass/ar2010.py
index 7ad47d1..8e6f3f2 100644
--- a/ass/ar2010.py
+++ b/ass/ar2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar2020.py b/ass/ar2020.py
index 8fdc593..d1a8076 100644
--- a/ass/ar2020.py
+++ b/ass/ar2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar2030.py b/ass/ar2030.py
index 4317616..f2afcec 100644
--- a/ass/ar2030.py
+++ b/ass/ar2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar3010.py b/ass/ar3010.py
index ee81550..1a3dd7c 100644
--- a/ass/ar3010.py
+++ b/ass/ar3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar3020.py b/ass/ar3020.py
index fb089a1..8cde0f9 100644
--- a/ass/ar3020.py
+++ b/ass/ar3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar3030.py b/ass/ar3030.py
index 258405c..168e153 100644
--- a/ass/ar3030.py
+++ b/ass/ar3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar3040.py b/ass/ar3040.py
index f9132f7..456f1f5 100644
--- a/ass/ar3040.py
+++ b/ass/ar3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar3050.py b/ass/ar3050.py
index 083153b..eff4a21 100644
--- a/ass/ar3050.py
+++ b/ass/ar3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar4010.py b/ass/ar4010.py
index 885d36a..c0cc321 100644
--- a/ass/ar4010.py
+++ b/ass/ar4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/ar6010.py b/ass/ar6010.py
index cfda3e5..8f35a0a 100644
--- a/ass/ar6010.py
+++ b/ass/ar6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/arc110.py b/ass/arc110.py
index eb7f0aa..2e3be6a 100644
--- a/ass/arc110.py
+++ b/ass/arc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/arc210.py b/ass/arc210.py
index df49152..6742d31 100644
--- a/ass/arc210.py
+++ b/ass/arc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/arc310.py b/ass/arc310.py
index 270bfbb..1e7af1d 100644
--- a/ass/arc310.py
+++ b/ass/arc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ass/arc320.py b/ass/arc320.py
index 8d4c1f9..2d0de41 100644
--- a/ass/arc320.py
+++ b/ass/arc320.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk1010.py b/bkm/bk1010.py
index 8145499..61dc204 100644
--- a/bkm/bk1010.py
+++ b/bkm/bk1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk1020.py b/bkm/bk1020.py
index b49787c..b460f11 100644
--- a/bkm/bk1020.py
+++ b/bkm/bk1020.py
@@ -21,7 +21,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk2010.py b/bkm/bk2010.py
index 94ccbfe..499c1e2 100644
--- a/bkm/bk2010.py
+++ b/bkm/bk2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3010.py b/bkm/bk3010.py
index 56d2374..ba15501 100644
--- a/bkm/bk3010.py
+++ b/bkm/bk3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3020.py b/bkm/bk3020.py
index 6499ff8..08f36a4 100644
--- a/bkm/bk3020.py
+++ b/bkm/bk3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3030.py b/bkm/bk3030.py
index 25f90d8..9ad5a28 100644
--- a/bkm/bk3030.py
+++ b/bkm/bk3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3040.py b/bkm/bk3040.py
index 115fa9d..374a83c 100644
--- a/bkm/bk3040.py
+++ b/bkm/bk3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3050.py b/bkm/bk3050.py
index 662783b..92e0007 100644
--- a/bkm/bk3050.py
+++ b/bkm/bk3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3060.py b/bkm/bk3060.py
index 374613b..3171e2e 100644
--- a/bkm/bk3060.py
+++ b/bkm/bk3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3070.py b/bkm/bk3070.py
index 2ed4997..3fd644a 100644
--- a/bkm/bk3070.py
+++ b/bkm/bk3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3080.py b/bkm/bk3080.py
index 5254fca..44f1fbd 100644
--- a/bkm/bk3080.py
+++ b/bkm/bk3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bk3090.py b/bkm/bk3090.py
index 27ada8e..c825f17 100644
--- a/bkm/bk3090.py
+++ b/bkm/bk3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bkc110.py b/bkm/bkc110.py
index 9ef644d..35472b6 100644
--- a/bkm/bkc110.py
+++ b/bkm/bkc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bkc210.py b/bkm/bkc210.py
index 0157e3f..1ac7c2c 100644
--- a/bkm/bkc210.py
+++ b/bkm/bkc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bkc310.py b/bkm/bkc310.py
index 0f68688..3a56349 100644
--- a/bkm/bkc310.py
+++ b/bkm/bkc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bkc410.py b/bkm/bkc410.py
index ac0e64a..ca737b8 100644
--- a/bkm/bkc410.py
+++ b/bkm/bkc410.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bkm/bkc510.py b/bkm/bkc510.py
index 6a5f4ba..2550acb 100644
--- a/bkm/bkc510.py
+++ b/bkm/bkc510.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bks/bs1010.py b/bks/bs1010.py
index d991918..0ded540 100644
--- a/bks/bs1010.py
+++ b/bks/bs1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bks/bs3010.py b/bks/bs3010.py
index b3a01b2..300a96b 100644
--- a/bks/bs3010.py
+++ b/bks/bs3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bks/bsc110.py b/bks/bsc110.py
index 34f14c6..56085f4 100644
--- a/bks/bsc110.py
+++ b/bks/bsc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bks/bsc210.py b/bks/bsc210.py
index d7fe7b5..133d288 100644
--- a/bks/bsc210.py
+++ b/bks/bsc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc1010.py b/bwl/bc1010.py
index ece432f..3c2eaa3 100644
--- a/bwl/bc1010.py
+++ b/bwl/bc1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc1020.py b/bwl/bc1020.py
index 5af4103..1daec4a 100644
--- a/bwl/bc1020.py
+++ b/bwl/bc1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc1030.py b/bwl/bc1030.py
index 4ed66b3..d814c66 100644
--- a/bwl/bc1030.py
+++ b/bwl/bc1030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc1040.py b/bwl/bc1040.py
index 1cf12ee..fc15d2f 100644
--- a/bwl/bc1040.py
+++ b/bwl/bc1040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -250,20 +250,15 @@ Are you Sure this is what you Want to Do?""", default="no")
             self.sql.updRec("bwltyp", data=data, where=[("bct_cono", "=",
                 self.opts["conum"]), ("bct_code", "=", self.ctype)])
         self.perr = False
-        if self.cfmat in ("D", "K", "R"):
-            if self.newtyp:
-                self.sql.insRec("bwlpts", data=[self.opts["conum"],
-                    self.ctype, "D", "N", 0, "N", 0, 0, 1, "N", 0, 0])
-        else:
-            self.df.setWidget(self.df.mstFrame, state="hide")
+        self.df.setWidget(self.df.mstFrame, state="hide")
+        if self.pdiff == "Y":
+            self.doPtsFmt("D")
+        if not self.perr:
             if self.pdiff == "Y":
-                self.doPtsFmt("D")
-            if not self.perr:
-                if self.pdiff == "Y":
-                    self.doPtsFmt("S")
-                else:
-                    self.doPtsFmt("B")
-            self.df.setWidget(self.df.mstFrame, state="show")
+                self.doPtsFmt("S")
+            else:
+                self.doPtsFmt("B")
+        self.df.setWidget(self.df.mstFrame, state="show")
         if self.perr:
             self.opts["mf"].dbm.rollbackDbase()
             self.df.focusField(self.df.frt, self.df.pag, self.df.col)
diff --git a/bwl/bc2010.py b/bwl/bc2010.py
index fac8af1..35e11f1 100644
--- a/bwl/bc2010.py
+++ b/bwl/bc2010.py
@@ -108,7 +108,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -126,7 +126,7 @@ COPYING
 
 import random, time
 from operator import itemgetter
-from TartanClasses import CCD, GetCtl, PrintCards, PrintDraw, PwdConfirm
+from TartanClasses import CCD, GetCtl, PrintCards, PrintTabDraw, PwdConfirm
 from TartanClasses import SplashScreen, SelectChoice, Sql, TartanDialog
 from tartanFunctions import askChoice, askQuestion, callModule, getGreens
 from tartanFunctions import getNextCode, copyList, projectDate, showError
@@ -1162,8 +1162,9 @@ First Change the Bounce Game and then Delete It.""")
                     ("c", "Pos", 1, "UI", "N"),
                     ("d", "Rte", 2, "UI", "N")]
                 but = [
-                    ("Generate", self.doGenTeams),
-                    ("Delete", self.doDelTabs)]
+                    ("Generate", self.doGenTeams,
+                        "Randomly Generate Teams for All the Unallocated Tabs"),
+                    ("Delete", self.doDelTabs, "Delete All Unallocated Tabs")]
                 SelectChoice(self.opts["mf"].window,
                     "These Tabs Are Not In Teams",
                     cols, self.tdata, butt=but, sort=False, live=False)
@@ -1502,49 +1503,62 @@ Try to Allocate Different Rinks""" % self.weeks),
                             three = tmm
                     temp.remove(three)
                     temp.remove(four)
-                    temp = sorted(temp, key=itemgetter(0, 1))
+                    temp = sorted(temp, key=itemgetter(0, 1), reverse=True)
                     temp.extend([three, four])
                 else:
-                    temp = sorted(temp, key=itemgetter(0, 1))
+                    temp = sorted(temp, key=itemgetter(0, 1), reverse=True)
             else:
                 random.shuffle(temp)
                 temp = sorted(temp, key=itemgetter(0))
             while temp:
                 ok = False
                 rk1 = None
-                sk1 = temp.pop(0)       # Next skip
+                sk1 = temp.pop(0)                # Next skip
+                qty = sk1[0]
+                tab = sk1[2][0]
+                # Get last two team games this skip has played
                 col = ["bdt_rink", "bdt_date", "bdt_time"]
                 whr = [
                     ("bdt_cono", "=", self.opts["conum"]),
-                    ("bdt_tab", "=", sk1[2][0]),
+                    ("bdt_tab", "=", tab),
+                    ("bdt_date", "<", self.date, "or", "(", "bdt_date", "=",
+                        self.date, "and", "bdt_time", "<>", self.time, ")"),
                     ("bdt_pos", "=", 4),
                     ("bdt_flag", "=", "C")]
-                chk = self.sql.getRec("bwldrt", cols=col, where=whr,
-                    order="bdt_date desc, bdt_time asc", limit=1)
-                if chk:
-                    rk1 = chk[0]        # Rink of last game
+                chks = self.sql.getRec("bwldrt", cols=col, where=whr,
+                    order="bdt_date desc, bdt_time asc", limit=2)
+                ok = False
+                opps = []
+                # Get opposition skips for last two team games
+                for chk in chks:
+                    rk1, dte, tim = chk          # Rink, Date and Time
                     whr = [
                         ("bdt_cono", "=", self.opts["conum"]),
-                        ("bdt_tab", "<>", sk1[2][0]),
-                        ("bdt_date", "=", chk[1]),
-                        ("bdt_time", "=", chk[2]),
+                        ("bdt_tab", "<>", tab),
+                        ("bdt_date", "=", dte),
+                        ("bdt_time", "=", tim),
                         ("bdt_rink", "=", rk1),
                         ("bdt_pos", "=", 4),
                         ("bdt_flag", "=", "C")]
-                    opp = self.sql.getRec("bwldrt", where=whr, limit=1)
-                    if opp:             # Opposition skip of last game
-                        for skp in temp:
-                            if skp[0] == sk1[0] and skp[2][0] is not opp[1]:
-                                ok = True
-                                sk2 = skp
-                                temp.remove(skp)
-                                break
-                if not ok:              # Next skip
+                    opp = self.sql.getRec("bwldrt", cols=["bdt_tab"],
+                        where=whr, limit=1)
+                    if opp:
+                        opps.append(opp[0])
+                # Get unique opposition
+                if opps:
+                    for tmp in temp:
+                        if tmp[0] == qty and tmp[2][0] not in opps:
+                            ok = True
+                            sk2 = tmp
+                            temp.remove(tmp)
+                            break
+                if not ok:                       # Next skip
+                    # Unique opposition not possible
                     sk2 = temp.pop(0)
                 ok = False
                 if rk1:
                     for rink in self.rinks1:
-                        if rk1 and rink == rk1:
+                        if rink == rk1:
                             continue
                         self.rinks1.remove(rink)
                         ok = True
@@ -1616,7 +1630,7 @@ Try to Allocate Different Rinks""" % self.weeks),
                 alldraw = []
                 self.doPositions(grp)
                 if self.dhist == "Y":
-                    self.doHistory(self.weeks * -7)
+                    self.doHistory()
                 else:
                     self.hist = {}
                     self.broken = []
@@ -2035,9 +2049,10 @@ Combination Number %10s"""
                 tab[5] = int(round(tab[5] * 1.1, 0))
             self.lead1.append(tab)
 
-    def doHistory(self, days):
+    def doHistory(self):
         self.hist = {}
         self.broken = []
+        days = self.weeks * -7
         ldate = projectDate(self.date, days)
         # Get records for past x days excluding bounce, team games and svs
         recs = self.sql.getRec("bwldrt", where=[("bdt_cono", "=",
@@ -2383,7 +2398,7 @@ Combination Number %10s"""
     def doPEnd(self):
         self.pd.closeProcess()
         if self.cards != "O":
-            PrintDraw(self.opts["mf"], self.opts["conum"], self.date,
+            PrintTabDraw(self.opts["mf"], self.opts["conum"], self.date,
                 self.time, cdes=self.cdes, takings=self.takings,
                 listing=self.listing, board=self.board, empty=self.empty,
                 repprt=self.pd.repprt, name=self.__class__.__name__)
diff --git a/bwl/bc2020.py b/bwl/bc2020.py
index 561f275..c167884 100644
--- a/bwl/bc2020.py
+++ b/bwl/bc2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc2030.py b/bwl/bc2030.py
index 2cd1e72..67ccf7b 100644
--- a/bwl/bc2030.py
+++ b/bwl/bc2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc2040.py b/bwl/bc2040.py
index 74701f3..28d5e39 100644
--- a/bwl/bc2040.py
+++ b/bwl/bc2040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -35,8 +35,9 @@ class bc2040(object):
             self.opts["mf"].startLoop()
 
     def setVariables(self):
-        self.sql = Sql(self.opts["mf"].dbm, ["bwlcmp", "bwltab",
-            "bwlent", "bwltyp", "bwlgme"], prog=self.__class__.__name__)
+        self.sql = Sql(self.opts["mf"].dbm, ["bwlcmp", "bwltab", "bwlent",
+            "bwltyp", "bwlgme", "bwltms", "bwlrnd"],
+            prog=self.__class__.__name__)
         if self.sql.error:
             return
         gc = GetCtl(self.opts["mf"])
@@ -341,11 +342,6 @@ Do You Want to Erase All Draws and Results?""", default="no")
                             self.opts["conum"]), ("btd_ccod", "=", self.ccod)])
                         self.sql.delRec("bwlrnd", where=[("bcr_cono", "=",
                             self.opts["conum"]), ("bcr_ccod", "=", self.ccod)])
-                    if self.cfmat in ("T", "X"):
-                        recs = self.sql.getRec("bwlent",
-                            cols=["bce_scod"], where=[("bce_cono",
-                            "=", self.opts["conum"]), ("bce_ccod",
-                            "=", self.ccod)], order="bce_scod")
                 data.append(self.cmp[self.sql.bwlcmp_col.index("bcm_xflag")])
                 self.sql.updRec("bwlcmp", data=data, where=[("bcm_cono", "=",
                     self.opts["conum"]), ("bcm_code", "=", self.ccod)])
diff --git a/bwl/bc2050.py b/bwl/bc2050.py
index 23ccbe1..13ab6ae 100644
--- a/bwl/bc2050.py
+++ b/bwl/bc2050.py
@@ -25,7 +25,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -46,18 +46,15 @@ from operator import itemgetter
 from TartanClasses import CCD, GetCtl, MyFpdf, PrintCards, ProgressBar
 from TartanClasses import RepPrt, SplashScreen, Sql, TartanDialog
 from tartanFunctions import askQuestion, callModule, doDrawTable, doPrinter
-from tartanFunctions import doWriteExport, getModName, getGreens
-from tartanFunctions import getSingleRecords, copyList, showError
-from tartanFunctions import showWarning
+from tartanFunctions import getModName, getGreens, getSingleRecords
+from tartanFunctions import copyList, showError, showWarning
 
 class bc2050(object):
     def __init__(self, **opts):
         self.opts = opts
         if self.setVariables():
             self.mainProcess()
-            if "args" in self.opts:
-                pass
-            elif "wait" in self.opts:
+            if "wait" in self.opts:
                 self.df.mstFrame.wait_window()
             else:
                 self.opts["mf"].startLoop()
@@ -105,12 +102,12 @@ class bc2050(object):
         r2s = (("First", "F"), ("Last", "L"))
         r3s = (("No", "N"),("Yes","Y"),("Only", "O"))
         r4s = (("Ends","E"),("Totals", "T"))
-        fld = (
+        fld = [
             (("T",0,0,0),"I@bcm_code",0,"","",
                 "","N",self.doCmpCod,cpt,None,None),
             (("T",0,0,0),"ONA",30,""),
-            (("T",0,1,0),"I@bcg_game",0,"","",
-                self.game,"N",self.doGamNum,gme,None,("efld",)),
+            [("T",0,1,0),"I@bcg_game",0,"","",
+                self.game,"N",self.doGamNum,gme,None,("efld",)],
             (("T",0,2,0),"I@bcg_date",0,"","",
                 self.today,"N",self.doGamDte,None,None,("efld",)),
             (("T",0,3,0),("IRB",r1s),0,"Pair Home with Away Skips","",
@@ -135,26 +132,21 @@ class bc2050(object):
             (("T",0,9,0),("IRB",r4s),0,"Card Type","",
                 "E","N",self.doTypCards,None,None,None),
             (("T",0,10,0),("IRB",r1s),0,"All Cards","",
-                "Y","N",self.doAllCards,None,None,None))
+                "Y","N",self.doAllCards,None,None,None)]
         if "args" in self.opts:
             tnd = ((self.doEnd,"n"),)
         else:
             tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
-        self.df = TartanDialog(self.opts["mf"], tops=False,
-            eflds=fld, tend=tnd, txit=txt, view=("X","V"), mail=("Y","Y"))
+        self.df = TartanDialog(self.opts["mf"], tops=False, eflds=fld,
+            tend=tnd, txit=txt, view=("N","V"), mail=("Y","Y"))
         self.df.setWidget(self.df.topEntry[0][12][2][0], state="hide")
-        if len(self.df.topEntry[0][12]) == 4:
-            self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
+        if self.opts["mf"].window.state() == "withdrawn":
+            self.opts["mf"].window.deiconify()
         if "args" in self.opts:
-            self.df.window.withdraw()
+            self.df.topf[0][3][4] = "Game Date(noesc)"
             self.df.doKeyPressed("T", 0, 0, self.opts["args"][0])
             self.df.doKeyPressed("T", 0, 2, self.opts["args"][1])
-            self.df.doKeyPressed("T", 0, 3, self.today)
-            self.df.doKeyPressed("T", 0, 4, "N")
-            self.df.doKeyPressed("T", 0, 7, "A7,B7,C7,D7")
-            self.df.doKeyPressed("T", 0, 9, "N")
-            self.df.doKeyPressed("T", 0, 12, "N")
 
     def doCmpCod(self, frt, pag, r, c, p, i, w):
         dogme = False
@@ -172,11 +164,11 @@ class bc2050(object):
         self.sdat = bwlcmp[self.sql.bwlcmp_col.index("bcm_date")]
         self.ctyp = bwlcmp[self.sql.bwlcmp_col.index("bcm_type")]
         if not self.ctyp:
-            bwltyp = [self.opts["conum"], 0, "KO", "K", 1, 0, 21,
-                "N", 0, "N", "", 0, 0, "N", "N", ""]
-        else:
-            bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
-                self.opts["conum"]), ("bct_code", "=", self.ctyp)], limit=1)
+            showError(self.opts["mf"].body, "Type",
+                "There Is No Competition Type.")
+            return "xt"
+        bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
+            self.opts["conum"]), ("bct_code", "=", self.ctyp)], limit=1)
         self.cfmat = bwltyp[self.sql.bwltyp_col.index("bct_cfmat")]
         self.tsize = bwltyp[self.sql.bwltyp_col.index("bct_tsize")]
         self.drawn = bwltyp[self.sql.bwltyp_col.index("bct_drawn")]
@@ -187,24 +179,22 @@ class bc2050(object):
             showError(self.opts["mf"].body, "Entries",
                 "There Are No Entries for this Competition.")
             return "rf"
-        teams = []
+        self.tskps = []
         for ent in ents:
-            teams.append(ent[0])
+            self.tskps.append(ent[0])
         if self.cfmat == "D":
-            if len(teams) % self.tsize:
+            if len(self.tskps) % self.tsize:
                 showError(self.opts["mf"].body, "Mismatch",
-                    "There is an Odd Number of Entries (%s)" % len(teams))
+                    "There is an Odd Number of Entries (%s)" % len(self.tskps))
                 return "rf"
-            self.totskp = int(len(teams) / self.tsize)
+            self.totskp = int(len(self.tskps) / self.tsize)
         else:
-            self.totskp = len(teams)
+            self.totskp = len(self.tskps)
         if self.totskp % 2 and self.cfmat in ("T", "X"):
             showError(self.opts["mf"].body, "Mismatch",
                 "There is an Uneven Number of Teams (%s)" % self.totskp)
             return "rf"
         if self.cfmat in ("D", "K"):
-            if len(self.df.topEntry[0][12]) == 4:
-                self.df.setWidget(self.df.topEntry[0][12][3][0], state="show")
             if self.totskp > 64:
                 showError(self.opts["mf"].body, "Maximum Exceeded",
                     "There are Too Many Entries (%s)" % self.totskp)
@@ -216,13 +206,9 @@ class bc2050(object):
             else:
                 self.games = 1
         elif self.cfmat == "R":
-            if len(self.df.topEntry[0][12]) == 4:
-                self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
             self.games = self.totskp - 1
             self.drawn = self.games
         else:
-            if len(self.df.topEntry[0][12]) == 4:
-                self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
             self.games = bwltyp[self.sql.bwltyp_col.index("bct_games")]
         self.ends = bwltyp[self.sql.bwltyp_col.index("bct_ends")]
         self.groups = bwltyp[self.sql.bwltyp_col.index("bct_groups")]
@@ -245,6 +231,7 @@ class bc2050(object):
             if not bwlpts[0] and not bwlpts[1]:
                 self.cchoice = True
         if self.cfmat in ("T", "X"):
+            # Tournament and Teams
             gme = self.sql.getRec("bwlgme", cols=["max(bcg_game)"],
                 where=[("bcg_cono", "=", self.opts["conum"]),
                 ("bcg_ccod", "=", self.ccod)], limit=1)
@@ -253,23 +240,21 @@ class bc2050(object):
                     self.game = 1
                 else:
                     self.game = gme[0] + 1
-                if self.game <= self.drawn:
-                    self.gtyp = "D"
-                else:
-                    self.gtyp = "S"
-                self.doPopulate(teams)
                 self.df.loadEntry(frt, pag, p+2, data=self.game)
                 return
         if self.cfmat in ("D", "K", "R"):
-            gme = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_type",
+            # Knock Out and Round Robin
+            games = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_type",
                 "bcg_date", "bcg_aflag", "sum(bcg_points)"], where=[("bcg_cono",
                 "=", self.opts["conum"]), ("bcg_ccod", "=", self.ccod)],
                 group="bcg_game, bcg_type, bcg_aflag", order="bcg_game")
-            if not gme:
+            if not games:
+                # No Drawn Games
                 if self.cfmat == "R":
+                    # Round Robin
                     lbye = 1
                     self.doSections()
-                    random.shuffle(teams)
+                    random.shuffle(self.tskps)
                     if self.sects:
                         if self.ssiz % 2 or self.totskp % self.ssiz:
                             ok = askQuestion(self.opts["mf"].body, "Mismatch",
@@ -277,8 +262,8 @@ class bc2050(object):
                                 "(%s)\nDo You Want Byes?" % self.ssiz)
                             if ok == "no":
                                 return "rf"
-                        for x in range(0, len(teams), self.ssiz):
-                            team = teams[x:x+self.ssiz]
+                        for x in range(0, len(self.tskps), self.ssiz):
+                            team = self.tskps[x:x+self.ssiz]
                             while len(team) < self.ssiz:
                                 team.append(900000 + lbye)
                                 lbye += 1
@@ -292,18 +277,19 @@ class bc2050(object):
                                 "There is an Uneven Number of Teams (%s), "\
                                 "Do You Want Byes?" % self.totskp)
                             if ok == "yes":
-                                teams.append(900000 + lbye)
+                                self.tskps.append(900000 + lbye)
                                 self.totskp += 1
                                 self.games += 1
                                 lbye += 1
                             else:
                                 return "rf"
-                        self.doPopulate(teams)
+                        self.doPopulate(self.tskps)
                 elif self.cfmat == "D":
                     # Drawn Knockout, Create Teams
-                    self.doPopulate(self.doDrawTeams(copyList(teams)))
+                    self.doPopulate(self.doDrawTeams(copyList(self.tskps)))
                 else:
-                    self.doPopulate(teams)
+                    # Normal Knockout, Create Teams
+                    self.doPopulate(self.tskps)
                 self.game = 1
                 self.gtyp = "D"
                 self.df.loadEntry(frt, pag, p+2, data=self.game)
@@ -314,19 +300,17 @@ class bc2050(object):
                     self.grpgrn = "N"
                     return "sk11"
             elif self.cfmat in ("D", "K"):
-                if not self.ctyp:
-                    ok = "yes"
-                else:
-                    ok = askQuestion(self.opts["mf"].body, "Drawn",
-                        "This Knockout Competition has Already Been Drawn."\
-                        "\n\nDo You Want to Reprint?")
+                ok = askQuestion(self.opts["mf"].body, "Drawn",
+                    "This Knockout Competition has Already Been Drawn."\
+                    "\n\nDo You Want to Reprint?")
                 if ok == "yes":
                     self.reprint = True
                     return "sk11"
                 else:
                     return "rf"
-            for game in gme:
+            for game in games:
                 if self.cfmat == "R":
+                    # Round Robin
                     if not game[2]:
                         dogme = True
                         break
@@ -345,6 +329,44 @@ class bc2050(object):
         else:
             return "rf"
 
+    def doPopulate(self, teams, sect=None):
+        cols = self.sql.bwlgme_col
+        data = [self.opts["conum"], self.ccod, 0, 0, "D", 0, 0, "",
+            0, 0, 0, 0, 0, 0, 0, "", 0, 1]
+        if self.cfmat == "R":
+            sch = self.doMakeSchedule(teams)
+            games = len(teams) - 1
+            for game in range(games):
+                for chk in sch[game]:
+                    skp = teams[chk[0]]
+                    opp = teams[chk[1]]
+                    data[cols.index("bcg_scod")] = skp
+                    data[cols.index("bcg_game")] = game + 1
+                    data[cols.index("bcg_ocod")] = opp
+                    if sect:
+                        data[cols.index("bcg_group")] = sect
+                    self.sql.insRec("bwlgme", data=data)
+                    data[cols.index("bcg_scod")] = opp
+                    data[cols.index("bcg_ocod")] = skp
+                    self.sql.insRec("bwlgme", data=data)
+        else:
+            for skip in teams:
+                data[cols.index("bcg_scod")] = skip
+                data[cols.index("bcg_game")] = self.game + 1
+                self.sql.insRec("bwlgme", data=data)
+
+    def doMakeSchedule(self, teams):
+        grps = [0+i for i in range(len(teams))]
+        half = int(len(teams) / 2)
+        sch = []
+        for _ in range(self.games):
+            pairings = []
+            for i in range(half):
+                pairings.append([grps[i], grps[len(teams)-i-1]])
+            grps.insert(1, grps.pop())
+            sch.append(pairings)
+        return sch
+
     def doSections(self):
         self.ssiz = 0
         tit = ("Sections",)
@@ -376,6 +398,7 @@ class bc2050(object):
         self.ss.closeProcess()
 
     def doSecExit(self):
+        self.sects = False
         self.ss.closeProcess()
 
     def doDrawTeams(self, teams):
@@ -460,70 +483,46 @@ class bc2050(object):
             self.sp.closeSplash()
         return team
 
-    def doPopulate(self, teams, sect=None):
-        # Populate bwlgme records
-        data = [self.opts["conum"], self.ccod, 0, 0, "D", 0, 0, "",
-            0, 0, 0, 0, 0, 0, 0, "", 0, 1]
-        if self.cfmat in ("T", "X"):
-            # Check if already populated (Old Method)
-            chk = self.sql.getRec("bwlgme", where=[("bcg_cono", "=",
-                self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
-                ("bcg_game", "=", self.game)])
-            if chk:
-                return
-            for skip in teams:
-                data[2] = skip
-                data[3] = self.game
-                data[4] = self.gtyp
-                self.sql.insRec("bwlgme", data=data)
-        elif self.cfmat == "R":
-            sch = self.doMakeSchedule(teams)
-            games = len(teams) - 1
-            for game in range(games):
-                for chk in sch[game]:
-                    skp = teams[chk[0]]
-                    opp = teams[chk[1]]
-                    data[2] = skp
-                    data[3] = game + 1
-                    data[6] = opp
-                    if sect:
-                        data[8] = sect
-                    self.sql.insRec("bwlgme", data=data)
-                    data[2] = opp
-                    data[6] = skp
-                    self.sql.insRec("bwlgme", data=data)
-        else:
-            for skip in teams:
-                data[2] = skip
-                data[3] = self.game + 1
-                self.sql.insRec("bwlgme", data=data)
-
-    def doMakeSchedule(self, teams):
-        grps = [0+i for i in range(len(teams))]
-        half = int(len(teams) / 2)
-        sch = []
-        for _ in range(self.games):
-            pairings = []
-            for i in range(half):
-                pairings.append([grps[i], grps[len(teams)-i-1]])
-            grps.insert(1, grps.pop())
-            sch.append(pairings)
-        return sch
-
     def doGamNum(self, frt, pag, r, c, p, i, w):
-        col = ["bcg_game", "bcg_type", "bcg_date", "sum(bcg_ocod)"]
         whr = [
             ("bcg_cono", "=", self.opts["conum"]),
             ("bcg_ccod", "=", self.ccod)]
+        if self.cfmat in ("T", "X"):
+            # Delete bwlgme records
+            wer = copyList(whr)
+            wer.append(("bcg_game", ">=", self.game))
+            self.sql.delRec("bwlgme", where=wer)
+            if w == self.game:
+                # Populate bwlgme records
+                cols = self.sql.bwlgme_col
+                if self.game <= self.drawn:
+                    self.gtyp = "D"
+                else:
+                    self.gtyp = "S"
+                data = [self.opts["conum"], self.ccod, 0, self.game,
+                    self.gtyp, 0, 0, "", 0, 0, 0, 0, 0, 0, 0, "", 0, 1]
+                if self.groups == "Y" and self.game > 1:
+                    # Get groupings
+                    grps = self.sql.getRec("bwlgme", cols=["bcg_scod",
+                        "bcg_group"], where=[("bcg_cono", "=",
+                        self.opts["conum"]), ("bcg_ccod", "=", self.ccod)],
+                        group="bcg_scod, bcg_group", order="bcg_scod")
+                    grp = dict(grps)
+                for skp in self.tskps:
+                    data[cols.index("bcg_scod")] = skp
+                    if self.groups == "Y" and self.game > 1:
+                        data[cols.index("bcg_group")] = grp[skp]
+                    self.sql.insRec("bwlgme", data=data)
         wer = copyList(whr)
         wer.extend([("bcg_game", "=", w), ("bcg_aflag", "in", ("", "D"))])
+        col = ["bcg_game", "bcg_type", "bcg_date", "sum(bcg_ocod)"]
         chk = self.sql.getRec("bwlgme", cols=col, where=wer,
             group="bcg_game, bcg_type, bcg_date", limit=1)
         if not chk:
             return "Invalid Game, Missing, Skipped or Abandoned"
         if not self.reprint and w > self.game and chk[1] in ("", "S"):
             return "Invalid Game Number, Previous Games Unfinished"
-        if not self.reprint and chk[2]:
+        if not self.reprint and chk[2] and chk[3]:
             ok = askQuestion(self.opts["mf"].body, "Game Drawn",
                 "This Game is Already Drawn, Do You Want to Reprint?",
                 default="no")
@@ -563,15 +562,15 @@ class bc2050(object):
 
     def doGamDte(self, frt, pag, r, c, p, i, w):
         if w < self.today or w < self.sdat:
-            return "Invalid Date, in the Past or Before the Starting Date"
+            return "Invalid Date, in the Past or Before Starting Date"
         self.date = w
         self.datd = self.df.t_disp[pag][0][i]
         self.grpsel = False
-        if self.cfmat in ("R", "X"):
+        if self.cfmat != "T":
             self.hapair = "N"
             self.df.loadEntry(frt, pag, p+1, data="N")
             return "sk3"
-        elif self.game > 1:
+        if self.game > 1:
             if self.groups == "Y" and self.grgame == (self.game - 1):
                 self.grpsel = True
             self.hapair = "N"
@@ -683,8 +682,6 @@ class bc2050(object):
 
     def doAllCards(self, frt, pag, r, c, p, i, w):
         self.allcards = w
-        if self.prtcards == "O":
-            return "nd"
 
     def doEnd(self):
         if not self.drawall:
@@ -789,7 +786,7 @@ class bc2050(object):
                         self.printCards()
                 else:
                     self.printBoards()
-            if "args" not in self.opts:
+            if self.opts["conam"] == "TEST" or "args" not in self.opts:
                 self.opts["mf"].closeLoop()
 
     def pairSkips(self):
@@ -1324,35 +1321,11 @@ class bc2050(object):
         self.doCompletionDates()
         if self.quit:
             self.doExit()
-        if self.df.repprt[2] == "export":
-            self.colsh = [[], []]
-            self.forms = []
-            for rnd in range(self.rnds):
-                if self.comtyp == "V":
-                    txt1 = "Complete By"
-                    txt2 = self.cdates[rnd]
-                elif self.cdates[rnd] == "9999-12-31":
-                    txt1 = "To Be"
-                    txt2 = "Announced"
-                else:
-                    txt1 = self.cdates[rnd]
-                    if self.ctimes[rnd] <= "12:00":
-                        txt2 = "%s AM" % self.ctimes[rnd]
-                    else:
-                        txt2 = "%s PM" % self.ctimes[rnd]
-                self.colsh[0].append((txt1, "center"))
-                self.colsh[1].append((txt2, "center"))
-                self.forms.append(("NA", 18))
-            self.colsh[0].append(("", "center"))
-            self.colsh[1].append(("Winner", "center"))
-            self.forms.append(("NA", 18))
-            self.datas = [["BODY", [""] * (self.rnds + 1)]]
-        else:
-            head = (self.rnds * 19) + 19
-            if head > 120:
-                head = 170
-            self.fpdf = MyFpdf(name=self.__class__.__name__, head=head)
-            self.pageHeading(date=True)
+        head = (self.rnds * 19) + 19
+        if head > 120:
+            head = 170
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=head)
+        self.pageHeading(date=True)
         if not self.reprint:
             self.doSeeds()
             if self.quit:
@@ -1512,25 +1485,14 @@ class bc2050(object):
                 "=", self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
                 ("bcg_game", "=", 1), ("bcg_group", "=", grp)],
                 order="bcg_pair, bcg_scod")
-            if self.df.repprt[2] == "export":
-                self.exportBracket(skips)
-            else:
-                self.printBracket(grp, skips)
-        if self.df.repprt[2] == "export":
-            self.completeBracket()
-            name = getModName(self.opts["mf"].rcdic["wrkdir"],
-                self.__class__.__name__, self.opts["conum"])
-            doWriteExport(xtype="X", name=name, heads=[(self.cdes, 600, 360)],
-                colsh=self.colsh, forms=self.forms, datas=self.datas,
-                rcdic=self.opts["mf"].rcdic, wait=True)
-        else:
-            pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
-                self.__class__.__name__, self.opts["conum"], ext="pdf")
-            head = "%s Draw" % self.cdes
-            if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
-                doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                    header=head, pdfnam=pdfnam, repprt=self.df.repprt,
-                    fromad=self.fromad, repeml=self.df.repeml)
+            self.printBracket(grp, skips)
+        pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
+            self.__class__.__name__, self.opts["conum"], ext="pdf")
+        head = "%s Draw" % self.cdes
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                header=head, pdfnam=pdfnam, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
         self.opts["mf"].closeLoop()
 
     def doCompletionDates(self):
@@ -1616,7 +1578,7 @@ class bc2050(object):
             self.cdates.append(CCD(dte, "D1", 10).disp)
             self.ctimes.append(CCD(tim, "TM", 5).disp)
             self.sql.insRec("bwlrnd", data=[self.opts["conum"],
-                self.ccod, rnd + 1, dte, tim])
+                self.ccod, int(rnd / 2) + 1, dte, tim])
         if self.reprint:
             self.opts["mf"].dbm.commitDbase()
 
@@ -1769,7 +1731,7 @@ class bc2050(object):
                 ("bcg_scod", "=", chk[0][0]), ("bcg_game", "=", self.game)])
 
     def printBracket(self, grp, skips):
-        cwth, chgt = self.setBracketFont()
+        siz, cwth, chgt = self.setBracketFont()
         ohgt = self.fpdf.font[2]
         self.fpdf.font[2] = chgt
         if grp == 2 and self.rnds == 2:
@@ -1784,24 +1746,35 @@ class bc2050(object):
         n1 = nm + l1
         n2 = nm + l1 + l2
         nx = (nm * 2) + l1 + l2
+
+        def drawField(txt, x, y, w):
+            nsiz = siz
+            chek = w * .95
+            nwth = self.fpdf.get_string_width(txt)
+            while nwth >= chek:
+                nsiz -= 1
+                self.fpdf.setFont(style="B", size=nsiz)
+                nwth = self.fpdf.get_string_width(txt)
+            self.fpdf.drawText(txt, x=x, y=y, w=w, font=("B", nsiz),
+                border="TLRB")
+
         for num, skip in enumerate(skips):
             x = self.fpdf.get_x()
             y = self.fpdf.get_y()
             if skip[1] > 900000:
                 self.fpdf.drawText("", w=(cwth * nm))
             else:
-                self.fpdf.drawText(self.getSkip(skip[0], skip[2]),
-                    w=(cwth * nm), border="TLRB")
+                drawField(self.getSkip(skip[0], skip[2]), x, y, w=(cwth * nm))
                 self.drawLink(cwth, l1, l2, x + (cwth * nm), y + int(chgt / 2),
                     y + (chgt * 1.5))
             x = self.fpdf.get_x()
             y = self.fpdf.get_y()
             if skip[1] > 900000:
-                self.fpdf.drawText(self.getSkip(skip[0], skip[2]),
-                    x + (cwth * n2), w=(cwth * nm), border="TLRB")
+                drawField(self.getSkip(skip[0], skip[2]),
+                    x + (cwth * n2), y, w=(cwth * nm))
             else:
-                self.fpdf.drawText(self.getWinner(rd, grp, skip),
-                    x + (cwth * n2), w=(cwth * nm), border="TLRB")
+                drawField(self.getWinner(rd, grp, skip), x + (cwth * n2),
+                    y, w=(cwth * nm))
             if not last or last == "up":
                 self.drawLink(cwth, l1, l2, x + (cwth * nx), y + int(chgt / 2),
                     y + (chgt * 2.5))
@@ -1818,8 +1791,7 @@ class bc2050(object):
             if skip[1] > 900000:
                 self.fpdf.drawText("", w=(cwth * nm))
             else:
-                self.fpdf.drawText(self.getSkip(skip[1], 0), w=(cwth * nm),
-                    border="TLRB")
+                drawField(self.getSkip(skip[1], 0), x, y, w=(cwth * nm))
                 self.fpdf.line(x + (cwth * nm), y + int(chgt / 2),
                     x + (cwth * n1), y + int(chgt / 2))
                 self.fpdf.line(x + (cwth * n1), y + int(chgt / 2),
@@ -1833,17 +1805,16 @@ class bc2050(object):
             for rnd in range(0, len(rnds), 2):
                 x = rnds[rnd][0]
                 y = rnds[rnd][1]
-                self.fpdf.drawText(self.getWinner(rd, grp, 0, rnd + 1),
-                    x + (cwth * (l1 + l2)), y, w=(cwth * nm),
-                    border="TLRB")
+                drawField(self.getWinner(rd, grp, 0, rnd + 1),
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm))
                 inc1 = inc + .5
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
                     y + (chgt * inc1))
                 bb.append([x + (cwth * n2), y + (chgt * (4 * (aa + 1)))])
                 x = rnds[rnd + 1][0]
                 y = rnds[rnd + 1][1]
-                self.fpdf.drawText(self.getWinner(rd, grp, 0, rnd + 2),
-                    x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="TLRB")
+                drawField(self.getWinner(rd, grp, 0, rnd + 2),
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm))
                 inc1 -= 1
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
                     y-(chgt * inc1))
@@ -1854,14 +1825,14 @@ class bc2050(object):
         if self.rnds == 2:
             rd += 1
             if grp == 1:
-                self.fpdf.drawText(self.getWinner(rd, grp, 0, 1),
-                    x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="TLRB")
+                drawField(self.getWinner(rd, 2, 0, 1),
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm))
         else:
             rd += 1
             if self.rnds > 5:
                 y += (chgt * 4)
-            self.fpdf.drawText(self.getWinner(rd, grp, 0, 1),
-                x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="TLRB")
+            drawField(self.getWinner(rd, grp, 0, 1),
+                x + (cwth * (l1 + l2)), y, w=(cwth * nm))
             if grp == 1:
                 inc += .5
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
@@ -1870,8 +1841,8 @@ class bc2050(object):
                 rd += 1
                 x1 = x + (cwth * (l1 + l2 + nm))
                 y1 = y - (chgt * inc)
-                self.fpdf.drawText(self.getWinner(rd, grp, 0, 1),
-                    x1 + (cwth * (l1 + l2)), y1, w=(cwth * nm), border="TLRB")
+                drawField(self.getWinner(rd, grp, 0, 1),
+                    x1 + (cwth * (l1 + l2)), y1, w=(cwth * nm))
                 inc = 0 - inc + .5
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
                     y + (chgt * inc))
@@ -1901,81 +1872,7 @@ class bc2050(object):
             chgt = 2.6
         self.fpdf.setFont(style="B", size=siz)
         cwth = self.fpdf.get_string_width("X")
-        return cwth, chgt
-
-    def exportBracket(self, skips):
-        line = ["BODY", [""] * (self.rnds + 1)]
-        for num, skip in enumerate(skips):
-            if skip[1] > 900000:
-                if not self.two:
-                    self.datas.append(copy.deepcopy(line))
-                else:
-                    nl = copy.deepcopy(line)
-                    nl[1][1] = ["", "R"]
-                    self.datas.append(nl)
-                nl = copy.deepcopy(line)
-                nl[1][1] = [self.getSkip(skip[0], skip[2]), "TLRB"]
-                self.datas.append(nl)
-                if not self.two:
-                    self.two = 1
-                else:
-                    self.two = 0
-                if not self.two:
-                    self.datas.append(copy.deepcopy(line))
-                    self.datas.append(copy.deepcopy(line))
-                else:
-                    nl = copy.deepcopy(line)
-                    nl[1][1] = ["", "R"]
-                    self.datas.append(nl)
-                    nl = copy.deepcopy(line)
-                    nl[1][2] = ["", "TLRB"]
-                    self.datas.append(nl)
-            else:
-                nl = copy.deepcopy(line)
-                nl[1][0] = [self.getSkip(skip[0], skip[2]), "TLRB"]
-                if not self.two:
-                    self.datas.append(nl)
-                else:
-                    nl[1][1] = ["", "R"]
-                    self.datas.append(nl)
-                nl = copy.deepcopy(line)
-                nl[1][1] = ["", "TLRB"]
-                self.datas.append(nl)
-                if not self.two:
-                    self.two = 1
-                else:
-                    self.two = 0
-                nl = copy.deepcopy(line)
-                nl[1][0] = [self.getSkip(skip[1], 0), "TLRB"]
-                if not self.two:
-                    self.datas.append(nl)
-                    self.datas.append(copy.deepcopy(line))
-                else:
-                    nl[1][1] = ["", "R"]
-                    self.datas.append(nl)
-                    nl = copy.deepcopy(line)
-                    nl[1][2] = ["", "TLRB"]
-                    self.datas.append(nl)
-
-    def completeBracket(self):
-        cols = [0, 0, 3, 7, 15, 23]
-        for rnd in range(2, self.rnds):
-            datas = copy.deepcopy(self.datas)
-            br = False
-            for num, line in enumerate(datas):
-                if type(line[1][rnd]) == list and line[1][rnd][1].count("TLRB"):
-                    if br:
-                        br = False
-                    else:
-                        br = True
-                        cc = cols[rnd]
-                        qq = 0
-                elif br:
-                    if qq == cc:
-                        self.datas[num][1][rnd + 1] = ["", "TLRB"]
-                    else:
-                        self.datas[num][1][rnd] = ["", "R"]
-                    qq += 1
+        return siz, cwth, chgt
 
     def getWinner(self, rnd, grp, skip, num=0):
         if skip:
@@ -2116,7 +2013,7 @@ class bc2050(object):
         self.pglin = 1
         if not date:
             return
-        cwth, chgt = self.setBracketFont()
+        siz, cwth, chgt = self.setBracketFont()
         self.fpdf.drawText()
         text = []
         for x in range(self.rnds):
@@ -2216,9 +2113,10 @@ class bc2050(object):
         if self.drawall:
             self.args = (pc.tname, pc.repprt)
 
-
     def printBoards(self):
         def getName(skip):
+            if skip > 900000:
+                return "Bye"
             name = self.sql.getRec("bwltab", cols=["btb_surname", "btb_names"],
                 where=[("btb_cono", "=", 1), ("btb_tab", "=", skip)], limit=1)
             if not name:
@@ -2258,6 +2156,8 @@ class bc2050(object):
             for seq in range(count):
                 pad = seq * pads
                 skip = skips[num + seq]
+                if skip > 900000:
+                    continue
                 nff["rows"].extend([
                     [5, 1 + pad, 80, 2, .8, "%s" % self.cdes, True, True],
                     [5, 3 + pad, [
diff --git a/bwl/bc2060.py b/bwl/bc2060.py
index 3bd1a53..a1e4ec0 100644
--- a/bwl/bc2060.py
+++ b/bwl/bc2060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -25,8 +25,9 @@ COPYING
 """
 
 import time
-from TartanClasses import TartanDialog, Sql
-from tartanFunctions import askQuestion, showError
+from TartanClasses import CCD, MyFpdf, PrintCards, Sql, TartanDialog
+from tartanFunctions import askQuestion, copyList, doPrinter, getModName
+from tartanFunctions import showError
 
 class bc2060(object):
     def __init__(self, **opts):
@@ -39,7 +40,7 @@ class bc2060(object):
         t = time.localtime()
         self.today = ((t[0] * 10000) + (t[1] * 100) + t[2])
         self.sql = Sql(self.opts["mf"].dbm, ["bwlcmp", "bwltab", "bwlgme",
-            "bwltyp", "bwlent"], prog=self.__class__.__name__)
+            "bwltyp", "bwlpts", "bwlent"], prog=self.__class__.__name__)
         if self.sql.error:
             return
         return True
@@ -78,7 +79,7 @@ class bc2060(object):
             (("T",0,1,0),"I@bcg_game",0,"Game Number","",
                 1,"N",self.doGame,None,None,("efld",)),
             (("T",0,1,0),"I@bcg_date",0,"Date","",
-                self.today,"N",self.doDate,None,None,("efld",)),
+                self.today,"N",self.doDate,None,self.doDelete,("efld",)),
             (("T",0,2,0),"IUA",35,"Greens","Greens (A,B,C)",
                 "","N",self.doGreens,None,None,("efld",),None,"Available "\
                 "Greens in the format A,B or A,B345 showing Green Code and "\
@@ -91,13 +92,15 @@ class bc2060(object):
             (("C",0,0,0),"ONA",30,"Opp-Name"),
             (("C",0,0,0),"I@bcg_rink",0,"","",
                 "","N",self.doRink,None,None,("notblank",)))
-        but = (("Quit",None,self.doQuit,1,None,None),)
+        but = (
+            ("Print",None,self.doPrint,1,None,None),
+            ("Quit",None,self.doQuit,1,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         cnd = ((self.doEnd,"y"),)
         cxt = (self.doExit,)
-        self.df = TartanDialog(self.opts["mf"], tops=False,
-            eflds=fld, butt=but, tend=tnd, txit=txt, cend=cnd, cxit=cxt)
+        self.df = TartanDialog(self.opts["mf"], tops=False, eflds=fld,
+            butt=but, tend=tnd, txit=txt, cend=cnd, cxit=cxt)
 
     def doCmpCod(self, frt, pag, r, c, p, i, w):
         com = self.sql.getRec("bwlcmp", cols=["bcm_name", "bcm_date",
@@ -105,56 +108,74 @@ class bc2060(object):
             ("bcm_code", "=", w)], limit=1)
         if not com:
             return "Invalid Competition Code"
-        name, self.sdat, ctyp = com
-        self.df.loadEntry(frt, pag, p+1, data=name)
-        chk = self.sql.getRec("bwltyp", cols=["bct_cfmat"],
-            where=[("bct_cono", "=", self.opts["conum"]), ("bct_code", "=",
-            ctyp)], limit=1)
-        if chk[0] in ("D", "K", "R"):
+        self.cdes, self.sdat, self.ctyp = com
+        self.df.loadEntry(frt, pag, p+1, data=self.cdes)
+        bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
+            self.opts["conum"]), ("bct_code", "=", self.ctyp)], limit=1)
+        cfmat = bwltyp[self.sql.bwltyp_col.index("bct_cfmat")]
+        if cfmat in ("D", "K", "R"):
             return "Knockout and R/Robin Draws Cannot be Changed"
-        chk = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_date",
-            "bcg_aflag", "sum(bcg_ocod)", "sum(bcg_sfor)"],
-            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
-            w)], group="bcg_game, bcg_date, bcg_aflag")
+        self.ends = bwltyp[self.sql.bwltyp_col.index("bct_ends")]
+        self.grgame = bwltyp[self.sql.bwltyp_col.index("bct_grgame")]
+        gmes = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_type",
+            "bcg_date", "bcg_aflag", "sum(bcg_ocod)", "sum(bcg_sfor)",
+            "sum(bcg_sagt)"], where=[("bcg_cono", "=", self.opts["conum"]),
+            ("bcg_ccod", "=", w)], group="bcg_game, bcg_date, bcg_aflag")
         self.ccod = w
         self.game = 0
         self.draws = {}
         self.manual = False
-        for ck in chk:
-            if ck[2] == "A" or ck[4]:
-                continue
-            if ck[4]:
-                continue
-            if ck[2] in ("", "D", "S") and ck[3]:
-                self.draws[ck[0]] = ck[1:]
-        if not self.draws:
+        if gmes:
+            for gme in gmes:
+                if gme[3] == "A" or gme[5] or gme[6]:
+                    continue
+                if gme[3] in ("", "D", "S") and gme[4]:
+                    self.draws[gme[0]] = gme[1:]
+        elif cfmat == "X":
+            return "Draw Not Yet Done"
+        else:
             ok = askQuestion(self.opts["mf"].body, "Manual Draw",
-                "Is this the First Game and is it going to be a "\
+                "This is the First Game, is it going to be a "\
                 "Manual Draw?", default="no")
             if ok == "no":
                 return "rf"
             self.manual = True
             self.game = 1
             self.df.loadEntry(frt, pag, p+2, data=self.game)
-            self.totskp = self.sql.getRec("bwlent", cols=["count(*)"],
-                where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
-                self.ccod)], limit=1)[0]
+            skips = self.sql.getRec("bwlent", cols=["bce_scod"],
+                where=[("bce_cono", "=", self.opts["conum"]),
+                ("bce_ccod", "=", self.ccod)], order="bce_scod")
+            self.totskp = len(skips)
+            # Populate bwlgme records
+            data = [self.opts["conum"], self.ccod, 0, 0, "D", 0, 0, "",
+                0, 0, 0, 0, 0, 0, 0, "", 0, 1]
+            for skip in skips:
+                data[2] = skip[0]
+                data[3] = self.game
+                self.sql.insRec("bwlgme", data=data)
             return "sk2"
 
     def doGame(self, frt, pag, r, c, p, i, w):
         if w not in self.draws:
             return "Invalid Game Number"
         self.game = w
-        self.date = self.draws[w][0]
+        self.gtyp = self.draws[w][0]
+        self.date = self.draws[w][1]
         self.df.loadEntry(frt, pag, p+1, data=self.date)
         self.totskp = self.sql.getRec("bwlent", cols=["count(*)"],
             where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
             self.ccod)], limit=1)[0]
 
+    def doDelete(self):
+        self.sql.delRec("bwlgme", where=[("bcg_cono", "=", self.opts["conum"]),
+            ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", self.game)])
+        self.opts["mf"].dbm.commitDbase(ask=True)
+
     def doDate(self, frt, pag, r, c, p, i, w):
         if w < self.today or w < self.sdat:
             return "Invalid Date, in the Past or Before the Starting Date"
         self.date = w
+        self.datd = CCD(self.date, "D1", 10).disp
 
     def doGreens(self, frt, pag, r, c, p, i, w):
         if not w:
@@ -187,15 +208,13 @@ class bc2060(object):
         if not skp:
             return "Invalid Skip Code"
         self.skip = w
-        self.old_opp = skp[2]
-        self.old_rink = skp[3]
         if skp[1]:
             name = "%s, %s" % tuple(skp[:2])
         else:
             name = skp[0]
         self.df.loadEntry(frt, pag, p+1, data=name)
-        if self.old_opp:
-            self.df.loadEntry(frt, pag, p+2, data=self.old_opp)
+        if not self.manual and skp[2]:
+            self.df.loadEntry(frt, pag, p+2, data=skp[2])
             opp = self.sql.getRec("bwltab", cols=["btb_surname",
                 "btb_names"], where=[("btb_cono", "=", self.opts["conum"]),
                 ("btb_tab", "=", skp[2])], limit=1)
@@ -204,8 +223,8 @@ class bc2060(object):
             else:
                 name = opp[0]
             self.df.loadEntry(frt, pag, p+3, data=name)
-        if self.old_rink:
-            self.df.loadEntry(frt, pag, p+4, data=self.old_rink)
+        if not self.manual and skp[3]:
+            self.df.loadEntry(frt, pag, p+4, data=skp[3])
 
     def doOppCod(self, frt, pag, r, c, p, i, w):
         opp = self.sql.getRec(tables=["bwlgme", "bwltab"], cols=["btb_surname",
@@ -232,7 +251,6 @@ class bc2060(object):
         if self.df.frt == "T":
             self.df.focusField("C", 0, 1)
         else:
-            self.df.advanceLine(0)
             self.sql.updRec("bwlgme", cols=["bcg_date", "bcg_ocod",
                 "bcg_rink"], data=[self.date, self.new_opp, self.new_rink],
                 where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
@@ -243,29 +261,37 @@ class bc2060(object):
                 where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
                 self.ccod), ("bcg_scod", "=", self.new_opp), ("bcg_game",
                 "=", self.game)])
+            self.df.advanceLine(0)
 
-    def doExit(self):
+    def doExit(self, doprint=False):
         if self.df.frt == "C":
             chk = self.sql.getRec("bwlgme", cols=["bcg_ocod",
                 "count(*)"], where=[("bcg_cono", "=", self.opts["conum"]),
                 ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", self.game)],
                 group="bcg_ocod", order="bcg_ocod")
             for c in chk:
-                if c[0] and c[1] != 1:
-                    skp = self.sql.getRec("bwlgme", cols=["bcg_scod"],
-                        where=[("bcg_cono", "=", self.opts["conum"]),
-                        ("bcg_ccod", "=", self.ccod), ("bcg_game", "=",
-                        self.game), ("bcg_ocod", "=", c[0])], order="bcg_scod")
-                    err = "Opponent %s is Drawn Against %s Skips\n" % tuple(c)
-                    for s in skp:
-                        err = err + "\nSkip %s" % s[0]
+                if not c[0] or c[1] != 1:
+                    if c[0]:
+                        skp = self.sql.getRec("bwlgme", cols=["bcg_scod"],
+                            where=[("bcg_cono", "=", self.opts["conum"]),
+                            ("bcg_ccod", "=", self.ccod), ("bcg_game", "=",
+                            self.game), ("bcg_ocod", "=", c[0])],
+                            order="bcg_scod")
+                        err = "Opponent %s is Drawn Against %s Skips\n" % \
+                            tuple(c)
+                        for s in skp:
+                            err = err + "\nSkip %s" % s[0]
+                    else:
+                        err = ""
                     skp = self.sql.sqlRec("Select bce_scod from bwlent where "\
                         "bce_ccod = %s and bce_scod not in (select bcg_ocod "\
                         "from bwlgme where bcg_ccod = %s and bcg_game = %s)" %
                         (self.ccod, self.ccod, self.game))
-                    err = err + "\n\nSkips Without Opponents\n"
+                    if err:
+                        err += "\n\n"
+                    err = err + "Skips Without Opponents\n"
                     for s in skp:
-                        err = err + "\nSkip %s" % s[0]
+                        err = err + "%s " % s[0]
                     showError(self.opts["mf"].body, "Skip Error", err)
                     self.df.focusField(self.df.frt, self.df.pag, self.df.col)
                     return
@@ -307,7 +333,169 @@ class bc2060(object):
                     self.df.focusField(self.df.frt, self.df.pag, self.df.col)
                     return
             self.opts["mf"].dbm.commitDbase(ask=True)
+            if doprint:
+                if self.opts["mf"].dbm.commit == "yes":
+                    return True
+                return
+        self.df.closeProcess()
+        self.opts["mf"].closeLoop()
+
+    def doPrint(self):
+        if not self.doExit(doprint=True):
+            self.df.focusField(self.df.frt, self.df.pag, self.df.col)
+            return
         self.df.closeProcess()
+        r1s = (("No", "N"),("Yes","Y"))
+        fld = (
+            (("T",0,0,0),("IRB",r1s),0,"Print Cards","",
+                "N","N",self.doPrtCards,None,None,None),)
+        tnd = ((self.printGame,"n"),)
+        txt = (self.printExit,)
+        self.pr = TartanDialog(self.opts["mf"], tops=False, eflds=fld,
+            tend=tnd, txit=txt, view=("X","V"), mail=("Y","Y"))
+        self.pr.mstFrame.wait_window()
+        if self.prtcards == "Y":
+            self.printCards()
+        self.opts["mf"].closeLoop()
+
+    def doPrtCards(self, frt, pag, r, c, p, i, w):
+        self.prtcards = w
+
+    def printGame(self):
+        grp = [[0]]
+        if self.game > self.grgame:
+            grp = self.sql.getRec("bwlgme", cols=["bcg_group"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod)], group="bcg_group",
+                order="bcg_group")
+        whr = [
+            ("bcg_cono", "=", self.opts["conum"]),
+            ("bcg_ccod", "=", self.ccod),
+            ("bcg_game", "=", self.game),
+            ("btb_tab=bcg_scod",)]
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=65)
+        self.fpdf.lpp = 60
+        self.pglin = 999
+        lastg = None
+        for g in grp:
+            where = copyList(whr)
+            if self.game <= self.grgame:
+                recs = self.sql.getRec(tables=["bwlgme", "bwltab"],
+                    cols=["btb_tab", "btb_surname", "btb_names", "bcg_ocod",
+                    "bcg_rink"], where=where, order="btb_surname, btb_names")
+            else:
+                where.append(("bcg_group", "=", g[0]))
+                recs = self.sql.getRec(tables=["bwlgme", "bwltab"],
+                    cols=["btb_tab", "btb_surname", "btb_names", "bcg_ocod",
+                    "bcg_rink"], where=where, order="btb_surname, btb_names")
+            if len(recs) > 50:
+                h = 4.4
+            else:
+                h = 4.7
+            for skp in recs:
+                if self.pglin > self.fpdf.lpp:
+                    self.pageHeading()
+                if g[0] != lastg:
+                    if len(recs) > (self.fpdf.lpp - self.pglin - 3):
+                        self.pageHeading()
+                    self.groupHeading(g[0])
+                    lastg = g[0]
+                opp = self.sql.getRec("bwltab", cols=["btb_tab",
+                    "btb_surname", "btb_names"], where=[("btb_cono", "=",
+                    self.opts["conum"]), ("btb_tab", "=", skp[3])],
+                    limit=1)
+                nam = skp[1].strip()
+                if skp[2]:
+                    nam = "%s, %s" % (nam, skp[2].split()[0])
+                a = CCD(nam, "NA", 30)
+                b = CCD(skp[4], "UA", 2)
+                if opp:
+                    nam = opp[1].strip()
+                    if opp[2]:
+                        nam = "%s, %s" % (nam, opp[2].split()[0])
+                else:
+                    nam = "Unknown"
+                c = CCD(nam, "NA", 30)
+                self.printLine(a.disp, " %s " % b.disp, c.disp, h)
+                self.pglin += 1
+        pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
+            self.__class__.__name__, "report", ext="pdf")
+        if self.game in (1, 21, 31, 41, 51, 61, 71, 81, 91):
+            desc = "%sst" % self.game
+        elif self.game in (2, 22, 32, 42, 52, 62, 72, 82, 92):
+            desc = "2nd"
+        elif self.game in (3, 23, 33, 43, 53, 63, 73, 83, 93):
+            desc = "3rd"
+        else:
+            desc = "%sth" % self.game
+        head = "%s Draw for the %s game" % (self.cdes, desc)
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.pr.repprt,
+                repeml=self.pr.repeml)
+        self.pr.closeProcess()
+
+    def pageHeading(self):
+        self.fpdf.add_page()
+        head = "%s - %s" % (self.opts["conam"], self.cdes)
+        self.fpdf.drawText(head, font=["courier", "B", 18], align="C")
+        self.pglin = 1
+
+    def groupHeading(self, group):
+        self.fpdf.drawText(font=["courier", "B", 18])
+        head = "Draw for Game: %s" % self.game
+        if group:
+            head += "  Group: %s" % chr(64 + group)
+        head += "  Date: %s" % self.datd
+        self.fpdf.drawText(head, font=["courier", "B", 18], align="C")
+        self.fpdf.drawText()
+        self.fpdf.setFont(style="B")
+        self.printLine("%-30s" % "Name", " RK ", "%-30s" % "Opposition",
+            fill=1)
+        self.fpdf.setFont()
+        self.pglin += 4
+
+    def printLine(self, a, b, c, h=0, fill=0):
+        x = 10
+        w = self.fpdf.get_string_width("X" * len(a)) + 1
+        self.fpdf.drawText(a, x=x, h=h, w=w, border="TLB", fill=fill, ln=0)
+        x += w + 1
+        w = self.fpdf.get_string_width("X" * len(b)) + 1
+        self.fpdf.drawText(b, x=x, h=h, w=w, border="TLB", fill=fill, ln=0)
+        x += w + 1
+        w = self.fpdf.get_string_width("X" * len(c)) + 1
+        self.fpdf.drawText(c, x=x, h=h, w=w, border="TLRB", fill=fill)
+
+    def printCards(self):
+        recs = []
+        bwlpts = self.sql.getRec("bwlpts", where=[("bcp_cono",
+            "=", self.opts["conum"]), ("bcp_code", "=", self.ctyp),
+            ("bcp_ptyp", "=", self.gtyp)], limit=1)
+        skins = bwlpts[self.sql.bwlpts_col.index("bcp_skins")]
+        sends = bwlpts[self.sql.bwlpts_col.index("bcp_sends")]
+        recs = self.sql.getRec("bwlgme", cols=["bcg_scod",
+            "bcg_ocod", "bcg_rink"], where=[("bcg_cono", "=",
+            self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+            ("bcg_game", "=", self.game)], order="bcg_rink")
+        chk = []
+        skips = []
+        for rec in recs:
+            if rec[0] in chk:
+                continue
+            skp = self.sql.getRec("bwltab", cols=["btb_tab",
+                "btb_surname", "btb_names"], where=[("btb_cono", "=",
+                self.opts["conum"]), ("btb_tab", "=", rec[0])], limit=1)
+            opp = self.sql.getRec("bwltab", cols=["btb_tab",
+                "btb_surname", "btb_names"], where=[("btb_cono", "=",
+                self.opts["conum"]), ("btb_tab", "=", rec[1])], limit=1)
+            grn = rec[2]
+            skips.append((grn, skp, opp))
+            chk.extend([rec[0], rec[1]])
+        PrintCards(self.opts["mf"], self.opts["conum"], self.cdes,
+            self.game, self.datd, skips, self.ends, skins, sends)
+
+    def printExit(self):
+        self.pr.closeProcess()
         self.opts["mf"].closeLoop()
 
     def doQuit(self):
diff --git a/bwl/bc2070.py b/bwl/bc2070.py
index 1f284c6..91b4181 100644
--- a/bwl/bc2070.py
+++ b/bwl/bc2070.py
@@ -4,11 +4,17 @@ SYNOPSIS
 
     This file is part of Tartan Systems (TARTAN).
 
+    Score variables:
+
+    totpts = total points excluding bonus
+    maxpts = total plus bonus point
+    mpts   = total points +- bonus point depending on scores
+
 AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -25,8 +31,7 @@ COPYING
 """
 
 from TartanClasses import ASD, TartanDialog, Sql
-from tartanFunctions import askChoice, askQuestion, callModule, copyList
-from tartanFunctions import showError
+from tartanFunctions import askChoice, askQuestion, copyList, showError
 
 class bc2070(object):
     def __init__(self, **opts):
@@ -303,10 +308,10 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
 
     def doSkpCod(self, frt, pag, r, c, p, i, w):
         chk = self.sql.getRec(tables=["bwlgme", "bwltab"], cols=["btb_surname",
-            "btb_names", "bcg_ocod", "bcg_sfor", "bcg_sagt",
-            "bcg_points"], where=[("bcg_cono", "=", self.opts["conum"]),
-            ("bcg_ccod", "=", self.ccod), ("bcg_scod", "=", w), ("bcg_game",
-            "=", self.gcod), ("btb_tab=bcg_scod",)], limit=1)
+            "btb_names", "bcg_ocod", "bcg_sfor", "bcg_sagt", "bcg_points"],
+            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
+            self.ccod), ("bcg_scod", "=", w), ("bcg_game", "=", self.gcod),
+            ("btb_tab=bcg_scod",)], limit=1)
         if not chk:
             return "Invalid Skip Code"
         if chk[3] or chk[4] or chk[5]:
@@ -324,7 +329,7 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
             self.reenter = False
         self.skp = w
         self.opp = chk[2]
-        if self.opp > 900000:
+        if self.skp > 900000 or self.opp > 900000:
             return "This Skip Had a Bye"
         if chk[1]:
             name = "%s, %s" % tuple(chk[:2])
@@ -407,12 +412,12 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
         if w and w % 1 not in (0.0, 0.5):
             return "Invalid Decimal in Points"
         if w > self.maxpts:
-            return "Invalid Points, Exceed Maximum"
+            return "Points Exceed Maximum (%s)" % self.maxpts
         if i == 3:
             self.p_for = w
             self.df.loadEntry(frt, pag, p + 1, data=self.opp)
-            chk = self.sql.getRec("bwltab", cols=["btb_surname",
-                "btb_names"], where=[("btb_cono", "=", self.opts["conum"]),
+            chk = self.sql.getRec("bwltab", cols=["btb_surname", "btb_names"],
+                where=[("btb_cono", "=", self.opts["conum"]),
                 ("btb_tab", "=", self.opp)], limit=1)
             if chk[1]:
                 name = "%s, %s" % tuple(chk[:2])
@@ -432,8 +437,16 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
         if self.ponly == "Y":
             self.s_agt = self.p_agt
         tot = float(ASD(self.p_for) + ASD(self.p_agt))
-        if tot != self.mpts:
-            return "Invalid Total Points (%s s/b %s)" % (tot, self.mpts)
+        if tot == self.mpts:
+            return
+        if tot > self.mpts:
+            return "Points Exceed Maximum (%s)" % self.mpts
+        elif tot < self.mpts:
+            ok = askQuestion(self.opts["mf"].body, "Error",
+                "Invalid Total Points (%s s/b %s)\n\n"\
+                "Must This Score be Accepted?" % (tot, self.mpts))
+            if ok == "no":
+                return "rf"
 
     def doEnd(self):
         if self.df.frt == "T":
@@ -534,6 +547,7 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
 
     def doExit(self):
         if self.df.frt == "C" and self.df.col != 1:
+            msc = []
             chk = self.sql.getRec("bwlgme", where=[("bcg_cono", "=",
                 self.opts["conum"]), ("bcg_ccod", "=", self.ccod), ("bcg_game",
                 "=", self.gcod), ("bcg_aflag", "in", ("", "D"))])
@@ -553,10 +567,14 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
                     fors = c[self.sql.bwlgme_col.index("bcg_sfor")]
                     agts = c[self.sql.bwlgme_col.index("bcg_sagt")]
                 if not fors and not agts:
-                    self.df.focusField(self.df.frt, self.df.pag, self.df.col,
-                        err="Missing Score Card for Skips %s and %s" % (scod,
-                        ocod))
-                    return
+                    msc.append(c[self.sql.bwlgme_col.index("bcg_rink")])
+            if msc:
+                txt = ""
+                msc = sorted(set(msc))
+                txt = ", ".join(msc)
+                showError(self.opts["mf"].body, "Error", "The Following "\
+                    "Rinks Still Need to be Captured.\n\n%s" % txt)
+                return
             if self.cfmat in ("D", "K") and self.gcod != self.games:
                 # Delete Next Round's Records
                 whr = [
@@ -611,10 +629,6 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
                     if len(recs) == 1:
                         break
                 self.opts["mf"].dbm.commitDbase()
-            if self.cfmat in ("D", "K"):
-                callModule(self.opts["mf"], self.df, "bc2050",
-                    coy=[self.opts["conum"], self.opts["conam"]],
-                    args=self.ccod)
         self.df.closeProcess()
         self.opts["mf"].closeLoop()
 
diff --git a/bwl/bc2080.py b/bwl/bc2080.py
index 533c464..5ced114 100644
--- a/bwl/bc2080.py
+++ b/bwl/bc2080.py
@@ -20,7 +20,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3010.py b/bwl/bc3010.py
index b3a77ec..a41b30c 100644
--- a/bwl/bc3010.py
+++ b/bwl/bc3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -25,7 +25,7 @@ COPYING
 """
 
 import time
-from TartanClasses import CCD, PrintCards, PrintDraw, Sql, TartanDialog
+from TartanClasses import CCD, PrintCards, PrintTabDraw, Sql, TartanDialog
 
 class bc3010(object):
     def __init__(self, **opts):
@@ -144,7 +144,7 @@ class bc3010(object):
     def doEnd(self):
         self.df.closeProcess()
         if self.cards != "O":
-            PrintDraw(self.opts["mf"], self.opts["conum"], self.date,
+            PrintTabDraw(self.opts["mf"], self.opts["conum"], self.date,
                 self.time, cdes=self.cdes, takings=self.takings,
                 listing=self.listing, board=self.board, empty=self.empty,
                 repprt=self.df.repprt, name=self.__class__.__name__)
diff --git a/bwl/bc3020.py b/bwl/bc3020.py
index 5409662..529bb25 100644
--- a/bwl/bc3020.py
+++ b/bwl/bc3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3030.py b/bwl/bc3030.py
index 97ee706..abf33ec 100644
--- a/bwl/bc3030.py
+++ b/bwl/bc3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3040.py b/bwl/bc3040.py
index 2a3f39c..7ddc6b9 100644
--- a/bwl/bc3040.py
+++ b/bwl/bc3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3050.py b/bwl/bc3050.py
index e5ab0cb..d9c68f6 100644
--- a/bwl/bc3050.py
+++ b/bwl/bc3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3060.py b/bwl/bc3060.py
index 771623d..dd2d676 100644
--- a/bwl/bc3060.py
+++ b/bwl/bc3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3070.py b/bwl/bc3070.py
index 091bf3a..3906e62 100644
--- a/bwl/bc3070.py
+++ b/bwl/bc3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3080.py b/bwl/bc3080.py
index bb85c4c..7f30b32 100644
--- a/bwl/bc3080.py
+++ b/bwl/bc3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc3090.py b/bwl/bc3090.py
index 8cf0d79..1e9037c 100644
--- a/bwl/bc3090.py
+++ b/bwl/bc3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -103,8 +103,8 @@ class bc3090(object):
                 group="bcg_group")
             self.game = 0
             for gme in games:
-                if gme[0] > self.games:
-                    self.games = gme[0]
+                if gme[0] > self.game:
+                    self.game = gme[0]
             self.game -= 1
         else:
             games = self.sql.getRec("bwlgme", cols=["max(bcg_game)"],
@@ -121,13 +121,14 @@ class bc3090(object):
     def doEnd(self):
         if "args" not in self.opts:
             self.df.closeProcess()
-        lst = self.sql.getRec("bwlgme", cols=["bcg_game", "sum(bcg_points)"],
-            where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
-            self.ccod)], group="bcg_game", order="bcg_game")
-        lgame = 0
-        for l in lst:
-            if l[1]:
-                lgame = l[0]
+        lgame = self.sql.getRec("bwlgme", cols=["max(bcg_game)"],
+            where=[("bcg_cono", "=", self.opts["conum"]),
+            ("bcg_ccod", "=", self.ccod), ("bcg_rink", "<>", "")],
+            limit=1)[0]
+        #lgame = 0
+        #for l in lst:
+        #    if l[1]:
+        #        lgame = l[0]
         col = ["bce_scod", "btb_surname", "btb_names"]
         if lgame <= self.grgame:
             col.extend([
@@ -149,10 +150,10 @@ class bc3090(object):
             ("bcg_cono=bce_cono",),
             ("bcg_ccod=bce_ccod",),
             ("bcg_scod=bce_scod",)]
-        grp = "bce_scod, btb_surname, btb_names, bcg_group"
-        odr = "bcg_group, pts desc, agg desc, sagt asc, btb_surname"
+        gby = "bce_scod, btb_surname, btb_names, bcg_group"
+        oby = "bcg_group, pts desc, agg desc, sagt asc, btb_surname"
         skips = self.sql.getRec(tables=["bwlent", "bwltab", "bwlgme"],
-            cols=col, where=whr, group=grp, order=odr)
+            cols=col, where=whr, group=gby, order=oby)
         rinks = self.sql.getRec("bwlgme", cols=["bcg_rink"],
             where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
             "=", self.ccod)], group="bcg_rink", order="bcg_rink")
@@ -175,11 +176,15 @@ class bc3090(object):
             dup = ["-", "-"]
             games = self.sql.getRec("bwlgme", where=[("bcg_cono", "=",
                 self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
-                ("bcg_scod", "=", skip[0])], order="bcg_group, bcg_game")
+                ("bcg_scod", "=", skip[0]), ("bcg_game", "<=", lgame)],
+                order="bcg_group, bcg_game")
             for game in games:
                 gme = game[self.sql.bwlgme_col.index("bcg_game")]
                 grp = game[self.sql.bwlgme_col.index("bcg_group")]
                 opp = game[self.sql.bwlgme_col.index("bcg_ocod")]
+                sfo = game[self.sql.bwlgme_col.index("bcg_sfor")]
+                sag = game[self.sql.bwlgme_col.index("bcg_sagt")]
+                pts = game[self.sql.bwlgme_col.index("bcg_points")]
                 if opp > 900000:
                     opp = 0
                     rnk = ""
@@ -189,7 +194,7 @@ class bc3090(object):
                         pass
                     elif rnk and rnk in endrk:
                         eds += 1
-                dat.extend([opp, rnk])
+                dat.extend([opp, rnk, sfo, sag, pts])
                 if opp:
                     if self.excfin == "Y" and gme == self.games:
                         pass
@@ -205,8 +210,6 @@ class bc3090(object):
             dup.append("%s" % eds)
             if grp:
                 dat.insert(2, chr(64 + grp))
-            else:
-                dat.insert(2, "")
             dat.append("%1s%1s%1s" % tuple(dup))
             data.append(dat)
         head = [
@@ -215,15 +218,19 @@ class bc3090(object):
         cols = [
             ["a", "UI",  6, "Skp",  "y"],
             ["b", "NA", 29, "Name", "y"]]
-        if self.cfmat == "R":
-            cols.append(["c", "UA",  1, "S",    "y"])
-        else:
-            cols.append(["c", "UA",  1, "G",    "y"])
-        for x in range(self.game):
+        if grp:
+            if self.cfmat == "R":
+                cols.append(["c", "UA",  1, "S",    "y"])
+            else:
+                cols.append(["c", "UA",  1, "G",    "y"])
+        for x in range(lgame):
             cols.extend([
                 ["d%s" % x, "UI", 6, "Opp", "y"],
-                ["e%s" % x, "UA", 2, "Rk",  "y"]])
-        cols.append(["f", "UA",  3, "ORE",  "y"])
+                ["e%s" % x, "UA", 2, "Rk",  "y"],
+                ["f%s" % x, "UI", 2.0, "S+", "y"],
+                ["g%s" % x, "UI", 2.0, "S-", "y"],
+                ["h%s" % x, "UD", 4.1, "Pts", "y"]])
+        cols.append(["i", "UA",  3, "ORE",  "y"])
         if "args" in self.opts:
             repprt = self.opts["args"][2]
             repeml = self.opts["args"][3]
diff --git a/bwl/bc3100.py b/bwl/bc3100.py
index 2d7fa55..042ea19 100644
--- a/bwl/bc3100.py
+++ b/bwl/bc3100.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -72,10 +72,12 @@ class bc3100(object):
             (("T",0,1,0),"IUI",2,"Last Game","",
                 0,"N",self.doLstGam,gme,None,("efld",)),
             (("T",0,2,0),("IRB",r1s),0,"Game Report","",
-                "N","N",self.doGamRep,None,None,None),
-            (("T",0,3,0),("IRB",r1s),0,"Session Prizes","",
+                "Y","N",self.doGamRep,None,None,None),
+            (("T",0,3,0),("IRB",r1s),0,"Match Report","",
+                "Y","N",self.doMatRep,None,None,None),
+            (("T",0,4,0),("IRB",r1s),0,"Session Prizes","",
                 "N","N",self.doSesPrz,None,None,None),
-            (("T",0,4,0),("IRB",r1s),0,"Session Prizes by Group","",
+            (("T",0,5,0),("IRB",r1s),0,"Session Prizes by Group","",
                 "N","N",self.doSesGrp,None,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
@@ -106,10 +108,8 @@ class bc3100(object):
                     self.games = gme[0]
             self.games -= 1
         elif self.cfmat in ("D", "K"):
-            self.games = self.sql.getRec("bwlgme", cols=["count(*)"],
-                where=[("bcg_cono", "=", self.opts["conum"]),
-                ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", 1)],
-                limit=1)[0] - 1
+            self.df.loadEntry(frt, pag, p+1, data=self.cdes)
+            return "sk6"
         else:
             self.games = chk[self.sql.bwltyp_col.index("bct_games")]
         self.groups = chk[self.sql.bwltyp_col.index("bct_groups")]
@@ -125,7 +125,7 @@ class bc3100(object):
                 break
             self.lgame = g[0]
         if not self.lgame:
-            return "Knockout or No Completed Games"
+            return "No Completed Games"
         self.df.loadEntry(frt, pag, p+1, data=self.cdes)
         self.df.loadEntry(frt, pag, p+2, data=self.lgame)
 
@@ -188,11 +188,13 @@ class bc3100(object):
             self.gamrep = "N"
             self.df.loadEntry(frt, pag, p+1, data=self.gamrep)
             if self.pgame < self.games:
+                self.matrep = "Y"
                 self.sesp = "N"
                 self.sesg = "N"
-                self.df.loadEntry(frt, pag, p+1, data=self.sesp)
-                self.df.loadEntry(frt, pag, p+2, data=self.sesg)
-                return "sk3"
+                self.df.loadEntry(frt, pag, p+2, data=self.matrep)
+                self.df.loadEntry(frt, pag, p+3, data=self.sesp)
+                self.df.loadEntry(frt, pag, p+4, data=self.sesg)
+                return "sk4"
             return "sk1"
         if self.cfmat in ("D", "K", "R") or self.pgame < self.lgame:
             self.df.topf[0][3][5] = "N"
@@ -201,7 +203,13 @@ class bc3100(object):
 
     def doGamRep(self, frt, pag, r, c, p, i, w):
         self.gamrep = w
-        if self.cfmat in ("D", "K", "R") or self.pgame < self.lgame:
+
+    def doMatRep(self, frt, pag, r, c, p, i, w):
+        if w == "N" and self.gamrep == "N":
+            return "ff4|No Game or Match Report Selected"
+        self.matrep = w
+        if self.matrep == "N" or self.cfmat in ("D", "K", "R") or \
+                self.pgame < self.games:
             self.sesp = "N"
             self.sesg = "N"
             self.df.loadEntry(frt, pag, p+1, data=self.sesp)
@@ -220,6 +228,243 @@ class bc3100(object):
 
     def doEnd(self):
         self.df.closeProcess()
+        if self.cfmat in ("D", "K"):
+            self.printKnockout()
+        else:
+            self.printCompetition()
+
+    def printKnockout(self):
+        pwrs = 2
+        self.rnds = 1
+        self.totskp = self.sql.getRec("bwlent", cols=["count(*)"],
+            where=[("bce_cono", "=", self.opts["conum"]),
+            ("bce_ccod", "=", self.ccod)], limit=1)[0]
+        while pwrs < self.totskp:
+            self.rnds += 1
+            pwrs = pwrs * 2
+        head = (self.rnds * 19) + 19
+        if head > 120:
+            head = 170
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=head)
+        self.pageHeading("K")
+        self.two = 0
+        for grp in range(1, 3):
+            skips = self.sql.getRec("bwlgme", cols=["bcg_scod",
+                "bcg_ocod", "bcg_seed", "bcg_pair"], where=[("bcg_cono",
+                "=", self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                ("bcg_game", "=", 1), ("bcg_group", "=", grp)],
+                order="bcg_pair, bcg_scod")
+            self.printBracket(grp, skips)
+        pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
+            self.__class__.__name__, self.opts["conum"], ext="pdf")
+        head = "%s Draw" % self.cdes
+        if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                header=head, pdfnam=pdfnam, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
+        self.opts["mf"].closeLoop()
+
+    def printBracket(self, grp, skips):
+        siz, cwth, chgt = self.setBracketFont()
+        ohgt = self.fpdf.font[2]
+        self.fpdf.font[2] = chgt
+        if grp == 2 and self.rnds == 2:
+            last = "down"
+        else:
+            last = ""
+        rnds = []
+        nm = 18
+        l1 = 0
+        l2 = 1
+        rd = 1
+        n1 = nm + l1
+        n2 = nm + l1 + l2
+        nx = (nm * 2) + l1 + l2
+
+        def drawField(txt, x, y, w):
+            nsiz = siz
+            chek = w * .95
+            nwth = self.fpdf.get_string_width(txt)
+            while nwth >= chek:
+                nsiz -= .1
+                self.fpdf.setFont(style="B", size=nsiz)
+                nwth = self.fpdf.get_string_width(txt)
+            self.fpdf.drawText(txt, x=x, y=y, w=w, font=("B", nsiz),
+                border="TLRB")
+
+        for num, skip in enumerate(skips):
+            x = self.fpdf.get_x()
+            y = self.fpdf.get_y()
+            if skip[1] > 900000:
+                self.fpdf.drawText("", w=(cwth * nm))
+            else:
+                drawField(self.getSkip(skip[0], skip[2]), x, y, w=(cwth * nm))
+                self.drawLink(cwth, l1, l2, x + (cwth * nm), y + int(chgt / 2),
+                    y + (chgt * 1.5))
+            x = self.fpdf.get_x()
+            y = self.fpdf.get_y()
+            if skip[1] > 900000:
+                drawField(self.getSkip(skip[0], skip[2]),
+                    x + (cwth * n2), y, w=(cwth * nm))
+            else:
+                drawField(self.getWinner(rd, grp, skip), x + (cwth * n2),
+                    y, w=(cwth * nm))
+            if not last or last == "up":
+                self.drawLink(cwth, l1, l2, x + (cwth * nx), y + int(chgt / 2),
+                    y + (chgt * 2.5))
+                rnds.append([x+(cwth * nx), y + (chgt * 2)])
+                last = "down"
+            else:
+                self.drawLink(cwth, l1, l2, x + (cwth * nx), y + int(chgt / 2),
+                    y - (chgt * 1.5))
+                if self.rnds == 2:
+                    rnds.append([x + (cwth * nx), y + (chgt * 2)])
+                last = "up"
+            x = self.fpdf.get_x()
+            y = self.fpdf.get_y()
+            if skip[1] > 900000:
+                self.fpdf.drawText("", w=(cwth * nm))
+            else:
+                drawField(self.getSkip(skip[1], 0), x, y, w=(cwth * nm))
+                self.fpdf.line(x + (cwth * nm), y + int(chgt / 2),
+                    x + (cwth * n1), y + int(chgt / 2))
+                self.fpdf.line(x + (cwth * n1), y + int(chgt / 2),
+                    x + (cwth * n1), y - int(chgt / 2))
+            self.fpdf.drawText("")
+            lasty = self.fpdf.get_y()
+        inc = 4
+        for aa in range(self.rnds - 3):
+            rd += 1
+            bb = []
+            for rnd in range(0, len(rnds), 2):
+                x = rnds[rnd][0]
+                y = rnds[rnd][1]
+                drawField(self.getWinner(rd, grp, 0, rnd + 1),
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm))
+                inc1 = inc + .5
+                self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
+                    y + (chgt * inc1))
+                bb.append([x + (cwth * n2), y + (chgt * (4 * (aa + 1)))])
+                x = rnds[rnd + 1][0]
+                y = rnds[rnd + 1][1]
+                drawField(self.getWinner(rd, grp, 0, rnd + 2),
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm))
+                inc1 -= 1
+                self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
+                    y-(chgt * inc1))
+            inc = inc * 2
+            rnds = bb
+        x = rnds[0][0]
+        y = rnds[0][1]
+        if self.rnds == 2:
+            rd += 1
+            if grp == 1:
+                drawField(self.getWinner(rd, 2, 0, 1),
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm))
+        else:
+            rd += 1
+            if self.rnds > 5:
+                y += (chgt * 4)
+            drawField(self.getWinner(rd, grp, 0, 1),
+                x + (cwth * (l1 + l2)), y, w=(cwth * nm))
+            if grp == 1:
+                inc += .5
+                self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
+                    y + (chgt * inc))
+            else:
+                rd += 1
+                x1 = x + (cwth * (l1 + l2 + nm))
+                y1 = y - (chgt * inc)
+                drawField(self.getWinner(rd, grp, 0, 1),
+                    x1 + (cwth * (l1 + l2)), y1, w=(cwth * nm))
+                inc = 0 - inc + .5
+                self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
+                    y + (chgt * inc))
+        if grp == 1 and self.totskp > 32:
+            self.fpdf.add_page()
+            self.fpdf.drawText()
+            self.fpdf.drawText()
+        else:
+            self.fpdf.set_y(lasty)
+        self.fpdf.font[2] = ohgt
+
+    def setBracketFont(self):
+        if self.rnds == 2:
+            siz = 14.1
+            chgt = 12
+        elif self.rnds == 3:
+            siz = 10.6
+            chgt = 12
+        elif self.rnds == 4:
+            siz = 8.4
+            chgt = 6
+        elif self.rnds == 5:
+            siz = 7
+            chgt = 3
+        else:
+            siz = 10
+            chgt = 2.6
+        self.fpdf.setFont(style="B", size=siz)
+        cwth = self.fpdf.get_string_width("X")
+        return siz, cwth, chgt
+
+    def getWinner(self, rnd, grp, skip, num=0):
+        if skip:
+            whr = [
+                ("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod),
+                ("bcg_game", "=", rnd),
+                ("bcg_group", "=", grp),
+                ("bcg_scod", "=", skip[0])]
+            wins = self.sql.getRec("bwlgme", cols=["bcg_sfor",
+                "bcg_sagt"], where=whr, limit=1)
+            if not wins[0] and not wins[1]:
+                return ""
+            elif wins[0] > wins[1]:
+                return self.getSkip(skip[0], skip[2])
+            else:
+                return self.getSkip(skip[1], skip[2])
+        col = [
+            "bcg_scod",
+            "bcg_ocod",
+            "bcg_sfor",
+            "bcg_sagt",
+            "bcg_seed"]
+        whr = [
+            ("bcg_cono", "=", self.opts["conum"]),
+            ("bcg_ccod", "=", self.ccod),
+            ("bcg_game", "=", rnd),
+            ("bcg_group", "=", grp),
+            ("bcg_pair", "=", num)]
+        skip = self.sql.getRec("bwlgme", cols=col, where=whr, limit=1)
+        if not skip:
+            return ""
+        if not skip or (not skip[2] and not skip[3]):
+            return ""
+        elif skip[2] > skip[3]:
+            return self.getSkip(skip[0], skip[4])
+        else:
+            return self.getSkip(skip[1], skip[4])
+
+    def getSkip(self, skip, seed):
+        if skip > 900000:
+            return "Bye"
+        skp = self.sql.getRec("bwltab", cols=["btb_surname",
+            "btb_names"], where=[("btb_cono", "=", self.opts["conum"]),
+            ("btb_tab", "=", skip)], limit=1)
+        name = skp[0].strip()
+        if skp[1]:
+            name = "%s, %s" % (name, skp[1][0])
+        if seed:
+            name = "%s (%s)" % (name, seed)
+        return name
+
+    def drawLink(self, cwth, l1, l2, x, y, inc):
+        self.fpdf.line(x, y, x + (cwth * l1), y)
+        self.fpdf.line(x + (cwth * l1), y, x + (cwth * l1), inc)
+        self.fpdf.line(x + (cwth * l1), inc, x + (cwth * (l1 + l2)), inc)
+
+    def printCompetition(self):
         chk = self.sql.getRec("bwlgme", cols=["bcg_group", "bcg_scod"],
             where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
             self.ccod), ("bcg_game", "=", self.pgame)], order="bcg_group")
@@ -229,6 +474,8 @@ class bc3100(object):
             groups = self.groups
         self.grps = {}
         for rec in chk:
+            if self.cfmat in ("T", "X") and self.pgame <= self.grgame:
+                rec[0] = 0
             if rec[0] not in self.grps:
                 self.grps[rec[0]] = [[rec[1]], [], []]
             else:
@@ -243,7 +490,8 @@ class bc3100(object):
                 self.doReport("G", g)
                 if g == 0 and len(chk) > 20:
                     self.pageHeading()
-            self.doReport("M", g)
+            if self.matrep == "Y":
+                self.doReport("M", g)
         if self.pgame == self.games:
             # Enter Prizes
             for key in self.keys:
@@ -287,7 +535,7 @@ class bc3100(object):
                         nam = "%s, %s" % (recs[x][1], recs[x][2].split()[0])
                     else:
                         nam = recs[x][1]
-                    self.wins[gcod].append(nam)
+                    self.wins[gcod].append([nam] + recs[x][3:])
                 if self.cfmat == "R" and groups == "Y":
                     self.swin.append(self.grps[gcod][0][0])
             if self.sesp == "Y":
@@ -317,9 +565,9 @@ class bc3100(object):
                     self.df.repeml[2].append(rec[0])
         head = "%s - Results after game %s" % (self.cdes, self.pgame)
         if self.fpdf.saveFile(pdfnam, self.opts["mf"].window):
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
-                header=head, repprt=self.df.repprt, fromad=self.fromad,
-                repeml=self.df.repeml)
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, header=head, repprt=self.df.repprt,
+                fromad=self.fromad, repeml=self.df.repeml)
         if self.pgame == self.lgame and self.cfmat == "R" and \
                 groups == "Y" and not self.poff:
             ok = askQuestion(self.opts["mf"].body, "Play-Offs",
@@ -439,10 +687,10 @@ class bc3100(object):
         for gme in range(1, self.games + 1):
             col = [
                 "bcg_scod", "btb_surname", "btb_names",
-                "sum(bcg_sfor) as sfor",
-                "sum(bcg_sagt) as sagt",
-                "sum(bcg_sfor - bcg_sagt) as agg",
-                "sum(bcg_points) as pts"]
+                "bcg_sfor as sfor",
+                "bcg_sagt as sagt",
+                "bcg_sfor - bcg_sagt as agg",
+                "bcg_points as pts"]
             whr = copyList(self.where)
             whr.append(("bcg_game", "=", gme))
             grp = "bcg_scod, btb_surname, btb_names"
@@ -459,8 +707,6 @@ class bc3100(object):
                     gpc = 0
                 else:
                     gpc = rec[7]
-                if gpc == done:
-                    continue
                 ign = False
                 if self.ponly == "Y" and not rec[6]:
                     break
@@ -471,23 +717,29 @@ class bc3100(object):
                         ign = True
                         break
                 if not ign:
+                    if gpc == done and rec[3:] != sess[gme][gpc][0][1:]:
+                        continue
                     self.allp.append(rec[0])
                     if gme not in sess:
                         sess[gme] = {}
+                    if gpc not in sess[gme]:
+                        sess[gme][gpc] = []
                     if rec[2]:
                         nam = "%s, %s" % (rec[1], rec[2].split()[0])
                     else:
                         nam = rec[1]
-                    sess[gme][gpc] = nam
+                    sess[gme][gpc].append([nam] + rec[3:])
                     done = gpc
         mess = "Session Winners"
         self.fpdf.setFont(style="B", size=14)
         self.fpdf.drawText(mess, align="C", border="TLRB", fill=1)
-        self.fpdf.drawText("Ses", w=12, border="TLRB", fill=1, ln=0)
         if self.sesg == "Y":
-            self.fpdf.drawText("Grp", w=12, border="TLRB", fill=1, ln=0)
-        self.fpdf.drawText("Name", border="TLRB", fill=1)
-        self.fpdf.setFont()
+            self.printLine("Ses", "Grp", "%-27s" % "Name", "   Pts ",
+                "  =Dif ", "  -Agt ", "  +For ", fill=1, last=False)
+        else:
+            self.printLine("Ses", "%-30s" % "Name", "   Pts ",
+                "  =Dif ", "  -Agt ", "  +For ", fill=1, last=False)
+        self.fpdf.setFont(size=14)
         for gme in range(1, self.games + 1):
             stxt = str("%3s" % gme)
             if gme not in sess:
@@ -500,11 +752,23 @@ class bc3100(object):
             grps = list(sess[gme].keys())
             grps.sort()
             for grp in grps:
-                gtxt = "%3s" % chr(64 + grp)
-                self.fpdf.drawText(stxt, w=12, border="TLRB", ln=0)
-                if self.sesg == "Y":
-                    self.fpdf.drawText(gtxt, w=12, border="TLRB", ln=0)
-                self.fpdf.drawText(sess[gme][grp], border="TLRB")
+                if grp:
+                    gtxt = " %s " % chr(64 + grp)
+                else:
+                    gtxt = "   "
+                for per in sess[gme][grp]:
+                    if self.sesg == "Y":
+                        a = CCD(per[0], "NA", 27).disp
+                    else:
+                        a = CCD(per[0], "NA", 30).disp
+                    b = CCD(per[4], "SD", 7.1).disp
+                    c = CCD(per[3], "SD", 7.1).disp
+                    d = CCD(per[2], "SD", 7.1).disp
+                    e = CCD(per[1], "SD", 7.1).disp
+                    if self.sesg == "Y":
+                        self.printLine(stxt, gtxt, a, b, c, d, e, last=False)
+                    else:
+                        self.printLine(stxt, a, b, c, d, e, last=False)
         self.fpdf.drawText()
 
     def doMatchWin(self):
@@ -519,14 +783,17 @@ class bc3100(object):
                     mess = "Match Winners"
                 self.fpdf.setFont(style="B", size=14)
                 self.fpdf.drawText(mess, align="C", border="TLRB", fill=1)
-                self.fpdf.drawText("Pos", w=12, border="TLRB", fill=1,
-                    ln=0)
-                self.fpdf.drawText("Name", border="TLRB", fill=1)
-                self.fpdf.setFont()
+                self.printLine("Pos", "%-30s" % "Name", "   Pts ", "  =Dif ",
+                    "  -Agt ", "  +For ", fill=1, last=False)
+                self.fpdf.setFont(size=14)
                 for n, s in enumerate(self.wins[gcod]):
-                    ptxt = "%3s" % (n + 1)
-                    self.fpdf.drawText(ptxt, w=12, border="TLRB", ln=0)
-                    self.fpdf.drawText(s, border="TLRB")
+                    a = CCD(n+1, "UI", 3).disp
+                    b = CCD(s[0], "NA", 30).disp
+                    c = CCD(s[4], "SD", 7.1).disp
+                    d = CCD(s[3], "SD", 7.1).disp
+                    e = CCD(s[2], "SD", 7.1).disp
+                    f = CCD(s[1], "SD", 7.1).disp
+                    self.printLine(a, b, c, d, e, f, last=False)
             if not num % 2:
                 ly = self.fpdf.get_y()
             if num % 2 and self.fpdf.get_y() > ly:
@@ -555,7 +822,7 @@ class bc3100(object):
                         h=10, align="C")
                     self.fpdf.drawText()
                 self.fpdf.drawText("%s Prize R%s - %s" % (place[num],
-                    self.grps[gcod][2][num], skp), h=10, align="C")
+                    self.grps[gcod][2][num], skp[0]), h=10, align="C")
                 self.fpdf.setFont(style="B", size=16)
                 for pos in ppos:
                     self.fpdf.drawText()
@@ -590,6 +857,39 @@ class bc3100(object):
                 align="C")
             self.fpdf.drawText()
             self.pglin = 4
+        elif htyp == "K":
+            dates = self.sql.getRec("bwlrnd", cols=["bcr_date", "bcr_time"],
+                where=[("bcr_cono", "=", self.opts["conum"]), ("bcr_ccod",
+                "=", self.ccod)], order="bcr_rcod")
+            if dates[0][1]:
+                self.comtyp = "F"
+            else:
+                self.comtyp = "V"
+            siz, cwth, chgt = self.setBracketFont()
+            self.fpdf.drawText()
+            text = []
+            for x in range(self.rnds):
+                date = CCD(dates[x][0], "D1", 10).disp
+                time = CCD(dates[x][1], "TM", 5).disp
+                if self.comtyp == "V":
+                    text.append("Complete By\n%s" % date)
+                elif date == "9999-12-31":
+                    text.append("To Be\nAnnounced")
+                else:
+                    if time <= "12:00":
+                        txt = "%s AM" % time
+                    else:
+                        txt = "%s PM" % time
+                    text.append("%s\n%s" % (date, txt))
+            text.append("Competition\nWinner")
+            x = self.fpdf.get_x()
+            y = self.fpdf.get_y()
+            for txt in text:
+                self.fpdf.drawText(txt, x=x, y=y, w=(cwth * 18), border="TLRB",
+                    ln=0, fill=1, align="C", ctyp="M")
+                x += (cwth * 19)
+            self.fpdf.drawText()
+            self.fpdf.drawText()
         else:
             self.pglin = 1
 
@@ -612,7 +912,7 @@ class bc3100(object):
         self.fpdf.setFont()
         self.pglin += 4
 
-    def printLine(self, a, b, c, d, e, f, fill=0):
+    def printLine(self, a, b, c, d, e, f, g=None, fill=0, last=True):
         x = 10
         w = self.fpdf.get_string_width("X"*len(a)) + 1
         self.fpdf.drawText(a, x=x, w=w, border="TLB", fill=fill, ln=0)
@@ -629,8 +929,16 @@ class bc3100(object):
         w = self.fpdf.get_string_width("X"*len(e)) + 1
         self.fpdf.drawText(e, x=x, w=w, border="TLB", fill=fill, ln=0)
         x += w
-        w = self.fpdf.get_string_width("X"*len(f)) + 1
-        self.fpdf.drawText(f, x=x, w=w, border="TLRB", fill=fill)
+        if g is not None:
+            w = self.fpdf.get_string_width("X"*len(f)) + 1
+            self.fpdf.drawText(f, x=x, w=w, border="TLB", fill=fill, ln=0)
+            x += w
+            f = g
+        if last:
+            w = self.fpdf.get_string_width("X"*len(f)) + 1
+            self.fpdf.drawText(f, x=x, w=w, border="TLRB", fill=fill)
+        else:
+            self.fpdf.drawText(f, x=x, border="TLRB", fill=fill)
 
     def doPrizes(self, grp):
         self.przgrp = grp
@@ -712,19 +1020,28 @@ class bc3100(object):
     def doSecEnd(self):
         ccod = getNextCode(self.sql, "bwlcmp", "bcm_code",
             where=[("bcm_cono", "=", self.opts["conum"])], last=999)
+        tcod = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
+            self.opts["conum"]), ("bct_cfmat", "=", "K")], limit=1)
+        if not tcod:
+            tcod = getNextCode(self.sql, "bwltyp", "bct_code",
+                where=[("bct_cono", "=", self.opts["conum"])], last=999)
+            self.sql.insRec("bwltyp", data=[self.opts["conum"], tcod,
+                "Knockout", "K", 1, 0, 21, "N", 0, "N", "", 0, 0, "N", "N"])
+        else:
+            tcod = tcod[1]
         self.sql.updRec("bwlcmp", cols=["bcm_poff"], data=[ccod],
             where=[("bcm_cono", "=", self.opts["conum"]),
             ("bcm_code", "=", self.ccod)])
         cdes = self.cdes + " Play-Off"
         t = time.localtime()
         cdte = ((t[0] * 10000) + (t[1] * 100) + t[2])
-        self.sql.insRec("bwlcmp", data=[self.opts["conum"],
-            ccod, cdes, cdte, 0, ""])
+        self.sql.insRec("bwlcmp", data=[self.opts["conum"], ccod,
+            cdes, cdte, tcod, 0])
         for skp in self.swin:
             self.sql.insRec("bwlent", data=[self.opts["conum"],
                 ccod, skp, 0, "Y", ""])
         callModule(self.opts["mf"], self.df, "bc2050", coy=[self.opts["conum"],
-            self.opts["conam"]], args=ccod)
+            self.opts["conam"]], args=[ccod, 1])
 
     def doExit(self):
         self.df.closeProcess()
diff --git a/bwl/bc3110.py b/bwl/bc3110.py
index d65acf4..aad8b02 100644
--- a/bwl/bc3110.py
+++ b/bwl/bc3110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc6010.py b/bwl/bc6010.py
index 34aa59e..b744b3f 100644
--- a/bwl/bc6010.py
+++ b/bwl/bc6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc6020.py b/bwl/bc6020.py
index 7699c2d..55de987 100644
--- a/bwl/bc6020.py
+++ b/bwl/bc6020.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc6030.py b/bwl/bc6030.py
index e32e058..70b68e2 100644
--- a/bwl/bc6030.py
+++ b/bwl/bc6030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bc6040.py b/bwl/bc6040.py
index e3f2435..eb7050d 100644
--- a/bwl/bc6040.py
+++ b/bwl/bc6040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bcc110.py b/bwl/bcc110.py
index 69e1ac0..dd912bb 100644
--- a/bwl/bcc110.py
+++ b/bwl/bcc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/bwl/bcc210.py b/bwl/bcc210.py
index 48f62cf..d4bbe7d 100644
--- a/bwl/bcc210.py
+++ b/bwl/bcc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr1010.py b/crs/cr1010.py
index 29ef3d1..45577cd 100644
--- a/crs/cr1010.py
+++ b/crs/cr1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr2010.py b/crs/cr2010.py
index 0e62778..becf921 100644
--- a/crs/cr2010.py
+++ b/crs/cr2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3010.py b/crs/cr3010.py
index f8cd0e3..b6758ca 100644
--- a/crs/cr3010.py
+++ b/crs/cr3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3020.py b/crs/cr3020.py
index e38c27d..67f1ffb 100644
--- a/crs/cr3020.py
+++ b/crs/cr3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3030.py b/crs/cr3030.py
index 0aeb3c6..8f09f5b 100644
--- a/crs/cr3030.py
+++ b/crs/cr3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3040.py b/crs/cr3040.py
index 62811a5..0e83acc 100644
--- a/crs/cr3040.py
+++ b/crs/cr3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3050.py b/crs/cr3050.py
index a924670..aff9b2a 100644
--- a/crs/cr3050.py
+++ b/crs/cr3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -85,8 +85,8 @@ class cr3050(object):
         fld = (
             (("T",0,0,0),("IRB",r1s),0,"Base","",
                 var[0],"Y",self.doBase,None,None,None,None,
-                """Agedt: Produce a report based on Ageing Period
-Curdt: Produce a report based on Financial Period"""),
+                """Agedt: Produce a report based on Ageing Period, this will not necessarily balance with the control account.
+Curdt: Produce a report based on Financial Period, this will always balance with the control account."""),
             (("T",0,1,0),"Id2",7,"Cut-Off Period","",
                 int(self.sysdtw / 100),"N",self.doCutOff,None,None,None),
             (("T",0,2,0),("IRB",r2s),0,"Totals Only","",
diff --git a/crs/cr3060.py b/crs/cr3060.py
index 56c8692..8a2e15a 100644
--- a/crs/cr3060.py
+++ b/crs/cr3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3070.py b/crs/cr3070.py
index 038cf20..a3ffa23 100644
--- a/crs/cr3070.py
+++ b/crs/cr3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3080.py b/crs/cr3080.py
index 53acb74..dc21792 100644
--- a/crs/cr3080.py
+++ b/crs/cr3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3090.py b/crs/cr3090.py
index 6bc80e9..33a7f35 100644
--- a/crs/cr3090.py
+++ b/crs/cr3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3100.py b/crs/cr3100.py
index 758ad36..5f61d6f 100644
--- a/crs/cr3100.py
+++ b/crs/cr3100.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr3110.py b/crs/cr3110.py
index 960e200..712bdb1 100644
--- a/crs/cr3110.py
+++ b/crs/cr3110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr4010.py b/crs/cr4010.py
index 3dafcb9..01694a7 100644
--- a/crs/cr4010.py
+++ b/crs/cr4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr6010.py b/crs/cr6010.py
index ce4fdb0..d581e53 100644
--- a/crs/cr6010.py
+++ b/crs/cr6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr6020.py b/crs/cr6020.py
index 0ca203e..17d1e7d 100644
--- a/crs/cr6020.py
+++ b/crs/cr6020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/cr6030.py b/crs/cr6030.py
index 865b13d..f109675 100644
--- a/crs/cr6030.py
+++ b/crs/cr6030.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/crs/crc110.py b/crs/crc110.py
index ce29063..0817ee8 100644
--- a/crs/crc110.py
+++ b/crs/crc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/csh/cs1010.py b/csh/cs1010.py
index 21895ed..43011c5 100644
--- a/csh/cs1010.py
+++ b/csh/cs1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/csh/cs2010.py b/csh/cs2010.py
index 828b16a..1ebdfdb 100644
--- a/csh/cs2010.py
+++ b/csh/cs2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/csh/cs2020.py b/csh/cs2020.py
index 9669f3b..44994a1 100644
--- a/csh/cs2020.py
+++ b/csh/cs2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/csh/cs3010.py b/csh/cs3010.py
index 8d8077e..87613c7 100644
--- a/csh/cs3010.py
+++ b/csh/cs3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/csh/csc110.py b/csh/csc110.py
index 7aa21a4..c80fa67 100644
--- a/csh/csc110.py
+++ b/csh/csc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/doc/BWL.rst b/doc/BWL.rst
index 5e12910..b9ff6a1 100644
--- a/doc/BWL.rst
+++ b/doc/BWL.rst
@@ -96,7 +96,7 @@ The following *Buttons* are available:
     + **Prefer Pairs** - Whether or not to replace fours with pairs. This only applies when the team size is three.
 + **Entered** - Use this button to display all entered players.
 + **Modify** - Use this button to change the player's position/ratings for this draw only.
-+ **Draw** - Use this button to make the draw once all tabs/teams and bounce games have been entered. In the case of *Teams* if there are any tabs that have been entered and have not been allocated to teams you will be prompted to either *Generate*, *Delete* or *Exit*. If *Generate* is selected the program will try to allocate the unallocated tabs into teams.
++ **Draw** - Use this button to make the draw once all tabs/teams and bounce games have been entered. In the case of *Teams* if there are any tabs that have been entered and have not been allocated to teams they will be displayed and you will be prompted to either *Generate*, *Delete* or *Exit*. If *Generate* is selected the program will try to allocate the unallocated tabs into teams. If *Delete* is selected All Unallocated tabs will be deleted.
     + **Draw Type** - The type of draw i.e. Random or Strength v Strength.
     + **Apply Percentages** - This is only available if the basis of the draw is Combined. Select whether to apply percentages to position changes e.g. A player moving up in position would lose 10% of their rating and a player moving down in position would gain 10% of their rating.
     + **Apply History** - Whether or not to take previous draws into consideration when making the current draw.
@@ -363,7 +363,8 @@ Use this routine to print the competition format.
 
 Competition Draw (BC)
 +++++++++++++++++++++
-Use this routine to create a draw and, if relevant, print match cards as follows:
+If the first draw of a competition is a Manual Draw use `Change Draw` otherwise
+use this routine to create a draw and, if relevant, print match cards as follows:
 
 + **Tournament, Teams and Round Robin**
     + **Competition Code** - The relevant competition code. If the competition is a new competition and is a Round Robin competition you will have the facility to sectionalise it.
@@ -397,7 +398,7 @@ Use this routine to print a summary of all draws, excluding knockout, to date.
 
 Change Draw (BC)
 ++++++++++++++++
-Use this routine to change individual draws, excluding knockout, in a competition. After changing the draws you must reprint them as per `Competition Draw (BC)`_. Please note that to only reprint certain cards you must select `All Cards No`.
+Use this routine to make a manual draw or Change an existing draw, excluding knockout , round robin and team draws.
 
 + **Competition Code** - The relevant competition code.
 + **Game Number** - The relevant game number.
@@ -428,6 +429,7 @@ Use this routine to print the match results as follows:
 + **Competition Code** - The relevant competition code.
 + **Last Game** - The last game to take into account.
 + **Game Report** - Print the last game's results.
++ **Match Report** - Print the match results up to the *Last Game*.
 
 If the last game of the competition is being printed, enter the following:
     + **Session Prizes** - Whether session prizes are to be awarded.
diff --git a/doc/CRS.rst b/doc/CRS.rst
index 47b231f..76a37f5 100644
--- a/doc/CRS.rst
+++ b/doc/CRS.rst
@@ -136,6 +136,9 @@ Age Analysis (CR)
 +++++++++++++++++
 Use this routine to produce a creditor's age analysis.
 
++ **Base** - The basis to use for the report.
+    + **Agedt** - Produce a report based on Ageing Period, this will not necessarily balance with the control account.
+    + **Curdt** - Produce a report based on Financial Period, this will always balance with the control account.
 + **Cut-Off Period** - The financial period.
 + **Totals Only** - Select totals only or all individual accounts.
 + **First Account Number** - The first account to include on the report, if applicable.
diff --git a/doc/DRS.rst b/doc/DRS.rst
index f91685e..6809c35 100644
--- a/doc/DRS.rst
+++ b/doc/DRS.rst
@@ -230,6 +230,9 @@ Age Analysis (DR)
 +++++++++++++++++
 Use this routine to produce a debtor's age analysis.
 
++ **Base** - The basis to use for the report.
+    + **Agedt** - Produce a report based on Ageing Period, this will not necessarily balance with the control account.
+    + **Curdt** - Produce a report based on Financial Period, this will always balance with the control account.
 + **Cut-Off Period** - The financial period.
 + **Totals Only** - Select totals only or all individual accounts.
 + **Business Activity** - Enter the business activity, if applicable.
diff --git a/doc/SYS.rst b/doc/SYS.rst
index 141d08e..6effc14 100644
--- a/doc/SYS.rst
+++ b/doc/SYS.rst
@@ -3,7 +3,7 @@ Tartan Systems - Reference Manual
 =================================
 .. _GPL: http://www.gnu.org/licenses/gpl.html
 
-:Version:   6.13
+:Version:   6.14
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
diff --git a/drs/dr1010.py b/drs/dr1010.py
index 0b2938b..bce717e 100644
--- a/drs/dr1010.py
+++ b/drs/dr1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr1020.py b/drs/dr1020.py
index 87e6725..9420a5c 100644
--- a/drs/dr1020.py
+++ b/drs/dr1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -268,7 +268,7 @@ class dr1020(object):
 
     def endTop(self):
         data = [self.opts["conum"], self.num, self.desc, self.freq, self.day,
-            self.vcod, self.glac]
+            self.vcod, self.glac, 0]
         if self.new_num == "y":
             self.sql.insRec("drsrcm", data=data)
             self.df.loadEntry("C", 0, 0, data=1)
diff --git a/drs/dr2010.py b/drs/dr2010.py
index 5ab6223..1873ae6 100644
--- a/drs/dr2010.py
+++ b/drs/dr2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr2020.py b/drs/dr2020.py
index 22bf98f..1a47911 100644
--- a/drs/dr2020.py
+++ b/drs/dr2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr2030.py b/drs/dr2030.py
index 4b4345c..a9bffb2 100644
--- a/drs/dr2030.py
+++ b/drs/dr2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3010.py b/drs/dr3010.py
index b96eede..0e9cfae 100644
--- a/drs/dr3010.py
+++ b/drs/dr3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3020.py b/drs/dr3020.py
index 016eaa8..a50c9c4 100644
--- a/drs/dr3020.py
+++ b/drs/dr3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3030.py b/drs/dr3030.py
index 10b4cf2..e560f3b 100644
--- a/drs/dr3030.py
+++ b/drs/dr3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3040.py b/drs/dr3040.py
index 0be3ee9..15020bb 100644
--- a/drs/dr3040.py
+++ b/drs/dr3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3050.py b/drs/dr3050.py
index 0152725..d78ced6 100644
--- a/drs/dr3050.py
+++ b/drs/dr3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -89,8 +89,8 @@ class dr3050(object):
         fld = (
             (("T",0,0,0),("IRB",r1s),0,"Base","",
                 var[0],"Y",self.doBase,None,None,None,None,
-                """Agedt: Produce a report based on Ageing Period
-Curdt: Produce a report based on Financial Period"""),
+                """Agedt: Produce a report based on Ageing Period, this will not necessarily balance with the control account.
+Curdt: Produce a report based on Financial Period, this will always balance with the control account."""),
             (("T",0,1,0),"ID2",7,"Cut-Off Period","",
                 int(self.sysdtw / 100),"N",self.doCutOff,None,None,None),
             (("T",0,2,0),("IRB",r2s),0,"Totals Only","",
diff --git a/drs/dr3060.py b/drs/dr3060.py
index fc39044..28d19ee 100644
--- a/drs/dr3060.py
+++ b/drs/dr3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3070.py b/drs/dr3070.py
index b3b983b..8a9948f 100644
--- a/drs/dr3070.py
+++ b/drs/dr3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3080.py b/drs/dr3080.py
index 2053c0c..1762822 100644
--- a/drs/dr3080.py
+++ b/drs/dr3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3090.py b/drs/dr3090.py
index c9e6d43..b031ac6 100644
--- a/drs/dr3090.py
+++ b/drs/dr3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3100.py b/drs/dr3100.py
index f22b762..90b0361 100644
--- a/drs/dr3100.py
+++ b/drs/dr3100.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3110.py b/drs/dr3110.py
index ac4f72a..2e5b01a 100644
--- a/drs/dr3110.py
+++ b/drs/dr3110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr3120.py b/drs/dr3120.py
index b442402..4c5436a 100644
--- a/drs/dr3120.py
+++ b/drs/dr3120.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr4010.py b/drs/dr4010.py
index 63499f3..ba6d32d 100644
--- a/drs/dr4010.py
+++ b/drs/dr4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr6010.py b/drs/dr6010.py
index fc84aeb..e918a52 100644
--- a/drs/dr6010.py
+++ b/drs/dr6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr6020.py b/drs/dr6020.py
index 5a40c4b..333c2ff 100644
--- a/drs/dr6020.py
+++ b/drs/dr6020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr6030.py b/drs/dr6030.py
index 336cdba..d43d976 100644
--- a/drs/dr6030.py
+++ b/drs/dr6030.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/dr6040.py b/drs/dr6040.py
index 939fa38..fc4ca47 100644
--- a/drs/dr6040.py
+++ b/drs/dr6040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc110.py b/drs/drc110.py
index 8accae6..8ad20ab 100644
--- a/drs/drc110.py
+++ b/drs/drc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc210.py b/drs/drc210.py
index acb1177..eafa155 100644
--- a/drs/drc210.py
+++ b/drs/drc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc220.py b/drs/drc220.py
index ec48894..5deb273 100644
--- a/drs/drc220.py
+++ b/drs/drc220.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc310.py b/drs/drc310.py
index 1983066..a313e1c 100644
--- a/drs/drc310.py
+++ b/drs/drc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc320.py b/drs/drc320.py
index b164a7f..4d37868 100644
--- a/drs/drc320.py
+++ b/drs/drc320.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc410.py b/drs/drc410.py
index 4a1e7bc..331f8ce 100644
--- a/drs/drc410.py
+++ b/drs/drc410.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc420.py b/drs/drc420.py
index 9d79d8d..8474085 100644
--- a/drs/drc420.py
+++ b/drs/drc420.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc510.py b/drs/drc510.py
index dd9e7a3..4cd0b82 100644
--- a/drs/drc510.py
+++ b/drs/drc510.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc520.py b/drs/drc520.py
index 3e77d3f..3b096fd 100644
--- a/drs/drc520.py
+++ b/drs/drc520.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc610.py b/drs/drc610.py
index 5082129..f588a06 100644
--- a/drs/drc610.py
+++ b/drs/drc610.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/drs/drc710.py b/drs/drc710.py
index bfece62..eb2298a 100644
--- a/drs/drc710.py
+++ b/drs/drc710.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl1010.py b/gen/gl1010.py
index 110dd81..4caec4d 100644
--- a/gen/gl1010.py
+++ b/gen/gl1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl1020.py b/gen/gl1020.py
index 57a8910..d30be51 100644
--- a/gen/gl1020.py
+++ b/gen/gl1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl1030.py b/gen/gl1030.py
index ebb50fd..cb7d895 100644
--- a/gen/gl1030.py
+++ b/gen/gl1030.py
@@ -11,7 +11,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl1040.py b/gen/gl1040.py
index 17c679a..eceb405 100644
--- a/gen/gl1040.py
+++ b/gen/gl1040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl1050.py b/gen/gl1050.py
index 554e27b..5d6363d 100644
--- a/gen/gl1050.py
+++ b/gen/gl1050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl1060.py b/gen/gl1060.py
index 330e3c2..5beb11f 100644
--- a/gen/gl1060.py
+++ b/gen/gl1060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl2010.py b/gen/gl2010.py
index 826ff59..09c1bac 100644
--- a/gen/gl2010.py
+++ b/gen/gl2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl2020.py b/gen/gl2020.py
index 89acb96..79b9470 100644
--- a/gen/gl2020.py
+++ b/gen/gl2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl2030.py b/gen/gl2030.py
index 9614fbe..5eb2ceb 100644
--- a/gen/gl2030.py
+++ b/gen/gl2030.py
@@ -23,7 +23,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl2040.py b/gen/gl2040.py
index 69def68..f6fe365 100644
--- a/gen/gl2040.py
+++ b/gen/gl2040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl2050.py b/gen/gl2050.py
index 85ac499..7d85d97 100644
--- a/gen/gl2050.py
+++ b/gen/gl2050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3010.py b/gen/gl3010.py
index 99f9bd2..14da7d1 100644
--- a/gen/gl3010.py
+++ b/gen/gl3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3020.py b/gen/gl3020.py
index be3e621..9851842 100644
--- a/gen/gl3020.py
+++ b/gen/gl3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3030.py b/gen/gl3030.py
index 1ce1ab7..f5928f2 100644
--- a/gen/gl3030.py
+++ b/gen/gl3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3040.py b/gen/gl3040.py
index 38de31c..2934a08 100644
--- a/gen/gl3040.py
+++ b/gen/gl3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3050.py b/gen/gl3050.py
index 4662ed2..850b716 100644
--- a/gen/gl3050.py
+++ b/gen/gl3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3060.py b/gen/gl3060.py
index a51766d..4d8d4c5 100644
--- a/gen/gl3060.py
+++ b/gen/gl3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3070.py b/gen/gl3070.py
index e584844..e1e663c 100644
--- a/gen/gl3070.py
+++ b/gen/gl3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3080.py b/gen/gl3080.py
index 78521cf..8caaed8 100644
--- a/gen/gl3080.py
+++ b/gen/gl3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl3090.py b/gen/gl3090.py
index 97dca7d..fba7343 100644
--- a/gen/gl3090.py
+++ b/gen/gl3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl4010.py b/gen/gl4010.py
index 264c570..419d51e 100644
--- a/gen/gl4010.py
+++ b/gen/gl4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl4020.py b/gen/gl4020.py
index 94696ed..295b5ac 100644
--- a/gen/gl4020.py
+++ b/gen/gl4020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6010.py b/gen/gl6010.py
index 5a9de69..d2c6b15 100644
--- a/gen/gl6010.py
+++ b/gen/gl6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6020.py b/gen/gl6020.py
index 76065a8..5691879 100644
--- a/gen/gl6020.py
+++ b/gen/gl6020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6030.py b/gen/gl6030.py
index f0168ca..72869ee 100644
--- a/gen/gl6030.py
+++ b/gen/gl6030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6040.py b/gen/gl6040.py
index 4653e30..0f87b25 100644
--- a/gen/gl6040.py
+++ b/gen/gl6040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6050.py b/gen/gl6050.py
index 9f59f85..d18a18d 100644
--- a/gen/gl6050.py
+++ b/gen/gl6050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6060.py b/gen/gl6060.py
index e814dd9..e9c55b3 100644
--- a/gen/gl6060.py
+++ b/gen/gl6060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6070.py b/gen/gl6070.py
index b70320b..9da82d9 100644
--- a/gen/gl6070.py
+++ b/gen/gl6070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/gl6080.py b/gen/gl6080.py
index efcc301..a1a5d19 100644
--- a/gen/gl6080.py
+++ b/gen/gl6080.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/glc110.py b/gen/glc110.py
index ddf11b9..db03260 100644
--- a/gen/glc110.py
+++ b/gen/glc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/gen/glc210.py b/gen/glc210.py
index 5ed73f9..28636a3 100644
--- a/gen/glc210.py
+++ b/gen/glc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln1010.py b/lon/ln1010.py
index 1280085..3f9e77b 100644
--- a/lon/ln1010.py
+++ b/lon/ln1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln2010.py b/lon/ln2010.py
index bc66d2c..dcb050a 100644
--- a/lon/ln2010.py
+++ b/lon/ln2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln2020.py b/lon/ln2020.py
index f01c22b..0e8cdd0 100644
--- a/lon/ln2020.py
+++ b/lon/ln2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln2030.py b/lon/ln2030.py
index cb1457b..c6437b5 100644
--- a/lon/ln2030.py
+++ b/lon/ln2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln3010.py b/lon/ln3010.py
index 3f6881c..3bab26e 100644
--- a/lon/ln3010.py
+++ b/lon/ln3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln3020.py b/lon/ln3020.py
index 95ff884..af6b96c 100644
--- a/lon/ln3020.py
+++ b/lon/ln3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln3030.py b/lon/ln3030.py
index 509916f..b1791ca 100644
--- a/lon/ln3030.py
+++ b/lon/ln3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln3040.py b/lon/ln3040.py
index 792c804..4ebded9 100644
--- a/lon/ln3040.py
+++ b/lon/ln3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln3050.py b/lon/ln3050.py
index 98bc559..94f9231 100644
--- a/lon/ln3050.py
+++ b/lon/ln3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln4010.py b/lon/ln4010.py
index 5b23bdd..5262170 100644
--- a/lon/ln4010.py
+++ b/lon/ln4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/ln6010.py b/lon/ln6010.py
index 716018c..8dab477 100644
--- a/lon/ln6010.py
+++ b/lon/ln6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/lon/lnc110.py b/lon/lnc110.py
index c61dda7..2f48216 100644
--- a/lon/lnc110.py
+++ b/lon/lnc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml1010.py b/mem/ml1010.py
index 7a202af..fd24175 100644
--- a/mem/ml1010.py
+++ b/mem/ml1010.py
@@ -16,7 +16,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml2010.py b/mem/ml2010.py
index 81444eb..fc9b03e 100644
--- a/mem/ml2010.py
+++ b/mem/ml2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml2020.py b/mem/ml2020.py
index f9ea781..5c2ae89 100644
--- a/mem/ml2020.py
+++ b/mem/ml2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3010.py b/mem/ml3010.py
index 2a16719..b85fa5b 100644
--- a/mem/ml3010.py
+++ b/mem/ml3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3020.py b/mem/ml3020.py
index f054b3d..cbe71bb 100644
--- a/mem/ml3020.py
+++ b/mem/ml3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3030.py b/mem/ml3030.py
index 254f909..3b74d78 100644
--- a/mem/ml3030.py
+++ b/mem/ml3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3040.py b/mem/ml3040.py
index e742a47..9e75d60 100644
--- a/mem/ml3040.py
+++ b/mem/ml3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3050.py b/mem/ml3050.py
index dff7720..760cf5d 100644
--- a/mem/ml3050.py
+++ b/mem/ml3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3060.py b/mem/ml3060.py
index 6d576ea..c86ff21 100644
--- a/mem/ml3060.py
+++ b/mem/ml3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3070.py b/mem/ml3070.py
index c9f3844..bb750cf 100644
--- a/mem/ml3070.py
+++ b/mem/ml3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3080.py b/mem/ml3080.py
index 240ab6f..f81fb0b 100644
--- a/mem/ml3080.py
+++ b/mem/ml3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3090.py b/mem/ml3090.py
index 066dea7..def9665 100644
--- a/mem/ml3090.py
+++ b/mem/ml3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -223,11 +223,11 @@ With Thanks
 
 Membership Secretary
 %s""" % (text, self.opts["conam"])
-            ok = sendMail(self.smtp, self.fadd, mail, "Member's Details",
+            err = sendMail(self.smtp, self.fadd, mail, "Member's Details",
                 mess=text, wrkdir=self.opts["mf"].rcdic["wrkdir"])
-            if not ok and self.ignore == "N":
+            if err and self.ignore == "N":
                 ok = askChoice(self.opts["mf"].body, "SMTP Server Error",
-                    "Mail to %s Could Not be Sent" % mail,
+                    "Mail to %s Could Not be Sent\n\n%s" % (mail, err),
                     butt=(("Continue","C"), ("Quit","Q")),
                     default="Continue")
                 if ok == "Q":
diff --git a/mem/ml3100.py b/mem/ml3100.py
index 01a75df..1bacccd 100644
--- a/mem/ml3100.py
+++ b/mem/ml3100.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3110.py b/mem/ml3110.py
index fc1eb42..03a126f 100644
--- a/mem/ml3110.py
+++ b/mem/ml3110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml3120.py b/mem/ml3120.py
index 4a56910..a84d07c 100644
--- a/mem/ml3120.py
+++ b/mem/ml3120.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/ml6010.py b/mem/ml6010.py
index 4e9068f..0fb5c23 100644
--- a/mem/ml6010.py
+++ b/mem/ml6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/mlc110.py b/mem/mlc110.py
index 98b5db7..8a5f5ff 100644
--- a/mem/mlc110.py
+++ b/mem/mlc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/mlc210.py b/mem/mlc210.py
index 7e3a873..e04f210 100644
--- a/mem/mlc210.py
+++ b/mem/mlc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/mlc310.py b/mem/mlc310.py
index e8604b0..e096e03 100644
--- a/mem/mlc310.py
+++ b/mem/mlc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/mlc410.py b/mem/mlc410.py
index 1542183..67b0d0a 100644
--- a/mem/mlc410.py
+++ b/mem/mlc410.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mem/mlm010.py b/mem/mlm010.py
index f51ad30..a2690fe 100644
--- a/mem/mlm010.py
+++ b/mem/mlm010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/ms0000.py b/ms0000.py
index bc87322..b96e20d 100755
--- a/ms0000.py
+++ b/ms0000.py
@@ -7,7 +7,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -22,8 +22,8 @@ COPYING
     You should have received a copy of the GNU General Public License
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
+import sys
 
-import getpass, gc, glob, io, os, platform, shutil, sys, time
 try:
     # Check that required modules are installed
     from tartanWork import pymoda
@@ -42,6 +42,8 @@ if errs:
     for err in errs:
         print("%-16s: Not Installed" % err)
     sys.exit(0)
+
+import getpass, gc, glob, io, os, platform, shutil, time
 from TartanClasses import Dbase, ViewPDF, FileDialog, FITZ, GUI, GetCtl
 from TartanClasses import MainFrame, MakeManual, MkWindow, PwdConfirm
 from TartanClasses import ScrollText, SelectChoice, SplashScreen, Sql
@@ -63,7 +65,7 @@ if "TARVER" in os.environ:
     temp = tuple(os.environ["TARVER"].split("."))
     VERSION = (int(temp[0]), int(temp[1].rstrip()))
 else:
-    VERSION = (6, 13)
+    VERSION = (6, 14)
     os.environ["TARVER"] = "%s.%s" % VERSION
 
 class ms0000(object):
@@ -324,7 +326,7 @@ Options:
         self.mf = None
         self.loop = False
         self.rcdic = None
-        main = "Tartan Systems - Copyright %s 2004-2022 Paul Malherbe" % \
+        main = "Tartan Systems - Copyright %s 2004-2023 Paul Malherbe" % \
             chr(0xa9)
         while not self.rcdic:
             self.rcdic = loadRcFile(self.rcfile, default=True)
diff --git a/mst/ms1010.py b/mst/ms1010.py
index 6eb8a55..bd0d69e 100644
--- a/mst/ms1010.py
+++ b/mst/ms1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms1020.py b/mst/ms1020.py
index 99b3051..eccfd89 100644
--- a/mst/ms1020.py
+++ b/mst/ms1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms1030.py b/mst/ms1030.py
index aa719ea..bc359e8 100644
--- a/mst/ms1030.py
+++ b/mst/ms1030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms1040.py b/mst/ms1040.py
index 6ed272e..ec22e4b 100644
--- a/mst/ms1040.py
+++ b/mst/ms1040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms3010.py b/mst/ms3010.py
index ddeba25..b94bfab 100644
--- a/mst/ms3010.py
+++ b/mst/ms3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms3020.py b/mst/ms3020.py
index 74427f9..b5ab672 100644
--- a/mst/ms3020.py
+++ b/mst/ms3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms3030.py b/mst/ms3030.py
index 5ee8552..353c792 100644
--- a/mst/ms3030.py
+++ b/mst/ms3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms3040.py b/mst/ms3040.py
index 7fd1443..5f361c9 100644
--- a/mst/ms3040.py
+++ b/mst/ms3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/ms3050.py b/mst/ms3050.py
index d9b9872..6803a1b 100644
--- a/mst/ms3050.py
+++ b/mst/ms3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/msc110.py b/mst/msc110.py
index 1533c14..20aaff5 100644
--- a/mst/msc110.py
+++ b/mst/msc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/msy010.py b/mst/msy010.py
index 865685d..862a763 100644
--- a/mst/msy010.py
+++ b/mst/msy010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/mst/msy020.py b/mst/msy020.py
index 3c18f04..93736ec 100644
--- a/mst/msy020.py
+++ b/mst/msy020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc1010.py b/rca/rc1010.py
index 61c2d2b..ba5d651 100644
--- a/rca/rc1010.py
+++ b/rca/rc1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc1020.py b/rca/rc1020.py
index 7dc7a6e..07a78f5 100644
--- a/rca/rc1020.py
+++ b/rca/rc1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc1030.py b/rca/rc1030.py
index 65d1274..6d2686a 100644
--- a/rca/rc1030.py
+++ b/rca/rc1030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc2010.py b/rca/rc2010.py
index e5e44d3..79d86fc 100644
--- a/rca/rc2010.py
+++ b/rca/rc2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3010.py b/rca/rc3010.py
index f50a89e..282c032 100644
--- a/rca/rc3010.py
+++ b/rca/rc3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3020.py b/rca/rc3020.py
index 37519e2..d734fca 100644
--- a/rca/rc3020.py
+++ b/rca/rc3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3030.py b/rca/rc3030.py
index 1e2bd04..fb6e504 100644
--- a/rca/rc3030.py
+++ b/rca/rc3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3040.py b/rca/rc3040.py
index ea61b74..afdeaff 100644
--- a/rca/rc3040.py
+++ b/rca/rc3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3050.py b/rca/rc3050.py
index 3a182da..6bf94e2 100644
--- a/rca/rc3050.py
+++ b/rca/rc3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3060.py b/rca/rc3060.py
index 30985e7..9dd4398 100644
--- a/rca/rc3060.py
+++ b/rca/rc3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3070.py b/rca/rc3070.py
index d351e76..9b9315d 100644
--- a/rca/rc3070.py
+++ b/rca/rc3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3080.py b/rca/rc3080.py
index 73fcfff..cc09a6f 100644
--- a/rca/rc3080.py
+++ b/rca/rc3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3090.py b/rca/rc3090.py
index dca992b..fcc23d7 100644
--- a/rca/rc3090.py
+++ b/rca/rc3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc3100.py b/rca/rc3100.py
index 44efbd6..03ba529 100644
--- a/rca/rc3100.py
+++ b/rca/rc3100.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc4010.py b/rca/rc4010.py
index 944f00b..09562a0 100644
--- a/rca/rc4010.py
+++ b/rca/rc4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rc4020.py b/rca/rc4020.py
index 325d77a..fb1a432 100644
--- a/rca/rc4020.py
+++ b/rca/rc4020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rcc110.py b/rca/rcc110.py
index 622f948..3ab1ba6 100644
--- a/rca/rcc110.py
+++ b/rca/rcc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rcc210.py b/rca/rcc210.py
index bf1834d..a9601dd 100644
--- a/rca/rcc210.py
+++ b/rca/rcc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rcc220.py b/rca/rcc220.py
index df32e7d..c4b26dc 100644
--- a/rca/rcc220.py
+++ b/rca/rcc220.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rcc310.py b/rca/rcc310.py
index 6edad3f..28ef394 100644
--- a/rca/rcc310.py
+++ b/rca/rcc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rca/rcm010.py b/rca/rcm010.py
index 0b99710..b66ecdc 100644
--- a/rca/rcm010.py
+++ b/rca/rcm010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt1010.py b/rtl/rt1010.py
index e2369d7..2d76563 100644
--- a/rtl/rt1010.py
+++ b/rtl/rt1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt2010.py b/rtl/rt2010.py
index 4a0cd0a..546ba78 100644
--- a/rtl/rt2010.py
+++ b/rtl/rt2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt3010.py b/rtl/rt3010.py
index 1fb5a35..242d50e 100644
--- a/rtl/rt3010.py
+++ b/rtl/rt3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt3020.py b/rtl/rt3020.py
index faac2a9..ee3615f 100644
--- a/rtl/rt3020.py
+++ b/rtl/rt3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt3030.py b/rtl/rt3030.py
index 8cf777d..6724f77 100644
--- a/rtl/rt3030.py
+++ b/rtl/rt3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt3040.py b/rtl/rt3040.py
index d094058..4a31e99 100644
--- a/rtl/rt3040.py
+++ b/rtl/rt3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt3050.py b/rtl/rt3050.py
index 41cc1c2..6282ac2 100644
--- a/rtl/rt3050.py
+++ b/rtl/rt3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt4010.py b/rtl/rt4010.py
index 04b2078..b1c67a9 100644
--- a/rtl/rt4010.py
+++ b/rtl/rt4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rt6010.py b/rtl/rt6010.py
index 7c86526..e7a2f51 100644
--- a/rtl/rt6010.py
+++ b/rtl/rt6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rtc110.py b/rtl/rtc110.py
index 03f0056..fb2c4c3 100644
--- a/rtl/rtc110.py
+++ b/rtl/rtc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rtc210.py b/rtl/rtc210.py
index 999ed30..be4486f 100644
--- a/rtl/rtc210.py
+++ b/rtl/rtc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/rtl/rtm010.py b/rtl/rtm010.py
index 3dc9115..c836df3 100644
--- a/rtl/rtm010.py
+++ b/rtl/rtm010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/scp/sc1010.py b/scp/sc1010.py
index 05795a5..c7520ac 100644
--- a/scp/sc1010.py
+++ b/scp/sc1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/scp/sc2010.py b/scp/sc2010.py
index d85bfc4..f44df05 100644
--- a/scp/sc2010.py
+++ b/scp/sc2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/scp/sc2020.py b/scp/sc2020.py
index e86d15a..e7fb9d6 100644
--- a/scp/sc2020.py
+++ b/scp/sc2020.py
@@ -33,7 +33,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/scp/sc2030.py b/scp/sc2030.py
index fe9662f..b42b86a 100644
--- a/scp/sc2030.py
+++ b/scp/sc2030.py
@@ -16,7 +16,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/scp/sc3010.py b/scp/sc3010.py
index a4869d9..42ea1d3 100644
--- a/scp/sc3010.py
+++ b/scp/sc3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/scp/scc110.py b/scp/scc110.py
index e7f1cce..9121899 100644
--- a/scp/scc110.py
+++ b/scp/scc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si2010.py b/sls/si2010.py
index 884fcaf..649dad5 100644
--- a/sls/si2010.py
+++ b/sls/si2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -1795,8 +1795,8 @@ class si2010(object):
                     else:
                         data = (self.opts["conum"], acc[1], self.curdt,
                             self.trdt, 1, self.othno, self.batch, cst, 0,
-                        self.name, "", "", 0, self.opts["capnm"], self.sysdtw,
-                        0)
+                        self.name, "", "", 0, self.opts["capnm"],
+                        self.sysdtw, 0)
                         self.sql.insRec("gentrn", data=data)
             # Create VAT Transaction (ctlvtf)
             if self.typs in ("I", "C"):
diff --git a/sls/si3010.py b/sls/si3010.py
index a353d0b..859d505 100644
--- a/sls/si3010.py
+++ b/sls/si3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3020.py b/sls/si3020.py
index 05a95e4..2076308 100644
--- a/sls/si3020.py
+++ b/sls/si3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3030.py b/sls/si3030.py
index ef34c6d..6e9c5f8 100644
--- a/sls/si3030.py
+++ b/sls/si3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3040.py b/sls/si3040.py
index 53e76b9..27ce17c 100644
--- a/sls/si3040.py
+++ b/sls/si3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3050.py b/sls/si3050.py
index 4dd2a89..c88ab12 100644
--- a/sls/si3050.py
+++ b/sls/si3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3060.py b/sls/si3060.py
index 269c2ee..358b893 100644
--- a/sls/si3060.py
+++ b/sls/si3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3070.py b/sls/si3070.py
index 1a2bae3..dffb0bc 100644
--- a/sls/si3070.py
+++ b/sls/si3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3080.py b/sls/si3080.py
index ef8ff37..761a5ee 100644
--- a/sls/si3080.py
+++ b/sls/si3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si3090.py b/sls/si3090.py
index 18ebc7a..8918179 100644
--- a/sls/si3090.py
+++ b/sls/si3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si6010.py b/sls/si6010.py
index 9f08bf3..4583e65 100644
--- a/sls/si6010.py
+++ b/sls/si6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/si6020.py b/sls/si6020.py
index 6913964..4a519e1 100644
--- a/sls/si6020.py
+++ b/sls/si6020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/sls/sic110.py b/sls/sic110.py
index d7e90ac..6c8ab91 100644
--- a/sls/sic110.py
+++ b/sls/sic110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st1010.py b/str/st1010.py
index 0a03ce8..a1f6d87 100644
--- a/str/st1010.py
+++ b/str/st1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -40,10 +40,10 @@ class st1010(object):
 
     def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["ctlvmf", "ctlrep", "drschn",
-            "drsmst", "genmst", "slsiv1", "slsiv2", "strgrp", "strloc",
-            "strmf1", "strmf2", "strgmu", "strcmu", "strprc", "strrcp",
-            "struoi", "strtrn", "strpot", "strvar", "slsiv3", "chglog"],
-            prog=self.__class__.__name__)
+            "drsmst", "genmst", "slsiv1", "slsiv2", "strcst", "strgrp",
+            "strloc", "strmf1", "strmf2", "strgmu", "strcmu", "strprc",
+            "strrcp", "struoi", "strtrn", "strpot", "strvar", "slsiv3",
+            "chglog"], prog=self.__class__.__name__)
         if self.sql.error:
             return
         gc = GetCtl(self.opts["mf"])
diff --git a/str/st1020.py b/str/st1020.py
index 8dfff1e..91f0f0b 100644
--- a/str/st1020.py
+++ b/str/st1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st1030.py b/str/st1030.py
index c3e88f7..cfe04cc 100644
--- a/str/st1030.py
+++ b/str/st1030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st2010.py b/str/st2010.py
index 1508151..2977c68 100644
--- a/str/st2010.py
+++ b/str/st2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st2020.py b/str/st2020.py
index a089c03..4c003c8 100644
--- a/str/st2020.py
+++ b/str/st2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st2030.py b/str/st2030.py
index fb3c551..14d39c7 100644
--- a/str/st2030.py
+++ b/str/st2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st2040.py b/str/st2040.py
index 83d10c5..6a648eb 100644
--- a/str/st2040.py
+++ b/str/st2040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3010.py b/str/st3010.py
index 73f8d5d..fbc93f6 100644
--- a/str/st3010.py
+++ b/str/st3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3020.py b/str/st3020.py
index 694edfc..725bb1c 100644
--- a/str/st3020.py
+++ b/str/st3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3030.py b/str/st3030.py
index 9b96230..21bbe3b 100644
--- a/str/st3030.py
+++ b/str/st3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3040.py b/str/st3040.py
index 5ea2984..12d7707 100644
--- a/str/st3040.py
+++ b/str/st3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3050.py b/str/st3050.py
index d104165..c0f231a 100644
--- a/str/st3050.py
+++ b/str/st3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3060.py b/str/st3060.py
index 5e4d3e8..2cd6081 100644
--- a/str/st3060.py
+++ b/str/st3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3070.py b/str/st3070.py
index 5cb2b75..a83db1c 100644
--- a/str/st3070.py
+++ b/str/st3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3080.py b/str/st3080.py
index 2465854..adfe86c 100644
--- a/str/st3080.py
+++ b/str/st3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3090.py b/str/st3090.py
index 46fbab0..53e65b7 100644
--- a/str/st3090.py
+++ b/str/st3090.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3100.py b/str/st3100.py
index c4a34eb..6bcc717 100644
--- a/str/st3100.py
+++ b/str/st3100.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3110.py b/str/st3110.py
index 7cf8da0..ba12437 100644
--- a/str/st3110.py
+++ b/str/st3110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st3120.py b/str/st3120.py
index 5326e64..5c246af 100644
--- a/str/st3120.py
+++ b/str/st3120.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st4010.py b/str/st4010.py
index 26c4224..1ddd77f 100644
--- a/str/st4010.py
+++ b/str/st4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st5010.py b/str/st5010.py
index 51b4b8d..6b0f045 100644
--- a/str/st5010.py
+++ b/str/st5010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st5020.py b/str/st5020.py
index 2e1a55c..0ed1829 100644
--- a/str/st5020.py
+++ b/str/st5020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st5030.py b/str/st5030.py
index 730bc0f..6ce2baf 100644
--- a/str/st5030.py
+++ b/str/st5030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st5040.py b/str/st5040.py
index 44b554f..504e790 100644
--- a/str/st5040.py
+++ b/str/st5040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st6010.py b/str/st6010.py
index 31766ce..c680e14 100644
--- a/str/st6010.py
+++ b/str/st6010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st6020.py b/str/st6020.py
index d9a3744..83b7748 100644
--- a/str/st6020.py
+++ b/str/st6020.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st6030.py b/str/st6030.py
index c8b47df..9d5bfb7 100644
--- a/str/st6030.py
+++ b/str/st6030.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/st6040.py b/str/st6040.py
index 6a250df..1a24835 100644
--- a/str/st6040.py
+++ b/str/st6040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc110.py b/str/stc110.py
index ff4e54b..40fdd8a 100644
--- a/str/stc110.py
+++ b/str/stc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc210.py b/str/stc210.py
index d23200c..d97bb0a 100644
--- a/str/stc210.py
+++ b/str/stc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc220.py b/str/stc220.py
index f4bd719..f5211d3 100644
--- a/str/stc220.py
+++ b/str/stc220.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc310.py b/str/stc310.py
index ac89eae..ae83869 100644
--- a/str/stc310.py
+++ b/str/stc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc320.py b/str/stc320.py
index d171b1f..a45ec4b 100644
--- a/str/stc320.py
+++ b/str/stc320.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc410.py b/str/stc410.py
index f3776c6..72938e5 100644
--- a/str/stc410.py
+++ b/str/stc410.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/str/stc420.py b/str/stc420.py
index 6ff54e8..d0259c0 100644
--- a/str/stc420.py
+++ b/str/stc420.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tab/tb1010.py b/tab/tb1010.py
index f1bc556..4b085e3 100644
--- a/tab/tb1010.py
+++ b/tab/tb1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tab/tb1020.py b/tab/tb1020.py
index da3efbd..64977a3 100644
--- a/tab/tb1020.py
+++ b/tab/tb1020.py
@@ -21,7 +21,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tab/tb1030.py b/tab/tb1030.py
index 2ae39f1..8d5e91d 100644
--- a/tab/tb1030.py
+++ b/tab/tb1030.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tab/tb1040.py b/tab/tb1040.py
index b081f07..d012ee8 100644
--- a/tab/tb1040.py
+++ b/tab/tb1040.py
@@ -9,7 +9,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tab/tb1050.py b/tab/tb1050.py
index ee40cf7..1dc77bd 100644
--- a/tab/tb1050.py
+++ b/tab/tb1050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tab/tb3010.py b/tab/tb3010.py
index 6049f6a..e43f0dc 100644
--- a/tab/tb3010.py
+++ b/tab/tb3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tarchg.py b/tarchg.py
index 1b7404b..082f36d 100644
--- a/tarchg.py
+++ b/tarchg.py
@@ -979,4 +979,4 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later
 
-"""
\ No newline at end of file
+"""
diff --git a/tartanFunctions.py b/tartanFunctions.py
index db91ebb..354e503 100644
--- a/tartanFunctions.py
+++ b/tartanFunctions.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -431,7 +431,7 @@ def showException(scrn, path, mess, maxTB=None, xits=None, dbm=None):
                 smtp = dbm.cu.fetchone()
                 if not smtp or not smtp[1]:
                     raise Exception
-                if sendMail(smtp[1:7], smtp[7], ["errors@tartan.co.za"],
+                if not sendMail(smtp[1:7], smtp[7], ["errors@tartan.co.za"],
                         "Version: %s Company: %s Host: %s User: %s" %
                         (smtp[8], smtp[0], host, user), attach=[fnam],
                         wrkdir=path):
@@ -668,29 +668,34 @@ def doPrinter(mf=None, conum=None, pdfnam=None, splash=True, header=None, repprt
                         sp = SplashScreen(mf.window.focus_displayof(),
                             "E-Mailing the Report to:\n\n%s\n\nPlease Wait.." %
                             eml)
-                    ok = sendMail(smtp[0:6], fromad, eml, subj, mess,
+                    err = sendMail(smtp[0:6], fromad, eml, subj, mess,
                         attach=att, wrkdir=mf.rcdic["wrkdir"])
                     if splash:
                         sp.closeSplash()
-                    if not ok:
+                    if err:
                         if skip:
                             ok = "SKIPPED"
+                            break
                         else:
                             ok = askQuestion(mf.window.focus_displayof(),
                                 "E-Mail Error", "Problem Delivering This "\
-                                "Message.\n\nTo: %s\nSubject: %s\n\nWould "\
-                                "You Like to Retry?" % (toad[0], subj))
+                                "Message.\n\nTo: %s\nSubject: %s\n\n%s\n\n"\
+                                "Would You Like to Retry?" % (toad[0],
+                                subj,err))
                             if ok == "yes":
                                 ok = False
                             else:
                                 ok = "FAILED"
                     else:
                         ok = "OK"
-                try:
-                    sql.insRec("emllog", data=[fromad.strip(), eml, subj,
-                        "%04i-%02i-%02i %02i:%02i" % time.localtime()[0:5], ok])
-                except:
-                    pass
+                    if ok:
+                        try:
+                            sql.insRec("emllog", data=[fromad.strip(), eml,
+                            subj, "%04i-%02i-%02i %02i:%02i" %
+                            time.localtime()[0:5], ok])
+                        except:
+                            pass
+                        break
         except Exception as err:
             showException(mf.window.focus_displayof(), mf.rcdic["wrkdir"],
                 "E-Mail Error\n\n%s" % err)
@@ -952,12 +957,13 @@ def sendMail(server, ex, to, subj, mess="", attach=None, embed=None, check=False
     try:
         smtp.sendmail(ex, to, msgRoot.as_string())
         smtp.quit()
-        return True
-    except:
+        return
+    except Exception as err:
         try:
             smtp.quit()
         except:
             pass
+        return err
 
 def mthendDate(date):
     """
@@ -1502,7 +1508,7 @@ def chkAggregate(fld):
         if fld.lower().count(typ):
             return True
 
-def callModule(mf, df, mod, coy=None, period=None, user=None, args=None, ret=None):
+def callModule(mf, df, mod, coy=None, period=None, user=None, args=None, wait=True, ret=None):
     """
     Use this funtion to call another module and pass arguments to it.
 
@@ -1510,12 +1516,13 @@ def callModule(mf, df, mod, coy=None, period=None, user=None, args=None, ret=Non
     period - The financial period tuple.
     user   - The user name.
     args   - Any arguments to send to the called module.
+    wait   - Wait for window to be destroyed.
     ret    - A variable to return to the calling module.
     """
     if df:
         state = df.disableButtonsTags()
         df.setWidget(df.mstFrame, state="hide")
-    opts = {"mf": mf, "wait": True}
+    opts = {"mf": mf}
     if coy is not None:
         opts["conum"] = coy[0]
         opts["conam"] = coy[1]
@@ -1525,6 +1532,8 @@ def callModule(mf, df, mod, coy=None, period=None, user=None, args=None, ret=Non
         opts["capnm"] = user
     if args is not None:
         opts["args"] = args
+    if wait:
+        opts["wait"] = True
     obj = runModule(mod, **opts)
     if df:
         df.setWidget(df.mstFrame, state="show")
@@ -2981,7 +2990,7 @@ def doWriteExport(**args):
         fnt = tkfont.nametofont("TkTextFont")
         fmt = {"font": fnt.configure()["family"]}
         alpha = ("HA", "LA", "La", "NA", "Na", "TX", "UA", "Ua")
-        cash = ("CD", "CI", "SD", "SI")
+        numer = ("CD", "CI", "SD", "SI", "UI", "UD")
         xf_map = {
             "D1": "yyyy-mm-dd",
             "d1": "yyyy-mm-dd",
@@ -3055,16 +3064,16 @@ def doWriteExport(**args):
                     hxf["bold"] = True
                 # Underline & Border
                 ccd = list(args["forms"][colx][:])
-                if ccd[0] in cash and type(valx) == str:
+                if ccd[0] in numer and type(valx) == str:
                     ccd[0] = "NA"
-                if unl == "s" and ccd[0] in cash:
+                if unl == "s" and ccd[0] in numer:
                     hxf["border"] = ["B", "thin"]
-                elif unl == "d" and ccd[0] in cash:
+                elif unl == "d" and ccd[0] in numer:
                     hxf["border"] = ["B", "double"]
                 elif bord:
                     hxf["border"] = [bord, "thin"]
                 # CCD Format
-                if ccd[0] not in cash and not valx:
+                if ccd[0] not in numer and not valx:
                     ccd[0] = "NA"
                     valx = ""
                 hxf["ccd"] = ccd
diff --git a/tartanImages.py b/tartanImages.py
index 5f615ea..ba37a06 100644
--- a/tartanImages.py
+++ b/tartanImages.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/tartanWork.py b/tartanWork.py
index 60d8622..82ba0d3 100644
--- a/tartanWork.py
+++ b/tartanWork.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -664,7 +664,17 @@ payeRates = {
             [353100, 73726, 31],
             [226000, 40680, 26],
             [0, 0, 18]],
-        "allow": [16425, 9000, 2997, 0]}}
+        "allow": [16425, 9000, 2997, 0]},
+    "2024": {
+        "rates": [
+            [1817000, 644489, 45],
+            [857900, 251258, 41],
+            [673000, 179147, 39],
+            [512800, 121475, 36],
+            [370500, 77362, 31],
+            [237100, 42678, 26],
+            [0, 0, 18]],
+        "allow": [17235, 9444, 3145, 0]}}
 siteRates = {
     "2004": 60000,
     "2005": 60000,
@@ -685,7 +695,8 @@ siteRates = {
     "2020": 0,
     "2021": 0,
     "2022": 0,
-    "2023": 0}
+    "2023": 0,
+    "2024": 0}
 uifRates = {
     "2004": [1.00, 1.00],
     "2005": [1.00, 1.00],
@@ -706,7 +717,8 @@ uifRates = {
     "2020": [1.00, 1.00],
     "2021": [1.00, 1.00],
     "2022": [1.00, 1.00],
-    "2023": [1.00, 1.00]}
+    "2023": [1.00, 1.00],
+    "2024": [1.00, 1.00]}
 sdlRates = {
     "2004": [0.00, 1.00],
     "2005": [0.00, 1.00],
@@ -727,7 +739,8 @@ sdlRates = {
     "2020": [0.00, 1.00],
     "2021": [0.00, 1.00],
     "2022": [0.00, 1.00],
-    "2023": [0.00, 1.00]}
+    "2023": [0.00, 1.00],
+    "2024": [0.00, 1.00]}
 # Labels
 labels = {
     "L7159": {
diff --git a/uty/bm1010.py b/uty/bm1010.py
index 479c532..48668be 100644
--- a/uty/bm1010.py
+++ b/uty/bm1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -1131,18 +1131,18 @@ xbm   X Bitmap Files""")
                     url = (self.lnktxt, self.lnkurl)
                 else:
                     url = None
-                ok = sendMail(self.smtp, self.fadd, mail, self.subj,
+                err = sendMail(self.smtp, self.fadd, mail, self.subj,
                     mess=(mess, html), attach=self.attach, embed=self.embed,
                     lnkurl=url, wrkdir=self.opts["mf"].rcdic["wrkdir"])
                 sp.closeSplash()
-                if not ok:
+                if err:
                     if self.skip == "Y":
                         ok = "SKIPPED"
                     else:
                         ok = askQuestion(self.opts["mf"].body, "E-Mail Error",
                             "Problem Delivering This Message.\n\nTo: "\
-                            "%s\nSubject: %s\n\nWould You Like to Retry?" \
-                            % (mail, self.subj))
+                            "%s\nSubject: %s\n\n%s\n\nWould You Like to "\
+                            "Retry?" % (mail, self.subj, err))
                     if ok == "yes":
                         ok = False
                     else:
diff --git a/uty/cp1010.py b/uty/cp1010.py
index bc31b82..62bc91e 100644
--- a/uty/cp1010.py
+++ b/uty/cp1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/fc1010.py b/uty/fc1010.py
index 729a682..73cd837 100644
--- a/uty/fc1010.py
+++ b/uty/fc1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/pm1010.py b/uty/pm1010.py
index 94af258..a22ffd6 100644
--- a/uty/pm1010.py
+++ b/uty/pm1010.py
@@ -10,7 +10,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/pw1010.py b/uty/pw1010.py
index 27df44c..7bfa080 100644
--- a/uty/pw1010.py
+++ b/uty/pw1010.py
@@ -12,7 +12,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/rp1010.py b/uty/rp1010.py
index b22580f..eeab098 100644
--- a/uty/rp1010.py
+++ b/uty/rp1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/rp1020.py b/uty/rp1020.py
index 392c15b..c301013 100644
--- a/uty/rp1020.py
+++ b/uty/rp1020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
@@ -413,17 +413,17 @@ Therefore No Emailing will be Possible.""")
             for eml in emls:
                 sp = SplashScreen(self.opts["mf"].body, "E-Mailing the "\
                     "Message to\n\n%s\n\nPlease Wait........" % eml)
-                ok = sendMail(self.smtp, self.fadd, eml, subj, mess=self.mess,
+                err = sendMail(self.smtp, self.fadd, eml, subj, mess=self.mess,
                     attach=self.fles, wrkdir=self.opts["mf"].rcdic["wrkdir"])
                 sp.closeSplash()
-                if not ok:
+                if err:
                     if self.skip == "Y":
                         ok = "SKIPPED"
                     else:
                         ok = askQuestion(self.opts["mf"].body, "E-Mail Error",
                             "Problem Delivering This Message.\n\nTo: "\
-                            "%s\nSubject: %s\n\nWould You Like to Retry?" \
-                            % (eml, subj))
+                            "%s\nSubject: %s\n\n%s\n\nWould You Like to "\
+                            "Retry?" % (eml, subj, err))
                     if ok == "yes":
                         ok = False
                     else:
diff --git a/uty/td1010.py b/uty/td1010.py
index 5329ca8..c4bdf79 100644
--- a/uty/td1010.py
+++ b/uty/td1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/tdc110.py b/uty/tdc110.py
index 7938a4f..90e2918 100644
--- a/uty/tdc110.py
+++ b/uty/tdc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/uty/tp1010.py b/uty/tp1010.py
index 97bf78f..9651c57 100644
--- a/uty/tp1010.py
+++ b/uty/tp1010.py
@@ -10,7 +10,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl1010.py b/wag/sl1010.py
index c557654..7f4a83c 100644
--- a/wag/sl1010.py
+++ b/wag/sl1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl2010.py b/wag/sl2010.py
index ee3b37d..f5987e4 100644
--- a/wag/sl2010.py
+++ b/wag/sl2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl2020.py b/wag/sl2020.py
index 57681d0..6a181c5 100644
--- a/wag/sl2020.py
+++ b/wag/sl2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl2030.py b/wag/sl2030.py
index 02dae97..7c0c2a9 100644
--- a/wag/sl2030.py
+++ b/wag/sl2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl3010.py b/wag/sl3010.py
index 48ed1ba..7c38170 100644
--- a/wag/sl3010.py
+++ b/wag/sl3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl3020.py b/wag/sl3020.py
index 7a38938..9270a71 100644
--- a/wag/sl3020.py
+++ b/wag/sl3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl3030.py b/wag/sl3030.py
index 1462522..918be22 100644
--- a/wag/sl3030.py
+++ b/wag/sl3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl3040.py b/wag/sl3040.py
index 80ff464..1f6a68b 100644
--- a/wag/sl3040.py
+++ b/wag/sl3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/sl4010.py b/wag/sl4010.py
index 30b4fe2..c461367 100644
--- a/wag/sl4010.py
+++ b/wag/sl4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg1010.py b/wag/wg1010.py
index f2a0733..d7c232e 100644
--- a/wag/wg1010.py
+++ b/wag/wg1010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg2010.py b/wag/wg2010.py
index 631e936..211ee1f 100644
--- a/wag/wg2010.py
+++ b/wag/wg2010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg2020.py b/wag/wg2020.py
index 8a991ab..c55537d 100644
--- a/wag/wg2020.py
+++ b/wag/wg2020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg2030.py b/wag/wg2030.py
index 1cba963..de46f40 100644
--- a/wag/wg2030.py
+++ b/wag/wg2030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3010.py b/wag/wg3010.py
index 249d639..e3de87c 100644
--- a/wag/wg3010.py
+++ b/wag/wg3010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3020.py b/wag/wg3020.py
index 49e37de..d3b6a3a 100644
--- a/wag/wg3020.py
+++ b/wag/wg3020.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3030.py b/wag/wg3030.py
index 0b3c427..509647a 100644
--- a/wag/wg3030.py
+++ b/wag/wg3030.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3040.py b/wag/wg3040.py
index 22fbffb..05b370c 100644
--- a/wag/wg3040.py
+++ b/wag/wg3040.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3050.py b/wag/wg3050.py
index 7027329..37a810b 100644
--- a/wag/wg3050.py
+++ b/wag/wg3050.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3060.py b/wag/wg3060.py
index 8e7611f..5792c87 100644
--- a/wag/wg3060.py
+++ b/wag/wg3060.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3070.py b/wag/wg3070.py
index 76c0e19..3ef8a1b 100644
--- a/wag/wg3070.py
+++ b/wag/wg3070.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg3080.py b/wag/wg3080.py
index 13a9758..8ac1568 100644
--- a/wag/wg3080.py
+++ b/wag/wg3080.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wg4010.py b/wag/wg4010.py
index 729f4f8..2214d9b 100644
--- a/wag/wg4010.py
+++ b/wag/wg4010.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc110.py b/wag/wgc110.py
index df44c92..16e3d41 100644
--- a/wag/wgc110.py
+++ b/wag/wgc110.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc210.py b/wag/wgc210.py
index d066669..6dac221 100644
--- a/wag/wgc210.py
+++ b/wag/wgc210.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc220.py b/wag/wgc220.py
index 2becdd1..54312b2 100644
--- a/wag/wgc220.py
+++ b/wag/wgc220.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc310.py b/wag/wgc310.py
index 41217c2..c764d15 100644
--- a/wag/wgc310.py
+++ b/wag/wgc310.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc320.py b/wag/wgc320.py
index eb7a402..24b2294 100644
--- a/wag/wgc320.py
+++ b/wag/wgc320.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc410.py b/wag/wgc410.py
index 68be6d9..edf567b 100644
--- a/wag/wgc410.py
+++ b/wag/wgc410.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc420.py b/wag/wgc420.py
index d8f3097..3ec3e5c 100644
--- a/wag/wgc420.py
+++ b/wag/wgc420.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
diff --git a/wag/wgc510.py b/wag/wgc510.py
index 6ea0b64..ac92199 100644
--- a/wag/wgc510.py
+++ b/wag/wgc510.py
@@ -8,7 +8,7 @@ AUTHOR
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2022 Paul Malherbe.
+    Copyright (C) 2004-2023 Paul Malherbe.
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
