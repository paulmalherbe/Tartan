=== modified file '.bzrignore'
--- .bzrignore	2015-12-12 09:12:17 +0000
+++ .bzrignore	2016-01-05 06:55:44 +0000
@@ -1,19 +1,11 @@
 .idea
-.komodotools/
-Tartan-5.pidaproject
-Tartan.komodoproject
-autoacc
 butt.py
-buttons.txt
-bwl/bc2010.try
 bwl/clr2.py
 changes.txt
 chg.py
 csv/all_data_types.py
-csv/test.py
 doc/Bowls.pdf
 doc/Bowls.rst
-doc/Bwlclb.rst
 doc/Changes.rst
 doc/Contact.rst
 doc/Downloads.rst
@@ -21,15 +13,12 @@
 doc/Manual.rst
 doc/Notes.txt
 doc/QuickStart.pdf
-doc/Quickstart.rst
-doc/Rnehol.rst
 doc/Rsync.rst
-doc/Seccmp.rst
 doc/Support.rst
-doc/Tartan.rst
-doc/WinPkg.txt
+doc/Vacation.rst
 doc/bankserv.txt
 doc/bkmdoc.py
+doc/dkimspf.rst
 doc/gnugpl.rst
 doc/gnugpl.txt
 doc/manual.css
@@ -45,47 +34,34 @@
 doc/vnc_setup.rst
 doc/volmoed_client.sh
 doprt.py
-files
 flake.ign
 flakes
 lon/implon.py
-mem/chk.py
+lon/rneim2.py
+lon/rneimp.py
 mst/csv
 mst/doc
 mst/img
-profile
+penv.py
 repprt.py
 scp/all.sh
 scp/doitall
 scp/pop.py
 scp/states
 sdy/
-std/Tktable.py
-std/adodbapi.py
+sqltab.py
 std/fcrypt.py
-std/fdb/
 std/fpdf/
 std/ghostscript/
-std/magic.py
-std/nmb
-std/odf/
 std/paramiko/
 std/profilehooks.py
 std/progressbar/
-std/pyasn1
 std/pychart/
 std/pymagic.py
 std/scp.py
-std/simpleodspy/
-std/smb
 std/tarchg.py
 std/tarmod.py
-std/usb/
-std/xlrd/
-std/xlwt/
 sve/
-tmp/
-upg223.py
 uty/SumatraPDF-settings.txt
 uty/SumatraPDF.exe
 uty/chksms.py
@@ -99,10 +75,6 @@
 uty/vim.exe
 uty/zip.exe
 ver/
-wag/wg3030.new
-wag/wg3030.old
 web
-sqltab.py
-doc/Vacation.rst
-lon/rneim2.py
-lon/rneimp.py
+mst/thm
+thm

=== modified file 'ass/ar1010.py'
--- ass/ar1010.py	2014-12-30 15:37:38 +0000
+++ ass/ar1010.py	2016-01-03 17:07:26 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar2010.py'
--- ass/ar2010.py	2015-10-03 07:36:56 +0000
+++ ass/ar2010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar2020.py'
--- ass/ar2020.py	2015-10-03 07:36:56 +0000
+++ ass/ar2020.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar2030.py'
--- ass/ar2030.py	2015-08-25 15:02:35 +0000
+++ ass/ar2030.py	2016-01-19 09:13:39 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -141,9 +141,8 @@
             else:
                 self.opts["mf"].dbm.commitDbase()
         if not abort:
-            self.sql.updRec("assctl", cols=["cta_lastp"],
-                data=[self.curdt], where=[("cta_cono", "=",
-                self.opts["conum"])])
+            self.sql.updRec("assctl", cols=["cta_lastp"], data=[self.curdt],
+                where=[("cta_cono", "=", self.opts["conum"])])
             self.opts["mf"].dbm.commitDbase()
         if not self.args:
             self.opts["mf"].closeLoop()
@@ -276,8 +275,7 @@
         if acc and len(acc) == 1:
             amt = acc[0][self.sql.gentrn_col.index("glt_tramt")]
             amt = float(ASD(amt) + ASD(amnt))
-            acc[0][self.sql.gentrn_col.index("glt_tramt")] = amt
-            self.sql.updRec("gentrn", where=whr, data=acc[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt"], data=[amt], where=whr)
         else:
             data = [self.opts["conum"], accno, self.lurdt, self.trdt, 4,
                 self.refno, "AutoDep", amnt, 0, "Auto Raising of Depreciation",

=== modified file 'ass/ar3010.py'
--- ass/ar3010.py	2015-10-03 07:36:56 +0000
+++ ass/ar3010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar3020.py'
--- ass/ar3020.py	2015-10-03 07:36:56 +0000
+++ ass/ar3020.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar3030.py'
--- ass/ar3030.py	2015-10-03 07:36:56 +0000
+++ ass/ar3030.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar3040.py'
--- ass/ar3040.py	2015-10-03 07:36:56 +0000
+++ ass/ar3040.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar3050.py'
--- ass/ar3050.py	2015-10-03 07:36:56 +0000
+++ ass/ar3050.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'ass/ar4010.py'
--- ass/ar4010.py	2015-10-03 07:36:56 +0000
+++ ass/ar4010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/ar6010.py'
--- ass/ar6010.py	2015-12-12 09:12:17 +0000
+++ ass/ar6010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'ass/ar6020_rne.py'
--- ass/ar6020_rne.py	2014-12-30 15:37:38 +0000
+++ ass/ar6020_rne.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'ass/ar6030_rne.py'
--- ass/ar6030_rne.py	2014-12-30 15:37:38 +0000
+++ ass/ar6030_rne.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'ass/arc110.py'
--- ass/arc110.py	2015-10-03 07:36:56 +0000
+++ ass/arc110.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'ass/arc210.py'
--- ass/arc210.py	2015-10-03 07:36:56 +0000
+++ ass/arc210.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'ass/arc310.py'
--- ass/arc310.py	2015-08-25 15:02:35 +0000
+++ ass/arc310.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'ass/arc320.py'
--- ass/arc320.py	2015-10-03 07:36:56 +0000
+++ ass/arc320.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bkm/bk1010.py'
--- bkm/bk1010.py	2015-10-25 09:33:02 +0000
+++ bkm/bk1010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -183,11 +183,21 @@
         cmds = [
             ("<Double-1>", self.doBkm),
             ("<Button-3>", self.doEnq)]
-        self.cal = ScrollGrid(**{"mf": self.opts["mf"], "titl": titl,
-            "chgt": 2, "labs": labs, "tags": tags, "cols": cols,
-            "data": data, "font": (self.opts["mf"].rcdic["mft"],
-            self.opts["mf"].rcdic["dfs"]), "butt": butt, "cmds": cmds,
-            "loop": False, "minc": 14})
+        self.cal = ScrollGrid(**{
+            "mf": self.opts["mf"],
+            "titl": titl,
+            "chgt": 2,
+            "tags": tags,
+            "labs": labs,
+            "cols": cols,
+            "data": data,
+            "butt": butt,
+            "cmds": cmds,
+            "font": (
+                self.opts["mf"].rcdic["mft"],
+                self.opts["mf"].rcdic["dfs"]),
+            "loop": False,
+            "minc": 14})
         self.opts["mf"].startLoop()
         if self.tt:
             self.tt.hideTip()
@@ -222,7 +232,7 @@
             ("names", "Names", 20, "TX", "F"),
             ("group", "Group", 30, "TX", "F"),
             ("arrive", "Arrival-Dt", 10, "d1", "F"),
-            ("state", "S", 1, "UA", "F")]
+            ("state", "Status", 1, "UA", "F")]
         data = self.sql.getRec(
             tables=["bkmmst", "bkmcon"],
             cols=[

=== modified file 'bkm/bk1020.py'
--- bkm/bk1020.py	2015-12-12 09:12:17 +0000
+++ bkm/bk1020.py	2016-02-23 15:44:12 +0000
@@ -23,7 +23,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, time
@@ -260,7 +260,7 @@
                 self.newmst = True
                 self.units = ""
                 self.df.loadEntry("T", 1, 6, data="E")
-                self.df.loadEntry(frt, pag, p+15, data=self.state)
+                self.df.loadEntry(frt, pag, p + 15, data=self.state)
                 return
         self.oldmst = self.sql.getRec(tables="bkmmst", where=[("bkm_cono",
             "=", self.opts["conum"]), ("bkm_number", "=", w)], limit=1)
@@ -390,7 +390,7 @@
                 else:
                     self.aunits[unt] = {"desc": des, "qty": qty, "rms": {}}
                     if typ == "A":
-                        for r in range(1, rms+1):
+                        for r in range(1, rms + 1):
                             self.aunits[unt]["rms"][r] = True
             bks = self.sql.getRec(tables=["bkmmst", "bkmrtt"],
                 cols=[
@@ -519,10 +519,10 @@
             self.opts["mf"].startLoop()
             self.df.setWidget(self.df.mstFrame, state="show")
             self.df.enableButtonsTags(state=state)
+        err = self.doCheckUnits()
+        if err:
+            return err
         self.df.loadEntry(frt, 1, 7, data=self.units)
-        err = self.doCheckUnits()
-        if err:
-            return err
         self.getBookingValue()
         self.df.loadEntry("T", 1, 8, data=self.value)
         self.stddep, self.stddte, self.grpdep, self.grpdte = self.getDeposit()
@@ -645,8 +645,8 @@
         self.crdesc = racc[0]
         self.crbase = racc[1]
         self.cnrate = racc[2]
-        self.cg.loadEntry(frt, pag, p+1, data=self.crdesc)
-        self.cg.loadEntry(frt, pag, p+2, data=self.cnrate)
+        self.cg.loadEntry(frt, pag, p + 1, data=self.crdesc)
+        self.cg.loadEntry(frt, pag, p + 2, data=self.cnrate)
 
     def doChgPpl(self, frt, pag, r, c, p, i, w):
         self.cppl = w
@@ -661,7 +661,7 @@
             dif = rte % 5
             if dif:
                 rte = rte + (5 - dif)
-            self.cg.loadEntry(frt, pag, p+1, data=rte)
+            self.cg.loadEntry(frt, pag, p + 1, data=rte)
 
     def doChgRte(self, frt, pag, r, c, p, i, w):
         self.carate = w
@@ -754,8 +754,8 @@
         self.udes = rec[0]
         self.uqty = rec[1]
         self.dflt = rec[2]
-        self.rt.loadEntry(frt, pag, p+1, data=self.udes)
-        self.rt.loadEntry(frt, pag, p+3, data=self.dflt)
+        self.rt.loadEntry(frt, pag, p + 1, data=self.udes)
+        self.rt.loadEntry(frt, pag, p + 3, data=self.dflt)
         self.rt1["where"] = [
             ("brm_cono", "=", self.opts["conum"]),
             ("brm_type", "=", tp), ("brr_cono=brm_cono",),
@@ -766,7 +766,7 @@
     def doUDesc(self, frt, pag, r, c, p, i, w):
         self.udes = w
         self.urme = 0
-        self.rt.loadEntry(frt, pag, p+1, data=self.urme)
+        self.rt.loadEntry(frt, pag, p + 1, data=self.urme)
         return "sk1"
 
     def doURme(self, frt, pag, r, c, p, i, w):
@@ -801,13 +801,13 @@
         self.rdesc = racc[0]
         self.rbase = racc[1]
         self.nrate = racc[2]
-        self.rt.loadEntry(frt, pag, p+1, data=self.rdesc)
-        self.rt.loadEntry(frt, pag, p+2, data=self.nrate)
+        self.rt.loadEntry(frt, pag, p + 1, data=self.rdesc)
+        self.rt.loadEntry(frt, pag, p + 2, data=self.nrate)
         if self.uqty == 999 or self.uqty > self.guests:
-            self.rt.loadEntry(frt, pag, p+3, data=self.guests)
+            self.rt.loadEntry(frt, pag, p + 3, data=self.guests)
         else:
-            self.rt.loadEntry(frt, pag, p+3, data=self.uqty)
-        self.rt.loadEntry(frt, pag, p+4, data=self.bdays)
+            self.rt.loadEntry(frt, pag, p + 3, data=self.uqty)
+        self.rt.loadEntry(frt, pag, p + 4, data=self.bdays)
         return "sk2"
 
     def doUPpl(self, frt, pag, r, c, p, i, w):
@@ -834,7 +834,7 @@
                 self.arate = self.arate + (5 - dif)
         else:
             self.arate = self.nrate
-        self.rt.loadEntry(frt, pag, p+1, data=self.arate)
+        self.rt.loadEntry(frt, pag, p + 1, data=self.arate)
 
     def doUAmount(self, frt, pag, r, c, p, i, w):
         self.arate = w
@@ -872,7 +872,7 @@
             ds = rec[self.sql.bkmrtt_col.index("brt_discp")]
             ar = rec[self.sql.bkmrtt_col.index("brt_arate")]
             self.rt.loadEntry("C", 0, pos, data=cc)
-            self.rt.loadEntry("C", 0, pos+1, data=ud)
+            self.rt.loadEntry("C", 0, pos + 1, data=ud)
             self.rt.loadEntry("C", 0, pos+2, data=rm)
             self.rt.loadEntry("C", 0, pos+3, data=rc)
             self.rt.loadEntry("C", 0, pos+4, data=rd)
@@ -963,15 +963,15 @@
                 self.stddte = 0
                 self.grpdep = 0
                 self.grpdte = 0
-                self.df.loadEntry(frt, pag, p+1, data=self.stddte)
-                self.df.loadEntry(frt, pag, p+2, data=self.grpdep)
-                self.df.loadEntry(frt, pag, p+3, data=self.grpdte)
+                self.df.loadEntry(frt, pag, p + 1, data=self.stddte)
+                self.df.loadEntry(frt, pag, p + 2, data=self.grpdep)
+                self.df.loadEntry(frt, pag, p + 3, data=self.grpdte)
                 return "sk3"
         else:
             self.grpdep = w
             if not self.grpdep:
                 self.grpdte = 0
-                self.df.loadEntry(frt, pag, p+1, data=self.grpdte)
+                self.df.loadEntry(frt, pag, p + 1, data=self.grpdte)
                 return "sk1"
 
     def doDepdate(self, frt, pag, r, c, p, i, w):
@@ -1120,7 +1120,7 @@
         f, p, c, m = self.df.doCheckFields(fields=["T", 1, None])
         if m:
             self.df.selPage("Booking")
-            self.df.focusField(f, p, (c+1), err=m)
+            self.df.focusField(f, p, (c + 1), err=m)
             return
         if not self.df.t_work[2][0][1]:
             self.df.selPage("Contact")
@@ -1129,7 +1129,7 @@
         f, p, c, m = self.df.doCheckFields(("T", 2, None))
         if m:
             self.df.selPage("Contact")
-            self.df.focusField(f, p, (c+1), err=m)
+            self.df.focusField(f, p, (c + 1), err=m)
             return
         # Update Tables
         bal = self.getBalance().work
@@ -1270,8 +1270,8 @@
             if ok == "yes":
                 self.fee = True
                 self.tref = self.getRef()
-                self.tr.loadEntry(frt, pag, p+2, data=self.tdte)
-                self.tr.loadEntry(frt, pag, p+3, data=self.tref)
+                self.tr.loadEntry(frt, pag, p + 2, data=self.tdte)
+                self.tr.loadEntry(frt, pag, p + 3, data=self.tref)
                 return "sk3"
             else:
                 return "nd"
@@ -1288,7 +1288,7 @@
         self.tdte = w
         self.tcur = w / 100
         self.tref = self.getRef()
-        self.tr.loadEntry(frt, pag, p+1, data=self.tref)
+        self.tr.loadEntry(frt, pag, p + 1, data=self.tref)
 
     def doTRef(self, frt, pag, r, c, p, i, w):
         self.tref = w
@@ -1320,7 +1320,7 @@
             return "Invalid Amount"
         self.tamount = w
         if self.ttype == 4:                             # Cancellation
-            self.tr.loadEntry(frt, pag, p+1, data="Cancellation Charge")
+            self.tr.loadEntry(frt, pag, p + 1, data="Cancellation Charge")
 
     def doTDesc(self, frt, pag, r, c, p, i, w):
         self.tdesc = w
@@ -1340,8 +1340,8 @@
             return chk
         self.tglac = w
         self.tvcod = chk[2]
-        self.tr.loadEntry(frt, pag, p+1, data=chk[0])
-        self.tr.loadEntry(frt, pag, p+2, data=chk[2])
+        self.tr.loadEntry(frt, pag, p + 1, data=chk[0])
+        self.tr.loadEntry(frt, pag, p + 2, data=chk[2])
 
     def doTVcod(self, frt, pag, r, c, p, i, w):
         rec = self.sql.getRec(tables="ctlvmf", where=[("vtm_cono", "=",
@@ -1351,7 +1351,7 @@
         self.tvcod = w
         vrte = getVatRate(self.sql, self.opts["conum"], w, self.tdte)
         self.tvamt = round(self.tamount * vrte / (100 + vrte), 2)
-        self.tr.loadEntry(frt, pag, p+1, self.tvamt)
+        self.tr.loadEntry(frt, pag, p + 1, self.tvamt)
 
     def doTVamt(self, frt, pag, r, c, p, i, w):
         self.tvamt = w
@@ -1822,18 +1822,17 @@
             nd["%s_T%02i" % (t, s)][tc.index("tpd_text")] = txt
             if u[0] == "A" and u[3]:
                 u[2] = "%-s Room %3s" % (u[2], u[3])
-            bas = CCD(u[4], "UA", 1)
             qty = CCD(u[5], "UI", 3)
             per = CCD(u[6], "UI", 3)
             rte = CCD(u[7], "UD", 10.2)
             if rte.work:
-                if bas == "A":
+                if u[4] == "A":
                     txt = "%-35s %-3s x %-3s @ R%10s" % (u[2], qty.disp,
                         per.disp, rte.disp)
-                elif bas == "B":
+                elif u[4] == "B":
                     txt = "%-35s %-3s x       R%10s" % (u[2], qty.disp,
                         rte.disp)
-                elif bas == "C":
+                elif u[4] == "C":
                     txt = "%-35s       %-3s @ R%10s" % (u[2], per.disp,
                         rte.disp)
                 else:

=== modified file 'bkm/bk2010.py'
--- bkm/bk2010.py	2015-10-03 07:36:56 +0000
+++ bkm/bk2010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'bkm/bk3010.py'
--- bkm/bk3010.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bkm/bk3020.py'
--- bkm/bk3020.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3020.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bkm/bk3030.py'
--- bkm/bk3030.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3030.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import datetime, os, time
@@ -257,32 +257,36 @@
             bal = self.sql.getRec(tables="bkmtrn", cols=["sum(bkt_tramt)"],
                 where=[("bkt_cono", "=", self.opts["conum"]), ("bkt_number",
                 "=", number)], limit=1)
-            recs = self.sql.getRec(tables="bkmrtt", cols=["brt_udesc",
+            rtts = self.sql.getRec(tables="bkmrtt", cols=["brt_udesc",
                 "brt_uroom", "sum(brt_quant)"], where=[("brt_cono", "=",
                 self.opts["conum"]), ("brt_number", "=", number)],
                 group="brt_utype, brt_ucode, brt_udesc, brt_uroom",
                 order="brt_utype, brt_ucode, brt_uroom")
+            if not rtts:
+                continue
             units = []
             unt = None
-            for rec in recs:
-                if rec[1]:
+            for rtt in rtts:
+                if rtt[1]:
                     if not unt:
-                        unt = ["%s - R%s" % (rec[0], rec[1]), rec[2]]
+                        unt = ["%s - R%s" % (rtt[0], rtt[1]), rtt[2]]
                     else:
-                        unt = ["%s & R%s" % (unt[0], rec[1]), rec[2]]
+                        unt = ["%s & R%s" % (unt[0], rtt[1]), rtt[2]]
                 else:
-                    unt = (rec[0], rec[2])
+                    unt = (rtt[0], rtt[2])
                 units.append(unt)
             namq = len(wrap(name, break_long_words=False, width=25))
             untq = 0
             for unit in units:
                 untq += len(wrap(unit[0], break_long_words=False, width=25))
-            if untq > namq:
+            if namq and untq > namq:
                 hh = [(untq * 8.0) / namq, 8, untq * 8]
-            elif namq > untq:
+            elif untq and namq > untq:
                 hh = [8, (namq * 8.0) / untq, namq * 8]
+            elif namq:
+                hh = [8, 8, namq * 8]
             else:
-                hh = [8, 8, 8]
+                hh = [8, 8, untq * 8]
             if not self.fpdf.page or self.fpdf.get_y() + hh[0] > 280:
                 self.fpdf.add_page()
             oldnm = None

=== modified file 'bkm/bk3040.py'
--- bkm/bk3040.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3040.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bkm/bk3050.py'
--- bkm/bk3050.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3050.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bkm/bk3060.py'
--- bkm/bk3060.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3060.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'bkm/bk3070.py'
--- bkm/bk3070.py	2015-12-12 09:12:17 +0000
+++ bkm/bk3070.py	2016-02-11 14:13:13 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -86,7 +86,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'bkm/bk3080.py'
--- bkm/bk3080.py	2015-10-03 07:36:56 +0000
+++ bkm/bk3080.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import PrintBookingInvoice, Sql, TartanDialog

=== modified file 'bkm/bk3090.py'
--- bkm/bk3090.py	2015-12-12 09:12:17 +0000
+++ bkm/bk3090.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CreateChart, TartanDialog, Sql

=== modified file 'bkm/bkc110.py'
--- bkm/bkc110.py	2015-10-03 07:36:56 +0000
+++ bkm/bkc110.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bkm/bkc210.py'
--- bkm/bkc210.py	2015-08-25 15:02:35 +0000
+++ bkm/bkc210.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'bkm/bkc310.py'
--- bkm/bkc310.py	2015-08-25 15:02:35 +0000
+++ bkm/bkc310.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'bkm/bkc410.py'
--- bkm/bkc410.py	2014-12-30 15:37:38 +0000
+++ bkm/bkc410.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'bkm/bkc510.py'
--- bkm/bkc510.py	2015-12-12 09:12:17 +0000
+++ bkm/bkc510.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bwl/bc1010.py'
--- bwl/bc1010.py	2015-10-25 09:33:02 +0000
+++ bwl/bc1010.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, FileImport, GetCtl, ProgressBar, RepPrt, Sql

=== modified file 'bwl/bc1020.py'
--- bwl/bc1020.py	2014-12-30 15:37:38 +0000
+++ bwl/bc1020.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os

=== modified file 'bwl/bc1030.py'
--- bwl/bc1030.py	2014-12-30 15:37:38 +0000
+++ bwl/bc1030.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'bwl/bc1040.py'
--- bwl/bc1040.py	2015-12-12 09:12:17 +0000
+++ bwl/bc1040.py	2016-01-07 07:43:04 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql
@@ -203,16 +203,21 @@
         else:
             self.sql.updRec("bwltyp", data=data, where=[("bct_cono", "=",
                 self.opts["conum"]), ("bct_code", "=", self.ctype)])
-        self.df.setWidget(self.df.mstFrame, state="hide")
         self.perr = False
-        if self.pdiff == "Y":
-            self.doPtsFmt("D")
-        if not self.perr:
+        if self.cfmat in ("K", "R"):
+            if self.newtyp:
+                self.sql.insRec("bwlpts", data=[self.opts["conum"],
+                    self.ctype, "D", "N", 0, "N", 0, 0, 0, "N", 0, 0])
+        else:
+            self.df.setWidget(self.df.mstFrame, state="hide")
             if self.pdiff == "Y":
-                self.doPtsFmt("S")
-            else:
-                self.doPtsFmt("B")
-        self.df.setWidget(self.df.mstFrame, state="show")
+                self.doPtsFmt("D")
+            if not self.perr:
+                if self.pdiff == "Y":
+                    self.doPtsFmt("S")
+                else:
+                    self.doPtsFmt("B")
+            self.df.setWidget(self.df.mstFrame, state="show")
         if self.perr:
             self.opts["mf"].dbm.rollbackDbase()
             self.df.focusField(self.df.frt, self.df.pag, self.df.col)

=== modified file 'bwl/bc2010.py'
--- bwl/bc2010.py	2015-10-03 07:36:56 +0000
+++ bwl/bc2010.py	2016-02-25 07:34:56 +0000
@@ -83,7 +83,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, random, time
@@ -152,6 +152,28 @@
                 ("btb_rate1", "", 0, "RP")),
             "where": [("btb_cono", "=", self.opts["conum"])],
             "order": "btb_surname, btb_names"}
+        v1 = {
+            "stype": "R",
+            "tables": ("bwltab",),
+            "cols": (
+                ("btb_surname", "", 0, "Surname","Y"),
+                ("btb_names", "", 0, "Names"),
+                ("btb_tab", "", 0, "Tab")),
+            "where": [
+                ("btb_cono", "=", self.opts["conum"]),
+                ("btb_tab", ">=", self.nstart)],
+            "order": "btb_surname, btb_names"}
+        v2 = {
+            "stype": "R",
+            "tables": ("bwltab",),
+            "cols": (
+                ("btb_names", "", 0, "Names"),
+                ("btb_tab", "", 0, "Tab")),
+            "where": [
+                ("btb_cono", "=", self.opts["conum"]),
+                ("btb_tab", ">=", self.nstart)],
+            "whera": [("T", "btb_surname", 1, 1)],
+            "order": "btb_names"}
         r1s = (("Morning", "M"), ("Afternoon", "A"))
         r2s = (("Yes", "Y"), ("No", "N"))
         r3s = (("Position", "P"), ("Rating", "R"), ("Combination", "C"))
@@ -181,9 +203,9 @@
             (("T",1,0,0),"I@btb_tab",0,"","Tab Number(noesc)",
                 "","Y",self.doTab,self.mem,None,("efld",)),
             (("T",1,1,0),"I@btb_surname",0,"","",
-                "","N",None,None,None,("notblank",)),
+                "","N",self.doSurname,v1,None,("notblank",)),
             (("T",1,2,0),"I@btb_names",0,"","",
-                "","N",None,None,None,("efld",)),
+                "","N",self.doNames,v2,None,("efld",)),
             (("T",1,3,0),("IRB",r4s),0,"Gender","",
                 "M","N",self.doGender,None,None,None),
             (("T",1,4,0),("IRB",r5s),0,"Position","",
@@ -193,12 +215,18 @@
             (("T",1,6,0),("IRB",r2s),0,"Paid","",
                 "Y","N",None,None,self.doDelete,None))
         but = (
-            ("Arranged",None,self.doArranged,0,("T",1,1),None,None,1),
-            ("Entered",None,self.doEntered,0,("T",1,1),None,None,1),
-            ("Modify",None,self.doModify,0,("T",1,7),None,None,1),
-            ("Draw",None,self.doDraw,0,("T",1,1),None,None,1),
-            ("Print",None,self.doPrint,0,("T",1,1),None,None,2),
-            ("Edit Draw",None,self.doEdit,0,("T",1,1),None,None,2,2),
+            ("Arranged",None,self.doArranged,0,("T",1,1),None,
+                "Enter arranged games",1),
+            ("Entered",None,self.doEntered,0,("T",1,1),None,
+                "Display a list of entered tabs",1),
+            ("Modify",None,self.doModify,0,("T",1,7),None,
+                "Change existing ratings for this draw",1),
+            ("Draw",None,self.doDraw,0,("T",1,1),None,
+                "Genetrate a new draw",1),
+            ("Print",None,self.doPrint,0,("T",1,1),None,
+                "Print the draw",2),
+            ("Edit Draw",None,self.doEdit,0,("T",1,1),None,
+                "Change the draw",2,2),
             ("Exit",None,self.doExit,1,None,None,None,2))
         tnd = ((self.doEnd,"y"), (self.doEnd,"n"))
         txt = (self.doExit, self.doExit)
@@ -514,9 +542,27 @@
             return "sk3"
         elif self.dbase in ("C", "R") and not self.df.t_work[1][0][p + 5]:
             self.df.loadEntry(frt, pag, p + 5, data=1)
+            if self.dbase == "C":
+                return "sk3"
+            else:
+                return "sk4"
         else:
             return "sk5"
 
+    def doSurname(self, frt, pag, r, c, p, i, w):
+        self.sname = w
+
+    def doNames(self, frt, pag, r, c, p, i, w):
+        chk = self.sql.getRec(tables="bwltab", cols=["btb_tab", ],
+            where=[("btb_cono", "=", self.opts["conum"]), ("btb_surname",
+            "ilike", self.sname, "and", "btb_names", "ilike", w),
+            ("btb_tab", ">=", self.nstart)], order="btb_tab", limit=1)
+        if chk:
+            self.df.loadEntry(frt, pag, 0, data=chk[0])
+            self.doLoadTab(chk[0], frt)
+            self.visitor = False
+            return "sk3"
+
     def doGender(self, frt, pag, r, c, p, i, w):
         if self.dbase == "R":
             self.df.loadEntry(frt, pag, p + 1, data="")

=== modified file 'bwl/bc2020.py'
--- bwl/bc2020.py	2015-10-03 07:36:56 +0000
+++ bwl/bc2020.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, MyFpdf, TartanDialog, Sql

=== modified file 'bwl/bc2030.py'
--- bwl/bc2030.py	2015-10-03 07:36:56 +0000
+++ bwl/bc2030.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'bwl/bc2040.py'
--- bwl/bc2040.py	2015-10-03 07:36:56 +0000
+++ bwl/bc2040.py	2016-01-13 09:45:13 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog
@@ -33,6 +33,7 @@
         if not bwlctl:
             return
         self.nstart = bwlctl["ctb_nstart"]
+        self.dbase = bwlctl["ctb_dbase"]
         return True
 
     def mainProcess(self):
@@ -243,7 +244,12 @@
         data.extend(self.ns.t_work[0][0][1:3])
         data.extend([self.ns.t_work[0][0][0], "", "", "", ""])
         data.extend(self.ns.t_work[0][0][3:])
-        data.extend([0, 0, 0, 0, 0])
+        if self.dbase == "C":
+            data.extend([4, 5, 4, 5, 0])
+        elif self.dbase == "P":
+            data.extend([4, 0, 4, 0, 0])
+        else:
+            data.extend([0, 5, 0, 5, 0])
         self.sql.insRec("bwltab", data=data)
         self.opts["mf"].closeLoop()
 

=== modified file 'bwl/bc2050.py'
--- bwl/bc2050.py	2015-12-12 09:12:17 +0000
+++ bwl/bc2050.py	2016-02-05 08:34:08 +0000
@@ -21,7 +21,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, random, time
@@ -78,8 +78,9 @@
                 ("tpm_title", "", 0, "Title", "Y")),
             "where": [("tpm_type", "=", "C")],
             "order": "tpm_tname"}
-        r1s = (("No", "N"),("Yes","Y"),("Only", "O"))
+        r1s = (("First", "F"), ("Last", "L"))
         r2s = (("Yes","Y"),("No", "N"))
+        r3s = (("No", "N"),("Yes","Y"),("Only", "O"))
         fld = (
             (("T",0,0,0),"I@bcm_code",0,"","",
                 "","N",self.doCmpCod,cpt,None,None),
@@ -90,23 +91,27 @@
                 self.today,"N",self.doGamDte,None,None,("efld",)),
             (("T",0,3,0),"IUI",1,"Number of Groups","",
                 0,"N",self.doGrpNum,None,None,("in", (0, 2, 3))),
-            (("T",0,4,0),"IUA",30,"Greens","Greens (A,B,C)",
+            (("T",0,4,0),("IRB",r1s),0,"Smallest Group","",
+                "L","N",self.doGrpSml,None,None,None),
+            (("T",0,5,0),"IUA",30,"Greens","Greens (A,B,C)",
                 "","N",self.doGreens,None,None,("notblank",),None,"Available "\
                 "Greens in the format A,B or A,B345 showing Green Code and "\
-                "Rinks. If the Rinks are Not Entered they will Default to 6."),
-            (("T",0,5,0),("IRB",r2s),0,"Group per Green","",
+                "Rinks. If the Rinks are Not Entered they will Default to 6. "\
+                "To Default to 7 Rinks enter the Green Code followd by 7 e.g. "\
+                "A7 or A1234567"),
+            (("T",0,6,0),("IRB",r2s),0,"Group per Green","",
                 "N","N",self.doGrpGrn,None,None,None),
-            (("T",0,6,0),("IRB",r1s),0,"Print Cards","",
+            (("T",0,7,0),("IRB",r3s),0,"Print Cards","",
                 "N","N",self.doPrtCards,None,None,None),
-            (("T",0,7,0),("IRB",r2s),0,"All Cards","",
+            (("T",0,8,0),("IRB",r2s),0,"All Cards","",
                 "Y","N",self.doAllCards,None,None,None),
-            (("T",0,8,0),"INA",20,"Template Name","",
+            (("T",0,9,0),"INA",20,"Template Name","",
                 "comp_cards","N",self.doTplNam,tpm,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         self.df = TartanDialog(self.opts["mf"], tops=False, title=tit,
             eflds=fld, tend=tnd, txit=txt, view=("Y","V"), mail=("Y","Y"))
-        self.df.setWidget(self.df.topEntry[0][10][2][0], state="hide")
+        self.df.setWidget(self.df.topEntry[0][11][2][0], state="hide")
 
     def doCmpCod(self, frt, pag, r, c, p, i, w):
         bwlcmp = self.sql.getRec(tables="bwlcmp", where=[("bcm_cono", "=",
@@ -192,14 +197,16 @@
             if self.cfmat == "R":
                 return "sk1"
             else:
-                return "sk2"
+                self.grpsel = False
+                self.grpgrn = "N"
+                return "sk10"
         elif self.cfmat == "K":
             ok = askQuestion(self.opts["mf"].body, "Drawn", "This Knockout "\
                 "Competition has Already Been Drawn, Do You Want to Reprint?")
             if ok == "yes":
                 self.reprint = True
                 self.datd = CCD(gme[0][2], "D1", 10).disp
-                return "sk9"
+                return "sk10"
             else:
                 return "rf"
         for game in gme:
@@ -239,42 +246,42 @@
             self.date = chk[2]
             self.datd = CCD(self.date, "D1", 10).disp
             self.df.loadEntry(frt, pag, p+1, data=self.date)
-            self.df.setWidget(self.df.topEntry[0][7][2][0], state="show")
-            return "sk4"
-        if w == 1 and (self.cfmat == "R" or (self.cfmat == "T" and \
-                                                    self.gtyp == "D")):
+            self.df.setWidget(self.df.topEntry[0][8][2][0], state="show")
+            return "sk5"
+        if w == 1 and (self.cfmat == "R" or \
+                (self.cfmat == "T" and self.gtyp == "D")):
             ok = askQuestion(self.opts["mf"].body, "Drawn Games",
                 "Do You Want to Print All Drawn Games?", default="no")
             if ok == "yes":
                 self.drawall = True
-        self.df.setWidget(self.df.topEntry[0][7][2][0], state="hide")
+        self.df.setWidget(self.df.topEntry[0][8][2][0], state="hide")
 
     def doGamDte(self, frt, pag, r, c, p, i, w):
         if w < self.today or w < self.sdat:
             return "Invalid Date, in the Past or Before the Starting Date"
         self.date = w
         self.datd = self.df.t_disp[pag][0][i]
-        if self.cfmat == "K":
-            self.grpsel = False
-            self.grpgrn = "N"
-            return "sk6"
         if self.groups == "Y" and self.grgame == (self.game - 1):
             self.grpsel = True
         else:
             self.grpsel = False
-            return "sk1"
+            return "sk2"
 
     def doGrpNum(self, frt, pag, r, c, p, i, w):
         if not w:
             return "Invalid Number, Must Be Two or More"
         self.grpnum = w
 
+    def doGrpSml(self, frt, pag, r, c, p, i, w):
+        self.grpsml = w
+
     def doGreens(self, frt, pag, r, c, p, i, w):
         self.greens, self.first, self.endrks, err = getGreens(w, self.totskp/2)
         if err:
             return err
         grns = w.split(",")
-        for x in xrange(1, 6):
+        for x in xrange(1, 5):
+            # Up to 4 greens allowed
             if x <= len(grns):
                 setattr(self, "gr%s" % x, grns[x-1][0])
             else:
@@ -343,16 +350,18 @@
         else:
             self.printGame()
         if not self.reprint:
-            ok = askQuestion(self.opts["mf"].body, "Summary",
-                "Do You Want to Print a Cards Summary?", default="no")
-            if ok == "yes":
-                callModule(self.opts["mf"], None, "bc3090",
-                    coy=[self.opts["conum"], self.opts["conam"]],
-                    args=[self.ccod, self.df.repprt, self.df.repeml])
-            if self.game == 1 and self.cfmat == "R":
-                self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
-                    self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
-                    ("bcg_game", ">", self.games)])
+            if self.cfmat == "R":
+                if self.game == 1:
+                    self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
+                        self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                        ("bcg_game", ">", self.games)])
+            else:
+                ok = askQuestion(self.opts["mf"].body, "Summary",
+                    "Do You Want to Print a Draw Summary?", default="no")
+                if ok == "yes":
+                    callModule(self.opts["mf"], None, "bc3090",
+                        coy=[self.opts["conum"], self.opts["conam"]],
+                        args=[self.ccod, self.df.repprt, self.df.repeml])
             if not self.drawall:
                 self.opts["mf"].dbm.commitDbase(ask=True, rback=False)
         if self.prtcards in ("Y", "O"):
@@ -427,7 +436,10 @@
             for grpcod in xrange(1, grpcnt + 1):
                 qty = totskp / grpcnt
                 if totskp % grpcnt:
-                    qty += 1
+                    if grpcod == 1 and self.grpsml == "F":
+                        qty -= 1
+                    else:
+                        qty += 1
                 if qty % 2:
                     qty += 1
                 totskp -= qty
@@ -538,23 +550,23 @@
                     lst = grp
                     pos = 0
                 rnk = None
-                if grp == 0 and pos < 6:
-                    rnk = "%s%s" % (self.first, [4, 3, 5, 2, 1, 6][pos])
+                if grp == 0 and pos < len(self.greens[self.first]):
+                    rnk = "%s%s" % (self.first, [4, 3, 5, 2, 1, 6, 7][pos])
                 elif grp == 1:
                     if self.grpgrn == "Y" and self.gr1:
-                        rnk = "%s%s" % (self.gr1, [4, 3, 5, 2, 1, 6][pos])
-                    elif pos < 4:
-                        rnk = "%s%s" % (self.first, [4, 3, 5, 2][pos])
+                        rnk = "%s%s" % (self.gr1, [4, 3, 5, 2, 1, 6, 7][pos])
+                    elif pos < len(self.greens[self.first]) - 2:
+                        rnk = "%s%s" % (self.first, [4, 3, 5, 2, 7][pos])
                 elif grp == 2:
                     if self.grpgrn == "Y" and self.gr2:
-                        rnk = "%s%s" % (self.gr2, [4, 3, 5, 2, 1, 6][pos])
+                        rnk = "%s%s" % (self.gr2, [4, 3, 5, 2, 1, 6, 7][pos])
                     elif num == 2 and pos < 2:
                         rnk = "%s%s" % (self.first, [1, 6][pos])
                 elif grp == 2 and num == 3 and pos == 0:
                     rnk = "%s1" % self.first
                 elif grp == 3:
                     if self.grpgrn == "Y" and self.gr3:
-                        rnk = "%s%s" % (self.gr3, [4, 3, 5, 2, 1, 6][pos])
+                        rnk = "%s%s" % (self.gr3, [4, 3, 5, 2, 1, 6, 7][pos])
                     elif num == 3 and pos == 0:
                         rnk = "%s6" % self.first
                 if rnk and rnk in allrnk:
@@ -805,10 +817,10 @@
                 while temp:
                     p1 = temp.pop(0)
                     p2 = temp.pop(0)
-                    self.sql.updRec("bwlgme", cols=["bcg_date", "bcg_ocod"],
-                        data=[self.date, p2], where=[("bcg_cono", "=",
-                        self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
-                        ("bcg_scod", "=", p1), ("bcg_game", "=", self.game)])
+                    self.sql.updRec("bwlgme", cols=["bcg_ocod"], data=[p2],
+                        where=[("bcg_cono", "=", self.opts["conum"]),
+                        ("bcg_ccod", "=", self.ccod), ("bcg_scod", "=", p1),
+                        ("bcg_game", "=", self.game)])
                     self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
                         self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
                         ("bcg_scod", "=", p2), ("bcg_game", "=", self.game)])
@@ -1067,13 +1079,13 @@
             self.ccod), ("bcg_scod > 900000",), ("bcg_game", "=", self.game),
             ("bcg_group", "=", grp), ("bcg_ocod = 0",)], order="bcg_scod")
         if chk:
-            self.sql.updRec("bwlgme", cols=["bcg_date", "bcg_ocod"],
-                data=[self.date, chk[0][0]], where=[("bcg_cono", "=",
-                self.opts["conum"]), ("bcg_ccod", "=", self.ccod), ("bcg_scod",
-                "=", one), ("bcg_game", "=", self.game)])
+            self.sql.updRec("bwlgme", cols=["bcg_ocod"], data=[chk[0][0]],
+                where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
+                "=", self.ccod), ("bcg_scod", "=", one), ("bcg_game",
+                "=", self.game)])
             self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
-                self.opts["conum"]), ("bcg_ccod", "=", self.ccod), ("bcg_scod",
-                "=", chk[0][0]), ("bcg_game", "=", self.game)])
+                self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                ("bcg_scod", "=", chk[0][0]), ("bcg_game", "=", self.game)])
 
     def printBracket(self, grp, skips):
         cwth, chgt = self.setBracketFont()
@@ -1391,10 +1403,10 @@
         self.fpdf.drawText(head, font=["courier", "B", 18])
         self.fpdf.drawText()
         self.fpdf.setFont(style="B")
-        self.printLine("%-30s" % "Name", " GR ", "%-30s" % "Opposition",
+        self.printLine("%-30s" % "Name", " RK ", "%-30s" % "Opposition",
             fill=1)
         self.fpdf.setFont()
-        self.pglin = 4
+        self.pglin += 4
 
     def printLine(self, a, b, c, fill=0):
         x = 10
@@ -1409,11 +1421,15 @@
 
     def printCards(self):
         recs = []
-        bwlpts = self.sql.getRec(tables="bwlpts", where=[("bcp_cono",
-            "=", self.opts["conum"]), ("bcp_code", "=", self.ctyp),
-            ("bcp_ptyp", "=", self.gtyp)], limit=1)
-        skins = bwlpts[self.sql.bwlpts_col.index("bcp_skins")]
-        sends = bwlpts[self.sql.bwlpts_col.index("bcp_sends")]
+        if self.cfmat == "R":
+            skins = "N"
+            sends = 0
+        else:
+            bwlpts = self.sql.getRec(tables="bwlpts", where=[("bcp_cono",
+                "=", self.opts["conum"]), ("bcp_code", "=", self.ctyp),
+                ("bcp_ptyp", "=", self.gtyp)], limit=1)
+            skins = bwlpts[self.sql.bwlpts_col.index("bcp_skins")]
+            sends = bwlpts[self.sql.bwlpts_col.index("bcp_sends")]
         if self.allcards == "N":
             gme = getSingleRecords(self.opts["mf"], "bwlgme", ("bcg_rink",
                 "bcg_scod", "bcg_ocod"), where=[("bcg_cono", "=",
@@ -1433,6 +1449,8 @@
         for rec in recs:
             if rec[0] in chk:
                 continue
+            if self.cfmat == "R" and (rec[0] > 900000 or rec[1] > 900000):
+                continue
             skips.append(rec)
             chk.extend([rec[0], rec[1]])
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"], __name__,
@@ -1450,16 +1468,17 @@
         mm = round(115.0 / (self.ends + 1), 2)
         for x in xrange(self.ends + 1):
             y3 = (x * mm) + 28
-            y4 = y3 + mm
-            fill = False
             if x == self.ends:
+                y4 = 145
                 fill = True
                 dat = "Total"
-                y4 = 145
             else:
+                y4 = y3 + mm
                 end = x + 1
                 if (skins == "Y" and not end % sends):
                     fill = True
+                else:
+                    fill = False
                 dat = end
             for nam in self.form.body:
                 fld = "%s_C%02i" % (nam, x)

=== modified file 'bwl/bc2060.py'
--- bwl/bc2060.py	2015-10-03 07:36:56 +0000
+++ bwl/bc2060.py	2016-02-24 12:16:40 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -65,7 +65,7 @@
         fld = (
             (("T",0,0,0),"I@bcm_code",0,"","",
                 "","Y",self.doCmpCod,com,None,("notzero",)),
-            (("T",0,0,0),"O@bcm_name",0,"Name"),
+            (("T",0,0,0),"ONA",30,""),
             (("T",0,1,0),"O@bcg_game",0,"Game Number"),
             (("T",0,1,0),"I@bcg_date",0,"Date","",
                 self.today,"N",self.doDate,None,None,("efld",)),
@@ -100,25 +100,31 @@
             where=[("bct_cono", "=", self.opts["conum"]), ("bct_code", "=",
             ctyp)], limit=1)
         if chk[0] == "K":
-            return "Knockout Competitions Do Not Have Cards"
+            return "Knockout Draw Cannot be Changed"
         chk = self.sql.getRec(tables="bwlgme", cols=["bcg_game", "bcg_date",
-            "bcg_aflag", "sum(bcg_ocod)", "sum(bcg_points)"],
+            "bcg_aflag", "sum(bcg_ocod)", "sum(bcg_shots_for)"],
             where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
             w)], group="bcg_game, bcg_date, bcg_aflag")
         self.ccod = w
         self.game = 0
+        results = False
         abandon = False
         for c in chk:
             if c[2] == "A":
                 abandon = True
                 continue
-            if c[2] in ("", "D", "S") and c[3] and not c[4]:
+            if c[4]:
+                results = True
+            if c[2] in ("", "D", "S") and c[3]:
                 abandon = False
-                self.game = c[0]
-                self.date = c[1]
-                break
+                if c[4]:
+                    results = True
+                else:
+                    self.game = c[0]
+                    self.date = c[1]
+                    break
         if not self.game:
-            if not abandon:
+            if not abandon and not results:
                 ok = askQuestion(self.opts["mf"].body, "Manual Draw",
                     "Is this the First Game and is it going to be a "\
                     "Manual Draw?", default="no")
@@ -236,7 +242,7 @@
                 ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", self.game)],
                 group="bcg_ocod", order="bcg_ocod")
             for c in chk:
-                if c[1] != 1:
+                if c[0] and c[1] != 1:
                     skp = self.sql.getRec(tables="bwlgme", cols=["bcg_scod"],
                         where=[("bcg_cono", "=", self.opts["conum"]),
                         ("bcg_ccod", "=", self.ccod), ("bcg_game", "=",
@@ -252,6 +258,7 @@
                     for s in skp:
                         err = err + "\nSkip %s" % s[0]
                     showError(self.opts["mf"].body, "Skip Error", err)
+                    self.df.focusField(self.df.frt, self.df.pag, self.df.col)
                     return
             chk = self.sql.getRec(tables="bwlgme", cols=["bcg_rink",
                 "count(*)"], where=[("bcg_cono", "=", self.opts["conum"]),
@@ -288,6 +295,7 @@
                                 mis = "%s, %s" % (mis, r)
                     err = err + "\n\nAvailable Rink(s)\n\n%s" % mis
                     showError(self.opts["mf"].body, "Rink Error", err)
+                    self.df.focusField(self.df.frt, self.df.pag, self.df.col)
                     return
             self.opts["mf"].dbm.commitDbase(ask=True)
         self.df.closeProcess()

=== modified file 'bwl/bc2070.py'
--- bwl/bc2070.py	2015-12-12 09:12:17 +0000
+++ bwl/bc2070.py	2016-01-12 12:48:18 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ASD, TartanDialog, Sql

=== modified file 'bwl/bc3010.py'
--- bwl/bc3010.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3010.py	2016-02-24 12:02:36 +0000
@@ -2,7 +2,7 @@
 
 """
 SYNOPSIS
-    Bowls Random Tabs Draw Print.
+    Bowls Random Tabs Draw Re-Print.
 
     This file is part of Tartan Financial Systems (TARTAN).
 
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bwl/bc3020.py'
--- bwl/bc3020.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3020.py	2016-01-13 09:34:23 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time
@@ -224,10 +224,7 @@
             if tab in self.dic[self.tab]:
                 self.clash = True
             self.dic[self.tab].append(tab)
-        if self.heading == "main":
-            return nam
-        else:
-            return "%s (%s)" % (nam, rec[2])
+        return nam
 
     def header(self):
         self.fpdf.set_font("Arial","B",15)

=== modified file 'bwl/bc3030.py'
--- bwl/bc3030.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3030.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import MyFpdf, Sql, TartanDialog

=== modified file 'bwl/bc3040.py'
--- bwl/bc3040.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3040.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os

=== modified file 'bwl/bc3050.py'
--- bwl/bc3050.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3050.py	2016-01-03 17:07:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, RepPrt, Sql

=== modified file 'bwl/bc3060.py'
--- bwl/bc3060.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3060.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, RepPrt, Sql

=== modified file 'bwl/bc3070.py'
--- bwl/bc3070.py	2015-12-12 09:12:17 +0000
+++ bwl/bc3070.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'bwl/bc3080.py'
--- bwl/bc3080.py	2015-12-12 09:12:17 +0000
+++ bwl/bc3080.py	2016-01-12 15:20:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time
@@ -57,7 +57,7 @@
         fld = (
             (("T",0,0,0),"I@bcm_code",0,"","",
                 "","N",self.doCmpCod,com,None,("notzero",)),
-            (("T",0,0,0),"O@bcm_name",0,""),
+            (("T",0,0,0),"ONA",30,""),
             (("T",0,1,0),("IRB",r1s),0,"Paper Type","",
                 "P","N",self.doPaper,None,None,None),
             (("T",0,2,0),"IUI",2,"Quantity","",

=== modified file 'bwl/bc3090.py'
--- bwl/bc3090.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3090.py	2016-01-07 09:13:22 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import RepPrt, TartanDialog, Sql
@@ -71,11 +71,11 @@
             self.opts["conum"]), ("bct_code", "=", ctyp)], limit=1)
         self.cfmat = bwltyp[self.sql.bwltyp_col.index("bct_cfmat")]
         if self.cfmat == "K":
-            return "Knockout Competition has No Summary"
+            return "Knockout Competitions has No Summary"
         if self.cfmat == "R":
             self.games = self.sql.getRec(tables="bwlent", cols=["count(*)"],
                 where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
-                self.ccod)], limit=1)[0] - 1
+                self.ccod)], limit=1)[0]
         else:
             self.games = bwltyp[self.sql.bwltyp_col.index("bct_games")]
         self.grgame = bwltyp[self.sql.bwltyp_col.index("bct_grgame")]
@@ -130,7 +130,11 @@
                 gam = game[self.sql.bwlgme_col.index("bcg_game")]
                 grp = game[self.sql.bwlgme_col.index("bcg_group")]
                 opp = game[self.sql.bwlgme_col.index("bcg_ocod")]
-                rnk = game[self.sql.bwlgme_col.index("bcg_rink")]
+                if opp > 900000:
+                    opp = 0
+                    rnk = ""
+                else:
+                    rnk = game[self.sql.bwlgme_col.index("bcg_rink")]
                 dat.extend([opp, rnk])
                 if opp:
                     if gam != self.games and opp in ops:

=== modified file 'bwl/bc3100.py'
--- bwl/bc3100.py	2015-12-12 09:12:17 +0000
+++ bwl/bc3100.py	2016-02-08 06:12:59 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, MyFpdf, TartanDialog, Sql
@@ -122,8 +122,8 @@
         for c in chk:
             scod = c[self.sql.bwlgme_col.index("bcg_scod")]
             ocod = c[self.sql.bwlgme_col.index("bcg_ocod")]
-            #if scod > 900000 or ocod > 900000:
-            #    continue
+            if scod > 900000 or ocod > 900000:
+                continue
             if ponly == "Y":
                 fors = c[self.sql.bwlgme_col.index("bcg_points")]
                 agts = self.sql.getRec(tables="bwlgme",
@@ -160,7 +160,7 @@
             ("bcg_ccod", "=", self.ccod),
             ("bcg_game", "=", self.game),
             ("btb_tab=bcg_scod",)]
-        self.fpdf = MyFpdf(name=__name__, head=65)
+        self.fpdf = MyFpdf(name=__name__, head=65, prog=__name__)
         self.pglin = 999
         lastg = None
         for g in keys:
@@ -225,19 +225,19 @@
         x = 10
         w = self.fpdf.get_string_width("X"*len(a)) + 1
         self.fpdf.drawText(a, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(b)) + 1
         self.fpdf.drawText(b, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(c)) + 1
         self.fpdf.drawText(c, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(d)) + 1
         self.fpdf.drawText(d, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(e)) + 1
         self.fpdf.drawText(e, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(f)) + 1
         self.fpdf.drawText(f, x=x, w=w, border="TLRB", fill=fill)
 

=== modified file 'bwl/bc3110.py'
--- bwl/bc3110.py	2015-12-12 09:12:17 +0000
+++ bwl/bc3110.py	2016-02-08 06:13:27 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os
@@ -56,8 +56,10 @@
             (("T",0,0,0),"ONA",30,""),
             (("T",0,1,0),"IUI",2,"Last Game","",
                 0,"N",self.doLstGam,gme,None,("efld",)),
-            (("T",0,2,0),("IRB",r1s),0,"Session Prizes by Group","",
-                "Y","N",self.doSesGrp,None,None,None))
+            (("T",0,2,0),("IRB",r1s),0,"Session Prizes","",
+                "N","N",self.doSesPrz,None,None,None),
+            (("T",0,3,0),("IRB",r1s),0,"Session Prizes by Group","",
+                "N","N",self.doSesGrp,None,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         self.df = TartanDialog(self.opts["mf"], tops=False, title=tit,
@@ -134,8 +136,8 @@
         for c in chk:
             scod = c[self.sql.bwlgme_col.index("bcg_scod")]
             ocod = c[self.sql.bwlgme_col.index("bcg_ocod")]
-            #if scod > 900000 or ocod > 900000:
-            #    continue
+            if scod > 900000 or ocod > 900000:
+                continue
             if self.ponly == "Y":
                 fors = c[self.sql.bwlgme_col.index("bcg_points")]
                 agts = self.sql.getRec(tables="bwlgme",
@@ -151,24 +153,32 @@
                     non.append(scod)
         if non:
             return "%s Result(s) Not Yet Entered" % (len(non) / 2)
-        self.lastgam = w
-        if self.lastgam == self.games and self.groups == "Y":
-            return
-        self.sesgrp = "N"
-        self.df.loadEntry(frt, pag, p+1, data=self.sesgrp)
-        return "sk1"
+        self.lgame = w
+        if self.lgame < self.games:
+            self.sesp = "N"
+            self.sesg = "N"
+            self.df.loadEntry(frt, pag, p+1, data=self.sesp)
+            self.df.loadEntry(frt, pag, p+2, data=self.sesg)
+            return "sk2"
+
+    def doSesPrz(self, frt, pag, r, c, p, i, w):
+        self.sesp = w
+        if self.sesp == "N" or self.groups == "N":
+            self.sesg = "N"
+            self.df.loadEntry(frt, pag, p+1, data=self.sesg)
+            return "sk1"
 
     def doSesGrp(self, frt, pag, r, c, p, i, w):
-        self.sesgrp = w
+        self.sesg = w
 
     def doEnd(self):
         self.df.closeProcess()
         chk = self.sql.getRec(tables="bwlgme", cols=["bcg_group", "bcg_scod"],
             where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
-            self.ccod), ("bcg_game", "=", self.lastgam)], order="bcg_group")
+            self.ccod), ("bcg_game", "=", self.lgame)], order="bcg_group")
         self.grps = {}
         for rec in chk:
-            if self.lastgam <= self.grgame:
+            if self.lgame <= self.grgame:
                 rec[0] = 0
             if rec[0] not in self.grps:
                 self.grps[rec[0]] = [[rec[1]], [], []]
@@ -179,16 +189,16 @@
         where = [
             ("bcg_cono", "=", self.opts["conum"]),
             ("bcg_ccod", "=", self.ccod),
-            ("bcg_game", "<=", self.lastgam),
+            ("bcg_game", "<=", self.lgame),
             ("btb_tab=bcg_scod",)]
-        self.fpdf = MyFpdf(name=__name__, head=65)
+        self.fpdf = MyFpdf(name=__name__, head=65, prog=__name__)
         self.pglin = 999
         lastg = None
         for g in self.keys:
             whr = copyList(where)
             whr.append(("bcg_scod", "in", self.grps[g][0]))
             col = ["btb_surname", "btb_names"]
-            if self.lastgam <= self.grgame:
+            if self.lgame <= self.grgame:
                 col.extend(["sum(bcg_shots_for) as sfor",
                     "sum(bcg_shots_agt) as sagt",
                     "sum(bcg_shots_for - bcg_shots_agt) as agg",
@@ -223,27 +233,26 @@
                 f = CCD(pts, "SD", 7.1)
                 self.printLine(a.disp, b.disp, c.disp, d.disp, e.disp, f.disp)
                 self.pglin += 1
-        if self.lastgam == self.games:
+        if self.lgame == self.games:
             # Enter Prizes
             for key in self.keys:
                 self.doPrizes(key)
-            # Match Summary
-            # Match Winners
-            gqty = len(self.keys)
-            wins = {}
-            allp = []
-            where = [
+            # Match Winners & Summary
+            self.gqty = len(self.keys)
+            self.wins = {}
+            self.allp = []
+            self.where = [
                 ("bcg_cono", "=", self.opts["conum"]),
                 ("bcg_ccod", "=", self.ccod),
-                ("bcg_game", "<=", self.lastgam),
+                ("bcg_game", "<=", self.lgame),
                 ("btb_cono=bcg_cono",),
                 ("btb_tab=bcg_scod",)]
-            for grp in xrange(gqty):
+            for grp in xrange(self.gqty):
                 if self.groups == "Y":
                     gcod = grp + 1
                 else:
                     gcod = grp
-                whr = copyList(where)
+                whr = copyList(self.where)
                 whr.append(("bcg_group", "=", gcod))
                 col = [
                     "bcg_scod", "btb_surname", "btb_names",
@@ -256,167 +265,23 @@
                     order="pts desc, agg desc, sagt asc")
                 if not recs:
                     continue
-                wins[gcod] = []
+                self.wins[gcod] = []
                 for x in xrange(self.grps[gcod][1]):
-                    allp.append(recs[x][0])
+                    self.allp.append(recs[x][0])
                     if recs[x][2]:
                         nam = "%s, %s" % (recs[x][1], recs[x][2].split()[0])
                     else:
                         nam = recs[x][1]
-                    wins[gcod].append(nam)
-            # Session Winners
-            sess = {}
-            for gme in xrange(1, self.games + 1):
-                col = [
-                    "bcg_scod", "btb_surname", "btb_names",
-                    "sum(bcg_shots_for) as sfor",
-                    "sum(bcg_shots_agt) as sagt",
-                    "sum(bcg_shots_for - bcg_shots_agt) as agg",
-                    "sum(bcg_points) as pts"]
-                whr = copyList(where)
-                whr.append(("bcg_game", "=", gme))
-                grp = "bcg_scod, btb_surname, btb_names"
-                odr = "pts desc, agg desc, sagt asc"
-                if self.sesgrp == "Y" and gme > self.grgame:
-                    col.append("bcg_group")
-                    grp = "bcg_group, %s" % grp
-                    odr = "bcg_group, %s" % odr
-                recs = self.sql.getRec(tables=["bwlgme", "bwltab"],
-                    cols=col, where=whr, group=grp, order=odr)
-                done = None
-                for rec in recs:
-                    if len(rec) == 7:
-                        gpc = 0
-                    else:
-                        gpc = rec[7]
-                    if gpc == done:
-                        continue
-                    ign = False
-                    if self.ponly == "Y" and not rec[6]:
-                        break
-                    if self.ponly == "N" and (not rec[3] and not rec[4]):
-                        break
-                    for grp in xrange(gqty):
-                        if self.groups == "Y":
-                            gcod = grp + 1
-                        else:
-                            gcod = grp
-                        if rec[0] in allp:
-                            ign = True
-                            break
-                    if not ign:
-                        allp.append(rec[0])
-                        if not gme in sess:
-                            sess[gme] = {}
-                        if rec[2]:
-                            nam = "%s, %s" % (rec[1], rec[2].split()[0])
-                        else:
-                            nam = rec[1]
-                        sess[gme][gpc] = nam
-                        done = gpc
-            self.pageHeading("S")
-            mess = "Session Winners"
-            self.fpdf.setFont(style="B", size=14)
-            self.fpdf.drawText(mess, align="C", border="TLRB", fill=1)
-            self.fpdf.drawText("Ses", w=12, border="TLRB", fill=1, ln=0)
-            if self.sesgrp == "Y":
-                self.fpdf.drawText("Grp", w=12, border="TLRB", fill=1, ln=0)
-            self.fpdf.drawText("Name", border="TLRB", fill=1)
-            self.fpdf.setFont()
-            for gme in xrange(1, self.games + 1):
-                stxt = str("%3s" % gme)
-                if not gme in sess:
-                    self.fpdf.drawText(stxt, w=12, border="TLRB", ln=0)
-                    if self.sesgrp == "Y":
-                        self.fpdf.drawText("", w=12, border="TLRB", ln=0)
-                    self.fpdf.drawText("* No Valid Winner or Abandoned *",
-                        border="TLRB")
-                    continue
-                grps = sess[gme].keys()
-                grps.sort()
-                for grp in grps:
-                    gtxt = "%3s" % self.grpcod[grp]
-                    self.fpdf.drawText(stxt, w=12, border="TLRB", ln=0)
-                    if self.sesgrp == "Y":
-                        self.fpdf.drawText(gtxt, w=12, border="TLRB", ln=0)
-                    self.fpdf.drawText(sess[gme][grp], border="TLRB")
-            self.fpdf.drawText()
-            for num, gcod in enumerate(self.keys):
-                if wins[gcod]:
-                    if gcod:
-                        mess = "Match Winners - Group %s" % self.grpcod[gcod]
-                    else:
-                        mess = "Match Winners"
-                    self.fpdf.setFont(style="B", size=14)
-                    self.fpdf.drawText(mess, align="C", border="TLRB", fill=1)
-                    self.fpdf.drawText("Pos", w=12, border="TLRB", fill=1,
-                        ln=0)
-                    self.fpdf.drawText("Name", border="TLRB", fill=1)
-                    self.fpdf.setFont()
-                    for n, s in enumerate(wins[gcod]):
-                        ptxt = "%3s" % (n + 1)
-                        self.fpdf.drawText(ptxt, w=12, border="TLRB", ln=0)
-                        self.fpdf.drawText(s, border="TLRB")
-                if not num % 2:
-                    ly = self.fpdf.get_y()
-                if num % 2 and self.fpdf.get_y() > ly:
-                    ly = self.fpdf.get_y()
-                self.fpdf.drawText()
-            place = ["1st", "2nd", "3rd"]
-            for x in xrange(4, 21):
-                place.append("%sth" % x)
-            if self.tsize == 2:
-                ppos = ("Skip", "Lead")
-            elif self.tsize == 3:
-                ppos = ("Skip", "Second", "Lead")
-            elif self.tsize == 4:
-                ppos = ("Skip", "Third", "Second", "Lead")
-            for gcod in self.keys:
-                if not self.grps[gcod][2]:
-                    continue
-                for num, skp in enumerate(wins[gcod]):
-                    self.fpdf.add_page()
-                    self.fpdf.image(
-                        os.path.join(self.opts["mf"].rcdic["prgdir"], "img",
-                        "bowls.png"), 90, 10, w=10)
-                    self.fpdf.image(
-                        os.path.join(self.opts["mf"].rcdic["prgdir"], "img",
-                        "bowls.png"), 100, 10, w=10)
-                    self.fpdf.image(os.path.join(
-                        self.opts["mf"].rcdic["prgdir"], "img",
-                        "bowls.png"), 110, 10, w=10)
-                    self.fpdf.setFont(style="B", size=24)
-                    self.fpdf.drawText(self.cdes, y=30, h=10, align="C")
-                    self.fpdf.drawText()
-                    if gcod:
-                        self.fpdf.drawText("GROUP %s" % self.grpcod[gcod],
-                            h=10, align="C")
-                        self.fpdf.drawText()
-                    self.fpdf.drawText("%s Prize R%s - %s" % (place[num],
-                        self.grps[gcod][2][num], skp), h=10, align="C")
-                    self.fpdf.setFont(style="B", size=16)
-                    for pos in ppos:
-                        self.fpdf.drawText()
-                        self.fpdf.drawText()
-                        self.fpdf.drawText("%s's Name" % pos, w=50, h=8,
-                            border="TLRB", ln=0, fill=1)
-                        self.fpdf.drawText("", h=8, border="TLRB")
-                        self.fpdf.drawText("Bank Name", w=50, h=8,
-                            border="TLRB", ln=0, fill=1)
-                        self.fpdf.drawText("", h=8, border="TLRB")
-                        self.fpdf.drawText("Branch Name", w=50, h=8,
-                            border="TLRB", ln=0, fill=1)
-                        self.fpdf.drawText("", h=8, border="TLRB")
-                        self.fpdf.drawText("Branch Code", w=50, h=8,
-                            border="TLRB", ln=0, fill=1)
-                        self.fpdf.drawText("", h=8, border="TLRB")
-                        self.fpdf.drawText("Account Number", w=50, h=8,
-                            border="TLRB", ln=0, fill=1)
-                        self.fpdf.drawText("", h=8, border="TLRB")
-                    self.fpdf.drawText()
-                    self.fpdf.setFont(style="B", size=18)
-                    self.fpdf.drawText("Congratulations and Well Done!", h=10,
-                        align="C")
+                    self.wins[gcod].append(nam)
+            if self.sesp == "Y":
+                self.pageHeading("S")
+                self.doSesWin()
+            else:
+                for grp in self.wins:
+                    if self.wins[grp]:
+                        self.pageHeading("S")
+                        break
+            self.doMatchWin()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"], __name__,
             "report", ext="pdf")
         self.fpdf.output(pdfnam, "F")
@@ -424,6 +289,158 @@
             repprt=self.df.repprt)
         self.opts["mf"].closeLoop()
 
+    def doSesWin(self):
+        # Session Winners
+        sess = {}
+        for gme in xrange(1, self.games + 1):
+            col = [
+                "bcg_scod", "btb_surname", "btb_names",
+                "sum(bcg_shots_for) as sfor",
+                "sum(bcg_shots_agt) as sagt",
+                "sum(bcg_shots_for - bcg_shots_agt) as agg",
+                "sum(bcg_points) as pts"]
+            whr = copyList(self.where)
+            whr.append(("bcg_game", "=", gme))
+            grp = "bcg_scod, btb_surname, btb_names"
+            odr = "pts desc, agg desc, sagt asc"
+            if self.sesg == "Y" and gme > self.grgame:
+                col.append("bcg_group")
+                grp = "bcg_group, %s" % grp
+                odr = "bcg_group, %s" % odr
+            recs = self.sql.getRec(tables=["bwlgme", "bwltab"],
+                cols=col, where=whr, group=grp, order=odr)
+            done = None
+            for rec in recs:
+                if len(rec) == 7:
+                    gpc = 0
+                else:
+                    gpc = rec[7]
+                if gpc == done:
+                    continue
+                ign = False
+                if self.ponly == "Y" and not rec[6]:
+                    break
+                if self.ponly == "N" and (not rec[3] and not rec[4]):
+                    break
+                for grp in xrange(self.gqty):
+                    if rec[0] in self.allp:
+                        ign = True
+                        break
+                if not ign:
+                    self.allp.append(rec[0])
+                    if not gme in sess:
+                        sess[gme] = {}
+                    if rec[2]:
+                        nam = "%s, %s" % (rec[1], rec[2].split()[0])
+                    else:
+                        nam = rec[1]
+                    sess[gme][gpc] = nam
+                    done = gpc
+        mess = "Session Winners"
+        self.fpdf.setFont(style="B", size=14)
+        self.fpdf.drawText(mess, align="C", border="TLRB", fill=1)
+        self.fpdf.drawText("Ses", w=12, border="TLRB", fill=1, ln=0)
+        if self.sesg == "Y":
+            self.fpdf.drawText("Grp", w=12, border="TLRB", fill=1, ln=0)
+        self.fpdf.drawText("Name", border="TLRB", fill=1)
+        self.fpdf.setFont()
+        for gme in xrange(1, self.games + 1):
+            stxt = str("%3s" % gme)
+            if not gme in sess:
+                self.fpdf.drawText(stxt, w=12, border="TLRB", ln=0)
+                if self.sesg == "Y":
+                    self.fpdf.drawText("", w=12, border="TLRB", ln=0)
+                self.fpdf.drawText("* No Valid Winner or Abandoned *",
+                    border="TLRB")
+                continue
+            grps = sess[gme].keys()
+            grps.sort()
+            for grp in grps:
+                gtxt = "%3s" % self.grpcod[grp]
+                self.fpdf.drawText(stxt, w=12, border="TLRB", ln=0)
+                if self.sesg == "Y":
+                    self.fpdf.drawText(gtxt, w=12, border="TLRB", ln=0)
+                self.fpdf.drawText(sess[gme][grp], border="TLRB")
+        self.fpdf.drawText()
+
+    def doMatchWin(self):
+        for num, gcod in enumerate(self.keys):
+            if self.wins[gcod]:
+                if gcod:
+                    mess = "Match Winners - Group %s" % self.grpcod[gcod]
+                else:
+                    mess = "Match Winners"
+                self.fpdf.setFont(style="B", size=14)
+                self.fpdf.drawText(mess, align="C", border="TLRB", fill=1)
+                self.fpdf.drawText("Pos", w=12, border="TLRB", fill=1,
+                    ln=0)
+                self.fpdf.drawText("Name", border="TLRB", fill=1)
+                self.fpdf.setFont()
+                for n, s in enumerate(self.wins[gcod]):
+                    ptxt = "%3s" % (n + 1)
+                    self.fpdf.drawText(ptxt, w=12, border="TLRB", ln=0)
+                    self.fpdf.drawText(s, border="TLRB")
+            if not num % 2:
+                ly = self.fpdf.get_y()
+            if num % 2 and self.fpdf.get_y() > ly:
+                ly = self.fpdf.get_y()
+            self.fpdf.drawText()
+        place = ["1st", "2nd", "3rd"]
+        for x in xrange(4, 21):
+            place.append("%sth" % x)
+        if self.tsize == 2:
+            ppos = ("Skip", "Lead")
+        elif self.tsize == 3:
+            ppos = ("Skip", "Second", "Lead")
+        elif self.tsize == 4:
+            ppos = ("Skip", "Third", "Second", "Lead")
+        for gcod in self.keys:
+            if not self.grps[gcod][2]:
+                continue
+            for num, skp in enumerate(self.wins[gcod]):
+                self.fpdf.add_page()
+                self.fpdf.image(
+                    os.path.join(self.opts["mf"].rcdic["prgdir"], "img",
+                    "bowls.png"), 90, 10, w=10)
+                self.fpdf.image(
+                    os.path.join(self.opts["mf"].rcdic["prgdir"], "img",
+                    "bowls.png"), 100, 10, w=10)
+                self.fpdf.image(os.path.join(
+                    self.opts["mf"].rcdic["prgdir"], "img",
+                    "bowls.png"), 110, 10, w=10)
+                self.fpdf.setFont(style="B", size=24)
+                self.fpdf.drawText(self.cdes, y=30, h=10, align="C")
+                self.fpdf.drawText()
+                if gcod:
+                    self.fpdf.drawText("GROUP %s" % self.grpcod[gcod],
+                        h=10, align="C")
+                    self.fpdf.drawText()
+                self.fpdf.drawText("%s Prize R%s - %s" % (place[num],
+                    self.grps[gcod][2][num], skp), h=10, align="C")
+                self.fpdf.setFont(style="B", size=16)
+                for pos in ppos:
+                    self.fpdf.drawText()
+                    self.fpdf.drawText()
+                    self.fpdf.drawText("%s's Name" % pos, w=50, h=8,
+                        border="TLRB", ln=0, fill=1)
+                    self.fpdf.drawText("", h=8, border="TLRB")
+                    self.fpdf.drawText("Bank Name", w=50, h=8,
+                        border="TLRB", ln=0, fill=1)
+                    self.fpdf.drawText("", h=8, border="TLRB")
+                    self.fpdf.drawText("Branch Name", w=50, h=8,
+                        border="TLRB", ln=0, fill=1)
+                    self.fpdf.drawText("", h=8, border="TLRB")
+                    self.fpdf.drawText("Branch Code", w=50, h=8,
+                        border="TLRB", ln=0, fill=1)
+                    self.fpdf.drawText("", h=8, border="TLRB")
+                    self.fpdf.drawText("Account Number", w=50, h=8,
+                        border="TLRB", ln=0, fill=1)
+                    self.fpdf.drawText("", h=8, border="TLRB")
+                self.fpdf.drawText()
+                self.fpdf.setFont(style="B", size=18)
+                self.fpdf.drawText("Congratulations and Well Done!", h=10,
+                    align="C")
+
     def pageHeading(self, htyp=None):
         self.fpdf.add_page()
         self.fpdf.drawText(self.cdes, font=["courier", "B", 24])
@@ -437,7 +454,7 @@
 
     def groupHeading(self, group):
         self.fpdf.drawText(font=["courier", "B", 18])
-        head = "Match Results After Game Number: %s" % self.lastgam
+        head = "Match Results After Game Number: %s" % self.lgame
         if group:
             head += "  for Group: %s" % self.grpcod[group]
         self.fpdf.drawText(head, font=["courier", "B", 18])
@@ -452,19 +469,19 @@
         x = 10
         w = self.fpdf.get_string_width("X"*len(a)) + 1
         self.fpdf.drawText(a, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(b)) + 1
         self.fpdf.drawText(b, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(c)) + 1
         self.fpdf.drawText(c, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(d)) + 1
         self.fpdf.drawText(d, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(e)) + 1
         self.fpdf.drawText(e, x=x, w=w, border="TLB", fill=fill, ln=0)
-        x += w + 1
+        x += w
         w = self.fpdf.get_string_width("X"*len(f)) + 1
         self.fpdf.drawText(f, x=x, w=w, border="TLRB", fill=fill)
 

=== modified file 'bwl/bc3120.py'
--- bwl/bc3120.py	2015-10-03 07:36:56 +0000
+++ bwl/bc3120.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import MyFpdf, Sql, TartanDialog

=== modified file 'bwl/bc6010.py'
--- bwl/bc6010.py	2015-08-25 15:02:35 +0000
+++ bwl/bc6010.py	2016-02-25 06:27:21 +0000
@@ -10,11 +10,11 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, SplashScreen, Sql, TartanDialog
-from tartanFunctions import askQuestion
+from tartanFunctions import askChoice
 
 class bc6010:
     def __init__(self, **opts):
@@ -107,11 +107,16 @@
 
     def doGenerate(self, widget=None):
         self.opts["mf"].updateStatus("")
-        ok = askQuestion(self.opts["mf"].body, "ARE YOU SURE???",
+        but = (
+            ("Members", "M"),
+            ("Non Members", "N"),
+            ("All", "A"),
+            ("None", "X"))
+        ok = askChoice(self.opts["mf"].body, "ARE YOU SURE???",
             "Are you Certain this is what you want To Do? This will "\
-            "Automatically Generate New Tab Numbers For All Members "\
-            "Based On Member's Names and Gender!", default="no")
-        if ok == "no":
+            "Automatically Generate New Tab Numbers For Selected Range "\
+            "Based On Member's Names and Gender!", butt=but, default="None")
+        if ok == "X":
             self.df.focusField("T", 0, 1)
             return
         self.df.closeProcess()
@@ -134,17 +139,25 @@
         nstart = self.nstart
         key = {}
         for tab in mem:
-            gdr = tab[self.sql.bwltab_col.index("btb_gender")]
-            if gdr == "M":
-                new = mstart
-                mstart += 1
+            otb = tab[self.sql.bwltab_col.index("btb_tab")]
+            if ok in ("A", "M"):
+                gdr = tab[self.sql.bwltab_col.index("btb_gender")]
+                if gdr == "M":
+                    new = mstart
+                    mstart += 1
+                else:
+                    new = fstart
+                    fstart += 1
+                key[otb] = new
             else:
-                new = fstart
-                fstart += 1
-            key[tab[self.sql.bwltab_col.index("btb_tab")]] = new
+                key[otb] = otb
         for tab in non:
-            key[tab[self.sql.bwltab_col.index("btb_tab")]] = nstart
-            nstart += 1
+            otb = tab[self.sql.bwltab_col.index("btb_tab")]
+            if ok in ("A", "N"):
+                key[otb] = nstart
+                nstart += 1
+            else:
+                key[otb] = otb
         for ot in self.tables:
             tt = "%s_temp" % ot[0]
             cc = getattr(self.sql, "%s_col" % ot[0])

=== added file 'bwl/bc6020.py'
--- bwl/bc6020.py	1970-01-01 00:00:00 +0000
+++ bwl/bc6020.py	2016-02-25 06:38:18 +0000
@@ -0,0 +1,83 @@
+#! /usr/bin/python
+
+"""
+SYNOPSIS
+    Bowls Merge Visitor Tab Duplications.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+from TartanClasses import GetCtl, SplashScreen, Sql
+
+class bc6020:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.mainProcess()
+
+    def setVariables(self):
+        self.tables = (
+            ("bwldrt","bdt_cono","bdt_tab","bdt_team1","bdt_team2","bdt_team3"),
+            ("bwlent","bce_cono","bce_scod"),
+            ("bwlgme","bcg_cono","bcg_scod","bcg_ocod"))
+        tabs = ["bwltab"]
+        for tab in self.tables:
+            if tab[0] not in tabs:
+                tabs.append(tab[0])
+        self.sql = Sql(self.opts["mf"].dbm, tabs, prog=__name__)
+        if self.sql.error:
+            return
+        gc = GetCtl(self.opts["mf"])
+        bwlctl = gc.getCtl("bwlctl", self.opts["conum"])
+        if not bwlctl:
+            return
+        self.nstart = bwlctl["ctb_nstart"]
+        self.dbase = bwlctl["ctb_dbase"]
+        return True
+
+    def mainProcess(self):
+        splash = SplashScreen(self.opts["mf"].body,
+            "Merging Duplicate Names ... Please Wait")
+        tabs = self.sql.getRec(tables="bwltab", cols=["btb_tab", "btb_surname",
+            "btb_names", "btb_pos1", "btb_pos2"], where=[("btb_cono", "=",
+            self.opts["conum"]), ("btb_tab", ">=", self.nstart)],
+            order="btb_surname, btb_names, btb_tab")
+        old = []
+        for tab in tabs:
+            chk = self.sql.getRec(tables="bwlent", where=[("bce_cono", "=",
+                self.opts["conum"]), ("bce_scod", "=", tab[0])], limit=1)
+            if chk and self.dbase in ("C", "P") and tab[3] == 1:
+                dat = [4, 5, 4, 5]
+            elif self.dbase in ("C", "R") and tab[4] == 1:
+                dat = [tab[3], 5, tab[3], 5]
+            else:
+                dat = None
+            if dat:
+                self.sql.updRec("bwltab", cols=["btb_pos1", "btb_rate1",
+                    "btb_pos2", "btb_rate2"], data=dat, where=[("btb_cono",
+                    "=", self.opts["conum"]), ("btb_tab", "=", tab[0])])
+            if tab[1:3] == old[1:3]:
+                for ot in self.tables:
+                    col = getattr(self.sql, "%s_col" % ot[0])
+                    for k in ot[2:]:
+                        recs = self.sql.getRec(tables=ot[0], where=[(ot[1],
+                            "=", self.opts["conum"]), (k, "=", tab[0])])
+                        self.sql.delRec(ot[0], where=[(ot[1], "=",
+                            self.opts["conum"]), (k, "=", tab[0])])
+                        for rec in recs:
+                            rec[col.index(k)] = old[0]
+                            self.sql.insRec(ot[0], data=rec)
+                self.sql.delRec("bwltab", where=[("btb_cono", "=",
+                    self.opts["conum"]), ("btb_tab", "=", tab[0])])
+            else:
+                old = tab
+        self.opts["mf"].dbm.commitDbase(ask=True)
+        splash.closeSplash()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== renamed file 'bwl/bc6020.py' => 'bwl/bc6030.py'
--- bwl/bc6020.py	2015-06-17 15:23:42 +0000
+++ bwl/bc6030.py	2016-01-17 14:31:49 +0000
@@ -10,12 +10,12 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql
 
-class bc6020:
+class bc6030:
     def __init__(self, **opts):
         self.opts = opts
         if self.setVariables():
@@ -31,8 +31,12 @@
     def mainProcess(self):
         tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
             "Clear History (%s)" % __name__)
-        r1s = (("League","L"), ("Tabs Draw","D"), ("Both","B"))
-        r2s = (("Yes","Y"), ("No","N"))
+        r1s = (
+            ("Tabs Draw", "D"),
+            ("League", "L"),
+            ("Competitions", "C"),
+            ("All", "A"))
+        r2s = (("Yes", "Y"), ("No", "N"))
         fld = (
             (("T",0,0,0),("IRB",r1s),0,"Clear","",
                 "L","N",self.doType,None,None,None),
@@ -45,24 +49,37 @@
 
     def doType(self, frt, pag, r, c, p, i, w):
         self.ctyp = w
+        if self.ctyp in ("D", "C"):
+            self.opps = "N"
+            self.df.loadEntry(frt, pag, p+1, data=self.opps)
+            return "sk1"
 
     def doOpps(self, frt, pag, r, c, p, i, w):
         self.opps = w
 
     def doEnd(self):
         self.df.closeProcess()
-        if self.ctyp in ("B", "D"):
+        if self.ctyp in ("A", "D"):
             self.sql.delRec("bwldrm", where=[("bdm_cono", "=",
                 self.opts["conum"])])
             self.sql.delRec("bwldrt", where=[("bdt_cono", "=",
                 self.opts["conum"])])
-        if self.ctyp in ("B", "L"):
+        if self.ctyp in ("A", "L"):
             self.sql.delRec("bwlfls", where=[("bfs_cono", "=",
                 self.opts["conum"])])
             self.sql.delRec("bwlflm", where=[("bfm_cono", "=",
                 self.opts["conum"])])
             self.sql.delRec("bwlflt", where=[("bft_cono", "=",
                 self.opts["conum"])])
+        if self.ctyp in ("A", "C"):
+            self.sql.delRec("bwlcmp", where=[("bcm_cono", "=",
+                self.opts["conum"])])
+            self.sql.delRec("bwlent", where=[("bce_cono", "=",
+                self.opts["conum"])])
+            self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
+                self.opts["conum"])])
+            self.sql.delRec("bwlrnd", where=[("bcr_cono", "=",
+                self.opts["conum"])])
         if self.opps == "Y":
             self.sql.delRec("bwlflo", where=[("bfo_cono", "=",
                 self.opts["conum"])])

=== modified file 'bwl/bcc110.py'
--- bwl/bcc110.py	2015-10-25 09:33:02 +0000
+++ bwl/bcc110.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'bwl/bcc210.py'
--- bwl/bcc210.py	2015-12-12 09:12:17 +0000
+++ bwl/bcc210.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'crs/cr1010.py'
--- crs/cr1010.py	2015-10-03 07:36:56 +0000
+++ crs/cr1010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr1010_rne.py'
--- crs/cr1010_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr1010_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -47,7 +47,7 @@
             ("Basic-_C",None,("T",1,1),("T",0,1)))
         r1s = (("Monthly","M"),("Daily","D"))
         r2s = (("Yes","Y"),("No","N"))
-        r3s = (("Flat","F"),("Diminishing","D"))
+        r3s = (("Diminishing","D"), ("Flat","F"))
         self.fld = (
             (("T",0,0,0),"INA",7,"Acc-Num","Account Number",
                 "","Y",self.doAcno,crm,None,("notblank",)),
@@ -103,7 +103,7 @@
                 "","N",None,None,None,("efld",)),
             (("T",2,10,0),"OUI",7,"G/L Account"),
             (("T",3,0,0),("IRB",r3s),0,"Discount Base","",
-                "F","N",None,None,None,None),
+                "D","N",None,None,None,None),
             (("T",3,1,0),"IUD",5.2,"Advert Discount","Advertising Discount",
                 0,"N",None,None,None,("efld",)),
             (("T",3,2,0),"IUD",5.2,"Incent Discount","Incentive Discount",

=== modified file 'crs/cr2010.py'
--- crs/cr2010.py	2015-12-12 09:12:17 +0000
+++ crs/cr2010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr2010_rne.py'
--- crs/cr2010_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr2010_rne.py	2016-02-05 07:37:01 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import glob, os, time, xml.parsers.expat
@@ -123,7 +123,7 @@
             (("C",0,0,0),"INA",7,"Acc-Num","Account Number",
                 "r","N",self.doCrsAcc,crm,None,None),
             (("C",0,0,1),"ONA",30,"Name"),
-            (("C",0,0,2),"INa",9,"Ref-No1","Reference Number One",
+            (("C",0,0,2),"INa",9,"Reference","Reference Number One",
                 "","N",self.doRef1,None,None,("notblank",)),
             (("C",0,0,3),"ID1",10,"Date","Transaction Date",
                 "r","N",self.doTrnDat,None,None,("efld",)),

=== modified file 'crs/cr2020_rne.py'
--- crs/cr2020_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr2020_rne.py	2016-01-19 09:23:26 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -454,7 +454,6 @@
                     self.paydt = paydt
             types = CCD(tr[ctc.index("crt_type")], "UI", 1)
             ref1 = CCD(tr[ctc.index("crt_ref1")], "Na", 9)
-            #trdt = CCD(tr[ctc.index("crt_trdt")], "D1", 10)
             tramt = CCD(tr[ctc.index("crt_tramt")], "SD", 13.2)
             trbal = CCD(tr[ctc.index("balance")], "SD", 13.2)
             taxmt = CCD(tr[ctc.index("crt_taxamt")], "SD", 13.2)
@@ -529,19 +528,21 @@
                 rtc = self.sql.crsrtf_col
                 depno = rtf[rtc.index("rtf_depno")]
                 pjno = rtf[rtc.index("rtf_pjno")]
-                rtf[rtc.index("rtf_disamt")] = float(
-                    ASD(rtf[rtc.index("rtf_disamt")]) + ASD(disamt))
-                rtf[rtc.index("rtf_distax")] = float(
-                    ASD(rtf[rtc.index("rtf_distax")]) + ASD(distax))
-                rtf[rtc.index("rtf_incamt")] = float(
-                    ASD(rtf[rtc.index("rtf_incamt")]) + ASD(incamt))
-                rtf[rtc.index("rtf_inctax")] = float(
-                    ASD(rtf[rtc.index("rtf_inctax")]) + ASD(inctax))
-                rtf[rtc.index("rtf_advamt")] = float(
-                    ASD(rtf[rtc.index("rtf_advamt")]) + ASD(advamt))
-                rtf[rtc.index("rtf_advtax")] = float(
-                    ASD(rtf[rtc.index("rtf_advtax")]) + ASD(advtax))
-                self.sql.updRec("crsrtf", where=whr, data=rtf)
+                cols = [
+                    "rtf_disamt",
+                    "rtf_distax",
+                    "rtf_incamt",
+                    "rtf_inctax",
+                    "rtf_advamt",
+                    "rtf_advtax"]
+                data = [
+                    float(ASD(rtf[rtc.index("rtf_disamt")]) + ASD(disamt)),
+                    float(ASD(rtf[rtc.index("rtf_distax")]) + ASD(distax)),
+                    float(ASD(rtf[rtc.index("rtf_incamt")]) + ASD(incamt)),
+                    float(ASD(rtf[rtc.index("rtf_inctax")]) + ASD(inctax)),
+                    float(ASD(rtf[rtc.index("rtf_advamt")]) + ASD(advamt)),
+                    float(ASD(rtf[rtc.index("rtf_advtax")]) + ASD(advtax))]
+                self.sql.updRec("crsrtf", cols=cols, data=data, where=whr)
             else:
                 depno = 0
                 pjno = 0

=== modified file 'crs/cr2030_rne.py'
--- crs/cr2030_rne.py	2015-08-25 15:02:35 +0000
+++ crs/cr2030_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'crs/cr3010.py'
--- crs/cr3010.py	2015-10-03 07:36:56 +0000
+++ crs/cr3010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3020.py'
--- crs/cr3020.py	2015-10-03 07:36:56 +0000
+++ crs/cr3020.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3030.py'
--- crs/cr3030.py	2015-10-03 07:36:56 +0000
+++ crs/cr3030.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3030_rne.py'
--- crs/cr3030_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr3030_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3040.py'
--- crs/cr3040.py	2015-10-03 07:36:56 +0000
+++ crs/cr3040.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3050.py'
--- crs/cr3050.py	2015-10-25 09:33:02 +0000
+++ crs/cr3050.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3060.py'
--- crs/cr3060.py	2015-10-03 07:36:56 +0000
+++ crs/cr3060.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3070.py'
--- crs/cr3070.py	2015-10-03 07:36:56 +0000
+++ crs/cr3070.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3070_rne.py'
--- crs/cr3070_rne.py	2015-10-03 07:36:56 +0000
+++ crs/cr3070_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3080.py'
--- crs/cr3080.py	2015-12-12 09:12:17 +0000
+++ crs/cr3080.py	2016-02-11 14:09:41 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time
@@ -107,7 +107,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'crs/cr3090.py'
--- crs/cr3090.py	2015-10-03 07:36:56 +0000
+++ crs/cr3090.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3100.py'
--- crs/cr3100.py	2015-10-03 07:36:56 +0000
+++ crs/cr3100.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'crs/cr3110.py'
--- crs/cr3110.py	2015-10-03 07:36:56 +0000
+++ crs/cr3110.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3310_rne.py'
--- crs/cr3310_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr3310_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3320_rne.py'
--- crs/cr3320_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr3320_rne.py	2016-02-06 09:27:57 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, time
@@ -28,7 +28,7 @@
 
     def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["ctlmst", "crsmst", "crsrmf",
-            "crstrn", "crsrtf"])
+            "crstrn", "crsrtf"], prog=__name__)
         if self.sql.error:
             return
         t = time.localtime()
@@ -85,6 +85,8 @@
     def doReprint(self, frt, pag, r, c, p, i, w):
         self.reprint = w
         if self.reprint == "Y":
+            self.batsel = "A"
+            self.batches = []
             self.preview = "Y"
             col = ["ctm_cono", "ctm_name"]
             dic = {}
@@ -95,10 +97,11 @@
             self.branch = []
             for b in brs:
                 self.branch.append(b[0])
-            return "sk2"
+            return "sk3"
 
     def doBatches(self, frt, pag, r, c, p, i, w):
-        if w == "A":
+        self.batsel = w
+        if self.batsel == "A":
             self.batches = []
         else:
             recs = self.sql.getRec(tables=["crsrtf", "crstrn"],
@@ -189,7 +192,7 @@
         if self.fpdf.page:
             keys = self.deptot.keys()
             keys.sort()
-            self.pglin = 99
+            self.pglin = 999
             tots = [0, 0, 0, 0]
             for key in keys:
                 if self.pglin > self.fpdf.lpp:
@@ -225,11 +228,16 @@
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
         self.pgnum += 1
+        txt = "Batches:"
+        for batch in self.batches:
+            txt += " %s" % CCD(batch, "Na", 7).disp
+        self.fpdf.drawText(txt)
+        self.fpdf.drawText()
         txt = "%-52s %13s %13s %13s %13s" % ("Summary of Branch Totals",
             "Exc-Amount ", "V.A.T. ", "Tot-Amount ", "Dis-Amount ")
         self.fpdf.drawText(txt)
         self.fpdf.underLine(txt=txt)
-        self.pglin = 2
+        self.pglin = 6
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs))
@@ -250,10 +258,10 @@
             else:
                 name = CCD("", "NA", 30)
             acc = self.sql.getRec(tables="crstrn", cols=["crt_trdt",
-                "crt_tramt", "crt_taxamt", "crt_disper"], where=[("crt_cono",
-                "=", self.opts["conum"]), ("crt_acno", "=", acno.work),
-                ("crt_ref1", "=", ref1.work), ("crt_type", "=", rtyp.work)],
-                limit=1)
+                "crt_tramt", "crt_taxamt", "crt_disper", "crt_batch"],
+                where=[("crt_cono", "=", self.opts["conum"]), ("crt_acno",
+                "=", acno.work), ("crt_ref1", "=", ref1.work), ("crt_type",
+                "=", rtyp.work)], limit=1)
             if not acc:
                 continue
             trdt = CCD(acc[0], "D1", 10)
@@ -265,6 +273,11 @@
                     round((tramt.work * disper.work / 100), 2), "SD", 13.2)
             else:
                 disamt = CCD(0, "SD", 13.2)
+            if self.batsel == "A":
+                batch = CCD(acc[4], "Na", 7).work
+                if batch not in self.batches:
+                    self.batches.append(batch)
+                self.batches.sort()
             acc = self.sql.getRec(tables="crsrmf", cols=["rmf_icdis",
                 "rmf_avdis"], where=[("rmf_cono", "=", self.opts["conum"]),
                 ("rmf_acno", "=", acno.work)], limit=1)
@@ -300,9 +313,9 @@
             self.totnet = float(ASD(self.totnet) + ASD(tramt.work))
             self.totdis = float(ASD(self.totdis) + ASD(disamt.work))
             self.fpdf.drawText("%7s %30s %9s %3s %10s %13s %13s %13s %13s "\
-                "%6s %6s" % (acno.disp, name.disp, ref1.disp, trtp,
-                trdt.disp, net.disp, taxamt.disp, tramt.disp, disamt.disp,
-                incper.disp, advper.disp))
+                "%6s %6s" % (acno.disp, name.disp, ref1.disp, trtp, trdt.disp,
+                net.disp, taxamt.disp, tramt.disp, disamt.disp, incper.disp,
+                advper.disp))
             self.pglin += 1
         p.closeProgress()
         if self.fpdf.page:

=== modified file 'crs/cr3330_rne.py'
--- crs/cr3330_rne.py	2015-10-03 07:36:56 +0000
+++ crs/cr3330_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3340_rne.py'
--- crs/cr3340_rne.py	2015-10-03 07:36:56 +0000
+++ crs/cr3340_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3350_rne.py'
--- crs/cr3350_rne.py	2015-10-03 07:36:56 +0000
+++ crs/cr3350_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3360_rne.py'
--- crs/cr3360_rne.py	2015-12-12 09:12:17 +0000
+++ crs/cr3360_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr3370_rne.py'
--- crs/cr3370_rne.py	2015-10-03 07:36:56 +0000
+++ crs/cr3370_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== added file 'crs/cr3380_rne.py'
--- crs/cr3380_rne.py	1970-01-01 00:00:00 +0000
+++ crs/cr3380_rne.py	2016-02-02 07:06:40 +0000
@@ -0,0 +1,133 @@
+#! /usr/bin/env python
+
+"""
+SYNOPSIS
+    Creditors Ledger Transactions by Branch Groups.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog
+
+class cr3380:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.mainProcess()
+            self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        gc = GetCtl(self.opts["mf"])
+        crsctl = gc.getCtl("crsctl", self.opts["conum"])
+        if not crsctl:
+            return
+        self.sql = Sql(self.opts["mf"].dbm, ["ctlgrp", "crsmst",
+            "crstrn", "crsrtf"], prog=__name__)
+        if self.sql.error:
+            return
+        return True
+
+    def mainProcess(self):
+        self.tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
+            "Creditors Ledger Transactions by Branch (%s)" % __name__)
+        grp = {
+            "stype": "R",
+            "tables": ("ctlgrp",),
+            "cols": (
+                ("ctg_code", "", 0, "Acc-Num"),
+                ("ctg_desc", "", 0, "Description", "Y")),
+            "order": "ctg_code"}
+        fld = (
+            (("T",0,0,0),"IUI",3,"Group Code","",
+                "","Y",self.doGrpCod,grp,None,("efld",)),
+            (("T",0,0,0),"ONA",30,""),
+            (("T",0,1,0),"IUI",3,"Branch Code","",
+                "","N",self.doBranch,grp,None,("efld",)),
+            (("T",0,1,0),"ONA",30,""),
+            (("T",0,2,0),"ID2",7,"From Period","",
+                0,"N",self.doFrom,None,None,("efld",)),
+            (("T",0,3,0),"ID2",7,"To   Period","",
+                0,"N",self.doTo,None,None,("efld",)))
+        tnd = ((self.doEnd,"y"), )
+        txt = (self.doExit, )
+        self.df = TartanDialog(self.opts["mf"], title=self.tit, eflds=fld,
+            tend=tnd, txit=txt, view=("Y","V"), mail=("Y","N"))
+
+    def doGrpCod(self, frt, pag, r, c, p, i, w):
+        self.grpcod = w
+        if not self.grpcod:
+            return
+        grp = self.sql.getRec(tables="ctlgrp",
+            where=[("ctg_code", "=", self.grpcod)], limit=1)
+        if not grp:
+            return "Invalid Group Code"
+        self.grpdes = grp[self.sql.ctlgrp_col.index("ctg_desc")]
+        if self.grpcod == 22:
+            self.grpcoy = [1]
+        else:
+            self.grpcoy = []
+        for x in range(2, 25, 2):
+            if not grp[x]:
+                break
+            self.grpcoy.append(grp[x])
+        self.df.loadEntry(frt, pag, p+1, data=self.grpdes)
+        return "sk2"
+
+    def doBranch(self, frt, pag, r, c, p, i, w):
+        chk = self.sql.getRec(tables="ctlmst", cols=["ctm_name"],
+            where=[("ctm_cono", "=", w)], limit=1)
+        if not chk:
+            return "Invalid Branch Code"
+        self.grpcoy = [w]
+        self.grpdes = chk[0]
+        self.df.loadEntry(frt, pag, p+1, data=self.grpdes)
+
+    def doFrom(self, frt, pag, r, c, p, i, w):
+        self.start = w
+        self.startd = self.df.t_disp[pag][r][p]
+        self.df.loadEntry(frt, pag, p+1, data=self.start)
+
+    def doTo(self, frt, pag, r, c, p, i, w):
+        if w and self.start and w < self.start:
+            return "Invalid Date, Earlier than From Date"
+        self.end = w
+        self.endd = self.df.t_disp[pag][r][p]
+
+    def doEnd(self):
+        self.df.closeProcess()
+        hds = [
+            "Creditors' Ledger Transactions for %s" % self.grpdes,
+            "From Period %s to Period %s" % (self.startd, self.endd)]
+        tab = ["crsmst", "crstrn", "crsrtf"]
+        col = ["crt_acno", "crm_name", "crt_ref1", "crt_type", "crt_trdt",
+            "crt_tramt", "rtf_depno", "rtf_pjno", "crt_taxamt"]
+        whr = [
+            ("crt_cono", "=", 1),
+            ("crt_type", "in", (1, 2, 3, 4, 6)),
+            ("crt_curdt", "between", self.start, self.end),
+            ("rtf_depno", "in", self.grpcoy)]
+        grp = "crt_acno, crm_name, crt_ref1, crt_type, crt_trdt, "\
+                "crt_tramt, rtf_acno, rtf_depno, rtf_pjno, crt_taxamt"
+        odr = "rtf_depno, rtf_acno, crt_trdt"
+        sdy = [["rtf_depno", "Branch Code", "Y"]]
+        tot = ["crt_tramt"]
+        RepPrt(self.opts["mf"], conum=self.opts["conum"],
+            conam=self.opts["conam"], name=__name__, tables=tab, heads=hds,
+            cols=col, where=whr, group=grp, order=odr, stots=sdy, gtots=tot,
+            repprt=self.df.repprt, repeml=self.df.repeml, pbar="P")
+        self.closeProcess()
+
+    def doExit(self):
+        self.df.closeProcess()
+        self.closeProcess()
+
+    def closeProcess(self):
+        self.opts["mf"].closeLoop()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== modified file 'crs/cr4010.py'
--- crs/cr4010.py	2015-10-03 07:36:56 +0000
+++ crs/cr4010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr4010_rne.py'
--- crs/cr4010_rne.py	2015-10-03 07:36:56 +0000
+++ crs/cr4010_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'crs/cr6010.py'
--- crs/cr6010.py	2015-12-12 09:12:17 +0000
+++ crs/cr6010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, ProgressBar, Sql, TartanDialog

=== modified file 'crs/cr6010_rne.py'
--- crs/cr6010_rne.py	2015-08-25 15:02:35 +0000
+++ crs/cr6010_rne.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'crs/cr6020.py'
--- crs/cr6020.py	2015-08-25 15:02:35 +0000
+++ crs/cr6020.py	2016-02-04 14:26:42 +0000
@@ -10,12 +10,12 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
 from TartanClasses import AgeTrans, ASD, CCD, Sql, TartanDialog
-from tartanFunctions import getTrn, copyList
+from tartanFunctions import copyList, getTrn
 
 class cr6020:
     def __init__(self, **opts):
@@ -195,7 +195,9 @@
         self.opts["mf"].closeLoop()
 
     def endTop(self):
-        self.df.focusField("T", 0, 1)
+        self.df.clearEntry("T", 0, 2)
+        self.df.clearEntry("T", 0, 3)
+        self.df.focusField("T", 0, 2)
 
     def exitTop(self):
         self.opts["mf"].dbm.commitDbase(ask=True)

=== modified file 'crs/crc110.py'
--- crs/crc110.py	2015-10-03 07:36:56 +0000
+++ crs/crc110.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'csh/ca2010.py'
--- csh/ca2010.py	2015-10-03 07:36:56 +0000
+++ csh/ca2010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'csh/ca2020.py'
--- csh/ca2020.py	2014-12-30 15:37:38 +0000
+++ csh/ca2020.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time, xlrd

=== modified file 'csh/ca3010.py'
--- csh/ca3010.py	2015-10-03 07:36:56 +0000
+++ csh/ca3010.py	2016-01-05 07:50:42 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -25,7 +25,7 @@
             self.opts["mf"].startLoop()
 
     def setVariables(self):
-        self.sql = Sql(self.opts["mf"].dbm, ["cshcnt", "cshana"],
+        self.sql = Sql(self.opts["mf"].dbm, ["cshcnt", "cshana", "genmst"],
             prog=__name__)
         if self.sql.error:
             return

=== modified file 'csv/bwldrt_fld.csv'
--- csv/bwldrt_fld.csv	2014-03-28 07:32:49 +0000
+++ csv/bwldrt_fld.csv	2016-01-12 15:26:23 +0000
@@ -2,7 +2,7 @@
 1,"bdt_tab","UI","6.0","Tab Number","TAB"
 2,"bdt_date","D1","10.0","Tabs In date","Tab-Date"
 3,"bdt_time","UA","1.0","Tabs In Time","T"
-4,"bdt_rink","UA","2.0","Rink","GR"
+4,"bdt_rink","UA","2.0","Rink","RK"
 5,"bdt_side","UA","1.0","Side","S"
 6,"bdt_name","UA","20.0","Name","Name"
 7,"bdt_pos","UI","1.0","Tab Pos","P"

=== modified file 'csv/bwldrt_idx.csv'
--- csv/bwldrt_idx.csv	2014-03-28 07:32:49 +0000
+++ csv/bwldrt_idx.csv	2016-01-13 07:00:36 +0000
@@ -1,1 +1,1 @@
-"Tabs Draw - Player",1,"U","bdt_cono","bdt_tab","bdt_date","bdt_time"
+"Tabs Draw - Player",1,"U","bdt_cono","bdt_tab","bdt_date","bdt_time","bdt_rink"

=== modified file 'csv/bwlgme_fld.csv'
--- csv/bwlgme_fld.csv	2014-03-28 07:32:49 +0000
+++ csv/bwlgme_fld.csv	2016-01-12 15:26:02 +0000
@@ -5,7 +5,7 @@
 4,"bcg_type","UA","1.0","Game Type","T"
 5,"bcg_date","d1","10.0","Game Date","Date"
 6,"bcg_ocod","UI","6.0","Opposition Code","O-Code"
-7,"bcg_rink","UA","2.0","Rink Code","GR"
+7,"bcg_rink","UA","2.0","Rink Code","RK"
 8,"bcg_group","UI","1.0","Group","G"
 9,"bcg_shots_for","UI","2.0","Shots For","SF"
 10,"bcg_shots_agt","UI","2.0","Shots Against","SA"

=== modified file 'csv/cshsys.py'
--- csv/cshsys.py	2015-08-25 15:02:35 +0000
+++ csv/cshsys.py	2016-01-05 07:48:42 +0000
@@ -1,7 +1,6 @@
-Tables = [
+tables = [
     # Cash Analysis
-    "cshana",
-    "cshcnt",
+    "cshana", "cshcnt",
     # Controls
     "ctlbat", "ctlctl", "ctldep", "ctllog", "ctlmst", "ctlnot", "ctlpwm",
         "ctlpwr", "ctlpwu", "ctlsys", "ctlvmf", "ctlvrf", "ctlvtf", "ctlynd",
@@ -12,5 +11,7 @@
     "rptcol", "rptexc", "rptjon", "rptmst", "rptord", "rpttab", "rptvar",
     # Telephone
     "telcon", "telgrp", "telmst",
+    # Templates
+    "tplmst", "tpldet",
     # Other
     "chglog", "frelat", "verupd"]

=== modified file 'csv/ctlgrp_fld.csv'
--- csv/ctlgrp_fld.csv	2015-08-25 15:02:35 +0000
+++ csv/ctlgrp_fld.csv	2015-12-15 09:54:05 +0000
@@ -20,3 +20,7 @@
 19,"ctg_hed09","NA","12.0","Heading  9","H09"
 20,"ctg_num10","UI","3.0","Number 10","N10"
 21,"ctg_hed10","NA","12.0","Heading 10","H10"
+22,"ctg_num11","UI","3.0","Number 11","N11"
+23,"ctg_hed11","NA","12.0","Heading 11","H11"
+24,"ctg_num12","UI","3.0","Number 12","N12"
+25,"ctg_hed12","NA","12.0","Heading 12","H12"

=== modified file 'csv/frelat.dat'
--- csv/frelat.dat	2015-08-25 15:02:35 +0000
+++ csv/frelat.dat	2016-02-04 13:56:22 +0000
@@ -62,6 +62,9 @@
 genrpt|glr_cono|ctlmst|ctm_cono
 genstr|gls_cono|ctlmst|ctm_cono
 gentrn|glt_cono|ctlmst|ctm_cono
+ibtmst|ibm_cono|ctlmst|ctm_cono
+ibtmst|ibm_branch|ctlmst|ctm_cono
+ibttrn|ibt_cono|ctlmst|ctm_cono
 lonctl|cln_cono|ctlmst|ctm_cono
 lonmf1|lm1_cono|ctlmst|ctm_cono
 lonmf2|lm2_cono|ctlmst|ctm_cono

=== added file 'csv/ibtcod_fld.csv'
--- csv/ibtcod_fld.csv	1970-01-01 00:00:00 +0000
+++ csv/ibtcod_fld.csv	2016-02-06 08:57:55 +0000
@@ -0,0 +1,4 @@
+0,"ibc_cono","UI","3.0","Company Number","Coy"
+1,"ibc_code","UA","10.0","Product Code","Product-Cd"
+2,"ibc_desc","NA","30.0","Description","Description"
+3,"ibc_price","UD","12.4","Unit Price","Unit-Price"

=== added file 'csv/ibtcod_idx.csv'
--- csv/ibtcod_idx.csv	1970-01-01 00:00:00 +0000
+++ csv/ibtcod_idx.csv	2016-02-04 07:55:23 +0000
@@ -0,0 +1,1 @@
+"Inter Branch Product Codes",1,"U","ibc_cono","ibc_code"

=== added file 'csv/ibtctl_fld.csv'
--- csv/ibtctl_fld.csv	1970-01-01 00:00:00 +0000
+++ csv/ibtctl_fld.csv	2016-02-16 13:18:30 +0000
@@ -0,0 +1,3 @@
+0,"cbt_cono","UI","3.0","Company Number","Coy"
+1,"cbt_tplnam","NA","20.0","Transfer Template","Template-Name"
+2,"cbt_crscoy","UI","3.0","Creditor's Company","CCN"

=== added file 'csv/ibtctl_idx.csv'
--- csv/ibtctl_idx.csv	1970-01-01 00:00:00 +0000
+++ csv/ibtctl_idx.csv	2016-02-07 10:41:09 +0000
@@ -0,0 +1,1 @@
+"Branch Transfers Control",1,"U","cbt_cono"

=== added file 'csv/ibtmst_fld.csv'
--- csv/ibtmst_fld.csv	1970-01-01 00:00:00 +0000
+++ csv/ibtmst_fld.csv	2016-02-09 13:51:56 +0000
@@ -0,0 +1,16 @@
+0,"ibm_cono","UI","3.0","Company Number","Coy"
+1,"ibm_docno","UI","9.0","Document Number","Number"
+2,"ibm_date","UI","9.0","Document Date","Doc-Date"
+3,"ibm_branch","UI","3.0","Branch Code","Bch"
+4,"ibm_dnote","NA","10.0","Delivery Note","Del-Note"
+5,"ibm_ddate","D1","10.0","Delivery Date","Del-Date"
+6,"ibm_supp","NA","7.0","Supplier","Supp-Cd"
+7,"ibm_sinv","Na","9.0","Supplier Inv","S-Invoice"
+8,"ibm_sinc","Na","11.2","Supplier Inc","S-IncAmount"
+9,"ibm_stax","Na","11.2","Supplier Tax","S-TaxAmount"
+10,"ibm_tran","NA","7.0","Transport","Tran-Cd"
+11,"ibm_tinv","Na","9.0","Transport Inv","T-Invoice"
+12,"ibm_tinc","Na","11.2","Transport Inc","T-IncAmount"
+13,"ibm_ttax","Na","11.2","Transport Tax","T-TaxAmount"
+14,"ibm_tjnl","Na","9.0","Transfer Journal","Tj-Number"
+15,"ibm_tjdt","D1","10.0","Transfer Journal Date","TrfJnl-Dte"

=== added file 'csv/ibtmst_idx.csv'
--- csv/ibtmst_idx.csv	1970-01-01 00:00:00 +0000
+++ csv/ibtmst_idx.csv	2016-02-04 07:55:23 +0000
@@ -0,0 +1,1 @@
+"Inter Branch Master",1,"U","ibm_cono","ibm_docno"

=== added file 'csv/ibttrn_fld.csv'
--- csv/ibttrn_fld.csv	1970-01-01 00:00:00 +0000
+++ csv/ibttrn_fld.csv	2016-02-19 07:02:55 +0000
@@ -0,0 +1,13 @@
+0,"ibt_cono","UI","3.0","Company Number","Coy"
+1,"ibt_docno","UI","9.0","Document Number","Number"
+2,"ibt_type","UI","2.0","Movement Type","MT"
+3,"ibt_code","UA","10.0","Product Code","Product-Cd"
+4,"ibt_desc","TX","30.0","Description","Description"
+5,"ibt_price","UD","10.4","Unit-Price","Unit-Price"
+6,"ibt_quant","SD","11.2","Quantity","Trans-Quant"
+7,"ibt_value","SD","11.2","Value","Trans-Value"
+9,"ibt_pjno","UI","5.0","Purchases Journal","PjNum"
+10,"ibt_curdt","D2","7.0","Current Date","Curr-Dt"
+11,"ibt_capnm","TX","20.0","Capture Name","Capture-Name"
+12,"ibt_capdt","d1","10.0","Capture Date","Capture-Dt"
+13,"ibt_seq","US","10.0","Sequence","Sequence"

=== added file 'csv/ibttrn_idx.csv'
--- csv/ibttrn_idx.csv	1970-01-01 00:00:00 +0000
+++ csv/ibttrn_idx.csv	2016-02-04 09:08:24 +0000
@@ -0,0 +1,2 @@
+"Inter Branch Transactions",1,"U","ibt_seq"
+"",2,"U","ibt_cono","ibt_docno","ibt_type","ibt_code"

=== modified file 'csv/rnesys.py'
--- csv/rnesys.py	2015-12-12 09:12:17 +0000
+++ csv/rnesys.py	2016-02-07 10:37:57 +0000
@@ -14,6 +14,8 @@
     # General Ledger
     "genbal", "genbud", "gendtm", "gendtt", "genint", "genjlm", "genjlt",
     "genmst", "genrcc", "genrct", "genrpc", "genrpt", "genstr", "gentrn",
+    # Inter Branch Transfers
+    "ibtctl", "ibtcod", "ibtmst", "ibttrn",
     # Loans
     "lonctl", "lonmf1", "lonmf2", "lonrte", "lontrn",
     # Rental

=== modified file 'csv/tpldet_rne.dat'
--- csv/tpldet_rne.dat	2015-12-12 09:12:17 +0000
+++ csv/tpldet_rne.dat	2016-02-04 13:29:20 +0000
@@ -1,3 +1,30 @@
+branch_transfer|1.0|I|A||||0|#000000|||||||5.0|0|135.0|7.0|34.0|0.0|ctm_logo||0|#000000|N||||||0.0|0|0.0|0.0|0.0|0|0
+branch_transfer|2.0|C|A|N|||0|#000000|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_name|courier|18|#000000|Y|N|N|L||N|5.0|30|119.0|7.0|12.0|1|1
+branch_transfer|3.0|C|A|N|||0|#000000|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_add1|courier|10|#000000|Y|N|N|L||N|5.0|30|68.0|14.0|19.0|1|1
+branch_transfer|4.0|C|A|L|RegNo:|courier|10|#000000|Y|N|N|L||N|99.0|7|114.0|14.0|19.0|0.0|ctm_regno|courier|10|#000000|Y|N|N|L||N|114.0|20|156.0|14.0|19.0|1|1
+branch_transfer|5.0|C|A|N|||0|#000000|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_add2|courier|10|#000000|Y|N|N|L||N|5.0|30|68.0|18.0|23.0|1|1
+branch_transfer|6.0|C|A|L|TaxNo:|courier|10|#000000|Y|N|N|L||N|99.0|7|114.0|18.0|23.0|0.0|ctm_taxno|courier|10|#000000|Y|N|N|L||N|114.0|20|156.0|18.0|23.0|1|1
+branch_transfer|7.0|C|A|N|||0|#000000|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_add3|courier|10|#000000|Y|N|N|L||N|5.0|30|68.0|22.0|27.0|1|1
+branch_transfer|8.0|C|A|L|TelNo:|courier|10|#000000|Y|N|N|L||N|99.0|7|114.0|22.0|27.0|0.0|ctm_tel|courier|10|#000000|Y|N|N|L||N|114.0|15|146.0|22.0|27.0|1|1
+branch_transfer|9.0|C|A|N|||0|#000000|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_pcode|courier|10|#000000|Y|N|N|L||N|5.0|4|13.0|26.0|31.0|1|1
+branch_transfer|10.0|C|A|L|FaxNo:|courier|10|#000000|Y|N|N|L||N|99.0|7|114.0|26.0|31.0|0.0|ctm_fax|courier|10|#000000|Y|N|N|L||N|114.0|15|146.0|26.0|31.0|1|1
+branch_transfer|11.0|T|A||INVOICE|courier|12|#000000|Y|N|N|R||N|173.0|7|193.0|5.0|15.0|0.0|||0||||||||0.0|0|0.0|0.0|0.0|0|0
+branch_transfer|12.0|C|A|H|Charge To:|courier|10|#000000|Y|N|N|L|TLRB|Y|5.0|30|71.0|35.0|40.0|0.0|account_details|courier|10|#000000|N|N|N|L|TLRB|N|5.0|30|71.0|40.0|44.0|5|1
+branch_transfer|13.0|C|A|H|Deliver To:|courier|10|#000000|Y|N|N|L|TLRB|Y|95.0|30|161.0|35.0|40.0|0.0|deliver_to|courier|10|#000000|N|N|N|L|TLRB|N|95.0|30|161.0|40.0|44.0|5|1
+branch_transfer|14.0|C|A|H|Doc-Number|courier|10|#000000|Y|N|N|C|TLRB|Y|170.0|10|193.0|36.0|41.0|0.0|ibm_docno|courier|10|#000000|N|N|N|C|TLRB|N|170.0|10|193.0|41.0|45.0|1|1
+branch_transfer|15.0|C|A|H|Page No|courier|10|#000000|Y|N|N|C|TLRB|Y|170.0|10|193.0|45.0|50.0|0.0|page_number|courier|10|#000000|N|N|N|C|TLRB|N|170.0|10|193.0|50.0|54.0|1|1
+branch_transfer|16.0|C|A|H|Date|courier|10|#000000|Y|N|N|C|TLRB|Y|170.0|10|193.0|54.0|59.0|0.0|ibm_date|courier|10|#000000|N|N|N|C|TLRB|N|170.0|10|193.0|59.0|63.0|1|1
+branch_transfer|17.0|C|A|H|Del-Number|courier|10|#000000|Y|N|N|C|TLRB|Y|5.0|10|28.0|63.0|68.0|0.0|ibm_dnote|courier|10|#000000|N|N|N|C|TLRB|N|5.0|10|28.0|68.0|72.0|1|1
+branch_transfer|18.0|C|A|H|Del-Date|courier|10|#000000|Y|N|N|C|TLRB|Y|28.0|10|51.0|63.0|68.0|0.0|ibm_ddate|courier|10|#000000|N|N|N|C|TLRB|N|28.0|10|51.0|68.0|72.0|1|1
+branch_transfer|19.0|C|A|H|Transporter|courier|10|#000000|Y|N|N|C|TLRB|Y|51.0|27|110.0|63.0|68.0|0.0|transporter|courier|10|#000000|N|N|N|C|TLRB|N|51.0|27|110.0|68.0|72.0|1|1
+branch_transfer|20.0|C|A|H|Supplier|courier|10|#000000|Y|N|N|C|TLRB|Y|110.0|27|170.0|63.0|68.0|0.0|supplier|courier|10|#000000|N|N|N|L|TLRB|N|110.0|27|170.0|68.0|72.0|1|1
+branch_transfer|21.0|C|A|H|Branch|courier|10|#000000|Y|N|N|C|TLRB|Y|170.0|10|193.0|63.0|68.0|0.0|ibm_branch|courier|10|#000000|N|N|N|C|TLRB|N|170.0|10|193.0|68.0|72.0|1|1
+branch_transfer|22.0|C|B|H|Product-Cd|courier|10|#000000|Y|N|N|C|TLRB|Y|5.0|10|28.0|72.0|77.0|0.0|ibt_code|courier|10|#000000|N|N|N|L|LR|N|5.0|10|28.0|77.0|81.0|1|20
+branch_transfer|23.0|C|B|H|Description|courier|10|#000000|Y|N|N|L|TLRB|Y|28.0|40|115.0|72.0|77.0|0.0|ibt_desc|courier|10|#000000|N|N|N|L|R|N|28.0|40|115.0|77.0|81.0|1|20
+branch_transfer|24.0|C|B|H|Quantity|courier|10|#000000|Y|N|N|R|TLRB|Y|115.0|11|140.0|72.0|77.0|0.0|ibt_quant|courier|10|#000000|N|N|N|R|R|N|115.0|11|140.0|77.0|81.0|1|20
+branch_transfer|25.0|C|B|H|Price|courier|10|#000000|Y|N|N|R|TLRB|Y|140.0|10|163.0|72.0|77.0|0.0|ibt_price|courier|10|#000000|N|N|N|R|R|N|140.0|10|163.0|77.0|81.0|1|20
+branch_transfer|26.0|C|B|H|Value|courier|10|#000000|Y|N|N|R|TLRB|Y|163.0|13|193.0|72.0|77.0|0.0|ibt_value|courier|10|#000000|N|N|N|R|R|N|163.0|13|193.0|77.0|81.0|1|20
+branch_transfer|27.0|C|C|L|Total Value|courier|10|#000000|Y|N|N|L|TLRB|Y|133.0|13|163.0|157.0|162.0|0.0|total_value|courier|10|#000000|Y|N|N|R|TLRB|N|163.0|13|193.0|157.0|162.0|1|1
 remittance_rnehol|1.0|I|A||||0|||||||15.0|0|130.0|15.0|35.0|0.0|ctm_logo||0|||||||0.0|0|0.0|0.0|0.0|0|0
 remittance_rnehol|2.0|C|A|N|||0|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_name|courier|18|Y|N|N|L||N|15.0|30|129.0|15.0|20.0|1|1
 remittance_rnehol|3.0|C|A|N|||0|||||||0.0|0|0.0|0.0|0.0|0.0|ctm_add1|courier|10|Y|N|N|L||N|15.0|30|78.0|21.0|25.0|1|1

=== modified file 'csv/tplmst_rne.dat'
--- csv/tplmst_rne.dat	2015-12-12 09:12:17 +0000
+++ csv/tplmst_rne.dat	2016-02-04 10:32:48 +0000
@@ -1,3 +1,4 @@
+branch_transfer|Branch Transfer|I|IBT||A4|P
 remittance_rnehol|Remittance Advice (RNE)|R|CRS||A4|P
 sales_document|Sales Document|I|INV||A4|L
 statement_loan|Statement (Loan)|S|LON|O|A4|P

=== modified file 'doc/BC.rst'
--- doc/BC.rst	2015-12-12 09:12:17 +0000
+++ doc/BC.rst	2016-02-02 07:00:05 +0000
@@ -29,8 +29,8 @@
 + **Club Code** - The applicable club's code. A zero code will automatically select the next available code.
 + **Club Name** - The name of the club.
 
-Tabs Maintenance
-++++++++++++++++
+Tab's Maintenance
++++++++++++++++++
 Use this routine to create, delete or amend tab records.
 
 + **Tab Number** - The number of the tab or zero for the next available number depending on the gender of the member.
@@ -82,14 +82,6 @@
 + **Number of Teams** - The number of teams in the side.
 + **Active Flag** - Whether or not this side is still active. If a team gets relegated or promoted it must be made inactive and a new side must be created. An inactive side can be made active again in the future if it once again becomes applicable.
 
-Player's Maintenance
-++++++++++++++++++++
-Use this routine to create, delete or amend competition player's records. Most of the fields are self explanatory with the exception of:
-
-+ **Code** - The player's number or zero for the next available number.
-+ **Tab Number** - The tab number if the player is a member of the club.
-+ **Club Code** - The player's club code or zero for the next available number in which case you must enter the name of the club.
-
 Competition Types
 +++++++++++++++++
 Use this routine to create competition type records as follows:
@@ -107,7 +99,7 @@
 + **Retain Percentage** - What percentage of the shots of the games, not expunged, must be retained when split into groups.
 + **Number of Drawn Games** - The number of games which are randomly drawn. Enter 99 for a Round Robin.
 + **Strict S v S** - Whether the competition is strictly strength versus strength i.e. teams could play each other again before the last game.
-+ **Drawn Games Scoring** - Whether or not drawn games have a different scoring format from strength versus strength games.
++ **Different Drawn Games Scoring** - Whether or not drawn games have a different scoring format from strength versus strength games.
 + **Points Format** - The formats for Drawn and Strength V Strength games.
     + **Skins** - Whether or not to have skins.
     + **Number of Ends per Skin** - If skins were selected then enter the number of games per skin.
@@ -195,9 +187,6 @@
     + **Skp** - The tab code of the skip.
     + **Plr** - The tab code of the next team member.
 + When all sides have been entered press the `Esc` key twice to exit. You will then be asked whether or not you would like to View or Print the Selections. If Yes continue as follows:
-    + **Output** - Select the type of output.
-    + **E-Mail Report** - Select whether to email the forms.
-    + **E-Mail Address** - The email address(es), comma separated, to email the forms to.
 
 Assessment Forms
 ++++++++++++++++
@@ -255,76 +244,90 @@
 +++++++++++++++
 Use this routine to capture entries in a competition as follows:
 
-+ **Competition Code** - The relevant competition number or zero for the next available number.
-+ **Competition Name** - The name of the competition.
++ **Code** - The relevant competition number or zero for the next available number.
++ **Name** - The name of the competition.
 + **Date** - The starting date of the competition.
 + **Type** - The competition type as created in `Competition Types`_.
 
 Enter the Skip's Codes
 
-+ **Skp** - The skip's code as created in `Player's Maintenance`_ or you can enter a zero to enter a new player as per `Player's Maintenance`_.
-+ **Ptr** - The partner's code, in the case of pairs, as created in `Player's Maintenance`_ or you can enter a zero to enter a new player as per `Player's Maintenance`_.
++ **Skip** - The skip's code as created in `Tab's Maintenance`_ or you can enter a zero to enter a new player as per `Tab's Maintenance`_.
++ **Lead** - The lead's code, in the case of pairs, as created in `Tab's Maintenance`_ or you can enter a zero to enter a new player as per `Tab's Maintenance`_.
 + **P** - Whether or not the skip has paid, Y or N.
 
-Print Match Cards
-+++++++++++++++++
+Entries Listing
++++++++++++++++
+Use this routine to print a report of entered skips.
+
++ **Competition Code** - The relevant competition number.
+
+Competition Format
+++++++++++++++++++
+Use this routine to print the competition format.
+
++ **Competition Code** - The relevant competition number.
+
+Competition Draw
+++++++++++++++++
 Use this routine to create a draw and to print match cards as follows:
 
 + **Competition Code** - The relevant competition code.
 + **Game Number** - The relevant game number.
 + **Game Date** - The date of the game.
 + **Number of Groups** - The number of groups, if applicable, to split the players into.
-+ **Greens** - The greens to be used, comma separated e.g. A,B,C
++ **Smallest Group** - Select which group will have the least number of teams if applicable.
++ **Greens** - The greens to be used, comma separated e.g. A,B,C will default to 6 rinks per green. You can default a green to seven by entering A7,B7,C which would give us 23 rinks. You can also exclude rinks by entering rinks to be used e.g. A2345,B345 which would give us 7 rinks.
 + **Group per Green** - Whether to allocate greens to groups. This only applies to the final game.
 + **Print Cards** - Whether or not to print score cards.
 + **All Cards** - If cards were selected to be printed, whether to print all cards or only selected ones.
 + **Template Name** - The template to use for the cards.
-+ **Output** - Whether to view the reports or simply print them.
-+ **Printer Name** - The printer to use for printing.
 
-Print Cards Summary
-+++++++++++++++++++
+Draw Summary
+++++++++++++
 Use this routine to print a summary of all draws to date.
 
-Change Match Cards
-++++++++++++++++++
-Use this routine to change individual match cards. After changing the cards you must reprint them as per `Print Match Cards`_. Please note that to only reprint certain cards you must select `All Cards No`.
++ **Competition Code** - The relevant competition number.
+
+Change Draw
++++++++++++
+Use this routine to change individual match cards. After changing the cards you must reprint them as per `Competition Draw`_. Please note that to only reprint certain cards you must select `All Cards No`.
 
 + **Competition Code** - The relevant competition code.
 + **Game Number** - The relevant game number.
 + **Greens** - The available greens comma separated e.g. A,B,C
-    + **SKC** - The skip's code.
-    + **OPP** - The opposition's code.
-    + **GR** - The rink number e.g. A1
+    + **S-Code** - The skip's code.
+    + **O-Code** - The opposition's code.
+    + **RK** - The rink number e.g. A1
 
-Capture Results
-+++++++++++++++
+Capture Game Results
+++++++++++++++++++++
 Use this routine to capture completed matches as follows:
 
 + **Competition Code** - The relevant competition code.
 + **Game Number** - The relevant game number.
 + **Ends Completed** - The number of ends completed. Enter a zero to abandon a game.
-    + **SKC** - The skip's code.
+    + **S-Code** - The skip's code.
     + **SF** - Shots scored by the skip's side.
     + **Pnts** - Points scored by the skip's side.
-    + **OPP** - The opposition's code.
+    + **O-Code** - The opposition's code.
     + **SA** - Shots scored by the opposing side.
     + **Pnts** - Points scored by the opposing side.
 
-Print Game Results
-++++++++++++++++++
+Game Results Report
++++++++++++++++++++
 Use this routine to print game results as follows:
 
 + **Competition Code** - The relevant competition code.
 + **Game Number** - The relevant game number.
 
-Print Match Results
-+++++++++++++++++++
+Match Results Report
+++++++++++++++++++++
 Use this routine to print the match results as follows:
 
 + **Competition Code** - The relevant competition code.
 + **Last Game** - The last game to take into account.
-+ **Session Prizes by Group** - Whether session prizes are to be awarded by group or overall.
++ **Session Prizes** - Whether session prizes are to be awarded.
++ **Session Prizes by Group** - Whether session prizes are to be awarded by group.
 
 Prizes by Group or the Match if not Grouped
 
@@ -346,18 +349,17 @@
 
 The **Generate** button is used to automatically renumber tabs in surname and names sequence.
 
-Change Player's Codes
-+++++++++++++++++++++
-Use this routine to change player's codes.
-
-+ **Old Code** - The old code
-+ **New Code** - The new code
-
-The **Generate** button is used to automatically generate new codes in surname and names order.
-
-Clear League History
-++++++++++++++++++++
+Merge Duplicate Visitors
+++++++++++++++++++++++++
+Use this routine to merge all visitor's tabs for the same name e.g. Smith Peter has 3 different tab numbers. This routine will merge all three into the first number.
+
+Clear History
++++++++++++++
 Use this routine to erase all previous selection data as well as selectively erasing player and opponent details. Please ensure that you have a **backup** before selecting this routine as there is no going back.
 
-+ **Clear Players** - Select whether or not to also erase all player's details.
-+ **Clear Opponents** - Select whether or not to also erase all opponent's details.
++ **Clear** - Select what to clear.
+    + **Tabs Draw** - All history relating to tabs draws.
+    + **League** - All history relating to league selections.
+    + **Competitions** - All history relating to competitions.
+    + **All** - All the above categories.
++ **Opponents** - Select whether or not to also erase all opponent's details.

=== modified file 'doc/Bowls.rst'
--- doc/Bowls.rst	2015-06-17 15:23:42 +0000
+++ doc/Bowls.rst	2016-01-03 17:08:18 +0000
@@ -6,7 +6,7 @@
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
-:Copyright: Paul Malherbe (C) 2004-2015.
+:Copyright: Paul Malherbe (C) 2004-2016.
 :Licence:   Free use of this software and all it's modules is granted under the terms of the Licence.
 
 :Note: This document is not intended as an accounting manual. It is primarily a manual for people with some accounting expertise to learn how to use Tartan as an accounting tool.

=== modified file 'doc/Downloads.rst'
--- doc/Downloads.rst	2015-12-12 09:12:17 +0000
+++ doc/Downloads.rst	2016-02-27 13:18:24 +0000
@@ -11,23 +11,23 @@
 
 |tartan| Version
 ================
-The latest version of Tartan is 5.1.4 and was released on the 12th December, 2015.
+The latest version of Tartan is 5.2.0 and was released on the 27th February, 2016.
 
 Backup and restore functions must only be done with the  same version of Tartan i.e. the version used to restore a backup must be the same as the one used to make the backup.
 
 .. _Documentation: http://www.tartan.co.za/cgi-bin/simple_web.py/Documentation
-.. _Tartan-5-lnx: ftp://tartan.co.za/Tartan_5.1.4.tar.gz
+.. _Tartan-5-lnx: ftp://tartan.co.za/Tartan_5.2.0.tar.gz
 .. _Tartan-4-lnx: ftp://tartan.co.za/Tartan_4.1.14.tar.gz
 .. _Tartan-3-lnx: ftp://tartan.co.za/Tartan_3.4.51.tar.gz
 .. _Tartan-2-lnx: ftp://tartan.co.za/Tartan_2.5.29.tar.gz
-.. _Tartan-5-win: ftp://tartan.co.za/Tartan_5.1.4.exe
+.. _Tartan-5-win: ftp://tartan.co.za/Tartan_5.2.0.exe
 .. _Tartan-4-win: ftp://tartan.co.za/Tartan_4.1.14.exe
 .. _Tartan-3-win: ftp://tartan.co.za/Tartan_3.4.51.exe
 .. _Tartan-2-win: ftp://tartan.co.za/Tartan_2.5.29.exe
-.. _Bwlclb-5-lnx: ftp://tartan.co.za/Bwlclb_5.1.4.tar.gz
-.. _Bwlclb-5-win: ftp://tartan.co.za/Bwlclb_5.1.4.exe
-.. _Seccmp-5-lnx: ftp://tartan.co.za/Seccmp_5.1.4.tar.gz
-.. _Seccmp-5-win: ftp://tartan.co.za/Seccmp_5.1.4.exe
+.. _Bwlclb-5-lnx: ftp://tartan.co.za/Bwlclb_5.2.0.tar.gz
+.. _Bwlclb-5-win: ftp://tartan.co.za/Bwlclb_5.2.0.exe
+.. _Seccmp-5-lnx: ftp://tartan.co.za/Seccmp_5.2.0.tar.gz
+.. _Seccmp-5-win: ftp://tartan.co.za/Seccmp_5.2.0.exe
 
 |linux| Linux
 =============

=== added file 'doc/IB.rst'
--- doc/IB.rst	1970-01-01 00:00:00 +0000
+++ doc/IB.rst	2016-02-22 16:07:46 +0000
@@ -0,0 +1,87 @@
+Inter Branch Transfers
+----------------------
+File Maintenance (IB)
+.....................
+Control Record (IB)
++++++++++++++++++++
+Use this routine to create and amend the loan's control record.
+
++ **Invoice Template** - The template to be used for invoices.
++ **Creditor's Company** - The company number of the creditor's ledger.
+
+Data Capture (IB)
+.................
+Sales Invoices (IB)
++++++++++++++++++++
+Use this routine to generate inter branch invoices for products delivered.
+
++ **Template Name** - The template to be used for invoices.
++ **Document date** - The date of the invoices.
+
+For each delivery enter the following:
+
++ **Branch** - The branch number to be invoiced.
++ **D/Note** - The delivery note number.
++ **D/Date** - The delivery date.
++ **Supplier** - The supplier's account number.
++ **Transporter** - The transporter's account number.
+
+For each product enter the following:
+
++ **Product-Cd** - The product's code.
++ **Description** - The product's description if it does not already exist.
++ **Price** - The product's price.
++ **Quantity** - The quantity delivered.
++ **Value** - The line value.
+
+Creditor's Invoices (IB)
+++++++++++++++++++++++++
+Use this routine to capture supplier's and transporter's invoices.
+
++ **Purchase Journal** - The purchases journal number being captured.
+
+For each invoice in the purchase journal enter the following:
+
++ **Acc-Num** - The creditor's account number.
++ **Reference** - The document number.
++ **Ref-Date** - The document number.
++ **Amount** - The total inclusive value of the document.
++ **V** - The tax code.
++ **V.A.T.** - The tax amount.
+
+For each inter branch invoice relating to the creditor's invoice enter the following:
+
++ **I.B.T-Inv** - The inter branch invoice number.
++ **Product-Cd** - The product code.
++ **Quantity** - The product quantity.
++ **Price** - The product price.
++ **Value** - The product exclusive value.
+
+Reporting (IB)
+..............
+Reprint Sales Invoices (IB)
++++++++++++++++++++++++++++
+Use this routine to reprint any sales invoices.
+
++ **Template Name** - The template to be used for invoices.
++ **Documents** - Select range or individual invoices.
++ **From Number** - If range was selected enter the first number of the range.
++ **To Number** - If range was selected enter the last number of the range.
+
+Purchases Journals (IB)
++++++++++++++++++++++++
+Use this routine to print lists of inter branch invoices by branch.
+
++ **Reprints** - Select whether to reprint previously printed journals.
++ **Preview Only** - Select whether to print preview journals.
++ **Branch Code** - The branch to reprint else 0 for all branches.
++ **Start Number** - The first journal to reprint.
++ **End Number** - The last journal to reprint.
+
+Sales Report (IB)
++++++++++++++++++
+Use this routine to produce a sales report.
+
++ **Branch Code** - The branch to reprint else 0 for all branches.
++ **From Period** - The first financial period to include.
++ **To Period** - The last financial period to include.

=== modified file 'doc/LN.rst'
--- doc/LN.rst	2015-12-12 09:12:17 +0000
+++ doc/LN.rst	2016-02-22 16:06:57 +0000
@@ -33,8 +33,10 @@
 
 Data Capture (LN)
 .................
-Payments, Receipts, Journals and Interest Adjustments
-+++++++++++++++++++++++++++++++++++++++++++++++++++++
+Payments, Receipts, Journals and Interest Adjustments (LN)
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+Use this routine to capture all loans transactions.
+
 + **Acc-Num** - The account code. Enter nothing for a new account.
 + **Ln** -  The loan number for existing loans. Enter 0 for a new loan.
 + **Description** - The description of the loan for new loans.
@@ -52,14 +54,14 @@
 + **All-Amt** - The amount to be allocated to this account.
 + **Details** - The details of the allocation.
 
-Raise Interest
-++++++++++++++
+Raise Interest (LN)
++++++++++++++++++++
 Use this routine to raise interest on loans.
 
 + **Transaction Date** - The date on which the interest must be raised.
 
-Rate Change
-+++++++++++
+Rate Change (LN)
+++++++++++++++++
 Use this routine to change the interest rate of a loan.
 
 + **All Current Rates** - Select whether to globally change existing rates.

=== modified file 'doc/MB.rst'
--- doc/MB.rst	2015-12-12 09:12:17 +0000
+++ doc/MB.rst	2016-02-27 13:18:24 +0000
@@ -2,11 +2,11 @@
  TARTAN SYSTEMS - Bowling Clubs
 ================================
 
-:Version:   5.1.4
+:Version:   5.2.0
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
-:Copyright: Paul Malherbe (C) 2004-2015.
+:Copyright: Paul Malherbe (C) 2004-2016.
 :Licence:   Free use of this software and all it's modules is granted under the terms of the License.
 
 .. contents:: **Table of Contents**

=== modified file 'doc/MD.rst'
--- doc/MD.rst	2015-12-12 09:12:17 +0000
+++ doc/MD.rst	2016-02-27 13:18:24 +0000
@@ -2,11 +2,11 @@
  Tartan Systems - User Manual
 ==============================
 
-:Version:   5.1.4
+:Version:   5.2.0
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
-:Copyright: Paul Malherbe (C) 2004-2015.
+:Copyright: Paul Malherbe (C) 2004-2016.
 :Licence:   Free use of this software and all it's modules is granted under the terms of the Licence.
 
 :Note: This document is not intended as an accounting manual. It is primarily a manual for people with some accounting expertise to learn how to use Tartan as an accounting tool.

=== modified file 'doc/QS.rst'
--- doc/QS.rst	2015-06-17 15:23:42 +0000
+++ doc/QS.rst	2015-12-15 06:55:58 +0000
@@ -19,7 +19,6 @@
 ..............
 If you are going to use the `General Ledger` you must perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
 + Create the chart of accounts using `Masterfile Records`.
 + Create control accounts using `Control Accounts`.
 + Capture the account's opening balances using `Opening Balances`.

=== modified file 'doc/SC.rst'
--- doc/SC.rst	2015-06-17 15:23:42 +0000
+++ doc/SC.rst	2016-01-03 17:09:04 +0000
@@ -6,7 +6,7 @@
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
-:Copyright: Paul Malherbe (C) 2004-2015.
+:Copyright: Paul Malherbe (C) 2004-2016.
 :Licence:   Free use of this software and all it's modules is granted under the terms of the License.
 
 .. contents:: **Table of Contents**

=== modified file 'drs/dr1010.py'
--- drs/dr1010.py	2015-10-25 09:33:02 +0000
+++ drs/dr1010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr1020.py'
--- drs/dr1020.py	2015-08-25 15:02:35 +0000
+++ drs/dr1020.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'drs/dr2010.py'
--- drs/dr2010.py	2015-10-25 09:33:02 +0000
+++ drs/dr2010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr2020.py'
--- drs/dr2020.py	2015-08-25 15:02:35 +0000
+++ drs/dr2020.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr2030.py'
--- drs/dr2030.py	2015-10-03 07:36:56 +0000
+++ drs/dr2030.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'drs/dr3010.py'
--- drs/dr3010.py	2015-10-03 07:36:56 +0000
+++ drs/dr3010.py	2016-02-18 12:08:10 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3020.py'
--- drs/dr3020.py	2015-10-03 07:36:56 +0000
+++ drs/dr3020.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3030.py'
--- drs/dr3030.py	2015-10-03 07:36:56 +0000
+++ drs/dr3030.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3040.py'
--- drs/dr3040.py	2015-10-03 07:36:56 +0000
+++ drs/dr3040.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3050.py'
--- drs/dr3050.py	2015-10-25 09:33:02 +0000
+++ drs/dr3050.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3060.py'
--- drs/dr3060.py	2015-10-03 07:36:56 +0000
+++ drs/dr3060.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3080.py'
--- drs/dr3080.py	2015-12-12 09:12:17 +0000
+++ drs/dr3080.py	2016-02-11 14:08:51 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -129,7 +129,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'drs/dr3090.py'
--- drs/dr3090.py	2015-10-03 07:36:56 +0000
+++ drs/dr3090.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3100.py'
--- drs/dr3100.py	2015-10-03 07:36:56 +0000
+++ drs/dr3100.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'drs/dr3110.py'
--- drs/dr3110.py	2015-10-03 07:36:56 +0000
+++ drs/dr3110.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr3120.py'
--- drs/dr3120.py	2015-10-03 07:36:56 +0000
+++ drs/dr3120.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/dr4010.py'
--- drs/dr4010.py	2015-10-25 09:33:02 +0000
+++ drs/dr4010.py	2016-01-11 11:58:24 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -357,16 +357,16 @@
                             doc = int(rec.selection[5])
                             inv = self.sql.getRec(tables="slsiv1",
                                 where=[("si1_cono", "=", self.opts["conum"]),
-                                ("si1_rtn", "=", typ), ("si1_docno", "=",
-                                doc)], limit=1)
+                                ("si1_rtn", "=", typ), ("si1_docno", "=", doc)],
+                                limit=1)
                         except:
                             inv = []
                     else:
                         inv = []
                     if inv:
                         PrintInvoice(self.opts["mf"], self.opts["conum"],
-                            self.opts["conam"], typ, doc, repprt=["N",
-                            "V", "view"], copy="y")
+                            self.opts["conam"], typ, doc, repprt=["N", "V",
+                            "view"], copy="y")
                     else:
                         whr = [
                             ("drt_cono", "=", self.opts["conum"]),

=== modified file 'drs/dr6010.py'
--- drs/dr6010.py	2015-12-12 09:12:17 +0000
+++ drs/dr6010.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, ProgressBar, Sql, TartanDialog

=== modified file 'drs/dr6020.py'
--- drs/dr6020.py	2015-08-25 15:02:35 +0000
+++ drs/dr6020.py	2016-02-04 14:27:01 +0000
@@ -10,12 +10,12 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
 from TartanClasses import AgeTrans, ASD, CCD, GetCtl, Sql, TartanDialog
-from tartanFunctions import getTrn, copyList
+from tartanFunctions import copyList, getTrn
 
 class dr6020:
     def __init__(self, **opts):
@@ -70,7 +70,7 @@
                 ("drm_chain", "=", 0)]
         fld = [
             [["T",0,0,0],"ID2",7,"Period","Current Financial Period",
-                self.curdt,"N",self.doCurdt,None,None,("efld",)],
+                self.curdt,"Y",self.doCurdt,None,None,("efld",)],
             [["T",0,1,0],"INA",7,"Acc-Num","Account Number",
                 "","N",self.doAccno,drm,None,("notblank",)],
             [["T",0,1,0],"ONA",30,"Name"]]
@@ -236,7 +236,11 @@
         self.opts["mf"].closeLoop()
 
     def endTop(self):
-        self.df.focusField("T", 0, 1)
+        self.df.clearEntry("T", 0, 2)
+        self.df.clearEntry("T", 0, 3)
+        if self.chains == "Y":
+            self.df.clearEntry("T", 0, 4)
+        self.df.focusField("T", 0, 2)
 
     def exitTop(self):
         self.opts["mf"].dbm.commitDbase(ask=True)

=== modified file 'drs/dr6030.py'
--- drs/dr6030.py	2014-12-30 15:37:38 +0000
+++ drs/dr6030.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/drc110.py'
--- drs/drc110.py	2015-10-03 07:36:56 +0000
+++ drs/drc110.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/drc210.py'
--- drs/drc210.py	2015-10-03 07:36:56 +0000
+++ drs/drc210.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'drs/drc220.py'
--- drs/drc220.py	2015-10-25 09:33:02 +0000
+++ drs/drc220.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/drc310.py'
--- drs/drc310.py	2015-10-25 09:33:02 +0000
+++ drs/drc310.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'drs/drc320.py'
--- drs/drc320.py	2015-10-25 09:33:02 +0000
+++ drs/drc320.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/drc410.py'
--- drs/drc410.py	2015-10-25 09:33:02 +0000
+++ drs/drc410.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'drs/drc420.py'
--- drs/drc420.py	2015-10-25 09:33:02 +0000
+++ drs/drc420.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import RepPrt, Sql, TartanDialog

=== modified file 'drs/drc510.py'
--- drs/drc510.py	2015-10-25 09:33:02 +0000
+++ drs/drc510.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'drs/drc520.py'
--- drs/drc520.py	2015-10-25 09:33:02 +0000
+++ drs/drc520.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'drs/drc610.py'
--- drs/drc610.py	2015-10-25 09:33:02 +0000
+++ drs/drc610.py	2016-01-03 17:07:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'drs/drc710.py'
--- drs/drc710.py	2015-10-25 09:33:02 +0000
+++ drs/drc710.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'gen/gl1010.py'
--- gen/gl1010.py	2015-10-25 09:33:02 +0000
+++ gen/gl1010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import csv, os, time

=== modified file 'gen/gl1020.py'
--- gen/gl1020.py	2015-08-25 15:02:35 +0000
+++ gen/gl1020.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, Sql, TartanDialog

=== modified file 'gen/gl1030.py'
--- gen/gl1030.py	2015-08-25 15:02:35 +0000
+++ gen/gl1030.py	2016-01-03 17:07:29 +0000
@@ -13,7 +13,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog

=== modified file 'gen/gl1040.py'
--- gen/gl1040.py	2015-10-03 07:36:56 +0000
+++ gen/gl1040.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'gen/gl1050.py'
--- gen/gl1050.py	2015-04-30 10:16:15 +0000
+++ gen/gl1050.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'gen/gl1060.py'
--- gen/gl1060.py	2015-08-25 15:02:35 +0000
+++ gen/gl1060.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'gen/gl2010.py'
--- gen/gl2010.py	2015-08-25 15:02:35 +0000
+++ gen/gl2010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, FileImport, Sql, TartanDialog

=== modified file 'gen/gl2020.py'
--- gen/gl2020.py	2015-10-03 07:36:56 +0000
+++ gen/gl2020.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ASD, CCD, FileImport, ProgressBar, Sql, TartanDialog

=== modified file 'gen/gl2030.py'
--- gen/gl2030.py	2015-10-25 09:33:02 +0000
+++ gen/gl2030.py	2016-02-22 08:21:00 +0000
@@ -24,7 +24,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -426,7 +426,7 @@
                     [["C",self.crspag,0,0],"INA",7,"Acc-Num","Account Number",
                         "","N",self.doCrsAcc,crm,None,("notblank",)],
                     [["C",self.crspag,0,1],"ONA",30,"Name"],
-                    [["C",self.crspag,0,2],"INa",9,"Ref-No2","Reference Number",
+                    [["C",self.crspag,0,2],"INa",9,"Ref-Num-2","",
                         "i","N",self.doCrsRef,None,None,None],
                     [["C",self.crspag,0,3],"ISD",13.2,"Discount","",
                         "","N",self.doCrsDis,None,None,("efld",)],
@@ -441,7 +441,7 @@
                     [["C",self.drspag,0,1],"INA",7,"Acc-Num","Account Number",
                         "","N",self.doDrsAcc,drm,None,("notblank",)],
                     [["C",self.drspag,0,2],"ONA",30,"Name"],
-                    [["C",self.drspag,0,3],"INa",9,"Ref-No2","Reference Number",
+                    [["C",self.drspag,0,3],"INa",9,"Ref-Num-2","",
                         "i","N",self.doDrsRef,None,None,None],
                     [["C",self.drspag,0,4],"ISD",13.2,"Discount","",
                         "","N",self.doDrsDis,None,None,("efld",)],

=== modified file 'gen/gl2040.py'
--- gen/gl2040.py	2015-10-03 07:36:56 +0000
+++ gen/gl2040.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl3010.py'
--- gen/gl3010.py	2015-10-03 07:36:56 +0000
+++ gen/gl3010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl3020.py'
--- gen/gl3020.py	2015-10-03 07:36:56 +0000
+++ gen/gl3020.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl3030.py'
--- gen/gl3030.py	2015-10-03 07:36:56 +0000
+++ gen/gl3030.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 import time
 from TartanClasses import ASD, CCD, MyFpdf, ProgressBar, Sql, TartanDialog

=== modified file 'gen/gl3040.py'
--- gen/gl3040.py	2015-10-03 07:36:56 +0000
+++ gen/gl3040.py	2016-01-19 14:22:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl3050.py'
--- gen/gl3050.py	2015-12-12 09:12:17 +0000
+++ gen/gl3050.py	2016-01-19 14:32:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, time

=== modified file 'gen/gl3060.py'
--- gen/gl3060.py	2015-10-03 07:36:56 +0000
+++ gen/gl3060.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import RepPrt, TartanDialog

=== modified file 'gen/gl3070.py'
--- gen/gl3070.py	2015-10-03 07:36:56 +0000
+++ gen/gl3070.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'gen/gl3080.py'
--- gen/gl3080.py	2015-10-03 07:36:56 +0000
+++ gen/gl3080.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl3090.py'
--- gen/gl3090.py	2015-10-03 07:36:56 +0000
+++ gen/gl3090.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import RepPrt, Sql, TartanDialog

=== modified file 'gen/gl3100_rne.py'
--- gen/gl3100_rne.py	2015-12-12 09:12:17 +0000
+++ gen/gl3100_rne.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy
@@ -125,7 +125,7 @@
                 self.newgrp = False
                 self.df.loadEntry(frt, pag, p+1, data=acc[1])
                 seq = 1
-                for x in range(0, 20, 2):
+                for x in range(0, 24, 2):
                     coy = acc[x + 2]
                     hed = acc[x + 3]
                     if not coy:

=== modified file 'gen/gl3110_rne.py'
--- gen/gl3110_rne.py	2015-12-12 09:12:17 +0000
+++ gen/gl3110_rne.py	2016-01-19 14:24:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, MyFpdf, Sql, TartanDialog
@@ -163,11 +163,11 @@
             tit = "Trial Balances as at %s for Companies %s" % (self.epd, coyd)
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"], __name__,
                 "trialbalance", ext="pdf")
-            self.fpdf = MyFpdf(name=__name__, head=77)
+            self.fpdf = MyFpdf(name=__name__, head=79)
             for coy in coys:
                 callModule(self.opts["mf"], None, "gl3040", coy=(coy[0],
                     coy[1]), period=self.c_per, args=(self.ep, self.iz,
-                    self.df.repprt, self.repeml, self.fpdf))
+                    self.df.repprt, self.df.repeml, self.fpdf))
             self.fpdf.output(pdfnam, "F")
             doPrinter(mf=self.opts["mf"], pdfnam=pdfnam, head=tit,
                 repprt=self.df.repprt, repeml=self.df.repeml)
@@ -177,11 +177,11 @@
             pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"], __name__,
                 "financials", ext="pdf")
             if self.rt == "S":
-                hw = 92
+                hw = 108
             elif self.rt == "L":
-                hw = 149
+                hw = 158
             else:
-                hw = 191
+                hw = 205
             self.fpdf = MyFpdf(name=__name__, head=hw)
             for coy in coys:
                 callModule(self.opts["mf"], None, "gl3050", coy=(coy[0],

=== modified file 'gen/gl4010.py'
--- gen/gl4010.py	2015-10-03 07:36:56 +0000
+++ gen/gl4010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl4020.py'
--- gen/gl4020.py	2015-08-25 15:02:35 +0000
+++ gen/gl4020.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -805,9 +805,14 @@
                 self.doDisplayUnderline(fld)
             self.count += 1
         self.opts["mf"].window.withdraw()
-        ScrollGrid(**{"mf": self.opts["mf"], "titl": head, "tags": tags,
-            "labs": labs, "cols": cols, "data": self.data,
-            "cmds": (("<Double-1>", self.doTrans),), "bwth": 0})
+        ScrollGrid(**{
+            "mf": self.opts["mf"],
+            "titl": head,
+            "tags": tags,
+            "labs": labs,
+            "cols": cols,
+            "data": self.data,
+            "cmds": (("<Double-1>", self.doTrans),)})
         self.opts["mf"].window.deiconify()
 
     def doHeading(self, line):

=== modified file 'gen/gl6010.py'
--- gen/gl6010.py	2015-10-03 07:36:56 +0000
+++ gen/gl6010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, FileImport, ProgressBar, Sql, TartanDialog

=== modified file 'gen/gl6020.py'
--- gen/gl6020.py	2015-08-25 15:02:35 +0000
+++ gen/gl6020.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ProgressBar, Sql, TartanDialog

=== modified file 'gen/gl6030.py'
--- gen/gl6030.py	2015-10-03 07:36:56 +0000
+++ gen/gl6030.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl6040.py'
--- gen/gl6040.py	2015-10-03 07:36:56 +0000
+++ gen/gl6040.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'gen/gl6050.py'
--- gen/gl6050.py	2015-08-25 15:02:35 +0000
+++ gen/gl6050.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'gen/gl6060.py'
--- gen/gl6060.py	2015-12-12 09:12:17 +0000
+++ gen/gl6060.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ASD, Sql, TartanDialog

=== modified file 'gen/glc110.py'
--- gen/glc110.py	2015-10-03 07:36:56 +0000
+++ gen/glc110.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog

=== modified file 'gen/glc210.py'
--- gen/glc210.py	2015-10-03 07:36:56 +0000
+++ gen/glc210.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== added directory 'ibt'
=== added file 'ibt/ib2010.py'
--- ibt/ib2010.py	1970-01-01 00:00:00 +0000
+++ ibt/ib2010.py	2016-02-23 14:18:32 +0000
@@ -0,0 +1,264 @@
+#! /usr/bin/python2
+
+"""
+SYNOPSIS
+    Inter Branch Sales Invoices.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+import time
+from TartanClasses import GetCtl, PrintTransfer, Sql, TartanDialog
+from tartanFunctions import askQuestion, getNextCode
+
+class ib2010:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.exit = False
+            self.getPrinters()
+            if not self.exit:
+                self.mainProcess()
+                self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        gc = GetCtl(self.opts["mf"])
+        ibtctl = gc.getCtl("ibtctl", self.opts["conum"])
+        if not ibtctl:
+            return
+        t = time.localtime()
+        self.sysdtw = ((t[0] * 10000) + (t[1] * 100) + t[2])
+        self.sql = Sql(self.opts["mf"].dbm, ["ctlmst", "ibtcod", "ibtmst",
+            "ibttrn", "tplmst"], prog=__name__)
+        if self.sql.error:
+            return
+        self.stpl = ibtctl["cbt_tplnam"]
+        self.ccoy = ibtctl["cbt_crscoy"]
+        return True
+
+    def getPrinters(self):
+        tit = ("Date and Printer Selection",)
+        tpm = {
+            "stype": "R",
+            "tables": ("tplmst",),
+            "cols": (
+                ("tpm_tname", "", 0, "Template"),
+                ("tpm_title", "", 0, "Title", "Y")),
+            "where": [
+                ("tpm_type", "=", "I"),
+                ("tpm_system", "=", "INV")],
+            "order": "tpm_tname"}
+        fld = [
+            (("T",0,0,0),"INA",20,"Template Name","",
+                self.stpl,"N",self.doTplNam,tpm,None,None),
+            (("T",0,1,0),"ID1",10,"Document Date","",
+                self.sysdtw,"N",self.doInvDate,None,None,("efld",))]
+        self.pr = TartanDialog(self.opts["mf"], tops=True, title=tit,
+            eflds=fld, tend=((self.doPrtClose,"y"),), txit=(self.doPrtExit,),
+            view=("N","P"))
+        self.opts["mf"].startLoop()
+
+    def doTplNam(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),
+            ("tpm_type", "=", "I"), ("tpm_system", "=", "IBT")], limit=1)
+        if not acc:
+            return "Invalid Template Name"
+        self.tname = w
+
+    def doInvDate(self, frt, pag, r, c, p, i, w):
+        if w < self.opts["period"][1][0] or w > self.opts["period"][2][0]:
+            return "Invalid Date, Not In Financial Period"
+        self.trdt = w
+        self.trdd = self.pr.t_disp[0][0][1]
+        self.curdt = self.trdt / 100
+        self.batch = "S%s" % self.curdt
+
+    def doDelNote(self, frt, pag, r, c, p, i, w):
+        self.dnote = w
+
+    def doPrtExit(self):
+        self.exit = True
+        self.doPrtClose()
+
+    def doPrtClose(self):
+        self.pr.closeProcess()
+        self.opts["mf"].closeLoop()
+
+    def mainProcess(self):
+        tit = ("Inter Branch Sales Invoices",)
+        ctm = {
+            "stype": "R",
+            "tables": ("ctlmst",),
+            "cols": [
+                ("ctm_cono",  "", 0, "Coy"),
+                ("ctm_name",  "", 0, "Name", "Y")],
+            "where": [
+                ("ctm_cono", "<>", self.opts["conum"])],
+            "order": "ctm_cono"}
+        crm = {
+            "stype": "R",
+            "tables": ("crsmst",),
+            "cols": [
+                ("crm_acno",  "", 0, "Acc-Num"),
+                ("crm_name",  "", 0, "Name", "Y")],
+            "where": [
+                ("crm_cono", "=", self.ccoy)],
+            "order": "crm_acno",
+            "autoc": False}
+        cod = {
+            "stype": "R",
+            "tables": ("ibtcod",),
+            "cols": [
+                ("ibc_code",  "", 0, "Prod-Code"),
+                ("ibc_desc",  "", 0, "Description", "Y")],
+            "where": [
+                ("ibc_cono", "=", self.opts["conum"])],
+            "order": "ibc_code"}
+        fld = (
+            (("T",0,0,0),"IUI",3,"Branch","",
+                "","Y",self.doBranch,ctm,None,None),
+            (("T",0,0,0),"ONA",30,""),
+            (("T",0,1,0),"INa",10,"D/Note","",
+                "","N",self.doDNote,None,None,("notblank",)),
+            (("T",0,1,0),"ID1",10," D/Date","",
+                "","N",self.doDDate,None,None,("efld",)),
+            (("T",0,2,0),"INA",7,"Supplier","",
+                "","N",self.doSupp,crm,None,("notblank",)),
+            (("T",0,2,0),"ONA",30,""),
+            (("T",0,3,0),"INA",7,"Transporter","",
+                "","N",self.doTrpt,crm,None,("notblank",)),
+            (("T",0,3,0),"ONA",30,""),
+            (("C",0,0,0),"IUA",10,"Product-Cd","",
+                "","Y",self.doCode,cod,None,("notblank",)),
+            (("C",0,0,1),"INA",30,"Description","",
+                "","N",self.doDesc,None,None,("notblank",)),
+            (("C",0,0,2),"IUD",12.4,"Price","",
+                "","N",self.doPrice,None,None,("notzero",)),
+            (("C",0,0,3),"ISD",11.2,"Quantity","",
+                "","N",self.doQuant,None,None,("notzero",)),
+            (("C",0,0,4),"OSD",11.2,"Value"))
+        but = (
+            ("Accept",None,self.doAccept,0,("C",0,1),None),
+            ("Cancel",None,self.doCancel,0,("C",0,1),None),
+            ("Edit",None,self.doEdit,0,("C",0,1),None))
+        self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
+            tend=((self.doEnd, "y"),), txit=(self.doExit,),
+            cend=((self.doEnd, "y"),), cxit=(None,),
+            butt=but, rows=(10,))
+
+    def doBranch(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="ctlmst", cols=["ctm_name"],
+            where=[("ctm_cono", "=", w)], limit=1)
+        if not acc:
+            return "Invalid Branch"
+        self.bcod = w
+        self.df.loadEntry(frt, pag, p+1, data=acc[0])
+
+    def doDNote(self, frt, pag, r, c, p, i, w):
+        self.dnote = w
+
+    def doDDate(self, frt, pag, r, c, p, i, w):
+        self.ddate = w
+
+    def doSupp(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="crsmst", cols=["crm_name"],
+            where=[("crm_cono", "=", self.ccoy), ("crm_acno", "=", w)],
+            limit=1)
+        if not acc:
+            return "Invalid Supplier Code"
+        self.dsupp = w
+        self.df.loadEntry(frt, pag, p+1, data=acc[0])
+
+    def doTrpt(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="crsmst", cols=["crm_name"],
+            where=[("crm_cono", "=", self.ccoy), ("crm_acno", "=", w)],
+            limit=1)
+        if not acc:
+            return "Invalid Transporter Code"
+        self.dtrpt = w
+        self.df.loadEntry(frt, pag, p+1, data=acc[0])
+
+    def doCode(self, frt, pag, r, c, p, i, w):
+        self.code = w
+        acc = self.sql.getRec(tables="ibtcod", cols=["ibc_desc", "ibc_price"],
+            where=[("ibc_cono", "=", self.opts["conum"]), ("ibc_code", "=", w)],
+            limit=1)
+        if not acc:
+            ok = askQuestion(self.opts["mf"].body, "New Code",
+                "This Code Does Not exist, Is it a New Code", default="no")
+            if ok == "no":
+                return "Invalid Code"
+            self.newcod = True
+        else:
+            self.newcod = False
+            self.desc = acc[0]
+            self.price = acc[1]
+            self.df.loadEntry(frt, pag, p+1, data=self.desc)
+            self.df.loadEntry(frt, pag, p+2, data=self.price)
+            return "sk1"
+
+    def doDesc(self, frt, pag, r, c, p, i, w):
+        self.desc = w
+
+    def doPrice(self, frt, pag, r, c, p, i, w):
+        self.price = w
+
+    def doQuant(self, frt, pag, r, c, p, i, w):
+        self.quant = w
+        self.value = round(self.quant * self.price, 2)
+        self.df.loadEntry(frt, pag, p+1, data=self.value)
+
+    def doEnd(self):
+        if self.df.frt == "T":
+            self.docno = getNextCode(self.sql, "ibtmst", "ibm_docno",
+                where=[("ibm_cono", "=", self.opts["conum"])], start=3001,
+                last=999999999)
+            data = [self.opts["conum"], self.docno, self.trdt, self.bcod,
+                self.dnote, self.ddate, self.dsupp, "", 0, 0, self.dtrpt,
+                "", 0, 0, "", 0]
+            self.sql.insRec("ibtmst", data=data)
+            self.df.focusField("C", 0, 1)
+        else:
+            if self.newcod:
+                self.sql.insRec("ibtcod", data=[self.opts["conum"],
+                    self.code, self.desc, self.price])
+            else:
+                self.sql.updRec("ibtcod", cols=["ibc_price"], data=[self.price],
+                    where=[("ibc_cono", "=", self.opts["conum"]), ("ibc_code",
+                    "=", self.code)])
+            data = [self.opts["conum"], self.docno, 1, self.code, self.desc,
+                self.price, self.quant, self.value, 0, self.curdt,
+                self.opts["capnm"], self.sysdtw, 0]
+            self.sql.insRec("ibttrn", data=data)
+            self.df.advanceLine(0)
+
+    def doAccept(self):
+        if self.df.col == 1:
+            self.doCancel()
+            return
+        self.opts["mf"].dbm.commitDbase()
+        self.df.setWidget(self.df.mstFrame, state="hide")
+        PrintTransfer(self.opts["mf"], self.opts["conum"],
+            self.opts["conam"], self.docno, crcoy=self.ccoy,
+            tname=self.tname, repprt=self.pr.repprt)
+        self.df.setWidget(self.df.mstFrame, state="show")
+        self.df.focusField("T", 0, 1)
+
+    def doCancel(self):
+        self.opts["mf"].dbm.rollbackDbase()
+        self.df.focusField("T", 0, 1)
+
+    def doEdit(self):
+        pass
+
+    def doExit(self):
+        self.df.closeProcess()
+        self.opts["mf"].closeLoop()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== added file 'ibt/ib2020.py'
--- ibt/ib2020.py	1970-01-01 00:00:00 +0000
+++ ibt/ib2020.py	2016-02-23 14:19:02 +0000
@@ -0,0 +1,317 @@
+#! /usr/bin/python2
+
+"""
+SYNOPSIS
+    Inter Branch Purchases.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+import time
+from TartanClasses import ASD, CCD, GetCtl, Sql, TartanDialog
+from tartanFunctions import askQuestion, getVatRate
+
+class ib2020:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.mainProcess()
+            self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        gc = GetCtl(self.opts["mf"])
+        ibtctl = gc.getCtl("ibtctl", self.opts["conum"])
+        if not ibtctl:
+            return
+        t = time.localtime()
+        self.sysdtw = ((t[0] * 10000) + (t[1] * 100) + t[2])
+        self.sql = Sql(self.opts["mf"].dbm, ["ibtmst", "ibttrn", "crsmst",
+            "crsrtf"], prog=__name__)
+        if self.sql.error:
+            return
+        self.ccoy = ibtctl["cbt_crscoy"]
+        return True
+
+    def mainProcess(self):
+        tit = ("Inter Branch Purchases",)
+        pjn = {
+            "stype": "R",
+            "tables": ("crsrtf",),
+            "cols": [
+                ("rtf_pjno",  "", 0, "PjNo"),
+                ("rtf_prtdte",  "", 0, "Date")],
+            "where": [
+                ("rtf_cono", "=", self.ccoy),
+                ("rtf_type", "=", 1),
+                ("rtf_depno", "=", self.opts["conum"])],
+            "group": "rtf_pjno, rtf_prtdte",
+            "order": "rtf_prtdte desc"}
+        crm = {
+            "stype": "R",
+            "tables": ("crsmst", "ibtmst"),
+            "cols": [
+                ("crm_acno",  "", 0, "Acc-Num"),
+                ("crm_name",  "", 0, "Name", "Y")],
+            "where": [
+                ("crm_cono", "=", self.ccoy),
+                ("ibm_cono", "=", self.opts["conum"]),
+                ("crm_acno=ibm_supp or crm_acno=ibm_tran",)],
+            "group": "crm_acno, crm_name",
+            "order": "crm_acno",
+            "autoc": False}
+        ref = {
+            "stype": "R",
+            "tables": ("crsrtf", "crstrn"),
+            "cols": [
+                ("rtf_ref1",  "", 0, "Reference"),
+                ("crt_trdt",  "", 0, "Date", "Y")],
+            "where": [
+                ("rtf_cono", "=", self.ccoy),
+                ("crt_cono=rtf_cono",),
+                ("crt_acno=rtf_acno",),
+                ("crt_ref1=rtf_ref1",)],
+            "whera": [
+                ("T", "rtf_pjno", 0, 0),
+                ("C", "rtf_acno", 0, 1)],
+            "order": "rtf_ref1",
+            "autoc": False}
+        self.ibt = {
+            "stype": "R",
+            "tables": ("ibtmst",),
+            "cols": (
+                ("ibm_docno", "", 0, "I.B.T-Num"),
+                ("ibm_date", "", 0, "Trans-Date"),
+                ("ibm_branch", "", 0, "Bch", "F"),
+                ("ibm_dnote", "", 0, "Deliv-Note", "F"),
+                ("ibm_supp", "", 0, "Supplir", "F"),
+                ("ibm_tran", "", 0, "Transpr", "F")),
+            "where": [],
+            "autoc": False}
+        cod = {
+            "stype": "R",
+            "tables": ("ibttrn",),
+            "cols": [
+                ("ibt_code",  "", 0, "Prod-Code"),
+                ("ibt_desc",  "", 0, "Description", "Y")],
+            "where": [
+                ("ibt_cono", "=", self.opts["conum"]),
+                ("ibt_type", "=", 1)],
+            "whera": [("C", "ibt_docno", 0, 2)],
+            "order": "ibt_code"}
+        tag = (
+            ("Invoice", None, None, None, False),
+            ("IBT", None, None, None, False))
+        fld = (
+            (("T",0,0,0),"IUI",5,"Purchase Journal","",
+                "","Y",self.doPjno,pjn,None,("notzero",)),
+            (("C",1,0,0),"IUA",7,"Acc-Num","",
+                "","Y",self.doAcno,crm,None,("notblank",)),
+            (("C",1,0,1),"ONA",30,"Name"),
+            (("C",1,0,2),"INa",9,"Reference","",
+                "","N",self.doRefno,ref,None,("notblank",)),
+            (("C",1,0,3),"OD1",10,"Ref-Date"),
+            (("C",1,0,4),"OSD",11.2,"Amount"),
+            (("C",1,0,5),"OUA",1,"V"),
+            (("C",1,0,6),"OSD",11.2,"V.A.T"),
+            (("C",2,0,0),"IUI",9,"I.B.T-Inv","",
+                "","N",self.doIbt,self.ibt,None,("notblank",)),
+            (("C",2,0,1),"IUA",10,"Product-Cd","",
+                "","N",self.doCode,cod,None,("notblank",)),
+            (("C",2,0,2),"ONA",30,"Description"),
+            (("C",2,0,3),"ISD",11.2,"Quantity","",
+                "","N",self.doQuant,None,None,("notzero",)),
+            (("C",2,0,4),"IUD",12.4,"Price","",
+                "","N",self.doPrice,None,None,("notzero",)),
+            (("C",2,0,5),"ISD",11.2,"Value","",
+                0,"N",self.doValue,None,None,("notzero",)))
+        tnd = ((self.doEnd, "y"), None, None)
+        txt = (self.doExit, None, None)
+        cnd = (None, (self.doEnd, "y"), (self.doEnd, "y"))
+        cxt = (None, self.doExit, self.doExit)
+        but = (("Cancel",None,self.doCancel,0,("C",2,1),("C",1,1)),)
+        self.df = TartanDialog(self.opts["mf"], title=tit, tags=tag,
+            eflds=fld, tend=tnd, txit=txt, cend=cnd, cxit=cxt, butt=but)
+
+    def doPjno(self, frt, pag, r, c, p, i, w):
+        chk = self.sql.getRec(tables="crsrtf", where=[("rtf_cono", "=",
+            self.ccoy), ("rtf_type", "=", 1), ("rtf_depno", "=",
+            self.opts["conum"]), ("rtf_pjno", "=", w)], limit=1)
+        if not chk:
+            return "Invalid Purchase Journal"
+        self.pjno = w
+
+    def doAcno(self, frt, pag, r, c, p, i, w):
+        col = ["crm_name", "ibm_supp", "ibm_tran"]
+        whr = [
+            ("crm_cono", "=", self.ccoy),
+            ("crm_acno", "=", w),
+            ("ibm_cono", "=", self.opts["conum"]),
+            ("crm_acno=ibm_supp or crm_acno=ibm_tran",)]
+        acc = self.sql.getRec(tables=["crsmst", "ibtmst"], cols=col,
+            where=whr, limit=1)
+        if not acc:
+            return "Invalid Account Number"
+        self.acno = w
+        self.ibt["where"] = [("ibm_cono", "=", self.opts["conum"])]
+        if w == acc[1]:
+            self.ibttyp = 2
+            self.ibt["where"].extend([
+                ("ibm_supp", "=", self.acno),
+                ("ibm_sinv", "=", "")])
+        elif w == acc[2]:
+            self.ibttyp = 3
+            self.ibt["where"].extend([
+                ("ibm_tran", "=", self.acno),
+                ("ibm_tinv", "=", "")])
+        self.df.loadEntry(frt, pag, p+1, data=acc[0])
+
+    def doRefno(self, frt, pag, r, c, p, i, w):
+        col = ["crt_trdt", "crt_curdt", "crt_tramt", "crt_taxind",
+            "crt_taxamt"]
+        acc = self.sql.getRec(tables=["crstrn", "crsrtf"], cols=col,
+            where=[("rtf_cono", "=", self.ccoy), ("rtf_acno", "=",
+            self.acno), ("rtf_type", "=", 1), ("rtf_ref1", "=", w),
+            ("rtf_depno", "=", self.opts["conum"]), ("rtf_pjno", "=",
+            self.pjno), ("crt_cono=rtf_cono",), ("crt_acno=rtf_acno",),
+            ("crt_ref1=rtf_ref1",)], limit=1)
+        if not acc:
+            return "Invalid Reference Number"
+        if self.ibttyp == 2:
+            chk = self.sql.getRec(tables="ibtmst", where=[("ibm_cono",
+                "=", self.opts["conum"]), ("ibm_supp", "=", self.acno),
+                ("ibm_sinv", "=", w)], limit=1)
+        else:
+            chk = self.sql.getRec(tables="ibtmst", where=[("ibm_cono",
+                "=", self.opts["conum"]), ("ibm_tran", "=", self.acno),
+                ("ibm_tinv", "=", w)], limit=1)
+        if chk:
+            return "Already Captured"
+        self.refno = w
+        self.trdt, self.curdt, self.tramt, self.taxind, self.taxamt = acc
+        self.df.loadEntry(frt, pag, p+1, data=self.trdt)
+        self.df.loadEntry(frt, pag, p+2, data=self.tramt)
+        self.df.loadEntry(frt, pag, p+3, data=self.taxind)
+        self.df.loadEntry(frt, pag, p+4, data=self.taxamt)
+        self.excamt = float(ASD(self.tramt) - ASD(self.taxamt))
+
+    def doDate(self, frt, pag, r, c, p, i, w):
+        self.trdt = w
+
+    def doTrnAmt(self, frt, pag, r, c, p, i, w):
+        self.tramt = w
+
+    def doVatCode(self, frt, pag, r, c, p, i, w):
+        vrte = getVatRate(self.sql, self.opts["conum"], w, self.trdt)
+        if vrte is None:
+            return "Invalid V.A.T Code"
+        self.taxind = w
+        self.taxamt = round((self.tramt * vrte / (vrte + 100)), 2)
+        self.df.loadEntry(frt, pag, p+1, self.taxamt)
+        if not self.taxamt:
+            self.excamt = self.tramt
+            return "sk1"
+
+    def doVatAmt(self, frt, pag, r, c, p, i, w):
+        self.taxamt = w
+        self.excamt = float(ASD(self.tramt) - ASD(self.taxamt))
+
+    def doIbt(self, frt, pag, r, c, p, i, w):
+        whr = [
+            ("ibm_cono", "=", self.opts["conum"]),
+            ("ibm_docno", "=", w)]
+        if self.ibttyp == 2:
+            whr.extend([
+                ("ibm_supp", "=", self.acno),
+                ("ibm_sinv", "=", "")])
+        else:
+            whr.extend([
+                ("ibm_tran", "=", self.acno),
+                ("ibm_tinv", "=", "")])
+        acc = self.sql.getRec(tables="ibtmst", where=whr, limit=1)
+        if not acc:
+            return "Invalid IBT Number"
+        self.ibtnum = w
+
+    def doCode(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="ibttrn", where=[("ibt_cono",
+            "=", self.opts["conum"]), ("ibt_docno", "=", self.ibtnum),
+            ("ibt_type", "=", 1), ("ibt_code", "=", w)], limit=1)
+        if not acc:
+            return "Invalid Code"
+        self.code = w
+        self.desc = acc[self.sql.ibttrn_col.index("ibt_desc")]
+        self.oprc = acc[self.sql.ibttrn_col.index("ibt_price")]
+        self.oqty = acc[self.sql.ibttrn_col.index("ibt_quant")]
+        self.oval = acc[self.sql.ibttrn_col.index("ibt_value")]
+        self.df.loadEntry(frt, pag, p+1, data=self.desc)
+        self.df.loadEntry(frt, pag, p+2, data=self.oqty)
+
+    def doQuant(self, frt, pag, r, c, p, i, w):
+        if not w == self.oqty:
+            ok = askQuestion(self.opts["mf"].body, "Quantity Error",
+                "The Quantity Does Not Equal the IBT Quantity - %s" %
+                CCD(self.oqty, "SD", 11.2).disp)
+            if ok == "no":
+                return "Invalid Quantity"
+        self.quant = w
+
+    def doPrice(self, frt, pag, r, c, p, i, w):
+        self.price = w
+        self.value = round(self.quant * self.price, 2)
+        self.df.loadEntry(frt, pag, p+1, data=self.value)
+
+    def doValue(self, frt, pag, r, c, p, i, w):
+        self.value = w
+
+    def doEnd(self):
+        if self.df.pag == 0:
+            self.df.selPage("Invoice")
+            self.df.focusField("C", 1, 1)
+        elif self.df.pag == 1:
+            self.df.selPage("IBT")
+            self.df.focusField("C", 2, 1)
+        else:
+            if self.ibttyp == 2:
+                col = ["ibm_sinv", "ibm_sinc", "ibm_stax"]
+            else:
+                col = ["ibm_tinv", "ibm_tinc", "ibm_ttax"]
+            self.sql.updRec("ibtmst", cols=col, data=[self.refno,
+                self.tramt, self.taxamt], where=[("ibm_cono", "=",
+                self.opts["conum"]), ("ibm_docno", "=", self.ibtnum)])
+            data = [self.opts["conum"], self.ibtnum, self.ibttyp, self.code,
+                self.desc, self.price, self.quant, self.value, self.pjno,
+                self.curdt, self.opts["capnm"], self.sysdtw, 0]
+            self.sql.insRec("ibttrn", data=data)
+            self.excamt = float(ASD(self.excamt) - ASD(self.value))
+            if self.excamt:
+                self.df.advanceLine(2)
+            else:
+                self.opts["mf"].dbm.commitDbase()
+                self.df.clearFrame("C", 2)
+                self.df.selPage("Invoice")
+                self.df.advanceLine(1)
+
+    def doCancel(self):
+        self.opts["mf"].dbm.rollbackDbase()
+        self.df.clearFrame("C", 2)
+        self.df.selPage("Invoice")
+        self.df.clearLine(1, focus=True)
+
+    def doEdit(self):
+        pass
+
+    def doExit(self):
+        if self.df.pag == 0:
+            self.df.closeProcess()
+            self.opts["mf"].closeLoop()
+        else:
+            self.df.clearFrame("C", 1)
+            self.df.focusField("T", 0, 1)
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== added file 'ibt/ib3010.py'
--- ibt/ib3010.py	1970-01-01 00:00:00 +0000
+++ ibt/ib3010.py	2016-02-23 06:24:46 +0000
@@ -0,0 +1,155 @@
+#! /usr/bin/python2
+
+"""
+SYNOPSIS
+    Reprinting of Sales Documents.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+from TartanClasses import GetCtl, PrintTransfer, Sql, TartanDialog
+from tartanFunctions import getSingleRecords
+
+class ib3010:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.mainProcess()
+            self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        gc = GetCtl(self.opts["mf"])
+        ibtctl = gc.getCtl("ibtctl", self.opts["conum"])
+        if not ibtctl:
+            return
+        self.sql = Sql(self.opts["mf"].dbm, ["ibtmst", "ctlmst", "tplmst"],
+            prog=__name__)
+        if self.sql.error:
+            return
+        self.stpl = ibtctl["cbt_tplnam"]
+        self.ccoy = ibtctl["cbt_crscoy"]
+        return True
+
+    def mainProcess(self):
+        tit = ("Reprint Branch Transfers",)
+        tpm = {
+            "stype": "R",
+            "tables": ("tplmst",),
+            "cols": (
+                ("tpm_tname", "", 0, "Template"),
+                ("tpm_title", "", 0, "Title", "Y")),
+            "where": [
+                ("tpm_type", "=", "I"),
+                ("tpm_system", "=", "IBT")],
+            "order": "tpm_tname"}
+        iv1 = {
+            "stype": "R",
+            "tables": ("ibtmst","ctlmst"),
+            "cols": [
+                ("ibm_docno", "",  0, "Doc-Num"),
+                ("ibm_date", "",  0, "Date"),
+                ("ibm_branch",  "", 0, "Bch"),
+                ("ctm_name",  "", 0, "Name", "Y")],
+            "where": [
+                ("ibm_cono", "=", self.opts["conum"]),
+                ("ibm_cono=ctm_cono",)],
+            "screen": self.opts["mf"].body}
+        r1s = (("Range","R"),("Singles", "S"))
+        fld = (
+            (("T",0,0,0),"INA",20,"Template Name","",
+                self.stpl,"N",self.doTplNam,tpm,None,None),
+            (("T",0,1,0),("IRB",r1s),0,"Documents","",
+                "S","Y",self.doSelect,None,None,None),
+            (("T",0,2,0),"IUI",7,"From Number","From Document Number",
+                "","N",self.doDocno,iv1,None,("notzero",)),
+            [("T",0,3,0),"IUI",7,"To   Number","To Document Number",
+                "","N",self.doDocno,iv1,None,("notzero",)])
+        self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
+            tend=((self.doEnd, "y"),), txit=(self.doExit,),
+            view=("N","V"), mail=("B","Y"))
+
+    def doTplNam(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),
+            ("tpm_type", "=", "I"), ("tpm_system", "=", "IBT")], limit=1)
+        if not acc:
+            return "Invalid Template Name"
+        self.tname = w
+
+    def doMode(self, frt, pag, r, c, p, i, w):
+        if w == "C":
+            self.copy = "y"
+        else:
+            self.copy = "n"
+            self.df.topf[pag][4][5] = "V"
+            if len(self.df.topf[pag]) == 8:
+                self.df.topf[pag][6][5] = "N"
+
+    def doType(self, frt, pag, r, c, p, i, w):
+        self.typ = w
+
+    def doSelect(self, frt, pag, r, c, p, i, w):
+        self.select = w
+        if self.select == "S":
+            self.frm = 0
+            self.to = 0
+            self.df.loadEntry(frt, pag, p+1, data="")
+            self.df.loadEntry(frt, pag, p+2, data="")
+            return "sk2"
+
+    def doDocno(self, frt, pag, r, c, p, i, w):
+        doc = self.sql.getRec(tables="ibtmst", where=[("ibm_cono", "=",
+            self.opts["conum"]), ("ibm_docno", "=", w)])
+        if not doc:
+            return "Document Number Does Not Exist"
+        if p == 2:
+            self.frm = w
+            self.df.topf[pag][3][5] = self.frm
+        elif w < self.frm:
+            return "Document Number Before From Number"
+        else:
+            self.to = w
+
+    def doEnd(self):
+        self.df.closeProcess()
+        tab = ["ibtmst", "ctlmst"]
+        col = ["ibm_docno", "ibm_date", "ibm_branch", "ctm_name"]
+        dic = {}
+        for c in col:
+            for t in tab:
+                d = getattr(self.sql, "%s_dic" % t)
+                if c in d:
+                    dic[c] = d[c]
+        if self.select == "S":
+            recs = self.sql.getRec(tables=tab, cols=col, where=[("ibm_cono",
+                "=", self.opts["conum"]), ("ctm_cono=ibm_branch",)],
+                order="ibm_docno")
+            recs = getSingleRecords(self.opts["mf"], tab, col, dic=dic,
+                where=recs, ttype="D")
+            iv1 = []
+            if recs:
+                for rec in recs:
+                    iv1.append([rec[0]])
+        else:
+            iv1 = self.sql.getRec(tables="ibtmst", cols=["ibm_docno"],
+            where=[
+                ("ibm_cono", "=", self.opts["conum"]),
+                ("ibm_docno", ">=", self.frm),
+                ("ibm_docno", "<=", self.to)])
+        if iv1:
+            PrintTransfer(self.opts["mf"], self.opts["conum"],
+                self.opts["conam"], iv1, crcoy=self.ccoy,
+                tname=self.tname, repprt=self.df.repprt,
+                repeml=self.df.repeml)
+        self.opts["mf"].closeLoop()
+
+    def doExit(self):
+        self.df.closeProcess()
+        self.opts["mf"].closeLoop()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== added file 'ibt/ib3020.py'
--- ibt/ib3020.py	1970-01-01 00:00:00 +0000
+++ ibt/ib3020.py	2016-02-23 14:19:43 +0000
@@ -0,0 +1,277 @@
+#! /usr/bin/python
+
+"""
+SYNOPSIS
+    Purchase Journal Listing.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+import time
+from TartanClasses import ASD, CCD, MyFpdf, ProgressBar, SplashScreen, Sql
+from TartanClasses import TartanDialog
+from tartanFunctions import doPrinter, getModName, showError
+
+class ib3020:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.mainProcess()
+            self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        self.sql = Sql(self.opts["mf"].dbm, ["ctlmst", "ibtmst", "ibttrn"],
+            prog=__name__)
+        if self.sql.error:
+            return
+        t = time.localtime()
+        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
+        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
+            (t[0], t[1], t[2], t[3], t[4])
+        self.branch = 0
+        self.ltjnl = 0
+        self.totamt = 0
+        self.deptot = {}
+        self.pgnum = 0
+        self.pglin = 999
+        self.head = ("%03u %-30s %33s %10s" % \
+            (self.opts["conum"], self.opts["conam"], self.sysdttm, __name__))
+        self.fpdf = MyFpdf(name=__name__, head=self.head)
+        return True
+
+    def mainProcess(self):
+        self.tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
+            "Purchase Journals Listing")
+        bch = {
+            "stype": "R",
+            "tables": ("ctlmst",),
+            "cols": (
+                ("ctm_cono", "", 0, "Bch"),
+                ("ctm_name", "", 0, "Name", "Y")),
+            "order": "ctm_cono"}
+        self.num = {
+            "stype": "R",
+            "tables": ("ibtmst",),
+            "cols": [
+                ("ibm_tjnl", "", 0, "Pj-Number"),
+                ("ibm_tjdt", "", 0, "Pj-Date")],
+            "where": [],
+            "group": "ibm_tjnl, ibm_tjdt",
+            "order": "ibm_tjnl, ibm_tjdt"}
+        r1s = (("Yes", "Y"), ("No", "N"))
+        fld = (
+            (("T",0,0,0),("IRB",r1s),0,"Reprints","",
+                "N","N",self.doReprint,None,None,None),
+            (("T",0,1,0),("IRB",r1s),0,"Preview Only","",
+                "N","N",self.doPreview,None,None,None),
+            (("T",0,2,0),"IUI",3,"Branch Code","",
+                "","N",self.doBranch,bch,None,("efld",)),
+            (("T",0,3,0),"INA",9,"Start Number","",
+                "","N",self.doStartN,self.num,None,("efld",)),
+            (("T",0,4,0),"INA",9,"End Number","",
+                "","N",self.doEndN,self.num,None,("efld",)))
+        tnd = ((self.doEnd,"y"), )
+        txt = (self.doExit, )
+        self.df = TartanDialog(self.opts["mf"], title=self.tit, eflds=fld,
+            tend=tnd, txit=txt, view=("N","V"), mail=("Y","N"))
+
+    def doReprint(self, frt, pag, r, c, p, i, w):
+        self.reprint = w
+        self.num["where"] = [
+            ("ibm_cono", "=", self.opts["conum"]),
+            ("ibm_tjnl", "<>", "")]
+        if self.reprint == "Y":
+            return "sk1"
+
+    def doPreview(self, frt, pag, r, c, p, i, w):
+        self.preview = w
+        return "sk3"
+
+    def doBranch(self, frt, pag, r, c, p, i, w):
+        self.bchno = w
+
+    def doStartN(self, frt, pag, r, c, p, i, w):
+        self.startn = w
+        if not self.startn:
+            self.startn = 0
+            self.endn = 0
+            return "sk1"
+        self.num["where"] = [
+            ("ibm_cono", "=", self.opts["conum"]),
+            ("ibm_tjnl", "<>", ""),
+            ("ibm_tjnl", ">", self.startn)]
+
+    def doEndN(self, frt, pag, r, c, p, i, w):
+        self.endn = w
+        if not self.endn:
+            self.endn = "T99999999"
+
+    def doEnd(self):
+        self.df.closeProcess()
+        whr = [("ibm_cono", "=", self.opts["conum"])]
+        if self.reprint == "N":
+            whr.append(("ibm_tjnl", "=", ""))
+        else:
+            if self.bchno:
+                whr.append(("ibm_branch", "=", self.bchno))
+            if self.startn:
+                whr.append(("ibm_tjnl", "between", self.startn, self.endn))
+        odr = "ibm_branch, ibm_tjnl, ibm_date"
+        sp = SplashScreen(self.opts["mf"].body,
+            "Generating Report\n\nPlease Wait...")
+        recs = self.sql.getRec(tables="ibtmst", where=whr, order=odr)
+        sp.closeSplash()
+        if not recs:
+            showError(self.opts["mf"].body, "Selection Error",
+                "No Transactions Selected")
+        else:
+            self.printReport(recs)
+            if self.reprint == "N" and self.preview == "N":
+                self.opts["mf"].dbm.commitDbase()
+            keys = self.deptot.keys()
+            keys.sort()
+            self.pglin = 999
+            tots = 0
+            for key in keys:
+                if self.pglin > self.fpdf.lpp:
+                    self.doTotHead()
+                a = self.deptot[key][0]
+                b = CCD(self.deptot[key][1], "SD", 13.2)
+                self.fpdf.drawText("Totals for Branch %3s %-43s %s" %
+                    (key, a, b.disp))
+                tots = float(ASD(tots) + ASD(b.work))
+                self.pglin += 1
+            a = CCD(tots, "SD", 13.2).disp
+            txt = "%-65s %s" % ("Grand Totals", a)
+            self.fpdf.underLine(txt=txt)
+            self.fpdf.drawText(txt)
+            pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"], __name__,
+                self.opts["conum"], ext="pdf")
+            self.fpdf.output(pdfnam, "F")
+            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
+                pdfnam=pdfnam, head=self.tit, repprt=self.df.repprt,
+                repeml=self.df.repeml)
+        self.opts["mf"].closeLoop()
+
+    def doTotHead(self):
+        self.fpdf.add_page()
+        self.fpdf.setFont(style="B")
+        self.pgnum += 1
+        txt = "%-65s %13s" % ("Summary of Branch Totals", "Amount ")
+        self.fpdf.drawText(txt)
+        self.fpdf.underLine(txt=txt)
+        self.pglin = 6
+
+    def printReport(self, recs):
+        imc = self.sql.ibtmst_col
+        p = ProgressBar(self.opts["mf"].body, mxs=len(recs))
+        for num, dat in enumerate(recs):
+            p.displayProgress(num)
+            docno = CCD(dat[imc.index("ibm_docno")], "Na", 9)
+            date = CCD(dat[imc.index("ibm_date")], "D1", 10)
+            branch = CCD(dat[imc.index("ibm_branch")], "UI", 3)
+            self.tjnl = CCD(dat[imc.index("ibm_tjnl")], "NA", 9)
+            self.tjdt = CCD(dat[imc.index("ibm_tjdt")], "d1", 10)
+            name = "Spargs Fuel Services"
+            acc = self.sql.getRec(tables="ibttrn", cols=["sum(ibt_value)"],
+                where=[("ibt_cono", "=", self.opts["conum"]), ("ibt_docno",
+                "=", docno.work), ("ibt_type", "=", 1)], limit=1)
+            if not acc:
+                continue
+            tramt = CCD(acc[0], "SD", 13.2)
+            if branch.work != self.branch:
+                if self.branch:
+                    self.branchTotal()
+                self.branch = branch.work
+                self.getVariables()
+                self.pageHeading()
+            if self.reprint == "Y" and self.tjnl.work != self.ltjnl:
+                if self.ltjnl:
+                    self.branchTotal()
+                self.ltjnl = self.tjnl.work
+                self.pageHeading()
+            if self.pglin > self.fpdf.lpp:
+                if self.reprint == "N":
+                    self.branchTotal(fullpg=True)
+                self.pageHeading()
+            if self.reprint == "N" and self.preview == "N":
+                self.sql.updRec("ibtmst", cols=["ibm_tjnl", "ibm_tjdt"],
+                    data=[self.ltjnl, self.sysdtw], where=[("ibm_cono", "=",
+                    self.opts["conum"]), ("ibm_docno", "=", docno.work)])
+            self.totamt = float(ASD(self.totamt) + ASD(tramt.work))
+            self.fpdf.drawText("%-30s %9s %-24s %13s" % (name, docno.disp,
+                date.disp, tramt.disp))
+            self.pglin += 1
+        p.closeProgress()
+        if self.fpdf.page:
+            self.branchTotal()
+
+    def pageHeading(self):
+        self.fpdf.add_page()
+        self.fpdf.setFont(style="B")
+        self.pgnum += 1
+        self.fpdf.drawText(self.head)
+        self.fpdf.drawText()
+        if self.reprint == "Y":
+            dat = "Date: %s" % self.tjdt.disp
+            txt = "Reprint Transfer %s %s" % (self.ltjnl, dat)
+        elif self.preview == "Y":
+            txt = "Preview Transfer %s" % self.ltjnl
+        else:
+            txt = "Transfer %s" % self.ltjnl
+        self.fpdf.drawText("%-24s%55s" % ("Branch Transfer Listing", txt))
+        self.fpdf.drawText()
+        self.fpdf.drawText(
+            "R N E HOLDINGS (PTY) LIMITED T/A SPARGS FUEL SERVICES")
+        self.fpdf.drawText("%24s" % ("Major Square, Beacon Bay"))
+        self.fpdf.drawText("%27s" % ("VAT Registration 4460156583"))
+        self.fpdf.drawText()
+        self.fpdf.drawText("Supplied To: %-30s (%3s)" % (self.bname,
+            self.branch))
+        self.fpdf.drawText("V.A.T. Numb: %-13s" % self.vatno)
+        self.fpdf.drawText()
+        self.fpdf.drawText("%-30s %-9s %-24s %13s" % ("Supplier-Name",
+            "Reference", "   Date   ", "Amount "))
+        self.fpdf.drawText(self.fpdf.suc * len(self.head))
+        self.fpdf.setFont()
+        self.pglin = 13
+
+    def branchTotal(self, fullpg=False):
+        totamt = CCD(self.totamt, "SD", 13.2)
+        if not self.branch in self.deptot:
+            self.deptot[self.branch] = [self.bname, 0]
+        self.deptot[self.branch][1] = float(
+            ASD(self.deptot[self.branch][1]) + ASD(totamt.work))
+        self.fpdf.drawText(self.fpdf.suc * len(self.head))
+        self.fpdf.drawText("%-65s %13s" % ("Totals", totamt.disp))
+        self.getVariables(fullpg)
+        self.totamt = 0
+
+    def getVariables(self, fullpg=False):
+        branch = self.sql.getRec(tables="ctlmst", cols=["ctm_name",
+            "ctm_taxno"], where=[("ctm_cono", "=", self.branch)], limit=1)
+        self.bname = branch[0]
+        self.vatno = branch[1]
+        if self.reprint == "Y":
+            self.ltjnl = self.tjnl.work
+        elif fullpg:
+            self.ltjnl += 1
+        else:
+            tjnl = self.sql.getRec(tables="ibtmst", cols=["max(ibm_tjnl)"],
+                where=[("ibm_cono", "=", self.opts["conum"])], limit=1)
+            if not tjnl[0]:
+                self.ltjnl = "T00000001"
+            else:
+                self.ltjnl = "T%08i" % (int(tjnl[0][1:]) + 1)
+
+    def doExit(self):
+        self.df.closeProcess()
+        self.opts["mf"].closeLoop()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== added file 'ibt/ib3030.py'
--- ibt/ib3030.py	1970-01-01 00:00:00 +0000
+++ ibt/ib3030.py	2016-02-23 14:20:57 +0000
@@ -0,0 +1,180 @@
+#! /usr/bin/env python
+
+"""
+SYNOPSIS
+    Inter Branch Transfer Sales Report.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+from TartanClasses import ASD, RepPrt, Sql, TartanDialog
+
+class ib3030:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.mainProcess()
+            self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        self.sql = Sql(self.opts["mf"].dbm, ["ctlmst", "ibtmst", "ibttrn"],
+            prog=__name__)
+        if self.sql.error:
+            return
+        return True
+
+    def mainProcess(self):
+        self.tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
+            "Sales Report (%s)" % __name__)
+        coy = {
+            "stype": "R",
+            "tables": ("ctlmst",),
+            "cols": (
+                ("ctm_cono", "", 0, "Coy"),
+                ("ctm_name", "", 0, "Name", "Y")),
+            "order": "ctm_cono"}
+        fld = (
+            (("T",0,0,0),"IUI",3,"Branch Code","",
+                "","Y",self.doBranch,coy,None,("efld",)),
+            (("T",0,0,0),"ONA",30,""),
+            (("T",0,1,0),"ID2",7,"From Period","",
+                0,"N",self.doFrom,None,None,("efld",)),
+            (("T",0,2,0),"ID2",7,"To   Period","",
+                0,"N",self.doTo,None,None,("efld",)))
+        tnd = ((self.doEnd,"y"), )
+        txt = (self.doExit, )
+        self.df = TartanDialog(self.opts["mf"], title=self.tit, eflds=fld,
+            tend=tnd, txit=txt, view=("Y","V"), mail=("Y","N"))
+
+    def doBranch(self, frt, pag, r, c, p, i, w):
+        if w:
+            chk = self.sql.getRec(tables="ctlmst", cols=["ctm_name"],
+                where=[("ctm_cono", "=", w)], limit=1)
+            if not chk:
+                return "Invalid Branch Code"
+            self.bdesc = chk[0]
+        else:
+            self.bdesc = "All Branches"
+        self.bcode = w
+        self.df.loadEntry(frt, pag, p+1, data=self.bdesc)
+
+    def doFrom(self, frt, pag, r, c, p, i, w):
+        self.startw = w
+        self.startd = self.df.t_disp[pag][r][p]
+        self.df.loadEntry(frt, pag, p+1, data=self.startw)
+
+    def doTo(self, frt, pag, r, c, p, i, w):
+        if w < self.startw:
+            return "Invalid Period, Earlier than From Period"
+        self.endw = w
+        self.endd = self.df.t_disp[pag][r][p]
+
+    def doEnd(self):
+        self.df.closeProcess()
+        tab = ["ibtmst", "ibttrn"]
+        col = [
+            "ibm_branch",
+            "ibm_docno",
+            "ibm_date",
+            "ibt_type",
+            "ibt_code",
+            "ibt_quant",
+            "ibt_price",
+            "ibt_value"]
+        whr = [
+            ("ibm_cono", "=", self.opts["conum"]),
+            ("ibt_curdt", "between", self.startw, self.endw)]
+        if self.bcode:
+            whr.append(("ibm_branch", "=", self.bcode))
+        whr.extend([
+            ("ibt_cono=ibm_cono",),
+            ("ibt_docno=ibm_docno",)])
+        odr = "ibm_branch, ibm_docno, ibt_code, ibt_type"
+        recs = self.sql.getRec(tables=tab, cols=col, where=whr, order=odr)
+        if not recs:
+            self.closeProcess()
+            return
+        old = {}
+        l = None
+        for num, dat in enumerate(recs):
+            b, n, d, t, c, q, p, v = dat
+            if not b in old:
+                old[b] = {}
+            if not n in old[b]:
+                old[b][n] = [0, 0, 0, 0, 0, 0, 0, 0, 0]
+            if t == 1:
+                if l:
+                    self.doChange(old, l)
+                l = [b, n, v, q]
+                old[b][n][0] = d
+                old[b][n][1] = float(ASD(old[b][n][1]) + ASD(v))
+            elif t == 2:
+                old[b][n][4] = float(ASD(old[b][n][4]) + ASD(v))
+                old[b][n][6] = float(ASD(old[b][n][6]) + ASD(v))
+                old[b][n][7] = float(ASD(old[b][n][7]) - ASD(v))
+                if not q == l[3]:
+                    sb = round(l[3] * p, 2)
+                    df = float(ASD(v) - ASD(sb))
+                    old[b][n][8] = float(ASD(old[b][n][8]) + ASD(df))
+            else:
+                old[b][n][5] = float(ASD(old[b][n][5]) + ASD(v))
+                old[b][n][6] = float(ASD(old[b][n][6]) + ASD(v))
+                old[b][n][7] = float(ASD(old[b][n][7]) - ASD(v))
+                if not q == l[3]:
+                    sb = round(l[3] * p, 2)
+                    df = float(ASD(v) - ASD(sb))
+                    old[b][n][8] = float(ASD(old[b][n][8]) + ASD(df))
+            if dat == recs[-1]:
+                self.doChange(old, l)
+        hds = [
+            "Branch Sales Report for %s" % self.bdesc,
+            "From Period %s to Period %s" % (self.startd, self.endd)]
+        col = [
+            ["a", "UI",   3,   "Bch",         "y"],
+            ["b", "Na",   9,   "Inv-Numbr",   "y"],
+            ["c", "D1",  10,   "Trans-Date",  "y"],
+            ["d", "SD",  11.2, "Sales-Total", "y"],
+            ["e", "SD",  11.2, "Inv-Outst",   "y"],
+            ["f", "SD",  11.2, "Net-Sales",   "y"],
+            ["g", "SD",  11.2, "Prod-Cost",   "y"],
+            ["h", "SD",  11.2, "Tran-Cost",   "y"],
+            ["i", "SD",  11.2, "Total-Cost",  "y"],
+            ["j", "SD",  11.2, "Total-Net",   "y"],
+            ["k", "SD",  11.2, "TotalDiff",   "y"]]
+        sdy = [["a", "Branch Code", "Y"]]
+        tot = ["d", "e", "f", "g", "h", "i", "j", "k"]
+        data = []
+        bkey = old.keys()
+        bkey.sort()
+        for k1 in bkey:
+            nkey = old[k1].keys()
+            for k2 in nkey:
+                data.append([k1, k2] + old[k1][k2])
+        RepPrt(self.opts["mf"], conum=self.opts["conum"], ttype="D",
+            conam=self.opts["conam"], name=__name__, tables=data, heads=hds,
+            cols=col, stots=sdy, gtots=tot, repprt=self.df.repprt,
+            repeml=self.df.repeml, pbar="P")
+        self.closeProcess()
+
+    def doChange(self, old, l):
+        b1, n1, v1 = l[:3]
+        if not old[b1][n1][4]:
+            old[b1][n1][2] = old[b1][n1][1]
+        else:
+            old[b1][n1][3] = float(ASD(old[b1][n1][3]) + ASD(v1))
+            old[b1][n1][7] = float(ASD(old[b1][n1][7]) + ASD(v1))
+
+    def doExit(self):
+        self.df.closeProcess()
+        self.closeProcess()
+
+    def closeProcess(self):
+        self.opts["mf"].closeLoop()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== added file 'ibt/ibc110.py'
--- ibt/ibc110.py	1970-01-01 00:00:00 +0000
+++ ibt/ibc110.py	2016-02-23 14:20:24 +0000
@@ -0,0 +1,128 @@
+#! /usr/bin/env python
+
+"""
+SYNOPSIS
+    Branch Transfers Control File Maintenance.
+
+    This file is part of Tartan Systems (TARTAN).
+
+AUTHOR
+    Written by Paul Malherbe, <paul@tartan.co.za>
+
+COPYING
+    Copyright (C) 2004-2016 Paul Malherbe.
+"""
+
+import time
+from TartanClasses import Sql, TartanDialog
+
+class ibc110:
+    def __init__(self, **opts):
+        self.opts = opts
+        if self.setVariables():
+            self.drawDialog()
+            self.opts["mf"].startLoop()
+
+    def setVariables(self):
+        self.sql = Sql(self.opts["mf"].dbm, ["ibtctl", "tplmst", "chglog"],
+            prog=__name__)
+        if self.sql.error:
+            return
+        self.acc = self.sql.getRec(tables="ibtctl", where=[("cbt_cono", "=",
+            self.opts["conum"])], limit=1)
+        if not self.acc:
+            self.new = True
+            self.acc = [self.opts["conum"], "branch_transfer", 1]
+        else:
+            self.new = False
+            acc = self.sql.getRec(tables="ctlmst", cols=["ctm_name"],
+                where=[("ctm_cono", "=", self.acc[2])], limit=1)
+            if not acc:
+                self.nam = ""
+            else:
+                self.nam = acc[0]
+        return True
+
+    def drawDialog(self):
+        tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
+                "Sales Invoicing Control File Maintenance (%s)" % __name__)
+        tpl = {
+            "stype": "R",
+            "tables": ("tplmst",),
+            "cols": (
+                ("tpm_tname", "", 0, "Template"),
+                ("tpm_title", "", 0, "Title"),
+                ("tpm_type", "", 0, "T")),
+            "where": [
+                ("tpm_type", "=", "I"),
+                ("tpm_system", "=", "INV")],
+            "order": "tpm_tname"}
+        ctm = {
+            "stype": "R",
+            "tables": ("ctlmst",),
+            "cols": (
+                ("ctm_cono", "", 0, "Coy"),
+                ("ctm_name", "", 0, "Name")),
+            "order": "ctm_cono"}
+        self.fld = (
+            (("T",0,0,0),"INA",20,"Invoice Template","",
+                self.acc[1],"N",self.doTplNam,tpl,None,None),
+            (("T",0,1,0),"IUI",3,"Creditor's Company","",
+                self.acc[2],"N",self.doCrsCoy,ctm,None,None),
+            (("T",0,1,0),"ONA",30,""))
+        but = (
+            ("Accept",None,self.doAccept,0,("T",0,1),("T",0,0)),
+            ("Quit",None,self.doExit,1,None,None))
+        tnd = ((self.doEnd,"Y"),)
+        txt = (self.doExit,)
+        self.df = TartanDialog(self.opts["mf"], title=tit, eflds=self.fld,
+            butt=but, tend=tnd, txit=txt, focus=False)
+        if not self.new:
+            for n, f in enumerate(self.acc[1:]):
+                self.df.loadEntry("T", 0, n, data=f)
+            self.df.loadEntry("T", 0, n+1, data=self.nam)
+        self.df.focusField("T", 0, 1, clr=False)
+
+    def doTplNam(self, frt, pag, r, c, p, i, w):
+        acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),
+            ("tpm_type", "=", "I"), ("tpm_system", "=", "IBT")], limit=1)
+        if not acc:
+            return "Invalid Template Name"
+
+    def doCrsCoy(self, frt, pag, r, c, p, i, w):
+        chk = self.sql.getRec(tables="ctlmst", cols=["ctm_name"],
+            where=[("ctm_cono", "=", w)], limit=1)
+        if not chk:
+            return "Invalid Company Number"
+        self.df.loadEntry(frt, pag, p+1, data=chk[0])
+
+    def doEnd(self):
+        data = [self.opts["conum"]]
+        for x in xrange(0, len(self.df.t_work[0][0]) - 1):
+            data.append(self.df.t_work[0][0][x])
+        if self.new:
+            self.sql.insRec("ibtctl", data=data)
+        elif data != self.acc:
+            self.sql.updRec("ibtctl", data=data, where=[("cbt_cono", "=",
+                self.opts["conum"])])
+            dte = long("%04i%02i%02i%02i%02i%02i" % time.localtime()[:-3])
+            for num, dat in enumerate(self.acc):
+                if dat != data[num]:
+                    self.sql.insRec("chglog", data=["ibtctl", "U",
+                        "%03i" % self.opts["conum"], self.sql.ibtctl_col[num],
+                        dte, self.opts["capnm"], str(dat), str(data[num]), 0])
+        self.opts["mf"].dbm.commitDbase()
+        self.doExit()
+
+    def doAccept(self, widget=None):
+        frt, pag, col, mes = self.df.doCheckFields()
+        if mes:
+            self.df.focusField(frt, pag, (col+1), err=mes)
+        else:
+            self.df.doEndFrame("T", 0, cnf="N")
+
+    def doExit(self, widget=None):
+        self.df.closeProcess()
+        self.opts["mf"].closeLoop()
+
+# vim:set ts=4 sw=4 sts=4 expandtab:

=== modified file 'lon/ln1010.py'
--- lon/ln1010.py	2015-12-12 09:12:17 +0000
+++ lon/ln1010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'lon/ln2010.py'
--- lon/ln2010.py	2015-10-25 09:33:02 +0000
+++ lon/ln2010.py	2016-02-24 13:17:44 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -126,20 +126,16 @@
             (("C",1,0,5),"INa",9,"Reference","Reference Number One",
                 "i","N",self.doTrnRef,None,None,("notblank",)),
             (("C",1,0,6),"ISD",13.2,"Amount","Transaction Amount",
-                "","N",self.doTrnAmt,None,None,("notzero",))]
-        if self.opts["rtn"] in (1, 2):                   # Pay and Rec
-            fld.extend([
-                (("C",1,0,7),"IUD",6.2,"DRte-%","Debit Rate",
-                    self.drte,"N",self.doLonDrt,None,None,None),
-                (("C",1,0,8),"IUD",6.2,"CRte-%","Credit Rate",
-                    self.crte,"N",self.doLonCrt,None,None,None),
-                (("C",1,0,9),"IUI",3,"Mth","Period in Months",
-                    "","N",self.doLonMth,None,None,("efld",)),
-                (("C",1,0,10),"OUD",12.2,"Repay-Amt")])
-        if self.opts["rtn"] in (3, 4):                   # J/E and Int
-            fld.append(
-                (("C",1,0,7),"INA",30,"Details","Transaction Details",
-                    "","N",self.doTrnDet,None,None,None))
+                "","N",self.doTrnAmt,None,None,("notzero",)),
+            (("C",1,0,7),"IUD",6.2,"DRte-%","Debit Rate",
+                self.drte,"N",self.doLonDrt,None,None,None),
+            (("C",1,0,8),"IUD",6.2,"CRte-%","Credit Rate",
+                self.crte,"N",self.doLonCrt,None,None,None),
+            (("C",1,0,9),"IUI",3,"Mth","Period in Months",
+                "","N",self.doLonMth,None,None,("efld",)),
+            (("C",1,0,10),"OUD",12.2,"Repay-Amt"),
+            (("C",1,0,11),"INA",30,"Details","Loan Details",
+                "","N",self.doTrnDet,None,None,None)]
         if self.opts["rtn"] == 3 and self.glint == "Y":  # J/E and G/L
             fld.extend([
                 (("T",2,0,0),"OSD",13.2,"Unallocated Balance"),
@@ -150,7 +146,7 @@
                 (("C",2,0,2),"ONA",19,"Description"),
                 (("C",2,0,4),"ISD",13.2,"All-Amount","Allocation Amount",
                     "","N",self.doAllAmt,None,None,("efld",)),
-                (("C",2,0,6),"INA",30,"Details","",
+                (("C",2,0,6),"INA",30,"Allocation Details","",
                     "","N",self.doAllDet,None,None,("notblank",))])
             if not self.incoac:
                 fld[11][1] = "OUI"
@@ -247,8 +243,11 @@
             self.londrt = 0
             self.loncrt = 0
             self.lonmth = 0
+            self.lonpay = 0
             if self.opts["rtn"] in (1, 2):
                 return "nd"
+            else:
+                return "sk4"
 
     def doLonDrt(self, frt, pag, r, c, p, i, w):
         self.londrt = w

=== modified file 'lon/ln2020.py'
--- lon/ln2020.py	2015-10-03 07:36:56 +0000
+++ lon/ln2020.py	2016-02-16 07:56:41 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -83,7 +83,7 @@
             batch = "L%s" % (self.trdate / 100)
             LoanInterest("L", self.opts["mf"].dbm, lonmf2, update="Y",
                 tdate=self.trdate, batch=batch, curdt=self.trdate / 100,
-                glctl=self.glctl, capnm=self.opts["capnm"])
+                refno=True, glctl=self.glctl, capnm=self.opts["capnm"])
         p.closeProgress()
         self.sql.updRec("lonctl", cols=["cln_last"], data=[self.trdate],
             where=[("cln_cono", "=", self.opts["conum"])])

=== modified file 'lon/ln2030.py'
--- lon/ln2030.py	2015-10-03 07:36:56 +0000
+++ lon/ln2030.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'lon/ln3010.py'
--- lon/ln3010.py	2015-10-03 07:36:56 +0000
+++ lon/ln3010.py	2016-01-03 17:07:29 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'lon/ln3020.py'
--- lon/ln3020.py	2015-10-03 07:36:56 +0000
+++ lon/ln3020.py	2016-02-16 08:27:41 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'lon/ln3030.py'
--- lon/ln3030.py	2015-12-12 09:12:17 +0000
+++ lon/ln3030.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'lon/ln3040.py'
--- lon/ln3040.py	2015-12-12 09:12:17 +0000
+++ lon/ln3040.py	2016-02-11 14:15:12 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -75,7 +75,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'lon/ln3050.py'
--- lon/ln3050.py	2015-10-04 09:29:52 +0000
+++ lon/ln3050.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'lon/ln4010.py'
--- lon/ln4010.py	2015-12-12 09:12:17 +0000
+++ lon/ln4010.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'lon/ln6010.py'
--- lon/ln6010.py	2015-12-12 09:12:17 +0000
+++ lon/ln6010.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, ProgressBar, Sql, TartanDialog

=== modified file 'lon/lnc110.py'
--- lon/lnc110.py	2015-12-12 09:12:17 +0000
+++ lon/lnc110.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml1010.py'
--- mem/ml1010.py	2015-10-13 07:46:15 +0000
+++ mem/ml1010.py	2016-01-03 17:07:30 +0000
@@ -20,7 +20,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'mem/ml2010.py'
--- mem/ml2010.py	2015-10-25 09:33:02 +0000
+++ mem/ml2010.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml2020.py'
--- mem/ml2020.py	2015-08-25 15:02:35 +0000
+++ mem/ml2020.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3010.py'
--- mem/ml3010.py	2015-10-03 07:36:56 +0000
+++ mem/ml3010.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3020.py'
--- mem/ml3020.py	2015-10-03 07:36:56 +0000
+++ mem/ml3020.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3030.py'
--- mem/ml3030.py	2015-10-03 07:36:56 +0000
+++ mem/ml3030.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3040.py'
--- mem/ml3040.py	2015-12-12 09:12:17 +0000
+++ mem/ml3040.py	2016-02-11 14:15:52 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, time
@@ -155,7 +155,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'mem/ml3050.py'
--- mem/ml3050.py	2015-10-03 07:36:56 +0000
+++ mem/ml3050.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'mem/ml3060.py'
--- mem/ml3060.py	2015-10-25 09:33:02 +0000
+++ mem/ml3060.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3070.py'
--- mem/ml3070.py	2015-10-03 07:36:56 +0000
+++ mem/ml3070.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3080.py'
--- mem/ml3080.py	2015-10-03 07:36:56 +0000
+++ mem/ml3080.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3090.py'
--- mem/ml3090.py	2015-02-11 16:45:23 +0000
+++ mem/ml3090.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3100.py'
--- mem/ml3100.py	2015-10-03 07:36:56 +0000
+++ mem/ml3100.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3110.py'
--- mem/ml3110.py	2015-10-03 07:36:56 +0000
+++ mem/ml3110.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/ml3120.py'
--- mem/ml3120.py	2014-12-30 15:37:38 +0000
+++ mem/ml3120.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CreateChart, TartanDialog, Sql

=== modified file 'mem/ml6010.py'
--- mem/ml6010.py	2015-08-25 15:02:35 +0000
+++ mem/ml6010.py	2016-02-04 14:27:29 +0000
@@ -10,12 +10,12 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
 from TartanClasses import AgeTrans, Sql, TartanDialog
-from tartanFunctions import getTrn, copyList
+from tartanFunctions import copyList, getTrn
 
 class ml6010:
     def __init__(self, **opts):
@@ -52,7 +52,7 @@
             "sort": False}
         fld = (
             (("T",0,0,0),"IUI",6,"Mem-No","Member Number",
-                "","N",self.doMemNo,mlm,None,("notblank",)),
+                "","Y",self.doMemNo,mlm,None,("notblank",)),
             (("T",0,0,0),"ONA",30,"Member"))
         tnd = ((self.endTop, "n"),)
         txt = (self.exitTop,)

=== modified file 'mem/ml6020.py'
--- mem/ml6020.py	2015-02-07 06:31:11 +0000
+++ mem/ml6020.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'mem/ml6030.py'
--- mem/ml6030.py	2015-08-25 15:02:35 +0000
+++ mem/ml6030.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import csv, os, time

=== modified file 'mem/mlc110.py'
--- mem/mlc110.py	2015-10-03 07:36:56 +0000
+++ mem/mlc110.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'mem/mlc210.py'
--- mem/mlc210.py	2015-08-25 15:02:35 +0000
+++ mem/mlc210.py	2016-01-03 17:07:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mem/mlc310.py'
--- mem/mlc310.py	2014-12-30 15:37:38 +0000
+++ mem/mlc310.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'mem/mlc410.py'
--- mem/mlc410.py	2014-12-30 15:37:38 +0000
+++ mem/mlc410.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'mem/mlm010.py'
--- mem/mlm010.py	2015-10-03 07:36:56 +0000
+++ mem/mlm010.py	2016-01-19 09:12:13 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -385,8 +385,7 @@
         if glt and len(glt) == 1:
             tmp = glt[0][self.sql.gentrn_col.index("glt_tramt")]
             tmp = float(ASD(tmp) + ASD(amt))
-            glt[0][self.sql.gentrn_col.index("glt_tramt")] = tmp
-            self.sql.updRec("gentrn", where=whr, data=glt[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt"], data=[tmp], where=whr)
         else:
             data = [self.opts["conum"], self.memctl, curdt, trdt, 1, ref,
                 self.batch, amt, 0, "Month End Raising Charges", "", "", 0,
@@ -403,8 +402,7 @@
             glt[0][self.sql.gentrn_col.index("glt_tramt")] = tmp
             tmp = glt[0][self.sql.gentrn_col.index("glt_taxamt")]
             tmp = float(ASD(tmp) + ASD(tax))
-            glt[0][self.sql.gentrn_col.index("glt_taxamt")] = tmp
-            self.sql.updRec("gentrn", where=whr, data=glt[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt"], data=[tmp], where=whr)
         else:
             data = [self.opts["conum"], glac, curdt, trdt, 1, ref, self.batch,
                 val, tax, "Month End Raising Charges", self.taxdf, "", 0,
@@ -420,8 +418,7 @@
         if glt and len(glt) == 1:
             tmp = glt[0][self.sql.gentrn_col.index("glt_tramt")]
             tmp = float(ASD(tmp) + ASD(tax))
-            glt[0][self.sql.gentrn_col.index("glt_tramt")] = tmp
-            self.sql.updRec("gentrn", where=whr, data=glt[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt"], data=[tmp], where=whr)
         else:
             data = [self.opts["conum"], self.vatctl, curdt, trdt, 1, ref,
                 self.batch, tax, 0.00, "Month End Raising Charges", "", "", 0,

=== modified file 'men/bwlmen.py'
--- men/bwlmen.py	2015-06-17 15:23:42 +0000
+++ men/bwlmen.py	2016-01-17 14:32:25 +0000
@@ -96,5 +96,6 @@
     ["PYNN","bc_cc","bc3110",0,"Match Results Report"],
     ["PYNN","bc_cc","bc3120",0,"Contact Request Forms"],
     ["PYNN","bc_tb","bc6010",3,"Change Tab Numbers"],
-    ["PYNN","bc_tb","bc6020",0,"Clear History"]]
+    ["PYNN","bc_tb","bc6020",0,"Merge Duplicate Visitors"],
+    ["PYNN","bc_tb","bc6030",0,"Clear History"]]
 # End

=== modified file 'men/rnemen.py'
--- men/rnemen.py	2015-12-12 09:12:17 +0000
+++ men/rnemen.py	2016-02-11 16:01:15 +0000
@@ -31,6 +31,7 @@
     ["gl", "General Ledger"],
     ["cr", "Creditor's Ledger"],
     ["ar", "Asset's Register"],
+    ["ib", "Branch Transfers"],
     ["ln", "Loan's Ledger"],
     ["rt", "Rental's Ledger"],
     ["dr", "Debtor's Ledger"],
@@ -46,6 +47,7 @@
     ["MM","mm_gl", "General Ledger"],
     ["MM","mm_cr", "Creditor's Ledger"],
     ["MM","mm_ar", "Asset's Register"],
+    ["MM","mm_ib", "Branch Transfers"],
     ["MM","mm_ln","Loan's Ledger"],
     ["MM","mm_rt", "Rental's Ledger"],
     ["MM","mm_dr", "Debtor's Ledger"],
@@ -190,6 +192,20 @@
     ["PNNN","ar_tb","ar6030",5,"Un-Sell an Asset"],
     ["PYYY","mm_ar","ar4010",0,"Interrogation"]]
 
+# Branch Transfers
+ibmen = [
+    ["CM","mm_ib","ib_fm","File Maintenance"],
+    ["CM","mm_ib","ib_dc","Data Capture"],
+    ["CM","mm_ib","ib_rp","Reporting"],
+    ["CM","mm_ib","ib_tb","Toolbox"]]
+ibmod = [
+    ["PYNY","ib_fm","ibc110",2,"Control Record"],
+    ["PYYY","ib_dc","ib2010",2,"Sales Invoices"],
+    ["PYNY","ib_dc","ib2020",2,"Creditor's Invoices"],
+    ["PYNN","ib_rp","ib3010",1,"Reprint Sales Invoices"],
+    ["PYNN","ib_rp","ib3020",1,"Purchase Journals"],
+    ["PYNN","ib_rp","ib3030",1,"Sales Report"]]
+
 # Loan's Ledger
 lnmen = [
     ["CM","mm_ln","ln_fm","File Maintenance"],

=== modified file 'men/stdmen.py'
--- men/stdmen.py	2015-12-12 09:12:17 +0000
+++ men/stdmen.py	2016-01-17 14:32:53 +0000
@@ -507,7 +507,8 @@
     ["PYNN","bc_cc","bc3110",0,"Match Results Report"],
     ["PYNN","bc_cc","bc3120",0,"Contact Request Forms"],
     ["PYNN","bc_tb","bc6010",3,"Change Tab Numbers"],
-    ["PYNN","bc_tb","bc6020",0,"Clear History"]]
+    ["PYNN","bc_tb","bc6020",0,"Merge Duplicate Visitors"],
+    ["PYNN","bc_tb","bc6030",0,"Clear History"]]
 
 # Telephone Directory
 tdmen = [

=== modified file 'mst/ms0000.py'
--- mst/ms0000.py	2015-12-12 09:12:17 +0000
+++ mst/ms0000.py	2016-02-27 13:18:24 +0000
@@ -8,7 +8,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import getopt, os, sys
@@ -33,10 +33,11 @@
     os.environ["UBUNTU_MENUPROXY"] = "0"
 # Set the version of Tartan
 if "TARVER" in os.environ:
+    # Allow override
     temp = tuple(os.environ["TARVER"].split("."))
     VERSION = (int(temp[0]), int(temp[1]), int(temp[2]))
 else:
-    VERSION = (5, 1, 4)
+    VERSION = (5, 2, 0)
 if __name__ == "__main__":
     # Run Tartan
     try:

=== modified file 'mst/ms1010.py'
--- mst/ms1010.py	2015-12-12 09:12:17 +0000
+++ mst/ms1010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'mst/ms1010_oth.py'
--- mst/ms1010_oth.py	2015-08-25 15:02:35 +0000
+++ mst/ms1010_oth.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mst/ms1010_rne.py'
--- mst/ms1010_rne.py	2015-12-12 09:12:17 +0000
+++ mst/ms1010_rne.py	2016-02-16 13:54:12 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time
@@ -34,7 +34,7 @@
             self.first = True
         else:
             self.first = False
-        self.sys = ["GL", "CR", "DR", "ST", "SI", "AR", "LN", "RT"]
+        self.sys = ["GL", "CR", "DR", "ST", "SI", "AR", "IB", "LN", "RT"]
         self.img = None
         return True
 
@@ -113,9 +113,11 @@
                 "N","N",None,None,None,None),
             (("T",3,5,0),("IRB",r1s),0,"Asset's Register","",
                 "N","N",None,None,None,None),
-            (("T",3,6,0),("IRB",r1s),0,"Loans Ledger","",
-                "N","N",None,None,None,None),
-            (("T",3,7,0),("IRB",r1s),0,"Rental's Ledger","",
+            (("T",3,6,0),("IRB",r1s),0,"Branch Transfers","",
+                "N","N",None,None,None,None),
+            (("T",3,7,0),("IRB",r1s),0,"Loans Ledger","",
+                "N","N",None,None,None,None),
+            (("T",3,8,0),("IRB",r1s),0,"Rental's Ledger","",
                 "N","N",None,None,None,None),
             (("T",4,0,0),"IFF",75,"Letterhead Image","",
                 "","N",self.doLogo,log,None,("fle","blank")))

=== modified file 'mst/ms1020.py'
--- mst/ms1020.py	2015-10-03 07:36:56 +0000
+++ mst/ms1020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'mst/ms1030.py'
--- mst/ms1030.py	2015-08-25 15:02:35 +0000
+++ mst/ms1030.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'mst/ms1040.py'
--- mst/ms1040.py	2015-10-25 09:33:02 +0000
+++ mst/ms1040.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mst/ms3010.py'
--- mst/ms3010.py	2015-10-03 07:36:56 +0000
+++ mst/ms3010.py	2016-01-19 08:50:47 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -237,9 +237,9 @@
             else:
                 self.printReport(recs)
             if self.flag == "Y":
-                self.sql.updRec("ctlvtf", where=[("vtt_cono", "=",
-                    self.opts["conum"]), ("vtt_curdt", "<=", self.eper),
-                    ("vtt_paid", "=", 0)], cols=["vtt_paid"], data=[self.paid])
+                self.sql.updRec("ctlvtf", cols=["vtt_paid"], data=[self.paid],
+                    where=[("vtt_cono", "=", self.opts["conum"]), ("vtt_curdt",
+                    "<=", self.eper), ("vtt_paid", "=", 0)])
                 self.opts["mf"].dbm.commitDbase()
         self.closeProcess()
 

=== modified file 'mst/ms3020.py'
--- mst/ms3020.py	2015-10-03 07:36:56 +0000
+++ mst/ms3020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mst/ms3030.py'
--- mst/ms3030.py	2015-10-03 07:36:56 +0000
+++ mst/ms3030.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mst/msc000.py'
--- mst/msc000.py	2015-12-12 09:12:17 +0000
+++ mst/msc000.py	2016-02-09 19:23:50 +0000
@@ -8,7 +8,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import cStringIO, fpdf, getpass, gc, glob, os, sys, time, urllib2
@@ -148,7 +148,7 @@
             -h, --help              This Help Message
             -i, --image             Toggle the Tartan image option.
             -l, --loader            Try and remove module before importing
-            -m, --menu=             The menu to use, tarmen
+            -m, --menu=             The menu to use, defaults to stdmen
             -n, --nocheck           Do not check for system records
             -o, --output            Toggle stdout redirection to stdout.txt
                                         Linux   defaults to False
@@ -162,7 +162,7 @@
             -u, --user=             User name and password e.g. name:password
             -v, --version           Display Version Details
             -x, --xdisplay          Do not have a mainframe with -ptarBck
-            -z, --zerobar           Do not have a progressbar
+            -z, --zerobar           Do not have a progressbar with -ptarBck
 """
             self.doExit(dbm=False)
         if not self.version and not self.xdisplay:
@@ -177,56 +177,58 @@
             print "Tkinter/ttk not Available or Installed"
             self.doExit(dbm=False)
         if self.version:
-            print "Tartan   Version: %s" % self.current[1]
-            print "Python   Version: %s" % sys.version.split()[0]
+            print "%-12sVersion: %s" % ("Tartan", self.current[1])
+            print "%-12sVersion: %s" % ("Python", sys.version.split()[0])
             if self.xdisplay:
                 from TartanClasses import tk
                 from PIL import VERSION
-                print "Tcl/Tk   Version: %s" % tk.Tcl().eval("info patchlevel")
-                print "PIL      Version: %s" % VERSION
+                print "%-12sVersion: %s" % ("Tcl/Tk", tk.Tcl().eval("info patchlevel"))
+                print "%-12sVersion: %s" % ("PIL", VERSION)
 
             try:
                 import fdb
-                print "FDB      Version: %s" % fdb.__version__
+                print "%-12sVersion: %s" % ("FDB", fdb.__version__)
             except:
                 pass
             try:
                 import MySQLdb
-                print "MySQLdb  Version: %s" % MySQLdb.__version__
+                print "%-12sVersion: %s" % ("MySQLdb", MySQLdb.__version__)
             except:
                 pass
             try:
                 import psycopg2
-                print "Psycopg2 Version: %s" % psycopg2.__version__.split()[0]
+                print "%-12sVersion: %s" % ("Psycopg2",
+                        psycopg2.__version__.split()[0])
             except:
                 pass
             try:
                 import pychart.version
-                print "Pychart  Version: %s" % pychart.version.version
+                print "%-12sVersion: %s" % ("Pychart", pychart.version.version)
             except:
                 pass
             try:
                 import sqlite3
-                print "Pysqlite Version: %s" % sqlite3.version
-                print "Sqlite3  Version: %s" % sqlite3.sqlite_version
+                print "%-12sVersion: %s" % ("Pysqlite", sqlite3.version)
+                print "%-12sVersion: %s" % ("Sqlite3", sqlite3.sqlite_version)
             except:
                 pass
             try:
-                print "Fpdf     Version: %s" % fpdf.__version__
+                print "%-12sVersion: %s" % ("Fpdf", fpdf.__version__)
             except:
                 pass
             try:
                 import xlrd
-                print "Xlrd     Version: %s" % xlrd.info.__VERSION__
+                print "%-12sVersion: %s" % ("Xlrd", xlrd.info.__VERSION__)
             except:
                 pass
             try:
                 import xlwt
-                print "Xlwt     Version: %s" % xlwt.__VERSION__
+                print "%-12sVersion: %s" % ("Xlwt", xlwt.__VERSION__)
             except:
                 pass
             self.doExit(dbm=False)
-        if self.debug:  # Set trace mode
+        if self.debug:
+            # Set trace mode
             import trace
             igm = ["__init__"]
             if self.exclude:
@@ -257,7 +259,7 @@
                 self.doExit(dbm=False)
         self.mf = None
         self.rcdic = None
-        main = "Tartan Systems - Copyright %s 2004-2015 P Malherbe" % u"\u00A9"
+        main = "Tartan Systems - Copyright %s 2004-2016 P Malherbe" % u"\u00A9"
         while not self.rcdic:
             self.rcdic = loadRcFile(self.rcfile, default=True)
             if self.rcdic == "error":
@@ -517,7 +519,7 @@
                 nos = []
                 # All systems not in the company modules
                 for sss in self.sss:
-                    if sss not in ("ca", "ms", "rp", "td"):
+                    if sss not in ("bm", "ca", "ms", "rp", "td"):
                         nos.append(sss)
                 ctm = sql.getRec(tables="ctlmst", cols=["ctm_modules"])
                 for m in ctm:
@@ -535,11 +537,12 @@
                 nop = sql.getRec(tables="ctlpwm", cols=["mpw_sys", "mpw_prg"],
                     where=[("mpw_usr", "=", self.user["name"]), ("mpw_prg",
                     "<>", ""), ("mpw_pwd", "=", "")])
-                vop = sql.getRec(tables="ctlpwm", cols=["mpw_sys", "mpw_prg"],
-                    where=[("mpw_usr", "=", self.user["name"]), ("mpw_prg",
-                    "<>", ""), ("mpw_pwd", "<>", "")])
-                if vop:
-                    for sss, mod in vop:
+                self.vop = sql.getRec(tables="ctlpwm", cols=["mpw_sys",
+                    "mpw_prg", "mpw_coy", "mpw_pwd"], where=[("mpw_usr",
+                    "=", self.user["name"]), ("mpw_prg", "<>", ""),
+                    ("mpw_pwd", "<>", "")])
+                if self.vop:
+                    for sss, mod, coy, pwd in self.vop:
                         if sss in nos:
                             nos.remove(sss)
                             for prg in self.mod:
@@ -657,50 +660,66 @@
                     self.db.closeDbase()
                 sys.exit()
         elif typ[0] == "P":
+            self.mf.updateStatus("")
+            mcoy = None
             error = False
-            self.mf.updateStatus("")
-            popt = {"mf": self.mf}
-            text = tit
-            if typ[1] == "Y":
-                if typ[2] in ("L", "Y"):
-                    if self.program and self.conum:
-                        error = self.conoCheck(self.conum, prg=prg)
-                        if not error and typ[2] == "L":
-                            self.getLastPeriod()
+            if self.vop:
+                sss = prg[:2]
+                mmm = prg[2:]
+                if rtn:
+                    mmm = mmm[:3] + str(rtn)
+                for vvv in self.vop:
+                    if vvv[0] == sss and vvv[1] == mmm:
+                        mcoy, self.mpwd = vvv[2:]
+                        error = self.pwdCheck()
+            if not error:
+                popt = {"mf": self.mf}
+                text = tit
+                if typ[1] == "Y":
+                    if typ[2] in ("L", "Y"):
+                        if self.program and self.conum:
+                            error = self.conoCheck(self.conum, prg=prg)
+                            if not error and typ[2] == "L":
+                                self.getLastPeriod()
+                        else:
+                            self.getCompany(prg=prg, period=typ[2])
+                        if not self.conum:
+                            error = True
+                        else:
+                            if prg in ("gl3030", "gl3040", "gl3050", "gl3080",
+                                    "gl4010", "gl4020", "gl6030", "gl6040"):
+                                check = True
+                            else:
+                                check = False
+                            per = getPeriods(self.mf, self.conum, self.finper,
+                                check=check)
+                            if per == (None, None, None):
+                                error = True
+                            elif rtn and per[2] == "Y":
+                                showError(self.mf.body, "Period Error",
+                                    "This Period Has Already Been Finalised")
+                                error = True
+                            else:
+                                popt["period"] = (self.finper, (per[0].work,
+                                    per[0].disp), (per[1].work, per[1].disp))
                     else:
-                        self.getCompany(prg=prg, period=typ[2])
-                    if not self.conum:
+                        if self.program and self.conum:
+                            error = self.conoCheck(self.conum, prg=prg)
+                        else:
+                            self.getCompany(prg=prg, period=False)
+                        if not self.conum:
+                            error = True
+                    if mcoy and not self.conum == mcoy:
+                        showError(self.mf.body, "Company Error",
+                            "This Company, Module Combination "\
+                            "is Not Allowed for This User")
                         error = True
-                    else:
-                        if prg in ("gl3030", "gl3040", "gl3050", "gl3080",
-                                "gl4010", "gl4020", "gl6030", "gl6040"):
-                            check = True
-                        else:
-                            check = False
-                        per = getPeriods(self.mf, self.conum, self.finper,
-                            check=check)
-                        if per == (None, None, None):
-                            error = True
-                        elif rtn and per[2] == "Y":
-                            showError(self.mf.body, "Period Error",
-                                "This Period Has Already Been Finalised")
-                            error = True
-                        else:
-                            popt["period"] = (self.finper, (per[0].work,
-                                per[0].disp), (per[1].work, per[1].disp))
+                    if not error:
+                        popt["conum"] = self.conum
+                        popt["conam"] = self.conam
+                        text = "%-s for %s (%s)" % (text, self.conam, prg)
                 else:
-                    if self.program and self.conum:
-                        error = self.conoCheck(self.conum, prg=prg)
-                    else:
-                        self.getCompany(prg=prg, period=False)
-                    if not self.conum:
-                        error = True
-                if not error:
-                    popt["conum"] = self.conum
-                    popt["conam"] = self.conam
-                    text = "%-s for %s (%s)" % (text, self.conam, prg)
-            else:
-                text = "%-s for All Companies (%s)" % (text, prg)
+                    text = "%-s for All Companies (%s)" % (text, prg)
             if not error:
                 if typ[3] == "Y":
                     popt["capnm"] = self.user["name"]
@@ -735,6 +754,29 @@
                 self.checkNotes()
             self.tarmen.drawMenu()
 
+    def pwdCheck(self):
+        tit = ("Password Validation",)
+        fld = ((("T",0,0,0),"IHA",30,"Password","Password","","N",
+                self.doPGet,None,None,None,None),)
+        but = (("Cancel", None, self.doPCancel, 1, None, None),)
+        self.df = TartanDialog(self.mf, tops=True, title=tit, eflds=fld,
+            butt=but, tend=((self.doPEnd, "n"),), txit=(self.doPCancel,))
+        self.mf.startLoop()
+        return self.pwderr
+
+    def doPGet(self, frt, pag, r, c, p, i, w):
+        if w != b64Convert("decode", self.mpwd):
+            return "Invalid Password"
+        self.pwderr = False
+
+    def doPCancel(self, widget=None):
+        self.pwderr = True
+        self.doPEnd()
+
+    def doPEnd(self):
+        self.df.closeProcess()
+        self.mf.closeLoop()
+
     def conoCheck(self, coy, prg=None, ctl=False):
         if self.cono and not self.cono.count(coy):
             self.conum = None
@@ -753,7 +795,7 @@
         self.modul = chk["ctm_modules"]
         # Check Module
         mod = prg[:2].upper()
-        if mod in ("MS", "RP", "TD"):
+        if mod in ("BM", "CA", "MS", "RP", "TD"):
             return
         for x in range(0, len(self.modul), 2):
             if self.modul[x:x + 2] == mod:
@@ -1087,7 +1129,7 @@
         self.new = w
 
     def doNewP2(self, frt, pag, r, c, p, i, w):
-        if w != self.new:
+        if not w == self.new:
             return "Invalid New Password"
         self.pwd = b64Convert("encode", w)
 
@@ -1418,7 +1460,7 @@
                 error = "older"
         if error == "tooold":
             showError(scrn, "Version Error",
-                """This version of Tartan, %s.%s.%s, is too Old.
+                """The Version of the Data, %s.%s.%s, is too Old.
 
 Please follow the upgrade instructions at http//www.tartan.co.za
 

=== modified file 'mst/msc110.py'
--- mst/msc110.py	2015-10-25 09:33:02 +0000
+++ mst/msc110.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mst/msy010.py'
--- mst/msy010.py	2015-12-12 09:12:17 +0000
+++ mst/msy010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'mst/msy020.py'
--- mst/msy020.py	2015-10-03 07:36:56 +0000
+++ mst/msy020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import SplashScreen, Sql, TartanDialog

=== modified file 'mst/msy030.py'
--- mst/msy030.py	2015-10-03 07:36:56 +0000
+++ mst/msy030.py	2016-01-03 17:07:31 +0000
@@ -8,7 +8,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, ProgressBar, PwdConfirm, Sql, TartanDialog

=== modified file 'rca/rc1010.py'
--- rca/rc1010.py	2014-12-30 15:37:38 +0000
+++ rca/rc1010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc1020.py'
--- rca/rc1020.py	2014-12-30 15:37:38 +0000
+++ rca/rc1020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc1030.py'
--- rca/rc1030.py	2014-12-30 15:37:38 +0000
+++ rca/rc1030.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc2010.py'
--- rca/rc2010.py	2015-10-03 07:36:56 +0000
+++ rca/rc2010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc3010.py'
--- rca/rc3010.py	2015-10-03 07:36:56 +0000
+++ rca/rc3010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc3020.py'
--- rca/rc3020.py	2015-10-03 07:36:56 +0000
+++ rca/rc3020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc3030.py'
--- rca/rc3030.py	2015-10-03 07:36:56 +0000
+++ rca/rc3030.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc3040.py'
--- rca/rc3040.py	2015-10-03 07:36:56 +0000
+++ rca/rc3040.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, time

=== modified file 'rca/rc3050.py'
--- rca/rc3050.py	2015-12-12 09:12:17 +0000
+++ rca/rc3050.py	2016-02-11 14:16:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -99,7 +99,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'rca/rc3060.py'
--- rca/rc3060.py	2015-12-12 09:12:17 +0000
+++ rca/rc3060.py	2016-02-11 14:16:38 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -101,7 +101,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),

=== modified file 'rca/rc3070.py'
--- rca/rc3070.py	2015-10-03 07:36:56 +0000
+++ rca/rc3070.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'rca/rc3080.py'
--- rca/rc3080.py	2015-10-03 07:36:56 +0000
+++ rca/rc3080.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'rca/rc3090.py'
--- rca/rc3090.py	2015-10-03 07:36:56 +0000
+++ rca/rc3090.py	2016-02-22 11:00:30 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc4010.py'
--- rca/rc4010.py	2015-10-03 07:36:56 +0000
+++ rca/rc4010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc4020.py'
--- rca/rc4020.py	2015-10-03 07:36:56 +0000
+++ rca/rc4020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc6010.py'
--- rca/rc6010.py	2015-06-17 15:23:42 +0000
+++ rca/rc6010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog, Sql

=== modified file 'rca/rc6020.py'
--- rca/rc6020.py	2015-06-17 15:23:42 +0000
+++ rca/rc6020.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rc6030.py'
--- rca/rc6030.py	2014-12-30 15:37:38 +0000
+++ rca/rc6030.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ScrollText, Sql

=== modified file 'rca/rcc110.py'
--- rca/rcc110.py	2015-10-25 09:33:02 +0000
+++ rca/rcc110.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rcc210.py'
--- rca/rcc210.py	2014-12-30 15:37:38 +0000
+++ rca/rcc210.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'rca/rcc220.py'
--- rca/rcc220.py	2015-10-03 07:36:56 +0000
+++ rca/rcc220.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rcc310.py'
--- rca/rcc310.py	2014-12-30 15:37:38 +0000
+++ rca/rcc310.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rca/rcm010.py'
--- rca/rcm010.py	2015-10-03 07:36:56 +0000
+++ rca/rcm010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, time

=== modified file 'rtl/rt1010.py'
--- rtl/rt1010.py	2014-12-30 15:37:38 +0000
+++ rtl/rt1010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rt2010.py'
--- rtl/rt2010.py	2015-10-03 07:36:56 +0000
+++ rtl/rt2010.py	2016-01-03 17:07:31 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rt3010.py'
--- rtl/rt3010.py	2015-10-03 07:36:56 +0000
+++ rtl/rt3010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rt3020.py'
--- rtl/rt3020.py	2015-10-03 07:36:56 +0000
+++ rtl/rt3020.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rt3030.py'
--- rtl/rt3030.py	2015-10-03 07:36:56 +0000
+++ rtl/rt3030.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rt3040.py'
--- rtl/rt3040.py	2015-12-12 09:12:17 +0000
+++ rtl/rt3040.py	2016-02-11 14:17:08 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -80,7 +80,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec(tables="tplmst", where=[("tpm_tname", "=", w),
@@ -250,9 +250,11 @@
             trn[rtc.index("rtt_desc")] = "Balance Brought Forward"
             trn[rtc.index("rtt_tramt")] = bal
             if bal < 0:
+                trn[rtc.index("line_debit")] = 0
                 trn[rtc.index("line_credit")] = bal
             else:
                 trn[rtc.index("line_debit")] = bal
+                trn[rtc.index("line_credit")] = 0
             trans.insert(0, trn)
             self.doBody(rtc, trans, tdc)
         self.doTotal(tdc)

=== modified file 'rtl/rt3050.py'
--- rtl/rt3050.py	2015-10-03 07:36:56 +0000
+++ rtl/rt3050.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'rtl/rt4010.py'
--- rtl/rt4010.py	2015-10-03 07:36:56 +0000
+++ rtl/rt4010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rt6010.py'
--- rtl/rt6010.py	2015-12-12 09:12:17 +0000
+++ rtl/rt6010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'rtl/rtc110.py'
--- rtl/rtc110.py	2014-12-30 15:37:38 +0000
+++ rtl/rtc110.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rtc210.py'
--- rtl/rtc210.py	2015-08-25 15:02:35 +0000
+++ rtl/rtc210.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'rtl/rtm010.py'
--- rtl/rtm010.py	2015-10-03 07:36:56 +0000
+++ rtl/rtm010.py	2016-01-19 09:18:20 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -230,11 +230,10 @@
         if glt and len(glt) == 1:
             val = glt[0][self.sql.gentrn_col.index("glt_tramt")]
             val = float(ASD(val) + ASD(tot))
-            glt[0][self.sql.gentrn_col.index("glt_tramt")] = val
             tax = glt[0][self.sql.gentrn_col.index("glt_taxamt")]
             tax = float(ASD(tax) + ASD(vat))
-            glt[0][self.sql.gentrn_col.index("glt_taxamt")] = tax
-            self.sql.updRec("gentrn", where=whr, data=glt[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt", "glt_taxamt"],
+                data=[val, tax], where=whr)
         else:
             data = [self.opts["conum"], acc[0], self.nxtcd, self.nxtdt, 1, ref,
                 self.batch, tot, vat, self.rec[8], self.rec[9], "", 0,
@@ -254,8 +253,7 @@
         if glt and len(glt) == 1:
             val = glt[0][self.sql.gentrn_col.index("glt_tramt")]
             val = float(ASD(val) + ASD(amt))
-            glt[0][self.sql.gentrn_col.index("glt_tramt")] = val
-            self.sql.updRec("gentrn", where=whr, data=glt[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt"], data=[val], where=whr)
         else:
             data = [self.opts["conum"], acc[1], self.nxtcd, self.nxtdt, 1, ref,
                 self.batch, amt, 0.00, self.rec[8], "", "", 0,
@@ -275,8 +273,7 @@
         if glt and len(glt) == 1:
             val = glt[0][self.sql.gentrn_col.index("glt_tramt")]
             val = float(ASD(val) + ASD(vat))
-            glt[0][self.sql.gentrn_col.index("glt_tramt")] = val
-            self.sql.updRec("gentrn", where=whr, data=glt[0])
+            self.sql.updRec("gentrn", cols=["glt_tramt"], data=[val], where=whr)
         elif vat:
             data = [self.opts["conum"], self.convat, self.nxtcd, self.nxtdt, 1,
                 ref, self.batch, vat, 0.00, self.rec[8], "", "", 0,

=== modified file 'scp/sc1010.py'
--- scp/sc1010.py	2015-02-07 06:31:11 +0000
+++ scp/sc1010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import FileImport, ProgressBar, Sql, TartanDialog

=== modified file 'scp/sc2010.py'
--- scp/sc2010.py	2015-02-07 06:31:11 +0000
+++ scp/sc2010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os

=== modified file 'scp/sc2020.py'
--- scp/sc2020.py	2015-10-03 07:36:56 +0000
+++ scp/sc2020.py	2016-01-03 17:07:32 +0000
@@ -21,7 +21,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time, random

=== modified file 'scp/sc2030.py'
--- scp/sc2030.py	2015-08-25 15:02:35 +0000
+++ scp/sc2030.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import FileImport, ProgressBar, SelectChoice, Sql

=== modified file 'scp/sc3010.py'
--- scp/sc3010.py	2015-10-03 07:36:56 +0000
+++ scp/sc3010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'scp/scc210.py'
--- scp/scc210.py	2015-02-07 06:31:11 +0000
+++ scp/scc210.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import FileImport, ProgressBar, TartanDialog, Sql

=== modified file 'sls/si2010.py'
--- sls/si2010.py	2015-12-12 09:12:17 +0000
+++ sls/si2010.py	2016-02-23 14:11:10 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -115,8 +115,8 @@
         else:
             self.dnote = "N"
         self.pr = TartanDialog(self.opts["mf"], tops=True, title=tit,
-            eflds=fld, tend=((self.doPrtEnd,"y"),), txit=(self.doPrtExit,),
-            view=("N","P"), mail=("N","N"))
+            eflds=fld, tend=((self.doPrtClose,"y"),), txit=(self.doPrtExit,),
+            view=("N","P"), mail=("N","Y"))
         self.opts["mf"].startLoop()
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
@@ -137,9 +137,6 @@
     def doDelNote(self, frt, pag, r, c, p, i, w):
         self.dnote = w
 
-    def doPrtEnd(self):
-        self.doPrtClose()
-
     def doPrtExit(self):
         self.exit = True
         self.doPrtClose()

=== modified file 'sls/si2020.py'
--- sls/si2020.py	2015-12-12 09:12:17 +0000
+++ sls/si2020.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import copy, socket, sys, time

=== modified file 'sls/si3010.py'
--- sls/si3010.py	2015-10-03 07:36:56 +0000
+++ sls/si3010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3020.py'
--- sls/si3020.py	2015-10-03 07:36:56 +0000
+++ sls/si3020.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3030.py'
--- sls/si3030.py	2015-10-03 07:36:56 +0000
+++ sls/si3030.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3040.py'
--- sls/si3040.py	2015-10-03 07:36:56 +0000
+++ sls/si3040.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3050.py'
--- sls/si3050.py	2015-10-03 07:36:56 +0000
+++ sls/si3050.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3060.py'
--- sls/si3060.py	2015-10-03 07:36:56 +0000
+++ sls/si3060.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3070.py'
--- sls/si3070.py	2015-10-03 07:36:56 +0000
+++ sls/si3070.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'sls/si3080.py'
--- sls/si3080.py	2015-10-03 07:36:56 +0000
+++ sls/si3080.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import PrintInvoice, Sql, TartanDialog

=== modified file 'sls/sic110.py'
--- sls/sic110.py	2015-10-03 07:36:56 +0000
+++ sls/sic110.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'std/TartanClasses.py'
--- std/TartanClasses.py	2015-12-12 09:12:17 +0000
+++ std/TartanClasses.py	2016-02-24 19:35:50 +0000
@@ -8,7 +8,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 #========================================================
 # Standard Python modules
@@ -381,9 +381,8 @@
                 if imgfl:
                     image = Image.open(imgfl)
                     image = image.resize((hgt, hgt), 0)
-                    image = ImageTk.PhotoImage(image)
-                    self.configure(compound="left", image=image)
-                    self.image = image
+                    self.image = ImageTk.PhotoImage(image)
+                    self.configure(compound="left", image=self.image)
             except:
                 pass
 
@@ -802,9 +801,8 @@
                 if os.path.isfile(image):
                     image = Image.open(image)
                     image = image.resize((48, 48))
-                    tkimg = ImageTk.PhotoImage(image)
-                    self.tkimg = tkimg
-                    label.configure(image=tkimg, compound="left")
+                    self.tkimg = ImageTk.PhotoImage(image)
+                    label.configure(image=self.tkimg, compound="left")
             except:
                 pass
             label.pack(fill="both", expand="yes")
@@ -910,6 +908,9 @@
     class MyText(tk.Text):
         def __init__(self, parent, **kwargs):
             tk.Text.__init__(self, parent, **kwargs)
+            self.configure(bg="white", fg="black", selectforeground="black",
+                selectbackground="light gray", highlightbackground="gray",
+                relief="flat")
             self.bind("<Button-3><ButtonRelease-3>", self.show_menu)
 
         def select_all(self, *args):
@@ -1424,18 +1425,20 @@
         if self.rcdic["theme"] in themes:
             self.style.theme_use(self.rcdic["theme"])
         self.style.configure("TButton",
-            font=(self.rcdic["mft"], self.rcdic["dfs"]),
-            foreground=self.rcdic["nfg"],
-            background=self.rcdic["nbg"])
-        self.style.map("TButton",
-            foreground=[
-                ("active", self.rcdic["ffg"]),
-                ("disabled", self.rcdic["dfg"]),
-                ("focus", self.rcdic["ffg"])],
-            background=[
-                ("active", self.rcdic["fbg"]),
-                ("disabled", self.rcdic["dbg"]),
-                ("focus", self.rcdic["fbg"])])
+            font=(self.rcdic["mft"], self.rcdic["dfs"]))
+        if self.rcdic["theme"] in ("alt", "clam", "classic", "default"):
+            self.style.configure("TButton",
+                foreground=self.rcdic["nfg"],
+                background=self.rcdic["nbg"])
+            self.style.map("TButton",
+                foreground=[
+                    ("active", self.rcdic["ffg"]),
+                    ("disabled", self.rcdic["dfg"]),
+                    ("focus", self.rcdic["ffg"])],
+                background=[
+                    ("active", self.rcdic["fbg"]),
+                    ("disabled", self.rcdic["dbg"]),
+                    ("focus", self.rcdic["fbg"])])
         if tk.TkVersion >= 8.5:
             self.style.configure("MyCheckbutton.TCheckbutton")
             self.style.map("MyCheckbutton.TCheckbutton",
@@ -1593,24 +1596,42 @@
 
     def drawWindow(self):
         if self.tk:
+            # Initial main window
             self.newwin = tk.Tk()
+            # Load any 3rd party themes
+            try:
+                tdir = os.path.join(os.path.dirname(sys.path[0]), "thm")
+                if os.path.isdir(tdir):
+                    thms = glob.glob(os.path.join(tdir, "*", "*.tcl"))
+                    for thm in thms:
+                        chk = os.path.basename(thm).replace(".tcl", "")
+                        if chk in stdthm:
+                            try:
+                                self.newwin.tk.eval("source {%s}" % thm)
+                            except:
+                                pass
+            except:
+                pass
+            # Enable button to show hidden files
             try:
                 try:
                     self.newwin.tk.call("tk_getOpenFile", "-foobarbaz")
                 except:
                     pass
                 self.newwin.tk.call("set",
-                        "::tk::dialog::file::showHiddenBtn", "1")
+                    "::tk::dialog::file::showHiddenBtn", "1")
                 self.newwin.tk.call("set",
-                        "::tk::dialog::file::showHiddenVar", "0")
+                    "::tk::dialog::file::showHiddenVar", "0")
             except:
                 pass
         elif self.trans:
+            # Transient toplevel
             if self.trans.winfo_class() in ("Tk", "Toplevel"):
                 self.newwin = tk.Toplevel(self.trans)
             else:
                 self.newwin = tk.Toplevel(self.trans.winfo_toplevel())
         else:
+            # Normal toplevel
             self.newwin = tk.Toplevel()
         if self.icon:
             try:
@@ -1852,10 +1873,9 @@
         if self.img and os.path.isfile(self.img):
             pilimg = Image.open(self.img)
             pilimg = pilimg.resize((iwth, ihgt), 0)
-            tkimg = ImageTk.PhotoImage(image=pilimg)
+            self.tkimg = ImageTk.PhotoImage(image=pilimg)
             self.image = MyLabel(self.mf.body, color=(fg, bg))
-            self.image.img = tkimg
-            self.image.config(image=tkimg, anchor="n")
+            self.image.config(image=self.tkimg, anchor="n")
             self.image.pack(fill="both", expand="yes")
         else:
             self.image = MyFrame(self.mf.body, width=iwth, height=ihgt,
@@ -2859,7 +2879,6 @@
                 if tabchk:
                     print "tables %s missing in sql class in module %s" % \
                         (tabchk, self.prog)
-
             # Continue building the get statement
             get = "%s %s," % (get, col)
             if asschk:
@@ -3575,7 +3594,7 @@
     -i  = Create indexes, defaults to True
     -l  = Display a splash screen on this frame
     -p  = Admin Password
-    -s  = Use all the tables in the stdsys module
+    -s  = Use all the tables in the system module (stdsys)
                        or
     -t  = String of comma separated Table Names
     -u  = Admin User
@@ -4058,9 +4077,9 @@
                 csv is whether to have an export facility
                 "D" is the default e.g. ("(V)iew", "(P)rint" or "(X)port")
               A list self.repprt is created having 3 fields as follows:
-                1) "Y" or "N" output widget created
-                2) query widget contents
-                3) printer widget contents
+                1) Y or N output widget created
+                2) Query widget contents
+                3) Printer widget contents
 
     mail   =  An entry field asking whether you would like to email the report
               It is a tuple (flag, prnt, dflt, desc) where:
@@ -4072,15 +4091,21 @@
                 dflt is the default answer
                 desc is the description to replace the default description
               A list self.repeml is created having up to 5 fields as follows:
-                1) "Y" or "N" mail widget created
-                2) query widget contents
-                3) address widget contents
-                4) message widget contents
-                5) view/print emailed document
+                1) Y or N widget created
+                2) Y or N to email the report
+                3) Email addresses in a comma delimited string or a list/tuple
+                4) Email message which can be:
+                     A string i.e. a message
+                     A List or Tuple which can be:
+                         Subject and Message
+                         Subject, Message and Attachment
+                5) Whether to print/view the emailed report
 
     focus  =  Whether to automatically focus on the first screen's first column.
                  The default is True
+
     vport  =  Create a label in a viewport to display the message
+
     clicks =  A function to execute when an Entry Label field label is clicked
 
     Notes:  The 'self.pos' and 'pos' variable is the colEntry field number (0-?)
@@ -4213,6 +4238,7 @@
                     break
             self.eflds = list(self.eflds)
             if self.repprt[0] == "Y":
+                # View/Print/Export dialog
                 printers = showPrinters()
                 prt = {
                     "stype": "C",
@@ -4242,6 +4268,7 @@
                 self.eflds.append((("T",0,row,col),"INA",(30,50),"Printer Name",
                     "","Default","Y",self.setPrtr,prt,None,("in", printers)))
             if self.repeml[0] == "Y":
+                # Email dialog
                 row += 1
                 yns = (("Yes","Y"),("No","N"))
                 if len(self.mail) == 4:
@@ -4256,6 +4283,7 @@
                 self.eflds.append((("T",0,row,col),("IRB",yns),0,
                     desc,"",dflt,"N",self.setMail,None,None,None))
                 if self.mail[0].lower() in ("b", "y"):
+                    # Email addresses
                     sql = Sql(self.mf.dbm, ["telmst", "telcon"], prog=__name__)
                     data = []
                     tdm = sql.getRec(tables="telmst", cols=["tdm_name",
@@ -4286,11 +4314,13 @@
                         a.append(("email", True))
                     a.extend([None,"E-Mail Addresses, Comma Separated"])
                     self.eflds.append(tuple(a))
-                    row += 1
-                    self.eflds.append((
-                        ("T",0,row,col),("IRB",yns),0,"E-Mail Message","",
-                            "N","N",self.setMess,None,None,None))
+                # Email message and additional attachments
+                row += 1
+                self.eflds.append((
+                    ("T",0,row,col),("IRB",yns),0,"E-Mail Message","",
+                        "N","N",self.setMess,None,None,None))
                 if self.mail[1].lower() == "y":
+                    # View/Print emailed document
                     row += 1
                     self.eflds.append((("T",0,row,col),("IRB",yns),0,
                         "View/Print Emailed Document","","N","Y",
@@ -4518,6 +4548,8 @@
         if w == "V":
             self.repprt[2] = "view"
             self.loadEntry(frt, pag, p+1, data="")
+            if self.mail and self.mail[1].lower() == "y":
+                self.topf[pag][-1][4] = "View Emailed Document"
             return "sk1"
         elif w == "N":
             self.repprt[2] = "none"
@@ -4531,12 +4563,14 @@
             elif self.repeml[0] == "Y":
                 self.repeml[1] = "N"
                 self.loadEntry(frt, pag, p+2, data="N")
-                if self.mail[0].lower() in ("b", "y"):
+                if self.mail and self.mail[0].lower() in ("b", "y"):
                     self.repeml[2] = ""
                     self.loadEntry(frt, pag, p+3, data="")
                     return "sk4"
                 else:
                     return "sk3"
+        elif self.mail and self.mail[1].lower() == "y":
+            self.topf[pag][-1][4] = "Print Emailed Document"
 
     def setPrtr(self, frt, pag, r, c, p, i, w):
         self.repprt[2] = w
@@ -4546,9 +4580,9 @@
         if w == "N":
             self.repeml[2] = ""
             self.repeml[3] = ""
-            skp = 0
+            skp = 1
             if self.mail[0].lower() in ("b", "y"):
-                skp += 2
+                skp += 1
             if self.mail[1].lower() == "y":
                 skp += 1
             for x in xrange(1, skp + 1):
@@ -4571,41 +4605,51 @@
             return "sk1"
 
     def setMess(self, frt, pag, r, c, p, i, w):
-        if w == "Y":
-            def doMess(mess):
-                if mess:
-                    self.repeml[3] = mess.get("1.0", "end")
-                else:
-                    self.repeml[3] = ""
-                fram.destroy()
-                self.master.quit()
-            fram = MyFrame(self.master)
-            labl = MyLabel(fram, text="Email Message")
-            labl.pack(fill="x", expand="yes")
-            mess = MyText(fram, width=80, height=20)
-            mess.pack(fill="both", expand="yes")
-            bbox = ButtonBox(fram)
-            bbox.addButton("Continue", (doMess, mess))
-            bbox.addButton("Cancel", (doMess, None))
-            fram.place(anchor="center", relx=0.5, rely=0.5)
-            mess.focus_set()
-            self.master.mainloop()
-            if not self.repeml[3].strip():
-                return "Invalid Message"
+        if w == "N":
+            self.repeml[3] = ""
         else:
-            self.repeml[3] = ""
+            title = "Email Details"
+            cols = [
+                ("a", "Message", (60,10), "TV"),
+                ("b", "Attachment", 60, "FF")]
+            buts = (
+                ("Attach", self.setAtta),
+                ("Continue", self.setCont),
+                ("Quit", self.setQuit))
+            self.diag = SimpleDialog(parent=self.window, cols=cols, butt=buts,
+                titl=title, conf=True)
+            self.window.mainloop()
+            if not self.diag.data:
+                return "rf"
+            self.repeml[3] = [""] + self.diag.data
+        if self.repprt[2].lower() == "none" and self.mail[1].lower() == "y":
+            self.loadEntry(frt, pag, p+1, data="N")
+            return "sk1"
+
+    def setAtta(self):
+        self.diag.goNext(0)
+
+    def setCont(self):
+        self.diag.doEnd()
+
+    def setQuit(self):
+        self.diag.sframe.destroy()
+        self.diag.data = []
+        self.window.quit()
 
     def setPrint(self, frt, pag, r, c, p, i, w):
         self.repeml[4] = w
 
     def drawScreens(self):
-        if not self.tops:
-            self.mstFrame = MyFrame(self.master)
-        else:
+        if self.tops:
             self.mstFrame = MyFrame(self.master, borderwidth=2, relief="ridge")
             tops = MyLabel(self.mstFrame, anchor="center", text=self.title,
-                relief="raised")
+                borderwidth=2, relief="raised")
             tops.grid(column=0, sticky="ew")
+        else:
+            if self.title and not self.mf.head.cget("text"):
+                self.mf.head.configure(text=self.title)
+            self.mstFrame = MyFrame(self.master)
         self.frt = ""
         self.nbf = False
         self.selectable = []
@@ -5478,7 +5522,7 @@
                 self.mf.window.bell()
             self.mf.updateStatus("%s, Retry%s" % (err, sufx), "white", "red")
         else:
-            self.mf.updateStatus("Enter %s%s" % (text, sufx))
+            self.mf.updateStatus("%s%s" % (text, sufx))
         #=======================================================================
         if type(flds[1]) in (list, tuple):
             if flds[1][0][1:] == "CB":
@@ -7072,9 +7116,9 @@
             self.mstFrame.grid(column=0, sticky="nsew")
         self.mstFrame.grid_columnconfigure(0, weight=1)
         self.mstFrame.grid_rowconfigure(0, weight=1)
-        chgt = int(self.font.cget("size"))
+        chgt = self.font.metrics("linespace")
         if self.scrn:
-            tlin = int((self.scrn.winfo_reqheight() / chgt) * .80)
+            tlin = int((self.scrn.winfo_reqheight() / chgt) * .8)
         else:
             tlin = int((self.window.winfo_screenheight() / chgt) * .8)
             if self.lines > tlin:
@@ -7090,7 +7134,8 @@
             nams.append("%s%s" % (col, num))
         style = ttk.Style()
         style.configure(self.styl, font=self.font,
-            rowheight=int(round(chgt * 1.5, 0)))
+            rowheight=int(chgt + 2))
+        style.configure("%s.Heading" % self.styl, font=self.font)
         self.tree = ttk.Treeview(self.mstFrame, columns=nams,
             height=self.lines, show=show, selectmode=self.mode,
             style=self.styl)
@@ -7429,7 +7474,8 @@
                 fcol.append((seq, num))
                 scol.append(col)
                 seq += 1
-        diag = SimpleDialog(scol, title=title, parent=self.window)
+        diag = SimpleDialog(parent=self.window, cols=scol, titl=title)
+        self.window.mainloop()
         for b in self.buttons:
             b.configure(state="normal")
         tcol = copyList(fcol)
@@ -7652,7 +7698,6 @@
                 setattr(self, nam, defaults[nam])
                 if nam == "typ":
                     text = ""
-        #self.esc = False
         if not self.mxs:
             self.typ = "G"
         if self.typ == "G":
@@ -7674,16 +7719,17 @@
         self.quit = False
         if self.inn:
             self.esc = False
-            self.pbframe = MyFrame(self.inn.pbframe, padding=2, relief="raised")
+            self.pbframe = MyFrame(self.inn.pbframe, padding=2)
             self.pbframe.pack(fill="x", expand="yes")
         else:
-            self.pbframe = MyFrame(self.scrn, padding=2, relief="raised")
+            self.pbframe = MyFrame(self.scrn, padding=2)
             mgr = getManager(self.scrn)
             if not mgr or mgr == "grid":
                 self.pbframe.place(anchor="center", relx=0.5, rely=0.5)
             else:
                 self.pbframe.pack(pady=10)
-        self.txtlab = MyLabel(self.pbframe, text=text, anchor="c", width=60)
+        self.txtlab = MyLabel(self.pbframe, text=text, anchor="c", width=60,
+            borderwidth=2, relief="raised")
         self.txtlab.pack(anchor="n", fill="x", expand="yes")
         self.pbar = ttk.Progressbar(self.pbframe, mode=mode,
             length=self.txtlab.winfo_width())
@@ -8449,7 +8495,7 @@
         themes = self.style.theme_names()
         self.thm = []
         for theme in themes:
-            if theme in ("alt", "clam", "classic", "default"):
+            if theme in stdthm:
                 self.thm.append(theme)
         self.thm.sort()
 
@@ -10774,11 +10820,11 @@
     batch  - Batch number
     curdt  - Current date
     tdate  - Transaction date
-    refno  - Reference Number
+    refno  - Reference Number, True of False
     glctl  - G/L control accounts, [control, dr_interest, cr_interest]
     capnm  - The name of the data capturer
     """
-    def __init__(self, sys, dbm, lonrec, update="N", batch="", curdt=0, tdate=0, refno="", glctl=[], capnm=""):
+    def __init__(self, sys, dbm, lonrec, update="N", batch="", curdt=0, tdate=0, refno=False, glctl=[], capnm=""):
         self.sys = sys
         self.dbm = dbm
         self.lonrec = lonrec
@@ -10786,7 +10832,10 @@
         self.batch = batch
         self.curdt = curdt
         self.tdate = tdate
-        self.refno = refno
+        if not refno:
+            self.refno = "Pending"
+        else:
+            self.refno = None
         self.glctl = glctl
         self.capnm = capnm
         if self.setVariables():
@@ -10871,8 +10920,21 @@
                         self.lcap = nxt
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        if not self.refno:
-            self.refno = "Pending"
+        if not self.refno == "Pending":
+            refs = self.sql.getRec(tables="lontrn", cols=["lnt_refno"],
+                where=[("lnt_cono", "=", self.cono), ("lnt_batch", "=",
+                self.batch), ("lnt_type", "=", 4)])
+            wrk = []
+            for ref in refs:
+                try:
+                    wrk.append(int(ref[0]))
+                except:
+                    continue
+            if wrk:
+                wrk.sort()
+                self.refno = wrk[-1] + 1
+            else:
+                self.refno = 1
         return True
 
     def doFixed(self):
@@ -10930,8 +10992,10 @@
                     desc = "%0.2f @ %0.2f for 1 month" % (self.cap, rte)
                     # Loans Transaction
                     self.sql.insRec("lontrn", data=[self.cono, self.acno,
-                        self.loan, self.batch, 4, date, mth + 1, ita,
+                        self.loan, self.batch, 4, date, self.refno, ita,
                         date / 100, desc, "", self.capnm, self.sysdtw, 0])
+                    if not self.refno == "Pending":
+                        self.refno += 1
                     if self.glctl:
                         # General Ledger
                         iti = float(ASD(0) - ASD(ita))
@@ -10948,20 +11012,19 @@
                                 ("glt_type", "=", 4),
                                 ("glt_refno", "=", self.refno),
                                 ("glt_batch", "=", self.batch)]
-                            data = self.sql.getRec(tables="gentrn",
-                                where=whr, limit=1)
+                            data = self.sql.getRec(tables="gentrn", where=whr,
+                                limit=1)
                             if data:
                                 col = self.sql.gentrn_col
                                 tramt = data[col.index("glt_tramt")]
                                 tramt = float(ASD(tramt) + ASD(val[1]))
-                                data[col.index("glt_tramt")] = tramt
-                                self.sql.updRec("gentrn", where=whr,
-                                    data=data)
+                                self.sql.updRec("gentrn", cols=["glt_tramt"],
+                                    data=[tramt], where=whr)
                             else:
-                                data = [self.cono, val[0], date / 100,
-                                    date, 4, self.refno, self.batch, val[1],
-                                    0.00, "Interest on Loans", "", "", 0,
-                                    self.capnm, self.sysdtw, 0]
+                                data = [self.cono, val[0], date / 100, date,
+                                    4, self.refno, self.batch, val[1], 0.00,
+                                    "Interest on Loans", "", "", 0, self.capnm,
+                                    self.sysdtw, 0]
                                 self.sql.insRec("gentrn", data=data)
                 self.cap = float(ASD(self.cap) - ASD(amt))
             else:
@@ -11154,6 +11217,8 @@
                     tdte, self.refno, rin, self.curdt, desc, "",
                     self.capnm, self.sysdtw, 0]
                 self.sql.insRec("wagltf", data=data)
+            if not self.refno == "Pending":
+                self.refno += 1
             if self.glctl:
                 # General Ledger
                 iti = float(ASD(0) - ASD(rin))
@@ -11167,8 +11232,8 @@
                     if data:
                         tramt = data[self.sql.gentrn_col.index("glt_tramt")]
                         tramt = float(ASD(tramt) + ASD(val[1]))
-                        data[self.sql.gentrn_col.index("glt_tramt")] = tramt
-                        self.sql.updRec("gentrn", where=whr, data=data)
+                        self.sql.updRec("gentrn", cols=["glt_tramt"],
+                            data=[tramt], where=whr)
                     else:
                         self.sql.insRec("gentrn", data=[self.cono, val[0],
                             self.curdt, tdte, 4, self.refno, self.batch, val[1],
@@ -12727,6 +12792,304 @@
             self.fpdf.drawText(w=w,h=5,txt=txt,border="TBLR",fill=1)
             self.fpdf.setFont(style="", size=14)
 
+class PrintTransfer:
+    def __init__(self, mf, conum, conam, docs, **args):
+        self.mf = mf
+        self.conum = conum
+        self.conam = conam
+        if type(docs) in (int, str):
+            self.docs = [[docs]]
+        else:
+            self.docs = docs
+        defaults = {
+            "crcoy": conum,
+            "tname": "branch_transfer",
+            "repprt": ["N", "V", "view"],
+            "repeml": ["N", "N", "", "", "Y"],
+            "copy": "n",
+            "splash": True}
+        for nam in args:
+            if nam in ("repprt", "repeml"):
+                defaults[nam] = copyList(args[nam])
+            else:
+                defaults[nam] = args[nam]
+        for nam in defaults:
+            setattr(self, nam, defaults[nam])
+        if self.setVariables():
+            self.doProcess()
+
+    def setVariables(self):
+        self.sql = Sql(self.mf.dbm, ["ctlmst", "ibtmst", "ibttrn"],
+            prog=__name__)
+        if self.sql.error:
+            return False
+        if self.repeml:
+            self.emadd = self.repeml[2]
+        else:
+            self.emadd = ""
+        return True
+
+    def doProcess(self):
+        imc = self.sql.ibtmst_col
+        itc = self.sql.ibttrn_col
+        cmc = self.sql.ctlmst_col
+        self.form = DrawForm(self.mf.dbm, self.tname)
+        txt = self.form.sql.tpldet_col.index("tpd_text")
+        tdc = self.form.sql.tpldet_col
+        self.doLoadStatic()
+        self.form.doNewDetail()
+        for doc in self.docs:
+            self.docno = CCD(doc[0], "UI", 9.0)
+            ibm = self.sql.getRec(tables="ibtmst", where=[("ibm_cono", "=",
+                self.conum), ("ibm_docno", "=", self.docno.work)], limit=1)
+            ibt = self.sql.getRec(tables="ibttrn", where=[("ibt_cono",
+                "=", self.conum), ("ibt_docno", "=", self.docno.work),
+                ("ibt_type", "=", 1)], order="ibt_seq")
+            if not ibm or not ibt:
+                continue
+            if self.splash:
+                sp = SplashScreen(self.mf.body,
+                    "Generating Forms\n\n   Please Wait...")
+            for fld in imc:
+                if fld in self.form.tptp:
+                    self.form.tptp[fld][1] = ibm[imc.index(fld)]
+            ctm = self.sql.getRec(tables="ctlmst", where=[("ctm_cono", "=",
+                ibm[imc.index("ibm_branch")])], limit=1)
+            eml = ctm[cmc.index("ctm_email")]
+            for fld in cmc:
+                if fld in self.form.tptp:
+                    d = "%s_C00" % fld
+                    self.form.newdic[d][txt] = ctm[cmc.index(fld)]
+            self.form.account_details("ctm", cmc, ctm, 0)
+            if "deliver_to" in self.form.tptp:
+                if ctm[cmc.index("ctm_sadd1")]:
+                    dat = ctm[cmc.index("ctm_sadd1")]
+                    if ctm[cmc.index("ctm_sadd2")]:
+                        dat = "%s\n%s" % (dat, ctm[cmc.index("ctm_sadd2")])
+                    if ctm[cmc.index("ctm_sadd3")]:
+                        dat = "%s\n%s" % (dat, ctm[cmc.index("ctm_sadd3")])
+                    if ctm[cmc.index("ctm_spcode")]:
+                        dat = "%s\n%s\n " % (dat, ctm[cmc.index("ctm_spcode")])
+                    else:
+                        dat = "%s\n " % dat
+                    self.deliver = dat
+                else:
+                    self.deliver = False
+            if "supplier" in self.form.tptp:
+                acc = self.sql.getRec(tables="crsmst", cols=["crm_name"],
+                    where=[("crm_cono", "=", self.crcoy), ("crm_acno",
+                    "=", ibm[imc.index("ibm_supp")])], limit=1)
+                if acc:
+                    self.supplier = acc[0]
+                else:
+                    self.supplier = False
+            if "transporter" in self.form.tptp:
+                acc = self.sql.getRec(tables="crsmst", cols=["crm_name"],
+                    where=[("crm_cono", "=", self.crcoy), ("crm_acno",
+                    "=", ibm[imc.index("ibm_tran")])], limit=1)
+                if acc:
+                    self.transporter = acc[0]
+                else:
+                    self.transporter = False
+            self.form.document_date(ibm[imc.index("ibm_date")])
+            self.doBody(itc, ibt, tdc)
+            self.doTotal(tdc)
+            self.doTail(tdc)
+            if self.splash:
+                sp.closeSplash()
+            if self.repeml[1] == "Y" and not self.emadd:
+                self.repeml[2] = eml
+                self.doPrint()
+        if self.repeml[1] == "N" or self.emadd:
+            self.repeml[2] = self.emadd
+            self.doPrint()
+
+    def doBody(self, itc, ibt, tdc):
+        page = 0
+        count = 0
+        self.total_taxable = 0
+        self.total_nontaxable = 0
+        self.total_tax = 0
+        self.total_value = 0
+        for item in ibt:
+            if not count:
+                page += 1
+                count = self.doHeader(str(page), tdc)
+            if count == self.form.maxlines:
+                page = self.doCfwd(page)
+                count = self.doHeader(page, tdc)
+            ldic = {}
+            for cod in self.form.body:
+                if cod == "line_value":
+                    continue
+                if cod == "ibt_desc":
+                    des = self.form.doSplitText("ibt_desc_C00",
+                        item[itc.index(cod)])
+                    if not des[-1]:
+                        del des[-1]
+                else:
+                    ldic[cod] = CCD(item[itc.index(cod)],
+                        self.form.tptp[cod][0][1], self.form.tptp[cod][0][2])
+            value = ldic["ibt_value"].work
+            self.total_value = float(ASD(self.total_value) + ASD(value))
+            for n, l in enumerate(des):
+                if count == self.form.maxlines:
+                    page = self.doCfwd(page)
+                    count = self.doHeader(page, tdc)
+                if n == 0 and len(des) == 1:
+                    include = copyList(self.form.body)
+                elif n == 0:
+                    include = ["ibt_code"]
+                elif n + 1 == len(des):
+                    include = copyList(self.form.body)
+                    include.remove("ibt_code")
+                else:
+                    include = []
+                for code in self.form.body:
+                    seq = "%s_C%02i" % (code, count)
+                    if code == "ibt_desc":
+                        data = l
+                    elif code in include:
+                        data = ldic[code].work
+                    else:
+                        data = "BLANK"
+                    self.form.newdic[seq][tdc.index("tpd_text")] = data
+                    self.form.doDrawDetail(self.form.newdic[seq])
+                count += 1
+        for x in xrange(count, self.form.maxlines):
+            for cod in self.form.body:
+                seq = "%s_C%02i" % (cod, x)
+                self.form.newdic[seq][tdc.index("tpd_text")] = "BLANK"
+                self.form.doDrawDetail(self.form.newdic[seq])
+
+    def doTotal(self, tdc):
+        for c in self.form.total:
+            line = None
+            if c in self.form.newdic:
+                line = self.form.newdic[c]
+            else:
+                t = "%s_T00" % c
+                if t in self.form.newdic:
+                    line = self.form.newdic[t]
+            if line:
+                self.form.doDrawDetail(line)
+            d = "%s_C00" % c
+            if d in self.form.newkey:
+                line = self.form.newdic[d]
+                mrgcod = line[tdc.index("tpd_mrgcod")]
+                line[tdc.index("tpd_text")] = getattr(self, "%s" % mrgcod)
+                self.form.doDrawDetail(line)
+
+    def doTail(self, tdc):
+        for c in self.form.tail:
+            line = None
+            if c in self.form.newdic:
+                line = self.form.newdic[c]
+            else:
+                t = "%s_T00" % c
+                if t in self.form.newdic:
+                    line = self.form.newdic[t]
+            if line:
+                self.form.doDrawDetail(line)
+            d = "%s_C00" % c
+            if d in self.form.newdic:
+                line = self.form.newdic[d]
+                mrgcod = line[tdc.index("tpd_mrgcod")]
+                line[tdc.index("tpd_text")] = self.doGetData(mrgcod)
+                self.form.doDrawDetail(line, fmat=False)
+
+    def doPrint(self):
+        if self.repeml[1] == "Y" and not self.emadd:
+            head = "Invoice %s" % self.docno.work
+            pdfnam = getModName(self.mf.rcdic["wrkdir"], "Invoice",
+                "%s_%s" % (self.conum, self.docno.work), ext="pdf")
+        else:
+            if len(self.docs) == 1:
+                head = "Invoice %s" % self.docno.work
+            else:
+                head = ""
+                for doc in self.docs:
+                    if not head:
+                        head = "Invoices %s" % doc[0]
+                    else:
+                        head += ", %s" % doc[0]
+            pdfnam = getModName(self.mf.rcdic["wrkdir"], "Invoice",
+                "%s_all" % self.conum, ext="pdf")
+        self.form.output(pdfnam, "F")
+        doPrinter(mf=self.mf, conum=self.conum, pdfnam=pdfnam, head=head,
+            repprt=self.repprt, repeml=self.repeml)
+        if self.repeml[1] == "Y" and not self.emadd:
+            self.form = DrawForm(self.mf.dbm, self.tname)
+            self.doLoadStatic()
+            self.form.doNewDetail()
+
+    def doLoadStatic(self):
+        cmc = self.sql.ctlmst_col
+        ctm = self.sql.getRec(tables="ctlmst", where=[("ctm_cono", "=",
+            self.conum)], limit=1)
+        for fld in cmc:
+            dat = ctm[cmc.index(fld)]
+            if fld in self.form.tptp:
+                if fld == "ctm_logo":
+                    self.form.letterhead(cmc, ctm, fld, dat)
+                    continue
+                self.form.tptp[fld][1] = dat
+        if "letterhead" in self.form.tptp:
+            self.form.letterhead(cmc, ctm, "letterhead", None)
+
+    def doHeader(self, page, tdc):
+        self.form.add_page()
+        for key in self.form.newkey:
+            line = self.form.newdic[key]
+            if not line[tdc.index("tpd_place")] == "A":
+                continue
+            nl = copyList(line)
+            if nl[tdc.index("tpd_detseq")] == "page_number_C00":
+                nl[tdc.index("tpd_text")] = str(page)
+            elif nl[tdc.index("tpd_type")] == "T" and \
+                        nl[tdc.index("tpd_ttyp")] == "H":
+                mrgcod = nl[tdc.index("tpd_mrgcod")]
+                if mrgcod and mrgcod == "deliver_to" and not self.deliver:
+                    continue
+                if mrgcod and self.form.tptp[mrgcod][0][1][0] == "S":
+                    txt = nl[tdc.index("tpd_text")]
+                    nl[tdc.index("tpd_text")] = "%s " % txt
+            elif nl[tdc.index("tpd_type")] == "C":
+                mrgcod = nl[tdc.index("tpd_mrgcod")]
+                if mrgcod == "deliver_to":
+                    if not self.deliver:
+                        continue
+                    else:
+                        nl[tdc.index("tpd_text")] = self.deliver
+                elif mrgcod == "supplier":
+                    if not self.supplier:
+                        continue
+                    else:
+                        nl[tdc.index("tpd_text")] = self.supplier
+                elif mrgcod == "transporter":
+                    if not self.transporter:
+                        continue
+                    else:
+                        nl[tdc.index("tpd_text")] = self.transporter
+                else:
+                    nl[tdc.index("tpd_text")] = self.doGetData(mrgcod)
+            if key == "document_type_C00":
+                self.form.doDrawDetail(nl, fmat=False)
+            else:
+                self.form.doDrawDetail(nl)
+        return 0
+
+    def doCfwd(self, page):
+        line = copyList(self.form.cfwd)
+        line[5] = "Continued on Page %i" % (page + 1)
+        self.form.doDrawDetail(line)
+        return page + 1
+
+    def doGetData(self, mrgcod):
+        if mrgcod and mrgcod in self.form.tptp and self.form.tptp[mrgcod][1]:
+            return self.form.tptp[mrgcod][1]
+        return ""
+
 class PwdConfirm:
     """
     mf          The mainframe class
@@ -13072,29 +13435,29 @@
             dt = dt.split("/")
         error = False
         if type(dt) == list:
-            if self.dtefmt == "A":                          # CCYYMMDD
-                date = (int(dt[0])*10000)+(int(dt[1])*100)+int(dt[2])
-            elif self.dtefmt == "B":                        # DDMMCCYY
-                date = (int(dt[2])*10000)+(int(dt[1])*100)+int(dt[0])
-            elif self.dtefmt == "C" and len(dt[2]) == 4:    # MMDDCCYY
-                date = (int(dt[2])*10000)+(int(dt[0])*100)+int(dt[1])
-            elif self.dtefmt == "C" and len(dt[2]) == 2:    # MMDDYY
-                date = ((int(dt[2])+2000)*10000)+(int(dt[0])*100)+int(dt[1])
+            if self.dtefmt == "A":                           # CCYYMMDD
+                dte = (int(dt[0])*10000)+(int(dt[1])*100)+int(dt[2])
+            elif self.dtefmt == "B":                         # DDMMCCYY
+                dte = (int(dt[2])*10000)+(int(dt[1])*100)+int(dt[0])
+            elif self.dtefmt == "C" and len(dt[2]) == 4:     # MMDDCCYY
+                dte = (int(dt[2])*10000)+(int(dt[0])*100)+int(dt[1])
+            elif self.dtefmt == "C" and len(dt[2]) == 2:     # MMDDYY
+                dte = ((int(dt[2])+2000)*10000)+(int(dt[0])*100)+int(dt[1])
             else:
                 error = True
         else:
-            if self.dtefmt == "A" and len(dt) == 8:         # CCYYMMDD
-                date = (int(dt[:4])*10000)+(int(dt[4:6])*100)+int(dt[6:])
-            elif self.dtefmt == "B" and len(dt) == 8:       # DDMMCCYY
-                date = (int(dt[4:])*10000)+(int(dt[2:4])*100)+int(dt[:2])
-            elif self.dtefmt == "C" and len(dt) == 8:       # MMDDCCYY
-                date = (int(dt[4:])*10000)+(int(dt[:2])*100)+int(dt[2:4])
-            elif self.dtefmt == "C" and len(dt) == 6:       # MMDDYY
-                date = ((int(dt[4:])+2000)*10000)+(int(dt[:2])*100)+int(dt[2:4])
+            if self.dtefmt == "A" and len(dt) in (8, 14):    # CCYYMMDD
+                dte = (int(dt[:4])*10000)+(int(dt[4:6])*100)+int(dt[6:8])
+            elif self.dtefmt == "B" and len(dt) in (8, 14):  # DDMMCCYY
+                dte = (int(dt[4:8])*10000)+(int(dt[2:4])*100)+int(dt[:2])
+            elif self.dtefmt == "C" and len(dt) in (8, 14):  # MMDDCCYY
+                dte = (int(dt[4:8])*10000)+(int(dt[:2])*100)+int(dt[2:4])
+            elif self.dtefmt == "C" and len(dt) in (6, 12):  # MMDDYY
+                dte = ((int(dt[4:6])+2000)*10000)+(int(dt[:2])*100)+int(dt[2:4])
             else:
                 error = True
         if not error:
-            self.date = CCD(date, "D1", 10)
+            self.date = CCD(dte, "D1", 10)
         if error or self.date.err:
             showError(self.mf.body, "Import Error", "Invalid Date Format")
             self.trans = []
@@ -13155,7 +13518,7 @@
     tables  :   A list of lists of tables or select statements with as clause
                 e.g. [["ombank", "N"], ["omlegr", "I"] or
                      [select sum(glt_tramt) from gentrn as value"]
-                or a list of lists of data. Type option below must be 'D'
+                or a list of lists of data. 'ttype' option below must be 'D'
     joins   :   A list of tables to join as follows:
                     Type   : I = Inner join
                              L = Left Outer join
@@ -13218,16 +13581,14 @@
                 None = No Company
     conam   :   A string indicating the Company Name e.g. "Tartan Systems"
                 None = No Company Name
-    trtp    :   A list containing [col_name, sstrtp] e.g.
-                    ["crt_type", crtrtp]
-    ttype   :   A string indicating whether the tables variable contains Table
-                    Names or existing Data
-                "T" = Containing Table Names
-                "D" = Containing Data
+    trtp    :   A list containing [col_name, sstrtp] e.g. ["crt_type", crtrtp]
+    ttype   :   A string indicating what the tables variable contains:
+                    "T" = Containing Table Names
+                    "D" = Containing lists of Data
     prtdia  :   Whether to have a printer and mail dialog, default is False or
                    print and mail parameters eg [("Y","V"), ("Y","N")]
-    repprt  :   A list derived from TartanDialog for print options
-    repeml  :   A list derived from TartanDialog for email options
+    repprt  :   A list as derived from TartanDialog for print options
+    repeml  :   A list as derived from TartanDialog for email options
     lines   :   A number of body lines to Print Between Page Breaks
     margin  :   A number of lines to use as a Bottom Margin for Page Breaks
     pbar    :   Progress Bar Message:
@@ -13781,8 +14142,8 @@
             self.fpdf.drawText(txt=head)
         else:
             self.fpdf.drawText(txt="Totals Summary")
-            self.pglin += 1
             self.fpdf.drawText(txt=self.head5)
+            self.pglin += 1
         self.pglin += 1
         self.fpdf.underLine(t="S")
         self.pglin += 1
@@ -14287,6 +14648,10 @@
         self.sql.delRec("ctlpwm", where=[("mpw_usr", "=", self.unam)])
 
     def doCoy(self, frt, pag, r, c, p, i, w):
+        if w and self.coy:
+            coys = self.coy.split(",")
+            if str(w) not in coys:
+                return "Invalid Company for This User"
         self.con = w
 
     def doSys(self, frt, pag, r, c, p, i, w):
@@ -15758,14 +16123,10 @@
     def setValues(self, name, head, font="", border=""):
         # Defaults
         portrait = (190, 275)
-        alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" * 15
-        if not head:
-            print "Missing maximum line width"
-            sys.exit()
         # Adjust to heading width
         self.font = None
         if type(head) == int:
-            head = alpha[:head]
+            head = "X" * head
         if font.lower() == "courier" and len(head) > 120:
             self.def_orientation = "L"
         while not self.font:
@@ -15870,18 +16231,18 @@
                     w = self.width
             if t == "D":
                 self.set_line_width(.5)
-            self.line(x+1, y+(h/2), x+w, y+(h/2))
+            self.line(x + 1, y + (h / 2), x + w, y + (h / 2))
             self.set_xy(x, y + h)
 
     def footer(self):
         if not self.prog:
             return
         self.set_y(-15)
-        self.set_font("Arial","I",8)
-        self.cell(0,10,"Tartan Systems %s (%s)" % (self.sysdt, self.prog),
-            0,0,"L")
+        self.set_font("Arial", "I", 8)
+        self.cell(0, 10, "Tartan Systems %s (%s)" %
+            (self.sysdt, self.prog), 0, 0, "L")
         self.alias_nb_pages()
-        self.cell(0,10,"Page "+str(self.page_no())+"/{nb}", 0, 0, "C")
+        self.cell(0, 10, "Page " + str(self.page_no()) + "/{nb}", 0, 0, "C")
 
 class TartanLabel(MyFpdf):
     def __init__(self, label, unit="mm", posY=1, posX=1):
@@ -16362,7 +16723,10 @@
                 dat = "%1s\n%1s" % (dat, mst[col.index("%s_add1" % cod)])
                 dat = "%1s\n%1s" % (dat, mst[col.index("%s_add2" % cod)])
                 dat = "%1s\n%1s" % (dat, mst[col.index("%s_add3" % cod)])
-                dat = "%1s\n%1s" % (dat, mst[col.index("%s_pcod" % cod)])
+                try:
+                    dat = "%1s\n%1s" % (dat, mst[col.index("%s_pcod" % cod)])
+                except:
+                    dat = "%1s\n%1s" % (dat, mst[col.index("%s_pcode" % cod)])
             except:
                 dat = "%1s\n%1s" % (dat, mst[col.index("%s_addr1" % cod)])
                 dat = "%1s\n%1s" % (dat, mst[col.index("%s_addr2" % cod)])
@@ -16540,29 +16904,50 @@
     This is a simple input dialog for simple applications.
 
     parent  -   The parent widget
-    cols    -   A list of lists of entry fields as follows:
+    cols    -   A list of lists/tuples of entry fields as follows:
                     ('name', 'label details', size, 'type') e.g.
-
                 cols=[
                     ('a', 'Number', 7, 'UI'),
-                    ('b', 'Surname', 20, 'TX'),
-                    ('c', 'Names', 20, 'TX'),
-                    ('d', 'Group', 30, 'TX'),
+                    ('b', 'Surname', (20,1), 'TX'),
+                    ('c', 'Names', (20,1), 'TX'),
+                    ('d', 'Group', (30,1), 'TX'),
                     ('e', 'Arrival', 10, 'd1')]
+    butt    -  A list of lists/tuples of buttons as follows:
+                    ('text', 'command') e.g.
+                butt=[
+                    ('Continue', abcd),
+                    ('Cancel', wxyz)]
+    titl    - The widget's title
+    conf    - Whether or not to ask for confirmation
     """
-    def __init__(self, cols, title=None, parent=None):
+    def __init__(self, parent=None, cols=None, butt=None, titl=None, conf=False):
+        self.parent = parent
         self.cols = cols
+        self.conf = conf
         self.data = []
-        self.ents = []
-        if parent:
-            mgr = getManager(parent)
-        self.sframe = MyFrame(parent, bg="black", borderwidth=2)
-        if parent and mgr in ("pack", "place"):
+        self.ents = {}
+        self.sframe = MyFrame(self.parent, bg="black", borderwidth=2)
+        if not self.parent:
+            fonts = (
+                ("TkDefaultFont", "Courier", 10, "normal"),
+                ("TkTextFont", "Courier", 10, "normal"),
+                ("TkFixedFont", "Courier", 10, "normal"),
+                ("TkMenuFont", "Courier", 10, "normal"),
+                ("TkHeadingFont", "Courier", 10, "normal"))
+            for font in fonts:
+                nf = tkfont.nametofont(font[0])
+                if not len(font) == 4:
+                    nf.configure(family=font[1], size=font[2])
+                else:
+                    nf.configure(family=font[1], size=font[2], weight=font[3])
+                self.sframe.option_add(font[0], nf)
+            self.sframe.grid()
+        elif getManager(self.parent) in ("pack", "place"):
             self.sframe.place(anchor="center", relx=0.5, rely=0.5)
         else:
             self.sframe.grid()
-        if title:
-            head = MyLabel(self.sframe, text=title, color=True, borderwidth=2,
+        if titl:
+            head = MyLabel(self.sframe, text=titl, color=True, borderwidth=2,
                 anchor="c", padding=0, relief="ridge")
             head.pack(fill="x", expand="yes")
         nframe = MyFrame(self.sframe, padding=2)
@@ -16570,67 +16955,137 @@
         for num, col in enumerate(self.cols):
             lab = MyLabel(nframe, color=False, text=col[1])
             lab.grid(row=num, column=0, sticky="w")
-            wid = MyEntry(nframe, maxsize=int(col[2]), width=int(col[2]),
-                cmd=(self.goNext, num))
-            if col[3][0] == "H":
-                wid.configure(show="*")
-            wid.bind("<Escape>", self.goBack)
+            if col[3] == "TV":
+                wid = MyText(nframe, width=col[2][0], height=col[2][1])
+                wid.bind("<F9>", functools.partial(self.goNext, num))
+            elif col[3] == "FF":
+                wid = MyEntry(nframe, maxsize=0, width=int(col[2]),
+                    cmd=(self.goNext, num))
+                wid.bind("<F1>", functools.partial(self.goNext, num))
+            else:
+                wid = MyEntry(nframe, maxsize=int(col[2]), width=int(col[2]),
+                    cmd=(self.goNext, num))
+                if col[3][0] == "H":
+                    wid.configure(show="*")
+            wid.bind("<Escape>", functools.partial(self.goBack, num, col))
             wid.grid(row=num, column=1, sticky="w")
-            self.ents.append(wid)
-        self.stat = MyLabel(nframe, text="Enter %s or <Esc> to Exit" %
-            self.cols[0][1], color=False, borderwidth=2, anchor="w",
-            background="white", foreground="black", padding=0, relief="ridge")
+            self.ents[col[0]] = wid
+        txt = "Enter %s" % self.cols[0][1]
+        if self.cols[0][3] == "TV":
+            txt += " then <F9> to Accept or <Esc> to Exit"
+        else:
+            txt += " or <Esc> to Exit"
+        self.stat = MyLabel(nframe, text=txt, color=False, borderwidth=2,
+            anchor="w", background="white", foreground="black", padding=0,
+            relief="ridge")
         self.stat.grid(row=num+1, column=0, columnspan=2, pady=2, sticky="ew")
-        if parent and parent.winfo_class() == "Tk":
-            parent.update_idletasks()
-            sw, sh = parent.winfo_screenwidth(), parent.winfo_screenheight()
-            ww, wh = self.sframe.winfo_reqwidth(), self.sframe.winfo_reqheight()
-            parent.geometry("%sx%s+%s+%s" % (ww, wh,
-                ((sw / 2) - (ww / 2)), ((sh / 2) - (wh / 2))))
-            parent.update_idletasks()
-        self.ents[0].focus_set()
-        self.sframe.mainloop()
+        if butt:
+            bbox = ButtonBox(self.sframe, row=1)
+            for but in butt:
+                bbox.addButton(but[0], but[1])
+        #if parent and parent.winfo_class() == "Tk":
+        #    parent.update_idletasks()
+        #    sw, sh = parent.winfo_screenwidth(), parent.winfo_screenheight()
+        #    ww, wh = self.sframe.winfo_reqwidth(), self.sframe.winfo_reqheight()
+        #    parent.geometry("%sx%s+%s+%s" % (ww, wh,
+        #        ((sw / 2) - (ww / 2)), ((sh / 2) - (wh / 2))))
+        #    parent.update_idletasks()
+        self.fld = self.ents[self.cols[0][0]]
+        self.fld.focus_set()
 
-    def goBack(self, event):
-        fld = self.ents.index(event.widget)
-        if not fld:
+    def goBack(self, num, col, event=None):
+        if not num:
             self.sframe.destroy()
             self.sframe.quit()
         else:
-            fld -= 1
-            self.ents[fld].focus_set()
-            self.ents[fld].selection_range(0, "end")
-            if not fld:
-                self.stat.configure(text="Enter %s or <Esc> to Exit" %
-                    self.cols[fld][1])
+            self.fld = self.ents[self.cols[num - 1][0]]
+            self.fld.focus_set()
+            if self.fld.winfo_class() == "Text":
+                txt = "Enter %s then <F9> to Accept or <Esc> to" % \
+                    self.cols[num - 1][1]
+            else:
+                self.fld.selection_range(0, "end")
+                txt = "Enter %s or <Esc> to" % self.cols[num - 1][1]
+            if num == 1:
+                txt += " Exit"
+            else:
+                txt += " go Back"
+            self.stat.configure(text=txt)
 
-    def goNext(self, fld, event=None):
-        siz = self.cols[fld][2]
-        typ = self.cols[fld][3]
-        dat = self.ents[fld].get()
-        chk = CCD(dat, typ, siz)
-        if chk.err:
-            self.ents[fld].focus_set()
-            self.ents[fld].selection_range(0, "end")
-            self.stat.configure(text="Error, %s" % self.stat.cget("text"))
-        else:
-            self.ents[fld].delete(0, "end")
-            if not chk.work:
+    def goNext(self, num, event=None):
+        col = self.cols[num]
+        if event and event.keysym == "F1":
+            dia = FileDialog(**{"title": "Attachment", "parent": self.sframe,
+                "initd": ".", "multi": True})
+            fle = dia.askopenfilename()
+            if not fle:
+                return
+            dat = ""
+            for f in fle:
+                if not dat:
+                    dat = f
+                else:
+                    dat = "%s,%s" % (dat, f)
+            self.ents[col[0]].insert(0, dat)
+        typ = col[3]
+        if typ == "TV":
+            siz = col[2][0]
+            dat = CCD(self.ents[col[0]].get("1.0", "end"), typ, siz)
+        else:
+            siz = col[2]
+            dat = CCD(self.ents[col[0]].get(), typ, siz)
+        if dat.err:
+            self.ents[col[0]].focus_set()
+            if not self.ents[col[0]].winfo_class() == "Text":
+                self.ents[col[0]].selection_range(0, "end")
+            self.stat.configure(text="Error, %s" %
+                self.stat.cget("text").replace("Error, ", ""))
+        else:
+            if not dat.work:
                 dsp = ""
             else:
-                dsp = chk.disp
-            self.ents[fld].insert(0, dsp)
-            if fld == len(self.cols) - 1:
-                # Last field
-                for num, ent in enumerate(self.ents):
-                    self.data.append(CCD(ent.get(), self.cols[num][3],
-                        self.cols[num][2]).work)
-                self.sframe.destroy()
-                self.sframe.quit()
-            else:
-                self.ents[fld + 1].focus_set()
-                self.ents[fld + 1].selection_range(0, "end")
-                self.stat.configure(text="Enter %s or <Esc> to Go Back" %
-                    self.cols[fld + 1][1])
+                dsp = dat.disp
+            if typ == "TV":
+                self.ents[col[0]].delete("1.0", "end")
+                self.ents[col[0]].insert("1.0", dsp)
+            else:
+                self.ents[col[0]].delete(0, "end")
+                self.ents[col[0]].insert(0, dsp)
+            if num == len(self.cols) - 1:
+                self.doEnd()
+            else:
+                self.fld = self.ents[self.cols[num + 1][0]]
+                self.fld.focus_set()
+                if self.fld.winfo_class() == "Text":
+                    txt = "Enter %s then <F9> to Accept or "\
+                        "<Esc> to Go Back" % self.cols[num + 1][1]
+                else:
+                    self.fld.selection_range(0, "end")
+                    txt = "Enter %s or <Esc> to Go Back" % \
+                        self.cols[num + 1][1]
+                self.stat.configure(text=txt)
+
+    def doEnd(self):
+        if self.conf:
+            ok = askQuestion(self.sframe, "Confirm",
+                "Do You wish to Accept All Entries.",
+                default="yes")
+            if ok == "no":
+                self.fld.focus_set()
+                return
+        for col in self.cols:
+            typ = col[3]
+            if typ == "TV":
+                siz = col[2][0]
+                dat = CCD(self.ents[col[0]].get("1.0", "end"), typ, siz)
+            else:
+                siz = col[2]
+                dat = CCD(self.ents[col[0]].get(), typ, siz)
+            self.data.append(dat.work)
+        self.sframe.destroy()
+        if self.parent:
+            self.parent.quit()
+        else:
+            self.sframe.quit()
 
 # vim:set ts=4 sw=4 sts=4 expandtab:

=== modified file 'std/tartanFunctions.py'
--- std/tartanFunctions.py	2015-12-12 09:12:17 +0000
+++ std/tartanFunctions.py	2016-02-22 12:43:01 +0000
@@ -8,7 +8,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from __future__ import generators
@@ -102,6 +102,7 @@
     """
 
     import getpass, os, sys
+    from tartanWork import stdthm
     # Defaults
     prgdir = getPrgPath()
     home = os.environ.get("HOME")
@@ -220,7 +221,7 @@
     rcdic["geo"] = "%sx%s" % (w, h)
     rcdic["mfs"] = m
     rcdic["dfs"] = f
-    if rcdic["theme"] not in ("alt", "clam", "classic", "default"):
+    if rcdic["theme"] not in stdthm:
         rcdic["theme"] = "clam"
     if prgdir.count("_MEI"):
         # Change for pyinstaller
@@ -466,7 +467,11 @@
                 Y or N widget created
                 Y or N to email the report
                 Email addresses in a comma delimited string or a list/tuple
-                Email message
+                Email message which can be:
+                    A string i.e. a message
+                    A List or Tuple which can be:
+                        Subject and Message
+                        Subject, Message and Attachment
                 Whether to print/view the emailed report
      fromad = The from address if not the default company one.
      attach = A list of attachments
@@ -498,7 +503,19 @@
                 toad = repeml[2]
             if repeml[3]:
                 if type(repeml[3]) in (list, tuple):
-                    subj, mess = repeml[3]
+                    if repeml[3][0]:
+                        subj = repeml[3][0]
+                    else:
+                        subj = ""
+                    if repeml[3][1]:
+                        mess = repeml[3][1]
+                    else:
+                        mess = ""
+                    if len(repeml[3]) == 3 and repeml[2]:
+                        if not attach:
+                            attach = repeml[3][2].split(",")
+                        else:
+                            attach.extend(repeml[3][2])
                 else:
                     subj = ""
                     mess = repeml[3]
@@ -1919,7 +1936,7 @@
         rte = sql.getRec(tables="rcaint", where=[("rci_cono", "=", conum),
             ("rci_date", "<=", start)], order="rci_date")
         if not rte:
-            return
+            rte = [[conum, 0, 0, 0, 0]]
         recs.append([start, t[cot.index("rtu_tramt")], rte[-1]])
         if (n + 1) == len(tnt):
             end = date
@@ -1934,10 +1951,10 @@
         return
     if recs[-1][2][0] < date:
         recs.append([date, 0, []])
+    bal = 0
+    dep = 0
+    dat = []
     begin = True
-    bal = 0
-    dep = 0
-    dat = []
     for n, a in enumerate(recs):
         cap = float(ASD(0) - ASD(a[1]))
         dep = float(ASD(dep) + ASD(cap))
@@ -1952,13 +1969,10 @@
         commr = recs[n-1][2][4]
         invtr = float(ASD(bankr) - ASD(commr))
         days = dateDiff(start, cdate, ptype="days")
-        # banki = round(bal * bankr * days / 365.0 / 100.0, 2)
         commi = round(bal * commr * days / 365.0 / 100.0, 2)
         invti = round(bal * invtr * days / 365.0 / 100.0, 2)
         bal = float(ASD(bal) + ASD(invti) + ASD(cap))
         dat.append([cdate, cap, days, invtr, invti, bal, commi])
-        if not dep:
-            break
         start = cdate
     return dat
 
@@ -2003,6 +2017,10 @@
             for x in xrange(1, 7):
                 greens[g[0]].append(x)
                 rinks += 1
+        elif len(g) == 2 and g[1] == "7":
+            for x in xrange(1, 8):
+                greens[g[0]].append(x)
+                rinks += 1
         else:
             for r in g[1:]:
                 try:
@@ -2033,7 +2051,9 @@
     for g in greens:
         if 1 in greens[g]:
             endrks += 1
-        if 6 in greens[g]:
+        if 7 in greens[g]:
+            endrks += 1
+        elif 6 in greens[g]:
             endrks += 1
     return greens, first, endrks, None
 

=== modified file 'std/tartanWork.py'
--- std/tartanWork.py	2015-12-12 09:12:17 +0000
+++ std/tartanWork.py	2016-02-24 16:18:07 +0000
@@ -8,10 +8,23 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 #--------
+# Themes
+#--------
+stdthm = (
+    "alt",
+    "clam",
+    "classic",
+    "default",
+    "keramik",
+    "keramik_alt",
+    "plastik",
+    "winnative",
+    "xpnative")
+#--------
 # Systems
 #--------
 finsys = {
@@ -532,7 +545,16 @@
             [284100, 59314, 31],
             [181900, 32742, 26],
             [0, 0, 18]],
-        "allow": [13257, 7407, 2466, 0]}}
+        "allow": [13257, 7407, 2466, 0]},
+    "2017": {
+        "rates": [
+            [701300, 206964, 41],
+            [550100, 147996, 39],
+            [406400, 96264, 36],
+            [293600, 61296, 31],
+            [188000, 33840, 26],
+            [0, 0, 18]],
+        "allow": [13500, 7407, 2466, 0]}}
 siteRates = {
     "2004": 60000,
     "2005": 60000,
@@ -546,7 +568,8 @@
     "2013": 0,
     "2014": 0,
     "2015": 0,
-    "2016": 0}
+    "2016": 0,
+    "2017": 0}
 uifRates = {
     "2004": [1.00, 1.00],
     "2005": [1.00, 1.00],
@@ -560,7 +583,8 @@
     "2013": [1.00, 1.00],
     "2014": [1.00, 1.00],
     "2015": [1.00, 1.00],
-    "2016": [1.00, 1.00]}
+    "2016": [1.00, 1.00],
+    "2017": [1.00, 1.00]}
 sdlRates = {
     "2004": [0.00, 1.00],
     "2005": [0.00, 1.00],
@@ -574,7 +598,8 @@
     "2013": [0.00, 1.00],
     "2014": [0.00, 1.00],
     "2015": [0.00, 1.00],
-    "2016": [0.00, 1.00]}
+    "2016": [0.00, 1.00],
+    "2017": [0.00, 1.00]}
 # Labels
 labels = {
     "L7159": {

=== modified file 'std/tartanWork_rne.py'
--- std/tartanWork_rne.py	2015-12-12 09:12:17 +0000
+++ std/tartanWork_rne.py	2016-02-04 12:54:00 +0000
@@ -8,10 +8,23 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 #--------
+# Themes
+#--------
+stdthm = (
+    "alt",
+    "clam",
+    "classic",
+    "default",
+    "keramik",
+    "keramik_alt",
+    "plastik",
+    "winnative",
+    "xpnative")
+#--------
 # Systems
 #--------
 finsys = {
@@ -19,6 +32,7 @@
     "CRS": ["Creditors Ledger", "CR", "Y"],
     "DRS": ["Debtors Ledger", "DR", "Y"],
     "GEN": ["General Ledger", "GL", "Y"],
+    "IBT": ["Branch Transfers", "IB", "Y"],
     "INV": ["Sales Invoicing", "SI", "Y"],
     "LON": ["Loans Ledger", "LN", "Y"],
     "MST": ["Master Control", "MS", "Y"],
@@ -122,6 +136,7 @@
 # Templates
 #----------
 stdtpl = [
+    "branch_transfer",
     "remittance_rnehol",
     "sales_document",
     "statement_loan",
@@ -140,12 +155,15 @@
             }},
     "I": {
         "tables": {
-            "INV": ["drsmst", "slsiv1", "slsiv2"]},
+            "INV": ["drsmst", "slsiv1", "slsiv2"],
+            "IBT": ["ibtcod", "ibtmst", "ibttrn"]},
         "codes": {
             "account_details": [["", "RW", 30, "Account Name & Address"], []],
             "deliver_to": [["", "RW", 30, "Delivery Address (All Lines)"], []],
             "line_value": [["", "SD", 13.2, "Line Value"], []],
             "carried_forward": [["", "NA", 22, "Carried Forward"], []],
+            "supplier": [["", "NA", 27, "Supplier"], []],
+            "transporter": [["", "NA", 27, "Transporter"], []],
             "total_taxable": [["", "SD", 13.2, "Total Taxable"], []],
             "total_nontaxable": [["", "SD", 13.2, "Total Non-Taxable"], []],
             "total_tax": [["", "SD", 13.2, "Total Tax"], []],

=== modified file 'stddia.py'
--- stddia.py	2015-08-25 15:02:35 +0000
+++ stddia.py	2016-02-23 07:21:33 +0000
@@ -1,6 +1,6 @@
 """
 SYNOPSIS
-    Accommodation Bookings.
+    Standard Dialog.
 
     This file is part of Tartan Financial Systems (TARTAN).
 

=== modified file 'str/st1010.py'
--- str/st1010.py	2015-10-25 09:33:02 +0000
+++ str/st1010.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st1020.py'
--- str/st1020.py	2015-08-25 15:02:35 +0000
+++ str/st1020.py	2016-01-03 17:07:32 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'str/st2010.py'
--- str/st2010.py	2015-10-25 09:33:02 +0000
+++ str/st2010.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st2020.py'
--- str/st2020.py	2015-10-03 07:36:56 +0000
+++ str/st2020.py	2016-02-19 05:51:14 +0000
@@ -10,13 +10,13 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
 from TartanClasses import ASD, CCD, FileImport, GetCtl, RepPrt, Sql
 from TartanClasses import TartanDialog
-from tartanFunctions import callModule, showError
+from tartanFunctions import askQuestion, callModule, showError
 
 class st2020:
     def __init__(self, **opts):
@@ -365,8 +365,13 @@
         self.df.focusField("T", 0, 1)
 
     def doCancel(self, widget=None):
-        self.cancel = True
-        self.exitPage1()
+        ok = askQuestion(self.opts["mf"].body, "Cancel",
+            "Are You Sure that you want to Cancel this Goods Received Note?",
+            default="no")
+        if ok == "yes":
+            self.cancel = True
+            self.exitPage1()
+        self.df.focusField(self.df.frt, self.df.pag, self.df.col)
 
     def updateTables(self):
         # Stores Ledger Transaction

=== modified file 'str/st2030.py'
--- str/st2030.py	2015-10-25 09:33:02 +0000
+++ str/st2030.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st2040.py'
--- str/st2040.py	2015-10-25 09:33:02 +0000
+++ str/st2040.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3010.py'
--- str/st3010.py	2015-10-03 07:36:56 +0000
+++ str/st3010.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3020.py'
--- str/st3020.py	2015-10-03 07:36:56 +0000
+++ str/st3020.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3030.py'
--- str/st3030.py	2015-10-25 09:33:02 +0000
+++ str/st3030.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3040.py'
--- str/st3040.py	2015-10-03 07:36:56 +0000
+++ str/st3040.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3050.py'
--- str/st3050.py	2015-10-03 07:36:56 +0000
+++ str/st3050.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3060.py'
--- str/st3060.py	2015-10-03 07:36:56 +0000
+++ str/st3060.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3070.py'
--- str/st3070.py	2015-12-12 09:12:17 +0000
+++ str/st3070.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3080.py'
--- str/st3080.py	2015-10-03 07:36:56 +0000
+++ str/st3080.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3090.py'
--- str/st3090.py	2015-10-03 07:36:56 +0000
+++ str/st3090.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3100.py'
--- str/st3100.py	2015-10-03 07:36:56 +0000
+++ str/st3100.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'str/st3110.py'
--- str/st3110.py	2015-10-03 07:36:56 +0000
+++ str/st3110.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st3120.py'
--- str/st3120.py	2015-10-25 09:33:02 +0000
+++ str/st3120.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st4010.py'
--- str/st4010.py	2015-08-25 15:02:35 +0000
+++ str/st4010.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -125,8 +125,8 @@
             (("T",3,2,0),"OSD",12.2,"Quantity Balance"),
             (("T",3,3,0),"OSD",12.2,"Value Balance"),
             (("T",3,4,0),"OSD",12.2,"Average Unit Cost"),
-            (("T",3,5,0),"OSD",12.2,"Quantity on Order"),
-            (("T",3,6,0),"OSD",12.2,"Quantity on Sales"),
+            (("T",3,5,0),"OSD",12.2,"Quantity on P/O"),
+            (("T",3,6,0),"OSD",12.2,"Quantity on S/O"),
             (("C",4,0,0),"OSD",13.2,"Qty-Receipts","",
                 "","N",None,None,None,None,("Months",13)),
             (("C",4,0,1),"OSD",13.2,"Val-Receipts"),

=== modified file 'str/st5010.py'
--- str/st5010.py	2015-10-03 07:36:56 +0000
+++ str/st5010.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st5020.py'
--- str/st5020.py	2014-12-30 15:37:38 +0000
+++ str/st5020.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st5030.py'
--- str/st5030.py	2015-10-25 09:33:02 +0000
+++ str/st5030.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st5040.py'
--- str/st5040.py	2015-08-25 15:02:35 +0000
+++ str/st5040.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st6010.py'
--- str/st6010.py	2015-12-12 09:12:17 +0000
+++ str/st6010.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import FileImport, GetCtl, ProgressBar, Sql, TartanDialog

=== modified file 'str/st6020.py'
--- str/st6020.py	2015-08-25 15:02:35 +0000
+++ str/st6020.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/st6030.py'
--- str/st6030.py	2015-10-25 09:33:02 +0000
+++ str/st6030.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/stc110.py'
--- str/stc110.py	2015-10-03 07:36:56 +0000
+++ str/stc110.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/stc210.py'
--- str/stc210.py	2014-12-30 15:37:38 +0000
+++ str/stc210.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'str/stc220.py'
--- str/stc220.py	2015-10-03 07:36:56 +0000
+++ str/stc220.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/stc310.py'
--- str/stc310.py	2014-12-30 15:37:38 +0000
+++ str/stc310.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'str/stc320.py'
--- str/stc320.py	2015-10-03 07:36:56 +0000
+++ str/stc320.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'str/stc410.py'
--- str/stc410.py	2015-10-03 07:36:56 +0000
+++ str/stc410.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'str/stc420.py'
--- str/stc420.py	2015-10-03 07:36:56 +0000
+++ str/stc420.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'tab/tb1010.py'
--- tab/tb1010.py	2015-08-25 15:02:35 +0000
+++ tab/tb1010.py	2016-01-03 17:07:33 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os
@@ -148,7 +148,7 @@
             self.new = "y"
         else:
             self.new = "n"
-            self.df.loadEntry(frt, pag, p+1, data=tab[1])
+            self.df.loadEntry(frt, pag, p + 1, data=tab[1])
             yn = askQuestion(screen=self.opts["mf"].body, head="Table Exists",
                 mess="Changing This Record Could Result In Loss of Data, "\
                 "Are You Sure You Want to Continue?", default="no")
@@ -159,8 +159,8 @@
         self.desc = w
 
     def endTop(self):
-        self.fld = makeArray(6,100,1,"S")
-        self.idx = makeArray(12,20,1,"S")
+        self.fld = makeArray(6, 100, 1, "S")
+        self.idx = makeArray(12, 20, 1, "S")
         if self.new == "n":
             fld = self.sql.getRec(tables="ffield", where=[("ff_tabl", "=",
                 self.tab)], order="ff_seq")
@@ -182,7 +182,7 @@
     def doColSeq(self, frt, pag, r, c, p, i, w):
         self.colseq = w
         for n, c in enumerate(self.fld[self.colseq][1:]):
-            self.df.loadEntry("C", 1, p+n+1, data=c)
+            self.df.loadEntry("C", 1, p + n + 1, data=c)
 
     def endPage1(self):
         pos = (self.df.col / self.df.colq[1]) - 1
@@ -204,12 +204,12 @@
     def doIdxCmd(self, frt, pag, r, c, p, i, w):
         idxseq = int(w[0]) - 1
         self.doIdxSeq(frt, pag, r, c, p, i, idxseq)
-        self.df.focusField(frt, pag, c+1)
+        self.df.focusField(frt, pag, c + 1)
 
     def doIdxSeq(self, frt, pag, r, c, p, i, w):
         self.idxseq = w
         for n, c in enumerate(self.idx[self.idxseq][1:]):
-            self.df.loadEntry("C", 2, p+n+1, data=c)
+            self.df.loadEntry("C", 2, p + n + 1, data=c)
 
     def doIdxCol(self, frt, pag, r, c, p, i, w):
         if w and w not in self.valcol:
@@ -251,8 +251,14 @@
                 else:
                     dat.insert(0, "")
                 dat[1] = num + 1
-                csv.write('"%s",%s,"%s","%s","%s","%s","%s","%s","%s",'\
-                    '"%s","%s","%s","%s"\n' % tuple(dat))
+                fmt = '"%s",%s,"%s"'
+                ddd = dat[:3]
+                for n, d in enumerate(dat[3:]):
+                    if d:
+                        fmt += ',"%s"'
+                        ddd.append(d)
+                fmt += "\n"
+                csv.write(fmt % tuple(ddd))
             csv.close()
             self.doRestart()
 
@@ -267,9 +273,9 @@
                     pos = 14
                 else:
                     pos = num
-                self.df.focusField("C", 1, (pos*6)+1)
+                self.df.focusField("C", 1, (pos * 6) + 1)
                 for n, c in enumerate(dat):
-                    self.df.loadEntry("C", 1, (pos*6)+n, data=c)
+                    self.df.loadEntry("C", 1, (pos * 6) + n, data=c)
             self.df.advanceLine(1)
             return
         self.df.clearFrame("C", 2)
@@ -281,9 +287,9 @@
                 pos = 4
             else:
                 pos = num
-            self.df.focusField("C", 2, (pos*12)+1)
+            self.df.focusField("C", 2, (pos * 12) + 1)
             for n, c in enumerate(dat):
-                self.df.loadEntry("C", 2, (pos*12)+n, data=c)
+                self.df.loadEntry("C", 2, (pos * 12) + n, data=c)
         self.df.advanceLine(2)
 
     def fileBrowser(self, widget=None):
@@ -318,8 +324,8 @@
             self.df.focusField("T", 0, 1)
         else:
             self.new = "i"
-            self.fld = makeArray(6,100,1,"S")
-            self.idx = makeArray(12,20,1,"S")
+            self.fld = makeArray(6, 100, 1, "S")
+            self.idx = makeArray(12, 20, 1, "S")
             self.tab = os.path.basename(self.flenam.split("_")[0])
             for n, k in enumerate(key):
                 k = k.rstrip().replace('"',"")

=== modified file 'tab/tb1020.py'
--- tab/tb1020.py	2015-12-12 09:12:17 +0000
+++ tab/tb1020.py	2016-02-04 08:59:27 +0000
@@ -25,7 +25,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import csv, os, sys, time
@@ -44,7 +44,10 @@
     def __init__(self, **opts):
         self.opts = opts
         if self.setVariables():
-            self.doGetTables()
+            if "tab" in self.opts and self.opts["tab"]:
+                self.tab = self.opts["tab"]
+            else:
+                self.doGetTables()
             if self.oldver[0] and self.oldver[0] < 5:
                 self.doDelLog()
                 self.doCvtVat()
@@ -84,9 +87,7 @@
             self.rcdic = self.opts["mf"].rcdic
             self.dbm = self.opts["mf"].dbm
         self.sql = Sql(self.dbm, ["ffield", "ftable", "verupd"], prog=__name__)
-        if "ffield" in self.sql.error or "ftable" in self.sql.error:
-            sys.exit()
-        elif "verupd" in self.sql.error:
+        if "verupd" in self.sql.error:
             self.oldver = (0, 0, 0)
         elif self.sql.error:
             return
@@ -113,6 +114,7 @@
             ("-u", self.opts["usr"]),
             ("-c", "t"),
             ("-d", self.opts["pth"]),
+            ("-s", self.opts["sss"]),
             ("-w", False),
             ("-x", False)]
         if self.opts["pwd"]:
@@ -132,6 +134,7 @@
             "drstrn": ["drt_capdt", "drt_seq"],
             "genrct": ["grt_seq", "grt_date"],
             "gentrn": ["glt_capdt", "glt_seq"],
+            "ibttrn": ["ibt_capdt", "ibt_seq"],
             "lontrn": ["lnt_capdt", "lnt_seq"],
             "memage": ["mta_curdt", "mta_seq"],
             "memsta": ["mls_date", "mls_seq"],
@@ -896,10 +899,10 @@
 
 if __name__ == "__main__":
     import getopt
-    opts, args = getopt.getopt(sys.argv[1:], "b:c:d:f:hp:r:s:t:u:v:")
-    parg = {"mf": None, "bar": False, "cln": True, "pth": None,
-        "upd": False, "pwd": "", "rcf": None, "sss": "stdsys",
-        "tab": [], "usr": "", "ver": None}
+    opts, args = getopt.getopt(sys.argv[1:], "bcd:fhp:r:s:t:u:v:")
+    parg = {"mf": None, "bar": False, "cln": False, "pth": None,
+        "pwd": "", "rcf": None, "sss": "stdsys", "tab": [],
+        "upd": False, "usr": "", "ver": None}
     for o, v in opts:
         if o == "-h":
             print """
@@ -910,31 +913,32 @@
     -b              = Show a progress bar
     -c              = Clean the DataBase i.e. remove unwanted tables etc
     -d [directory]  = Directory where .csv files are, defaults to "~/prg/csv"
-    -f              = Force update of all records
+    -f              = Force update of all records in a table
     -h              = Display Usage
     -p [password]   = Database Admin Password
     -r [file]       = tartanrc file to use, defaults to ~/.tartanrc
     -s [system]     = system module to use, defaults to stdsys
+    -t [table]      = Table to update
     -u [user]       = Database Admin User Name
     -v [x.x.x]      = The New version number
 """
             sys.exit()
         elif o == "-b":
-            parg["bar"] = v
+            parg["bar"] = True
         elif o == "-c":
-            parg["cln"] = v
+            parg["cln"] = True
         elif o == "-d":
             parg["pth"] = v
         elif o == "-f":
-            parg["upd"] = v
+            parg["upd"] = True
         elif o == "-p":
             parg["pwd"] = v
         elif o == "-r":
             parg["rcf"] = v
         elif o == "-s":
             parg["sss"] = v
-        elif o == "-u":
-            parg["usr"] = v
+        elif o == "-t":
+            parg["tab"] = v.split(",")
         elif o == "-v":
             parg["ver"] = v
     if not "ver" in parg:

=== modified file 'tab/tb1030.py'
--- tab/tb1030.py	2015-08-25 15:02:35 +0000
+++ tab/tb1030.py	2016-01-03 17:07:34 +0000
@@ -11,7 +11,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, SChoice, Sql, TartanDialog

=== modified file 'tab/tb1040.py'
--- tab/tb1040.py	2015-08-25 15:02:35 +0000
+++ tab/tb1040.py	2016-01-03 17:07:34 +0000
@@ -11,7 +11,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, sys

=== modified file 'tab/tb3010.py'
--- tab/tb3010.py	2015-10-03 07:36:56 +0000
+++ tab/tb3010.py	2016-01-03 17:07:34 +0000
@@ -11,7 +11,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'uty/bm1010.py'
--- uty/bm1010.py	2015-08-25 15:02:35 +0000
+++ uty/bm1010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import csv, glob, imghdr, os, sys, time, urllib

=== modified file 'uty/fc1010.py'
--- uty/fc1010.py	2015-08-25 15:02:35 +0000
+++ uty/fc1010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import TartanDialog

=== modified file 'uty/pkgprg.py'
--- uty/pkgprg.py	2015-12-12 09:12:17 +0000
+++ uty/pkgprg.py	2016-02-22 15:59:17 +0000
@@ -73,21 +73,21 @@
 exeCmd("rm -f `find %s -name '[abcdefgh].py'`" % pypath)
 os.chdir(pypath)
 
-while system not in ("b", "r", "s", "t"):
-    system = raw_input("System, (T)artan, (R)NE, (S)ections, (B)owls: ").lower()
+while system not in ("b", "c", "r", "s", "t"):
+    system = raw_input("System, (T)artan, (R)NE, (S)ections, (B)owls, (C)ash: ").lower()
 
 dirs = ["tab", "mst"]
 if system == "t":
-    exeCmd("mv %s/TartanExe/Tartan_5.*.tgz %s/TartanOld/" % (bd, bd))
+    exeCmd("mv %s/TartanExe/Tartan_5.?.?.tgz %s/TartanOld/" % (bd, bd))
     if windows:
-        exeCmd("mv %s/TartanExe/Tartan_5.*.exe %s/TartanOld/" % (bd, bd))
+        exeCmd("mv %s/TartanExe/Tartan_5.?.?.exe %s/TartanOld/" % (bd, bd))
     system = "tartan"
     sysmod = "stdsys"
     modfle = "tarmod"
     chgfle = "tarchg"
     chgrst = "chgrst"
     dirs.extend(["ass", "bkm", "bwl", "crs", "drs", "gen", "lon", "mem",
-        "rca", "rtl", "sls", "str", "uty", "wag"])
+                "rca", "rtl", "sls", "str", "uty", "wag"])
     custom = [""]
     exclude = ["msy030", "pw1010", "si2020", "ss1010"]
 elif system == "b":
@@ -122,7 +122,8 @@
     modfle = "tarmod"
     chgfle = "tarchg"
     chgrst = "chgrst"
-    dirs.extend(["ass", "crs", "drs", "gen", "lon", "rtl", "sls", "str", "uty"])
+    dirs.extend(["ass", "crs", "drs", "gen", "ibt", "lon", "rtl", "sls",
+                "str", "uty"])
     custom = ["rne", ["ar6020", "ar6030", "cr1010", "cr2010", "cr2020",
               "cr2030", "cr3030", "cr3070", "cr3310", "cr3320", "cr3330",
               "cr3340", "cr3350", "cr3360", "cr3370", "cr4010", "cr6010",
@@ -142,7 +143,7 @@
     modfle = "tarmod"
     chgfle = "tarchg"
     chgrst = "chgrst"
-    dirs.extend(["csh"])
+    dirs.extend(["csh", "gen"])
     custom = [""]
     exclude = ["tb1010", "tb1030", "tb1040", "tb3010", "pm1010", "pw1010"]
 else:
@@ -374,6 +375,9 @@
 elif system == "rnehol":
     shutil.copy("%s/men/rnemen.py" % pypath, "%s/tmp/stdmen.py" % pypath)
     shutil.copy("%s/csv/rnesys.py" % pypath, "%s/tmp/stdsys.py" % pypath)
+elif system == "cshana":
+    shutil.copy("%s/men/cshmen.py" % pypath, "%s/tmp/stdmen.py" % pypath)
+    shutil.copy("%s/csv/cshsys.py" % pypath, "%s/tmp/stdsys.py" % pypath)
 os.chdir("%s/tmp" % pypath)
 exeCmd("zip -rqm %s/TartanSve/%s *" % (bd, zipfle))
 os.chdir(os.path.join(pypath, "std"))
@@ -443,6 +447,7 @@
             "doc/AR.rst",
             "doc/CR_rne.rst",
             "doc/DR.rst",
+            "doc/IB.rst",
             "doc/LN.rst",
             "doc/RT.rst",
             "doc/SI.rst",
@@ -558,6 +563,8 @@
             exeCmd("rsync -artz %s/Tartan-5/doc/Downloads.rst root@mailserver:/var/www/tartan.co.za/htdocs/Downloads/ --progress" % bd)
             exeCmd("rsync -artz %s/Tartan-5/doc/Changes.rst root@mailserver:/var/www/tartan.co.za/htdocs/Changes/ --progress" % bd)
 exeCmd("rm %s/Tartan-5/doc/%s.rst" % (bd, man))
+# Remove Duplicate File
+exeCmd("rm %s/TartanSve/%s-5.zip" % (bd, system))
 # Email Users
 if email:
     chgfle = "%s/ver/ver_%s.%s.%s.changes" % (pypath, ver[0], ver[1], ver[2])

=== modified file 'uty/pm1010.py'
--- uty/pm1010.py	2015-06-17 15:23:42 +0000
+++ uty/pm1010.py	2016-01-03 17:07:34 +0000
@@ -12,7 +12,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, shutil, sys

=== modified file 'uty/pw1010.py'
--- uty/pw1010.py	2014-12-30 15:37:38 +0000
+++ uty/pw1010.py	2016-01-03 17:07:34 +0000
@@ -14,7 +14,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import random

=== modified file 'uty/rp1010.py'
--- uty/rp1010.py	2015-10-03 07:36:56 +0000
+++ uty/rp1010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os

=== modified file 'uty/ss1010.py'
--- uty/ss1010.py	2015-10-03 07:36:56 +0000
+++ uty/ss1010.py	2016-02-27 08:09:28 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ASD, CCD, RepPrt, Sql, SChoice, TartanDialog
@@ -48,7 +48,7 @@
         fld = (
             (("T",0,0,0),"I@skm_cono",0,"","",
                 "","Y",self.doCono,coy,None,("notblank",)),
-            (("T",0,0,0),"I@skm_vatc",0,"","",
+            (("T",0,0,0),"I@skm_vatc",0,"Vat Code (Y/N)","",
                 "","N",self.doVatc,None,None,("in",("Y","N"))),
             (("T",0,0,0),"I@skp_page",0,"","",
                 "","N",self.doPage,pag,None,("notzero",)),

=== modified file 'uty/td1010.py'
--- uty/td1010.py	2015-10-03 07:36:56 +0000
+++ uty/td1010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -308,8 +308,10 @@
                         rec[col.index("bkc_celno")] and not \
                         rec[col.index("bkc_email")]:
                     continue
-                nam = "%s, %s" % (rec[col.index("bkc_sname")],
-                    rec[col.index("bkc_names")].split()[0])
+                nam = rec[col.index("bkc_sname")]
+                fnm = rec[col.index("bkc_names")]
+                if fnm:
+                    nam = "%s, %s" % (nam, fnm.split()[0])
                 data = [
                     nam,
                     rec[col.index("bkc_addr1")],
@@ -328,7 +330,7 @@
                 else:
                     self.sql.updRec("telmst", data=data, where=[("tdm_name",
                         "=", data[0])])
-            grp.append(("BKM", "Guests"))
+            grp.append(("BKM", "Bookings"))
         bwl = sql.getRec(tables="ftable", where=[("ft_tabl", "=", "bwltab")],
             cols=["count(*)"], limit=1)
         if bwl and bwl[0]:
@@ -342,8 +344,10 @@
                         rec[col.index("btb_cell")] and not \
                         rec[col.index("btb_mail")]:
                     continue
-                nam = "%s, %s" % (rec[col.index("btb_surname")],
-                    rec[col.index("btb_names")].split()[0])
+                nam = rec[col.index("btb_surname")]
+                fnm = rec[col.index("btb_names")]
+                if fnm:
+                    nam = "%s, %s" % (nam, fnm.split()[0])
                 data = [
                     nam,
                     rec[col.index("btb_add1")],

=== modified file 'uty/tdc110.py'
--- uty/tdc110.py	2015-08-25 15:02:35 +0000
+++ uty/tdc110.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'uty/tp1010.py'
--- uty/tp1010.py	2015-08-25 15:02:35 +0000
+++ uty/tp1010.py	2016-01-03 17:07:34 +0000
@@ -12,7 +12,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import operator, os

=== modified file 'wag/sl1010.py'
--- wag/sl1010.py	2015-12-12 09:12:17 +0000
+++ wag/sl1010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl2010.py'
--- wag/sl2010.py	2015-10-03 07:36:56 +0000
+++ wag/sl2010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl2020.py'
--- wag/sl2020.py	2015-10-03 07:36:56 +0000
+++ wag/sl2020.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl2030.py'
--- wag/sl2030.py	2015-10-03 07:36:56 +0000
+++ wag/sl2030.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl3010.py'
--- wag/sl3010.py	2015-10-03 07:36:56 +0000
+++ wag/sl3010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl3020.py'
--- wag/sl3020.py	2015-10-03 07:36:56 +0000
+++ wag/sl3020.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl3030.py'
--- wag/sl3030.py	2015-10-03 07:36:56 +0000
+++ wag/sl3030.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/sl3040.py'
--- wag/sl3040.py	2015-12-12 09:12:17 +0000
+++ wag/sl3040.py	2016-02-11 14:17:40 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time
@@ -57,7 +57,7 @@
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("N","Y"))
+            tend=tnd, txit=txt, view=("N","V"), mail=("B","Y"))
 
     def doFdate(self, frt, pag, r, c, p, i, w):
         self.fdate = w

=== modified file 'wag/sl4010.py'
--- wag/sl4010.py	2015-10-03 07:36:56 +0000
+++ wag/sl4010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wg1010.py'
--- wag/wg1010.py	2015-10-03 07:36:56 +0000
+++ wag/wg1010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wg2010.py'
--- wag/wg2010.py	2015-03-21 07:40:04 +0000
+++ wag/wg2010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wg2020.py'
--- wag/wg2020.py	2015-10-25 09:33:02 +0000
+++ wag/wg2020.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'wag/wg2030.py'
--- wag/wg2030.py	2014-12-30 15:37:38 +0000
+++ wag/wg2030.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'wag/wg3010.py'
--- wag/wg3010.py	2015-10-03 07:36:56 +0000
+++ wag/wg3010.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wg3020.py'
--- wag/wg3020.py	2015-10-03 07:36:56 +0000
+++ wag/wg3020.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wg3030.py'
--- wag/wg3030.py	2015-10-03 07:36:56 +0000
+++ wag/wg3030.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wg3040.py'
--- wag/wg3040.py	2015-10-03 07:36:56 +0000
+++ wag/wg3040.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import ASD, RepPrt, Sql, TartanDialog

=== modified file 'wag/wg3050.py'
--- wag/wg3050.py	2015-10-03 07:36:56 +0000
+++ wag/wg3050.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import csv, os, time

=== modified file 'wag/wg3060.py'
--- wag/wg3060.py	2015-10-03 07:36:56 +0000
+++ wag/wg3060.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import CCD, GetCtl, NotesPrint, ProgressBar, RepPrt, Sql

=== modified file 'wag/wg3070.py'
--- wag/wg3070.py	2015-10-03 07:36:56 +0000
+++ wag/wg3070.py	2016-01-03 17:07:34 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import os, time

=== modified file 'wag/wg4010.py'
--- wag/wg4010.py	2015-10-03 07:36:56 +0000
+++ wag/wg4010.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wgc110.py'
--- wag/wgc110.py	2015-10-03 07:36:56 +0000
+++ wag/wgc110.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wgc210.py'
--- wag/wgc210.py	2014-12-30 15:37:38 +0000
+++ wag/wgc210.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'wag/wgc220.py'
--- wag/wgc220.py	2015-10-03 07:36:56 +0000
+++ wag/wgc220.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wgc310.py'
--- wag/wgc310.py	2015-10-03 07:36:56 +0000
+++ wag/wgc310.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

=== modified file 'wag/wgc320.py'
--- wag/wgc320.py	2015-10-03 07:36:56 +0000
+++ wag/wgc320.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wgc410.py'
--- wag/wgc410.py	2014-12-30 15:37:38 +0000
+++ wag/wgc410.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'wag/wgc420.py'
--- wag/wgc420.py	2015-10-03 07:36:56 +0000
+++ wag/wgc420.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wgc510.py'
--- wag/wgc510.py	2014-12-30 15:37:38 +0000
+++ wag/wgc510.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import Sql, TartanDialog

=== modified file 'wag/wgc520.py'
--- wag/wgc520.py	2015-10-03 07:36:56 +0000
+++ wag/wgc520.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 import time

=== modified file 'wag/wgc610.py'
--- wag/wgc610.py	2014-12-30 15:37:38 +0000
+++ wag/wgc610.py	2016-01-03 17:07:35 +0000
@@ -10,7 +10,7 @@
     Written by Paul Malherbe, <paul@tartan.co.za>
 
 COPYING
-    Copyright (C) 2004-2015 Paul Malherbe.
+    Copyright (C) 2004-2016 Paul Malherbe.
 """
 
 from TartanClasses import GetCtl, Sql, TartanDialog

