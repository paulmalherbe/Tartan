diff --git a/TartanClasses.py b/TartanClasses.py
index f64cca3..d783715 100644
--- a/TartanClasses.py
+++ b/TartanClasses.py
@@ -153,20 +153,6 @@ try:
         "udiaeresis", "Udiaeresis",
         "ssharp"]
 
-    class ArrowButton(ttk.Button):
-        arrow_layout = lambda self, direc: ([("Button.focus",
-            {"children": [("Button.%sarrow" % direc, None)]})])
-
-        def __init__(self, master, **kw):
-            direction = kw.pop("direction", "left")
-            style = ttk.Style(master)
-            style.configure("L.TButton", relief="raised")
-            style.layout("L.TButton", self.arrow_layout("left"))
-            style.configure("R.TButton", relief="raised")
-            style.layout("R.TButton", self.arrow_layout("right"))
-            kw["style"] = "L.TButton" if direction == "left" else "R.TButton"
-            super().__init__(master, **kw)
-
     class MyButtonBox(ttk.Frame):
         def __init__(self, parent, row=None, padx=0, pady=0, **kwargs):
             super().__init__(parent, **kwargs)
@@ -189,21 +175,6 @@ try:
             self.rows[row] += spn
             return but
 
-        def focusNext(self, event):
-            key = event.keysym
-            idx = self.buttons.index(event.widget["text"])
-            if key == "Left":
-                if not idx:
-                    idx = len(self.buttons) - 1
-                else:
-                    idx -= 1
-            elif idx == (len(self.buttons) - 1):
-                idx = 0
-            else:
-                idx += 1
-            widgets = self.winfo_children()
-            widgets[idx].focus_set()
-
     class MyButton(ttk.Button):
         def __init__(self, parent, cmd=None, txt=True, img=True, fnt=None, relief=None, **kwargs):
             if "style" not in kwargs:
@@ -567,7 +538,7 @@ try:
                 for bind in b.bind():
                     if "<Key-Alt_L>" in bind:
                         self.binds.append(bind)
-                ecmd = lambda event, num=num: self.navigate(event, num)
+                ecmd = lambda event, num=num: self.doNavigate(event, num)
                 b.bind("<Left>", ecmd)
                 b.bind("<Right>", ecmd)
                 if len(but) == 3:
@@ -633,7 +604,7 @@ try:
             if not self.parent:
                 self.msgwin.quit()
 
-        def navigate(self, event, num):
+        def doNavigate(self, event, num):
             if event.keysym == "Left":
                 if num == 0:
                     self.butts[-1].focus_set()
@@ -8577,7 +8548,8 @@ class TartanConfig(object):
                     self.fft.append(font)
                 if font not in self.aft:
                     self.aft.append(font)
-            except:
+            except Exception as err:
+                print(err)
                 continue
         sp.closeSplash()
 
diff --git a/doc/CTL.rst b/doc/CTL.rst
index f099cee..c31f2e6 100644
--- a/doc/CTL.rst
+++ b/doc/CTL.rst
@@ -30,7 +30,7 @@ While most of the fields are self explanatory the following are of note:
 + **E-Mail Address** - The company's default email address.
 + **V.A.T. Default** - Any alphanumeric character. If the code, except **N** which is used for no V.A.T., has not previously been created you will be prompted to create one as in `V.A.T. Records Maintenance`_.
 + **Systems** - You must tick all the systems that you would like to enable otherwise they will not appear on your menu.
-+ **Logo** - You can select an image file to be used as the letterhead for invoices, statements and remittance advices. This file should be a `jpeg` file.
++ **Logo** - You can select an image file to be used as the letterhead for invoices, statements and remittance advices. This file should be a `jpg` file.
 
 After creating a **new** company record you will be prompted for the initial financial period's starting and ending dates e.g. 20060301 and 20070228.
 
diff --git a/doc/SYS.rst b/doc/SYS.rst
index a7d8329..f08b78e 100644
--- a/doc/SYS.rst
+++ b/doc/SYS.rst
@@ -3,7 +3,7 @@ Tartan Systems - Reference Manual
 =================================
 .. _GPL: http://www.gnu.org/licenses/gpl.html
 
-:Version:   6.18
+:Version:   6.19
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
@@ -343,7 +343,7 @@ In order to use this exported database perform the following steps on the comput
     + Enter the Database Name i.e. the name of the exported file e.g. tartan001.db and hit enter.
     + Hit enter to accept the Host Name i.e. localhost
     + Enter the Files Directory i.e. the directory where the exported file has been copied to.
-    + Click on the Save button and the the Close button.
+    + Click on the Save button and the Close button.
 
 + The Tartan menu should now be displaying.
 + After exiting Tartan you can re-enter Tartan by executing the third step i.e. Execute Tartan with the following command:
diff --git a/gen/gl2010.py b/gen/gl2010.py
index 5dd3e98..9943419 100644
--- a/gen/gl2010.py
+++ b/gen/gl2010.py
@@ -174,9 +174,7 @@ Please Contact your Software Support and Quote this Message as this is a Serious
                 "Opening Balances Do Not Balance by %s" % diff.disp)
             self.df.focusField(self.df.frt, self.df.pag, self.df.col)
         else:
-            showInfo(self.opts["mf"].body, "Year End", """A Year End for the Previous Period Must be Executed to Include These Opening Balances.
-
-If the Current Period is 1 then the Year End for Period 0 must be Executed.""")
+            showInfo(self.opts["mf"].body, "Year End", """A Year End for the Previous Period Must be Executed to Include These Opening Balances.""")
             self.df.closeProcess()
             self.opts["mf"].closeLoop()
 
diff --git a/gen/gl2030.py b/gen/gl2030.py
index 5eb2ceb..54e4ab1 100644
--- a/gen/gl2030.py
+++ b/gen/gl2030.py
@@ -1039,7 +1039,12 @@ class gl2030(object):
                 self.curdt = self.bh.curdt
             for desc1, desc2, desc3, trtp, self.allcoy, self.accnum, \
                         acrs, achn, adrs, aage, self.vatcod in codes:
-                self.alldet = CCD(desc1, "NA", 30).work
+                desc = desc1
+                if desc2:
+                    desc = "%s %s" % (desc, desc2)
+                if desc3:
+                    desc = "%s %s" % (desc, desc3)
+                self.alldet = CCD(desc, "NA", 30).work
                 found = True
                 if desc1 not in memo:
                     found = False
diff --git a/ms0000.py b/ms0000.py
index 4962bdd..92dd6f2 100755
--- a/ms0000.py
+++ b/ms0000.py
@@ -65,7 +65,7 @@ if "TARVER" in os.environ:
     temp = tuple(os.environ["TARVER"].split("."))
     VERSION = (int(temp[0]), int(temp[1].rstrip()))
 else:
-    VERSION = (6, 18)
+    VERSION = (6, 19)
     os.environ["TARVER"] = "%s.%s" % VERSION
 
 class ms0000(object):
diff --git a/mst/msy010.py b/mst/msy010.py
index 862a763..c82d06e 100644
--- a/mst/msy010.py
+++ b/mst/msy010.py
@@ -100,10 +100,9 @@ Please select Control --> System Record Maintenance and change the Years to Keep
         self.cur = int(self.opts["period"][2][0] / 100)
         self.l_per = self.sql.getRec("ctlynd", cols=["max(cye_period)"],
             where=[("cye_cono", "=", self.opts["conum"])], limit=1)[0]
-        self.last, self.oldf = self.sql.getRec("ctlynd",
-            cols=["cye_last", "cye_final"], where=[("cye_cono", "=",
-            self.opts["conum"]), ("cye_period", "=", self.opts["period"][0])],
-            limit=1)[:2]
+        self.last, self.oldf = self.sql.getRec("ctlynd", cols=["cye_last",
+            "cye_final"], where=[("cye_cono", "=", self.opts["conum"]),
+            ("cye_period", "=", self.opts["period"][0])], limit=1)[:2]
         if self.oldf == "Y" and "args" not in self.opts:
             cf = PwdConfirm(self.opts["mf"], conum=0, system="MST",
                 code="YearEnd")
@@ -191,9 +190,9 @@ Please select Control --> System Record Maintenance and change the Years to Keep
         for per in range(0, self.c_per + 1):
             if "args" not in self.opts:
                 pb.displayProgress(per)
-            chk = self.sql.getRec("ctlynd", cols=["cye_final"],
-                where=[("cye_cono", "=", self.opts["conum"]), ("cye_period",
-                "=", per)], limit=1)
+            chk = self.sql.getRec("ctlynd", cols=["cye_final", "cye_start"],
+                where=[("cye_cono", "=", self.opts["conum"]),
+                ("cye_period", "=", per)], limit=1)
             if self.oldf == "Y" or chk[0] != "Y":
                 self.retinc = 0
                 self.doYearEnd(per)
@@ -263,7 +262,7 @@ Please select Control --> System Record Maintenance and change the Years to Keep
                     self.retinc = float(ASD(self.retinc) + ASD(bal))
                     bal = 0.00
                 self.sql.insRec("genbal", data=[self.opts["conum"], ac[0],
-                    start_n,bal])
+                    start_n, bal])
             ri_bal = self.sql.getRec("genbal", cols=["glo_cyr"],
                 where=[("glo_cono", "=", self.opts["conum"]), ("glo_acno", "=",
                 self.ri_acc), ("glo_trdt", "=", start_n)], limit=1)
@@ -313,12 +312,15 @@ Please select Control --> System Record Maintenance and change the Years to Keep
             ["wagtf2", "wt2_date", []]]
         ynds = self.sql.getRec("ctlynd", where=[("cye_cono", "=",
             self.opts["conum"])], order="cye_period")
-        if len(ynds) <= self.years:
+        chk1 = len(ynds) - self.years
+        chk2 = len(ynds) - (self.years + 1)
+        if not chk1 or not chk2:
             return
-        last = ynds[len(ynds) - (self.years + 1)]
+        last = ynds[chk2]
         sdate = last[self.sql.ctlynd_col.index("cye_start")]
         edate = last[self.sql.ctlynd_col.index("cye_end")]
-        etime = (edate * 10000) + 9999
+        ndate = ynds[chk1][self.sql.ctlynd_col.index("cye_start")]
+        etime = str((edate * 10000) + 9999)
         emldt = "%04i-%02i-99 99:99" % (int(edate / 10000),
             (int(edate / 100) % 100))
         ecurdt = int(edate / 100)
@@ -415,6 +417,13 @@ Please select Control --> System Record Maintenance and change the Years to Keep
                 elif tab[0] == "genbal":
                     whrt.append((tab[1], "<=", sdate))
                     sql.delRec(tab[0], where=whrt)
+                    # Opening Balances in 0 Period
+                    recs = sql.getRec("genbal", where=[("glo_cono", "=",
+                        self.opts["conum"]), ("glo_trdt", "=", ndate)])
+                    for rec in recs:
+                        dat = rec[:]
+                        dat[sql.genbal_col.index("glo_trdt")] = sdate
+                        sql.insRec("genbal", data=dat)
                 elif tab[0] == "genrct":
                     whrt.append((tab[1], "<=", sdate))
                     sql.delRec(tab[0], where=whrt)
diff --git a/str/st3060.py b/str/st3060.py
index 2cd6081..92cc1ab 100644
--- a/str/st3060.py
+++ b/str/st3060.py
@@ -217,13 +217,8 @@ class st3060(object):
         self.closeProcess()
 
     def getValues(self, data):
-        grp = CCD(data[0], "UA", 3)
-        self.groupd = grp.disp
-        code = CCD(data[1], "NA", 20)
-        desc = CCD(data[2], "NA", 30)
-        uoi = CCD(data[3], "NA", 10)
         bals = Balances(self.opts["mf"], "STR", self.opts["conum"], self.edate,
-            keys=(grp.work, code.work, self.loc))
+            keys=(data[0], data[1], self.loc))
         figs = [0] * 8
         m_ob,m_mv,m_cb,y_ob,y_mv,y_cb,ac,lc, ls = bals.doStrBals(self.sdate)
         figs[0] = y_ob[0]
@@ -237,6 +232,11 @@ class st3060(object):
                 figs[5] = float(ASD(figs[5]) - ASD(bal[2]))
         figs[6] = y_cb[0]
         figs[7] = y_cb[1]
+        grp = CCD(data[0], "UA", 3)
+        self.groupd = grp.disp
+        code = CCD(data[1], "NA", 20)
+        desc = CCD(data[2], "NA", 30)
+        uoi = CCD(data[3], "NA", 10)
         t = [grp, code, desc, uoi]
         for y in range(8):
             t.append(CCD(figs[y], "SD", 12.2))
diff --git a/tartanFunctions.py b/tartanFunctions.py
index a079062..80cf3c3 100644
--- a/tartanFunctions.py
+++ b/tartanFunctions.py
@@ -174,9 +174,10 @@ def showWarning(screen=None, head="", mess=""):
 
 def getFontSize(tk=None, width=None, height=None, font=10):
     if not tk:
-        tk, ttk = importTkinter()
-    if not tk:
-        return 800, 600, 10
+        try:
+            import tkinter as tk
+        except:
+            return 800, 600, 10
     plus = True
     while True:
         win = tk.Tk()
@@ -2446,32 +2447,6 @@ def luhnFunc(number):
         checksum += sum(digits_of(d*2))
     return checksum % 10 == 0
 
-def internetConnect(host="1.1.1.1", port=53):
-    """
-    Host: 1.1.1.1 free Domain Name System (DNS) service
-    OpenPort: 53/tcp
-    Service: domain (DNS/TCP)
-    """
-    import socket
-
-    try:
-        socket.setdefaulttimeout(1)
-        socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((host, port))
-        return True
-    except:
-        return False
-
-def roundup(number, places=0):
-    from decimal import Decimal as dec
-    from decimal import ROUND_HALF_UP
-
-    if type(number) is float:
-        number = str(number)
-    place = "1."
-    for i in range(places):
-        place = "".join([place, "0"])
-    return float(dec(number).quantize(dec(place), rounding=ROUND_HALF_UP))
-
 def getColors(style, scheme):
     if scheme == "R":
         color = (
diff --git a/uty/mklinux.py b/uty/mklinux.py
index 2a9f266..3b7f825 100644
--- a/uty/mklinux.py
+++ b/uty/mklinux.py
@@ -45,7 +45,7 @@ for o, v in opts:
         print("""
 Usage: python mklinux.py [options]
 
-    -d The Installed Path e.g. /home/paul/Tartan\prg
+    -d The Installed Path e.g. /home/paul/Tartan/prg
     -e The Destination Path e.g. /home/paul/TartanExe
     -f Generate Onefile
     -s The Source path e.g. /home/paul/TartanSve
diff --git a/uty/pkgprg.py b/uty/pkgprg.py
index 6334b93..9af9e24 100644
--- a/uty/pkgprg.py
+++ b/uty/pkgprg.py
@@ -434,16 +434,16 @@ if publish:
     if windows:
         # Rename Windows exe's
         if "32" in bits:
-            exeCmd("mv %s/%s/%s-%s-32.exe %s/%s/%s_%s.%s-32.exe" %
+            exeCmd("cp %s/%s/%s-%s-32.exe %s/%s/%s_%s.%s-32.exe" %
                 (bd, bx, dist, vv, bd, bx, cs, cver[0], cver[1]))
         if "64" in bits:
-            exeCmd("mv %s/%s/%s-%s-64.exe %s/%s/%s_%s.%s-64.exe" %
+            exeCmd("cp %s/%s/%s-%s-64.exe %s/%s/%s_%s.%s-64.exe" %
                 (bd, bx, dist, vv, bd, bx, cs, cver[0], cver[1]))
         if "8" in bits:
-            exeCmd("mv %s/%s/%s-%s-8.exe %s/%s/%s_%s.%s-8.exe" %
+            exeCmd("cp %s/%s/%s-%s-8.exe %s/%s/%s_%s.%s-8.exe" %
                 (bd, bx, dist, vv, bd, bx, cs, cver[0], cver[1]))
         if "7" in bits:
-            exeCmd("mv %s/%s/%s-%s-7.exe %s/%s/%s_%s.%s-7.exe" %
+            exeCmd("cp %s/%s/%s-%s-7.exe %s/%s/%s_%s.%s-7.exe" %
                 (bd, bx, dist, vv, bd, bx, cs, cver[0], cver[1]))
     print("Version Number is %s.%s" % tuple(cver))
     # Dropbox
