diff --git a/TartanClasses.py b/TartanClasses.py
old mode 100755
new mode 100644
index 5a36335..afe613a
--- a/TartanClasses.py
+++ b/TartanClasses.py
@@ -40,6 +40,8 @@ from tartanFunctions import getUnderline, importTkinter, loadRcFile
 from tartanFunctions import luhnFunc, makeArray, mthendDate, parsePrg
 from tartanFunctions import printPDF, projectDate, removeFunctions, sendMail
 from tartanFunctions import showError, showException, showWarning, doPublish
+from tartanFunctions import unbindAllWidgets, getManager, placeWindow
+from tartanFunctions import cutpasteMenu
 import tartanWork
 
 try:
@@ -77,7 +79,7 @@ except:
 # Excel import and export modules
 # ========================================================
 try:
-    import pyexcel, pyexcel_xls
+    import pyexcel
     XLS = True
 except:
     XLS = False
@@ -86,12 +88,11 @@ try:
     XLSX = True
 except:
     XLSX = False
-XLWT = bool(chkMod("xlwt"))
 # ========================================================
 # Openoffice import module
 # ========================================================
 try:
-    from pyexcel_ods import get_data as gods
+    from pyexcel_ods import get_data as getods
     ODS = True
 except:
     ODS = False
@@ -132,21 +133,13 @@ try:
     tk, ttk = importTkinter()
     if not tk:
         raise Exception
-
-    try:
-        import tkinter.filedialog as tkfile
-        import tkinter.font as tkfont
-    except:
-        import tkFileDialog as tkfile
-        import tkFont as tkfont
+    import tkinter.filedialog as tkfile
+    import tkinter.font as tkfont
     try:
         from tkcolorpicker import askcolor
         CPICK = True
     except:
-        try:
-            import tkinter.colorchooser as tkcolor
-        except:
-            import tkColorChooser as tkcolor
+        import tkinter.colorchooser as tkcolor
         CPICK = False
     from PIL import Image, ImageTk
 
@@ -157,86 +150,6 @@ try:
         "udiaeresis", "Udiaeresis",
         "ssharp"]
 
-    def unbindAllWidgets(widget):
-        binds = []
-        for bind in widget.winfo_toplevel().bind():
-            if "<Key-Alt_L>" in bind:
-                binds.append((bind, widget.winfo_toplevel().bind(bind)))
-                widget.winfo_toplevel().unbind(bind)
-        return binds
-
-    def getManager(widget):
-        # Window Placement
-        try:
-            children = widget.winfo_children()
-            if not children:
-                mgr = "pack"
-            else:
-                mgr = ""
-                for c in children:
-                    if c.winfo_manager():
-                        mgr = c.winfo_manager()
-                        break
-        except:
-            mgr = "pack"
-        return mgr
-
-    def placeWindow(window, parent=None, place="C", size=None, expose=False):
-        window.update_idletasks()
-        if size:
-            ww, wh = size
-        else:
-            ww = window.winfo_reqwidth()
-            wh = window.winfo_reqheight()
-        if window.winfo_class().lower() == "tk":
-            parent = None
-        if parent:
-            if parent.winfo_class().lower() not in ("tk", "toplevel"):
-                parent = parent.winfo_toplevel()
-            wx = int(parent.winfo_x() + (parent.winfo_width() / 2 - ww / 2))
-            wy = int(parent.winfo_y() + (parent.winfo_height() / 2 - wh / 2))
-        else:
-            if place == "L":
-                wx = 0
-            elif place == "R":
-                wx = window.winfo_screenwidth() - ww
-            else:
-                wx = int((window.winfo_screenwidth() - ww) / 2)
-            wy = 0
-        window.geometry("%dx%d+%d+%d" % (ww, wh, wx, wy))
-        if expose:
-            window.deiconify()
-        window.update_idletasks()
-
-    def cut_pasteMenu(event):
-        # Cut, copy and paste menu
-        wid = event.widget
-        font = tkfont.Font(font=("Arial", 10))
-        wid.menu = tk.Menu(wid, tearoff=False, takefocus=0, font=font)
-        image = getImage("Cut", (20, 20))
-        wid.menu.add_command(label="Cut", image=image, compound="left",
-            accelerator="Ctl-X", font=font)
-        wid.menu.i1 = image
-        image = getImage("Copy", (20, 20))
-        wid.menu.add_command(label="Copy", image=image, compound="left",
-            accelerator="Ctl-C", font=font)
-        wid.menu.i2 = image
-        image = getImage("Paste", (20, 20))
-        wid.menu.add_command(label="Paste", image=image, compound="left",
-            accelerator="Ctl-V", font=font)
-        wid.menu.i3 = image
-        wid.menu.add_separator()
-        wid.menu.add_command(label="Select all")
-        wid.menu.entryconfigure("Cut", command=lambda:
-            wid.focus_force() or wid.event_generate("<<Cut>>"))
-        wid.menu.entryconfigure("Copy", command=lambda:
-            wid.focus_force() or wid.event_generate("<<Copy>>"))
-        wid.menu.entryconfigure("Paste", command=lambda:
-            wid.focus_force() or wid.event_generate("<<Paste>>"))
-        wid.menu.entryconfigure("Select all", command=wid.select_all)
-        wid.menu.tk_popup(event.x_root + 40, event.y_root + 10, entry="0")
-        return "break"
-
     class ArrowButton(ttk.Button):
         arrow_layout = lambda self, direc: ([("Button.focus",
             {"children": [("Button.%sarrow" % direc, None)]})])
@@ -253,14 +166,13 @@ try:
 
     class MyButtonBox(ttk.Frame):
         def __init__(self, parent, row=None, padx=0, pady=0, **kwargs):
-            ttk.Frame.__init__(self, parent, **kwargs)
-            parent.update_idletasks()
+            super().__init__(parent, **kwargs)
             if getManager(parent) in ("grid", "place"):
                 if row is None:
                     row = parent.grid_size()[1]
                 self.grid(row=row, padx=padx, pady=pady, sticky="ew")
             else:
-                self.pack(fill="x", side="bottom")
+                self.pack(fill="x", side="bottom", padx=padx, pady=pady)
             self.rows = {}
 
         def addButton(self, text, cmd, row=0, spn=1):
@@ -290,7 +202,7 @@ try:
             widgets[idx].focus_set()
 
     class MyButton(ttk.Button):
-        def __init__(self, parent, cmd=None, txt=True, img=True, fnt=None, **kwargs):
+        def __init__(self, parent, cmd=None, txt=True, img=True, fnt=None, relief=None, **kwargs):
             if "style" not in kwargs:
                 kwargs["style"] = "MyButton.TButton"
             kwargs["width"] = -1
@@ -299,18 +211,20 @@ try:
             if "underline" not in kwargs:
                 kwargs["underline"] = -1
             kwargs["takefocus"] = False
-            ttk.Button.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             self.parent = parent
+            style = ttk.Style()
             if fnt:
-                style = ttk.Style()
                 if type(fnt) == str:
                     name = fnt
                 elif len(fnt) == 2:
                     name = "%s%s" % tuple(fnt)
                 else:
                     name = "%s%s%s" % tuple(fnt)
-                style.configure("%s.MyButton.TButton" % name, font=fnt)
-                self.configure(style="%s.MyButton.TButton" % name)
+                style.configure("%s.%s" % (name, kwargs["style"]), font=fnt)
+                self.configure(style="%s.%s" % (name, kwargs["style"]))
+            if relief:
+                style.configure(kwargs["style"], relief=relief)
             self.setLabel(kwargs["text"], kwargs["underline"], txt=txt,
                 img=img, cmd=cmd)
 
@@ -364,7 +278,7 @@ try:
         datetime = calendar.datetime.datetime
         timedelta = calendar.datetime.timedelta
 
-        def __init__(self, widget=None, **kw):
+        def __init__(self, parent, **kw):
             """
             WIDGET-SPECIFIC OPTIONS
                 locale, fwday, fdate, titlebg, titlefg, calendarbg, font
@@ -378,29 +292,24 @@ try:
                 "font": "Courier 10 bold"}
             params.update(kw)
             for key in params:
-                setattr(self, "_%s" % key, params[key])
-            self._idate = self._check_date()
-            self._font = tkfont.Font(font=self._font)
-            tk.Toplevel.__init__(self, relief="raised", pady=2)
-            self.wm_overrideredirect(True)
-            if widget:
-                x = widget.winfo_rootx()
-                y = widget.winfo_rooty() + widget.winfo_height()
-                self.wm_geometry("+%d+%d" % (x, y))
-            else:
-                placeWindow(self, widget, expose=True)
-            self.grab_set()
-            self._cal = calendar.TextCalendar(self._fwday)
-            self._setup_styles()       # creates custom styles
-            self._create_topbar()      # create top bar
-            self._selection = None
-            self._build_calendar()
+                setattr(self, key, params[key])
+            self.idate = self.doCheckDate()
+            self.font = tkfont.Font(font=self.font)
+            super().__init__(relief="raised", pady=2)
+            self.overrideredirect(True)
+            x = parent.winfo_rootx()
+            y = parent.winfo_rooty() + parent.winfo_height()
+            self.geometry("+%d+%d" % (x, y))
+            self.cal = calendar.TextCalendar(self.fwday)
+            self.doSetupStyles()        # creates custom styles
+            self.doCreateTopbar()       # create top bar
+            self.doBuildCalendar()      # create the calendar
             self.wait_window()
 
-        def _check_date(self):
+        def doCheckDate(self):
             year = None
-            if self._fdate:
-                date = CCD(self._fdate, "D1", 10)
+            if self.fdate:
+                date = CCD(self.fdate, "D1", 10)
                 if not date.err:
                     year = int(date.work / 10000)
                     month = int(date.work / 100) % 100
@@ -412,7 +321,7 @@ try:
             self.selected = year * 10000 + month * 100 + day
             return self.datetime(year, month, day)
 
-        def _setup_styles(self):
+        def doSetupStyles(self):
             # custom ttk styles
             style = ttk.Style(self.master)
             arrow_layout = lambda ddd: ([("Button.focus",
@@ -420,90 +329,90 @@ try:
             style.layout("L.TButton", arrow_layout("left"))
             style.layout("R.TButton", arrow_layout("right"))
 
-        def _create_topbar(self):
-            tbr = ttk.Frame(self, relief="flat")
+        def doCreateTopbar(self):
+            tbr = MyFrame(self, relief="flat")
+            tbr.columnconfigure(1, weight=1)
             tbr.pack(side="top", fill="x", padx=2, pady=2)
-            lbtn = ArrowButton(tbr, direction="left", command=self._prev_month)
-            rbtn = ArrowButton(tbr, direction="right", command=self._next_month)
-            self._header = MyLabel(tbr, anchor="c", text="", font=self._font)
+            lbtn = ArrowButton(tbr, direction="left", command=self.doPrevMonth)
+            rbtn = ArrowButton(tbr, direction="right", command=self.doNextMonth)
+            self.header = MyLabel(tbr, anchor="c", text="", font=self.font)
             lbtn.grid(row=0, column=0, sticky="w")
-            self._header.grid(row=0, column=1, padx=6)
+            self.header.grid(row=0, column=1, padx=6, sticky="ew")
             rbtn.grid(row=0, column=2, sticky="w")
-            tbr.grid_columnconfigure(1, weight=1)
-            self._calendar = None
+            self.calendar = None
 
-        def _build_calendar(self):
+        def doBuildCalendar(self):
             # update header text (Month, YEAR)
-            header = self._cal.formatmonthname(self._idate.year,
-                self._idate.month, 0)
-            self._header["text"] = header.title()
+            header = self.cal.formatmonthname(self.idate.year,
+                self.idate.month, 0)
+            self.header["text"] = header.title()
             # create calendar
-            if self._calendar:
-                self._calendar.destroy()
-            self._calendar = MyFrame(self)
-            self._calendar.pack(fill="both", expand=True, side="bottom",
-                padx=2, pady=2)
-            cols = self._cal.formatweekheader(3).split()
+            if self.calendar:
+                self.calendar.destroy()
+            self.calendar = MyFrame(self, bg="grey")
+            self.calendar.pack(fill="both", expand=True, side="bottom",
+                padx=1, pady=1)
+            cols = self.cal.formatweekheader(3).split()
             for num, col in enumerate(cols):
-                day = MyLabel(self._calendar, text=col, relief=self._relief,
-                    font=self._font, borderwidth=self._bwidth)
-                day.grid(row=0, column=num)
-            cal = self._cal.monthdayscalendar(self._idate.year,
-                self._idate.month)
-            for seq, row in enumerate(cal):
+                day = MyLabel(self.calendar, text=col, font=self.font)
+                day.grid(row=0, column=num, padx=1, pady=1)
+            self.caldat = self.cal.monthdayscalendar(self.idate.year,
+                self.idate.month)
+            for seq, row in enumerate(self.caldat):
                 for num, col in enumerate(row):
                     if col:
-                        color = bool(int(col) == self._idate.day)
-                        day = MyLabel(self._calendar, text="%3s" % col,
-                            color=color, relief=self._relief,
-                            font=self._font, borderwidth=self._bwidth)
-                        day.bind("<ButtonRelease-1>", self._pressed)
+                        color = bool(int(col) == self.idate.day)
+                        if color:
+                            color = ("red", "white")
+                        day = MyLabel(self.calendar, text="%3s" % col,
+                            color=color, font=self.font)
+                        day.bind("<ButtonRelease-1>", self.doPressed)
                     else:
-                        day = MyLabel(self._calendar, text="%3s" % "",
-                            color=False, relief=self._relief,
-                            font=self._font, borderwidth=self._bwidth)
-                    day.grid(row=seq + 1, column=num)
+                        day = MyLabel(self.calendar, text="%3s" % "",
+                            color=False, font=self.font)
+                    day.grid(row=seq + 1, column=num, padx=1, pady=1)
             # set the minimal size for the widget and other bindings
-            self._calendar.bind("<Map>", self._minsize)
-            self._calendar.bind("<Up>", self._next_period)
-            self._calendar.bind("<Down>", self._next_period)
-            self._calendar.bind("<Left>", self._next_period)
-            self._calendar.bind("<Right>", self._next_period)
-            self._calendar.bind("<Escape>", self._quit)
-            self._calendar.bind("<Return>", self._quit)
-            self._calendar.bind("<KP_Enter>", self._quit)
-            self._calendar.bind("<ButtonRelease-1>", self._pressed)
-            self._calendar.focus_set()
-
-        def _minsize(self, event):
-            self.master.wm_minsize(self.winfo_width(), self.winfo_height())
-
-        def _show_selection(self, text, bbox):
+            self.calendar.bind("<Map>", self.doMinsize)
+            self.calendar.bind("<Up>", self.doNextPeriod)
+            self.calendar.bind("<Down>", self.doNextPeriod)
+            self.calendar.bind("<Left>", self.doNextPeriod)
+            self.calendar.bind("<Right>", self.doNextPeriod)
+            self.calendar.bind("<Escape>", self.doQuit)
+            self.calendar.bind("<Return>", self.doQuit)
+            self.calendar.bind("<KP_Enter>", self.doQuit)
+            self.calendar.bind("<ButtonRelease-1>", self.doPressed)
+            self.calendar.focus_set()
+
+        def doMinsize(self, event):
+            self.master.minsize(self.winfo_width(), self.winfo_height())
+
+        def doShowSelection(self, text, bbox):
             x, y, width, height = bbox
 
-        def _pressed(self, event):
+        def doPressed(self, event):
             """Clicked somewhere in the calendar."""
             day = int(event.widget.cget("text"))
-            self.selected = self._idate.year * 10000
-            self.selected = self.selected + self._idate.month * 100
+            self.selected = self.idate.year * 10000
+            self.selected = self.selected + self.idate.month * 100
             self.selected = self.selected + day
-            self._quit()
+            self.doQuit()
 
-        def _prev_month(self):
+        def doPrevMonth(self):
             """Update calendar to show the previous month."""
-            self._idate = self._idate - self.timedelta(days=1)
-            self._idate = self.datetime(self._idate.year, self._idate.month, 1)
-            self._build_calendar()
+            self.idate = self.idate - self.timedelta(days=1)
+            self.idate = self.datetime(self.idate.year, self.idate.month, 1)
+            self.doBuildCalendar()
 
-        def _next_month(self):
+        def doNextMonth(self):
             """Update calendar to show the next month."""
-            year, month = self._idate.year, self._idate.month
-            self._idate = self._idate + self.timedelta(
+            year, month = self.idate.year, self.idate.month
+            self.idate = self.idate + self.timedelta(
                 days=calendar.monthrange(year, month)[1] + 1)
-            self._idate = self.datetime(self._idate.year, self._idate.month, 1)
-            self._build_calendar()
+            self.idate = self.datetime(self.idate.year, self.idate.month, 1)
+            self.doBuildCalendar()
 
-        def _next_period(self, event):
+        def doNextPeriod(self, event):
+            mth = (int(self.selected / 100)) % 100
             if event.keysym == "Left":
                 self.selected = projectDate(self.selected, -1)
             elif event.keysym == "Right":
@@ -512,22 +421,31 @@ try:
                 self.selected = projectDate(self.selected, -7)
             else:
                 self.selected = projectDate(self.selected, 7)
-            self._idate = self.datetime(int(self.selected / 10000),
+            self.idate = self.datetime(int(self.selected / 10000),
                 int(self.selected / 100) % 100, self.selected % 100)
-            self._build_calendar()
+            chk = (int(self.selected / 100)) % 100
+            if chk == mth:
+                for seq, row in enumerate(self.caldat):
+                    for num, col in enumerate(row):
+                        wid = self.calendar.grid_slaves(row=seq+1, column=num)
+                        if col and bool(int(col) == self.idate.day):
+                            wid[0].configure(style="Red.TLabel")
+                        else:
+                            wid[0].configure(style="TLabel")
+            else:
+                self.doBuildCalendar()
 
-        def _quit(self, event=None):
+        def doQuit(self, event=None):
             if event and event.keysym == "Escape":
                 self.selected = None
-            self._calendar.destroy()
-            self.grab_release()
+            self.calendar.destroy()
             self.destroy()
 
     class MyCheckButton(ttk.Checkbutton):
         def __init__(self, parent, **kwargs):
             if "style" not in kwargs:
                 kwargs["style"] = "MyCheckbutton.TCheckbutton"
-            ttk.Checkbutton.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             self.configure(onvalue="Y", offvalue="N")
             self.event_add("<<mychkbx>>", "<F5>", "<Escape>",
                 "<Return>", "<KP_Enter>")
@@ -535,7 +453,7 @@ try:
     class MyEntry(ttk.Entry):
         def __init__(self, parent, maxsize=None, cmd=None, aut=False, **kwargs):
             self.parent = parent
-            ttk.Entry.__init__(self, self.parent, **kwargs)
+            super().__init__(self.parent, **kwargs)
             self.bind("<Button-3><ButtonRelease-3>", self.show_menu)
             self.event_add("<<myentry>>", "<F1>", "<F5>", "<Escape>")
             self.configure(takefocus=False)
@@ -552,7 +470,7 @@ try:
                 self.hits = []
                 self.hitindex = 0
                 self.position = 0
-                self.bind("<KeyRelease>", self.in_line_way)
+                self.bind("<KeyRelease>", self.inline_way)
             elif aut == "L":
                 self.clist = []
                 self.bind("<Down>", self.down)
@@ -565,12 +483,12 @@ try:
         def show_menu(self, event):
             if str(self.cget("state")) == "disabled":
                 return
-            cut_pasteMenu(event)
+            cutpasteMenu(event)
 
         def maxsize(self, maxsize, before, after):
             return bool(len(after) <= int(maxsize))
 
-        def in_line_way(self, event):
+        def inline_way(self, event):
             if not self.get():
                 return
             if event.keysym == "BackSpace":
@@ -585,13 +503,13 @@ try:
             if event.keysym == "Right":
                 self.position = self.index("end")
             if event.keysym == "Down":
-                self.in_line_aut(1)
+                self.inline_aut(1)
             if event.keysym == "Up":
-                self.in_line_aut(-1)
+                self.inline_aut(-1)
             if len(event.keysym) == 1 or event.keysym in tkinter_umlauts:
-                self.in_line_aut()
+                self.inline_aut()
 
-        def in_line_aut(self, delta=0):
+        def inline_aut(self, delta=0):
             if delta:
                 self.delete(self.position, "end")
             else:
@@ -624,7 +542,7 @@ try:
                 self.lf.overrideredirect(True)
                 wdth = int(self.cget("width"))
                 if len(words) > 10:
-                    yScroll = tk.Scrollbar(self.lf, orient="vertical")
+                    yScroll = ttk.Scrollbar(self.lf, orient="vertical")
                     yScroll.grid(row=0, column=1, sticky="ns")
                     self.lb = tk.Listbox(self.lf, width=wdth, height=10,
                         yscrollcommand=yScroll.set)
@@ -636,7 +554,7 @@ try:
                 self.lb.bind("<Return>", self.list_aut)
                 self.lb.bind("<Escape>", self.escape)
                 self.lb.grid(row=0, column=0, sticky="nsew")
-                self.lf.wm_geometry("+%d+%d" % (self.winfo_rootx(),
+                self.lf.geometry("+%d+%d" % (self.winfo_rootx(),
                     self.winfo_rooty() + self.winfo_height()))
                 self.lb.delete(0, "end")
                 for w in words:
@@ -685,7 +603,7 @@ try:
             else:
                 name = "TFrame"
                 kwargs["style"] = name
-            ttk.Frame.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             if bg:
                 style = ttk.Style()
                 style.configure("%s.%s" % (bg, name), background=bg)
@@ -698,10 +616,10 @@ try:
             else:
                 name = "TLabel"
                 kwargs["style"] = name
-            ttk.Label.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             style = ttk.Style()
             if color and type(color) in (list, tuple):
-                name = "NLabel.%s" % name
+                name = "%s.%s" % (color[0].capitalize(), name)
                 style.configure(name,
                     foreground=color[0],
                     background=color[1])
@@ -712,15 +630,26 @@ try:
                 self.configure(width=size)
 
     class MyMenuButton(tk.Menubutton):
-        def __init__(self, parent, fg=None, bg=None, **kwargs):
+        def __init__(self, parent, font="TkMenuFont", fg=None, bg=None, af=None, ab=None, relief="raised", fill="both", exp="yes", side="left", **kwargs):
             tk.Menubutton.__init__(self, parent, **kwargs)
-            font = tkfont.Font(font="TkMenuFont")
-            self.configure(relief="raised", bg=bg, fg=fg, font=font,
-                activebackground=fg, activeforeground=bg)
-            self.pack(fill="both", expand="yes", side="left")
-            parent.bind("<Alt-%s>" % kwargs["text"]
+            if ab is None:
+                af = fg
+                style = ttk.Style()
+                for s in style.map("TButton")["background"]:
+                    if s[0] == "active":
+                        ab = s[1]
+            self.configure(relief=relief, font=font, bg=bg, fg=fg,
+                activebackground=ab, activeforeground=af)
+            self.pack(fill=fill, expand=exp, side=side)
+            if "underline" in kwargs:
+                self.bind("<Alt-%s>" % kwargs["text"]
+                    [kwargs["underline"]].lower(), self.doPost)
+                self.bind("<Alt-%s>" % kwargs["text"]
+                    [kwargs["underline"]].upper(), self.doPost)
+                topl = parent.winfo_toplevel()
+                topl.bind("<Alt-%s>" % kwargs["text"]
                     [kwargs["underline"]].lower(), self.doPost)
-            parent.bind("<Alt-%s>" % kwargs["text"]
+                topl.bind("<Alt-%s>" % kwargs["text"]
                     [kwargs["underline"]].upper(), self.doPost)
 
         def doPost(self, event):
@@ -730,59 +659,54 @@ try:
             self.event_generate("<Leave>")
 
     class MyMessageBox(object):
-        def __init__(self, parent, dtype, title, mess, butt=None, dflt=None,
-                plc=True):
-            if not parent:
-                self.geom = True
-                self.parent = MkWindow(tk=True, remov=False, resiz=False).newwin
-                placeWindow(self.parent)
-            else:
-                self.geom = False
-                self.parent = parent
-            style = ttk.Style()
-            style.configure("MFrame.TFrame", background="black")
-            self.frame = MyFrame(self.parent, bg="black", borderwidth=5,
+        def __init__(self, parent, dtype, title, mess, butt=None, dflt=None):
+            self.parent = parent
+            if self.parent:
+                if self.parent.winfo_toplevel().state() == "withdrawn":
+                    self.parent.winfo_toplevel().deiconify()
+                    self.parent.update_idletasks()
+                wrap = int(self.parent.winfo_width() / 2)
+                mkw = MkWindow(trans=self.parent, decor=False, remov=False,
+                    resiz=False)
+                self.msgwin = mkw.newwin
+                focus = self.msgwin.master.focus_get()
+                # Save and clear toplevel bindings
+                self.topbinds = unbindAllWidgets(self.msgwin.master)
+                # Save and disable all buttons
+                cnt = 0
+                self.butsve = []
+                frm = [self.msgwin.master]
+                while True:
+                    try:
+                        for ch in frm[cnt].winfo_children():
+                            if ch.winfo_class() == "Toplevel":
+                                frm.append(ch)
+                            elif ch.winfo_class() == "TFrame":
+                                frm.append(ch)
+                            elif ch.winfo_class() == "TButton":
+                                self.butsve.append((ch, str(ch.cget("state"))))
+                                ch.configure(state="disabled")
+                        cnt += 1
+                    except:
+                        break
+            else:
+                wrap = 800
+                mkw = MkWindow(tk=True, decor=True, resiz=False)
+                self.msgwin = mkw.newwin
+            self.frame = MyFrame(self.msgwin, bg="black", borderwidth=5,
                 relief="ridge", style="MFrame.TFrame")
-            if plc:
-                self.frame.place(anchor="center", relx=0.5, rely=0.5)
-            try:
-                self.frame.grab_set()
-            except:
-                pass
-            # Save and clear toplevel bindings
-            self.topbinds = unbindAllWidgets(self.frame)
-            # Save and disable all buttons
-            frm = [self.frame.winfo_toplevel()]
-            self.butsve = []
-            cnt = 0
-            while True:
-                try:
-                    for ch in frm[cnt].winfo_children():
-                        if ch.winfo_class() == "TFrame":
-                            frm.append(ch)
-                        elif ch.winfo_class() == "TButton":
-                            self.butsve.append((ch, str(ch.cget("state"))))
-                            ch.configure(state="disabled")
-                    cnt += 1
-                except:
-                    break
             tit = MyLabel(self.frame, text=title, anchor="c", relief="raised")
             tit.pack(fill="x", expand="yes", ipadx=2, ipady=5)
-            if not self.geom:
-                wrap = self.parent.winfo_width() * .9
-                if wrap < 400:
-                    wrap = 400
-                elif wrap > 800:
-                    wrap = 800
-            else:
-                wrap = 400
             self.binds = []
             label = MyLabel(self.frame, text=mess, padding=5, anchor="w",
                 justify="left", color=False, foreground="black",
                 background="white", wraplength=wrap)
-            self.tkimg = getImage(dtype)
-            if self.tkimg:
-                label.configure(image=self.tkimg, compound="left")
+            try:
+                self.tkimg = getImage(dtype)
+                if self.tkimg:
+                    label.configure(image=self.tkimg, compound="left")
+            except:
+                pass
             label.pack(fill="both", expand="yes")
             bbox = MyButtonBox(self.frame, row=1)
             self.butts = []
@@ -811,19 +735,34 @@ try:
                     b.bind("<Enter>", self.doEnter)
                     b.bind("<Leave>", self.doLeave)
                     if but[0].lower() == dflt.lower():
-                        b.focus_set()
-                        self.dflt = b
+                        b.focus_force()
+            self.frame.update_idletasks()
+            # Message window width and height
+            w = self.frame.winfo_reqwidth()
+            h = self.frame.winfo_reqheight()
+            if self.parent:
+                # Centre message window on parent
+                if self.parent.state() == "withdrawn":
+                    self.parent.deiconify()
+                    self.parent.update_idletasks()
+                placeWindow(self.msgwin, self.parent, size=(w, h))
+            else:
+                placeWindow(self.msgwin, place="M", size=(w, h), expose=True)
+            # Place message frame in centre of message window
+            self.frame.place(anchor="center", relx=0.5, rely=0.5)
             self.frame.update_idletasks()
-            if self.geom:
-                x = int(int(self.frame.winfo_screenwidth()) / 2) - 200
-                y = int(int(self.frame.winfo_screenheight()) / 2) - 150
-                w = self.frame.winfo_reqwidth()
-                h = self.frame.winfo_reqheight()
-                self.parent.geometry("%dx%d+%d+%d" % (w, h, x, y))
             if self.frame.winfo_toplevel().state() == "withdrawn":
                 self.frame.winfo_toplevel().deiconify()
-            if plc:
-                self.frame.wait_window()
+            # Make message window modal
+            self.msgwin.grab_set()
+            if self.parent:
+                self.msgwin.focus_set()
+                self.msgwin.wait_window()
+            else:
+                self.msgwin.focus_force()
+                self.msgwin.mainloop()
+            if self.parent and focus:
+                focus.focus_set()
 
         def doEnter(self, event):
             event.widget.focus_set()
@@ -836,15 +775,16 @@ try:
             # Clear frame bindings
             for bind in self.binds:
                 self.frame.winfo_toplevel().unbind(bind)
-            # Reinstate toplevel bindings
-            for bind in self.topbinds:
-                self.frame.winfo_toplevel().bind(bind[0], bind[1])
-            # Reinstate buttons
-            for butt in self.butsve:
-                butt[0].configure(state=butt[1])
-            if self.geom:
-                self.parent.destroy()
-            self.frame.destroy()
+            if self.parent:
+                # Reinstate toplevel bindings
+                for bind in self.topbinds:
+                    self.msgwin.master.bind(bind[0], bind[1])
+                # Reinstate buttons
+                for butt in self.butsve:
+                    butt[0].configure(state=butt[1])
+            self.msgwin.destroy()
+            if not self.parent:
+                self.msgwin.quit()
 
         def navigate(self, event, num):
             if event.keysym == "Left":
@@ -863,7 +803,7 @@ try:
             self.parent = parent
             if "style" not in kwargs:
                 kwargs["style"] = "MyRadiobutton.TRadiobutton"
-            ttk.Radiobutton.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             self.event_add("<<myradio>>", "<F5>", "<Escape>")
             self.bind("<Return>", lambda event: event.widget.invoke())
             self.bind("<KP_Enter>", lambda event: event.widget.invoke())
@@ -898,7 +838,7 @@ try:
 
     class MyText(tk.Text):
         def __init__(self, parent, **kwargs):
-            tk.Text.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             self.configure(bg="white", fg="black", selectforeground="black",
                 selectbackground="light gray", highlightbackground="gray",
                 relief="flat")
@@ -911,11 +851,11 @@ try:
         def show_menu(self, event):
             if str(self.cget("state")) == "disabled":
                 return
-            cut_pasteMenu(event)
+            cutpasteMenu(event)
 
     class MyTextView_v(tk.Text):
         def __init__(self, parent, bg=None, fg=None, bd=1, **kwargs):
-            tk.Text.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             self.configure(bg="white", fg="black", selectforeground="black",
                 selectbackground="light gray", highlightbackground="gray",
                 bd=bd, relief="flat")
@@ -932,7 +872,7 @@ try:
         def show_menu(self, event):
             if str(self.cget("state")) == "disabled":
                 return
-            cut_pasteMenu(event)
+            cutpasteMenu(event)
 
         def checkHeight(self, event):
             text = event.widget.get("1.0", "end").rstrip()
@@ -946,7 +886,7 @@ try:
 
     class MyTextView_V(tk.Text):
         def __init__(self, parent, bg=None, fg=None, bd=1, **kwargs):
-            tk.Text.__init__(self, parent, **kwargs)
+            super().__init__(parent, **kwargs)
             self.configure(bg="white", fg="black", selectforeground="black",
                 selectbackground="light gray", highlightbackground="gray",
                 bd=bd, relief="flat")
@@ -960,7 +900,7 @@ try:
         def show_menu(self, event):
             if str(self.cget("state")) == "disabled":
                 return
-            cut_pasteMenu(event)
+            cutpasteMenu(event)
 
     class ScrollGrid(object):
         """
@@ -998,11 +938,9 @@ try:
 
         def drawGrid(self):
             # Draw main window
-            self.window = MkWindow(icon=self.opts["icon"], modal=True,
-                remov=True).newwin
+            self.window = MkWindow(icon=self.opts["icon"]).newwin
             ww = int(self.window.winfo_screenwidth())
             wh = int(self.window.winfo_screenheight() * .9)
-            self.window.maxsize(width=ww, height=wh)
             # Style and fonts and colours
             style = ttk.Style()
             style.configure("TScrollbar", arrowsize=30)
@@ -1253,12 +1191,13 @@ try:
             height += bbox.winfo_reqheight()
             if wh > height:
                 self.window.configure(height=height)
-                self.window.maxsize(width=ww, height=height)
                 self.window.update()
             # Place window
-            self.window.wm_geometry("%dx%d+0+0" % (ww, height))
+            self.window.geometry("%dx%d+0+0" % (ww, height))
             self.window.geometry("+0+0")
-            self.window.deiconify()
+            if self.window.state() == "withdrawn":
+                self.window.deiconify()
+            self.window.grab_set()
 
         def set_scrollregion(self, event):
             self.cv2.configure(scrollregion=self.cv2.bbox("all"))
@@ -1371,7 +1310,7 @@ def rgb(col):
 # =========================================================
 
 class MainFrame(object):
-    def __init__(self, title=None, rcdic=None, xdisplay=True, resiz=False):
+    def __init__(self, title=None, rcdic=None, xdisplay=True):
         if not rcdic:
             self.rcdic = loadRcFile()
         else:
@@ -1380,11 +1319,11 @@ class MainFrame(object):
             showError(None, "rcdic Error",
                 "There is a Problem Loading the tartanrc File")
         else:
-            geo = self.rcdic["geo"].split("x")
-            self.geo = [int(geo[0]), int(geo[1])]
-            self.override = "natrat"
             self.mloop = 0
             self.dbm = None
+            geo = self.rcdic["geo"].split("x")
+            self.geo = [int(geo[0]), int(geo[1])]
+            self.override = b64Convert("decode", "bmF0cmF0")
             if xdisplay:
                 if not GUI:
                     print("Missing Tkinter and/or ttk modules")
@@ -1393,12 +1332,12 @@ class MainFrame(object):
                     title = "Tartan Systems - Copyright %s 2004-2021 "\
                         "Paul Malherbe" % chr(0xa9)
                 self.window = MkWindow(tk=True, title=title, icon="tartan",
-                    resiz=resiz).newwin
+                    size=self.geo, resiz=False).newwin
                 self.setThemeFont()
                 self.createChildren()
                 self.window.config(cursor="arrow")
             else:
-                self.children = False
+                self.childs = False
                 self.window = None
                 self.body = None
 
@@ -1518,37 +1457,18 @@ class MainFrame(object):
         # Body
         self.body = MyFrame(self.window, borderwidth=2, padding=0,
             relief="ridge")
+        self.body.pack_propagate(False)
         # Status
         self.status = MyLabel(self.window, color=False, borderwidth=2,
             background="white", foreground="black", padding=0, relief="ridge")
         self.packChildren()
-        self.children = True
-
-    def resizeChildren(self):
-        font = tkfont.Font(font=(self.rcdic["mft"], self.rcdic["mfs"],"bold"))
-        self.head.configure(text=self.head.cget("text"), font=font)
-        font = tkfont.Font(font=(self.rcdic["dft"], self.rcdic["dfs"],"normal"))
-        self.status.configure(text=self.status.cget("text"), font=font)
-        # If window size is too big make it 90% of the screen size
-        w = self.window.winfo_screenwidth()
-        h = self.window.winfo_screenheight()
-        if self.geo[0] > int(w * .9) or self.geo[1] > int(h * .9):
-            self.geo[0] = int(w * .9)
-            self.geo[1] = int(h * .9)
-        self.window.maxsize(self.geo[0], self.geo[1])
-        self.window.minsize(self.geo[0], self.geo[1])
-        self.window.update_idletasks()
-        self.bh = self.geo[1] - self.head.winfo_reqheight()
-        self.bh = self.bh - self.status.winfo_reqheight()
-        self.body.configure(width=self.geo[0], height=self.bh)
-        placeWindow(self.window, place=self.rcdic["plc"], size=self.geo)
+        self.childs = True
 
     def packChildren(self, ptyp="pack"):
         if ptyp == "pack":
-            self.head.pack(fill="x", expand="yes", side="top")
+            self.head.pack(fill="x", side="top")
             self.body.pack(fill="both", expand="yes")
-            self.body.pack_propagate(False)
-            self.status.pack(fill="x", expand="yes", side="bottom")
+            self.status.pack(fill="x", side="bottom")
             self.window.update_idletasks()
             self.resizeChildren()
         else:
@@ -1556,6 +1476,13 @@ class MainFrame(object):
             self.body.pack_forget()
             self.status.pack_forget()
 
+    def resizeChildren(self):
+        font = tkfont.Font(font=(self.rcdic["mft"], self.rcdic["mfs"],"bold"))
+        self.head.configure(text=self.head.cget("text"), font=font)
+        font = tkfont.Font(font=(self.rcdic["dft"], self.rcdic["dfs"],"normal"))
+        self.status.configure(text=self.status.cget("text"), font=font)
+        placeWindow(self.window, place=self.rcdic["plc"], size=self.geo)
+
     def destroyChildren(self):
         try:
             for child in self.window.winfo_children():
@@ -1563,10 +1490,10 @@ class MainFrame(object):
         except:
             pass
         self.window.update_idletasks()
-        self.children = False
+        self.childs = False
 
     def updateStatus(self, text, bg="white", fg="black"):
-        if self.children:
+        if self.childs:
             self.status.configure(background=bg, foreground=fg, text=text)
             self.window.update_idletasks()
 
@@ -1574,6 +1501,8 @@ class MainFrame(object):
         self.mloop += 1
         if self.mloop > 1:
             print("Loop Error", self.mloop)
+        if self.window.state() == "withdrawn":
+            self.window.deiconify()
         self.window.mainloop()
 
     def closeLoop(self):
@@ -1592,28 +1521,28 @@ class MkWindow(object):
         trans   The window which this window is transient to
         decor   Whether this window has WM decorations
         frame   Whether this window has a frame
-        modal   Whether this window is modal
         remov   Whether this window is removable
+        hide    Withdraw window
     """
     def __init__(self, **args):
         for arg in ("tk", "title", "icon", "size", "resiz", "trans",
-                "decor", "frame", "modal", "remov"):
+                "decor", "frame", "remov", "hide"):
             if arg in args:
                 setattr(self, arg, args[arg])
+            elif arg == "tk":
+                self.tk = False
+            elif arg == "size":
+                self.size = ""
+            elif arg == "resiz":
+                self.resiz = True
             elif arg == "decor":
                 self.decor = True
             elif arg == "frame":
                 self.frame = False
-            elif arg == "modal":
-                self.modal = False
             elif arg == "remov":
                 self.remov = True
-            elif arg == "size":
-                self.size = ""
-            elif arg == "tk":
-                self.tk = False
-            elif arg == "resiz":
-                self.resiz = True
+            elif arg == "hide":
+                self.hide = True
             else:
                 setattr(self, arg, None)
         self.drawWindow()
@@ -1623,12 +1552,13 @@ class MkWindow(object):
         if self.tk:
             # Initial main window
             self.newwin = tk.Tk()
-            # Load any 3rd party themes
+            # Load extra themes if installed
+            # Additional themes must be installed in a folder named 'thm'
+            # Which must be in the Tartan root folder i.e. where
+            # ms0000.py or ms0000.exe resides
             try:
                 ign = ("ImageLib", "pkgIndex", "pkgIndex_package")
-                tdir = os.path.join(os.path.dirname(sys.path[0]), "thm")
-                if not os.path.isdir(tdir):
-                    raise Exception
+                tdir = os.path.join(sys.path[0], "thm")
                 for root, dirs, files in os.walk(tdir):
                     for fle in files:
                         pth = os.path.join(root, fle)
@@ -1636,7 +1566,7 @@ class MkWindow(object):
                         tst = nam.split(".")
                         if tst[-1] == "tcl" and tst[-2] not in ign:
                             try:
-                                self.newwin.tk.eval('source {%s}' % pth)
+                                self.newwin.tk.eval("source {%s}" % pth)
                             except:
                                 continue
             except:
@@ -1655,52 +1585,44 @@ class MkWindow(object):
                 pass
         else:
             self.newwin = tk.Toplevel()
-            if self.trans:
-                self.newwin.transient(self.trans)
-        self.newwin.withdraw()
-        if self.icon:
-            try:
-                self.newwin.tk.call("wm", "iconphoto", self.newwin._w,
-                    "-default", getImage(self.icon))
-            except:
-                pass
-        self.newwin.protocol("WM_DELETE_WINDOW", self.doDestroy)
         self.newwin.bind_all("<Tab>", lambda event: "break")
-        if self.size:
-            self.newwin.configure(width=self.size[0], height=self.size[1])
+        if self.hide:
+            self.newwin.withdraw()
 
     def setAttributes(self):
+        if self.trans:
+            self.newwin.transient(self.trans)
         if self.decor:
+            if self.icon:
+                try:
+                    self.newwin.tk.call("wm", "iconphoto", self.newwin._w,
+                        "-default", getImage(self.icon))
+                except:
+                    pass
+            self.newwin.protocol("WM_DELETE_WINDOW", self.doDestroy)
             if self.title:
                 self.newwin.title(self.title)
             else:
                 self.newwin.title("Tartan Systems - %s 2004-%s Paul Malherbe"
                     % (chr(169), time.localtime().tm_year))
         else:
+            self.newwin.overrideredirect(True)
             self.newwin.update_idletasks()
-            try:
-                self.newwin.wm_attributes("-type", "splash")
-            except:
-                self.newwin.overrideredirect(True)
+        if self.size:
+            self.newwin.configure(width=self.size[0], height=self.size[1])
         if not self.resiz:
             self.newwin.resizable(0, 0)
+        if self.trans:
+            self.newwin.transient(self.trans)
         if self.frame:
             self.newfrm = MyFrame(self.newwin)
             self.newfrm.pack(fill="both", expand="yes")
-        if self.trans:
-            self.newwin.transient(self.trans)
-        if self.modal:
-            try:
-                self.newwin.grab_set()
-            except:
-                self.newwin.wait_visibility()
-                self.newwin.grab_set()
 
     def doDestroy(self):
         if not self.remov or "TARTANDB" in os.environ:
             return True
         ok = askQuestion(screen=self.newwin, head="Destroy Window",
-            mess="Are you Sure you want to Quit this Window!\n\n"
+            mess="Are you Sure you want to Quit?\n\n"
             "It is Possible that Some Data Could Be Lost.\n\n"
             "It is Far Better to Quit via the Menu.", default="no")
         if ok == "no":
@@ -1788,6 +1710,8 @@ class TartanMenu(object):
     def __init__(self, **args):
         for arg in args:
             setattr(self, arg, args[arg])
+        # Original menu font size
+        self.mfs = self.mf.rcdic["mfs"]
         self.setVariables()
 
     def setVariables(self):
@@ -1819,14 +1743,16 @@ class TartanMenu(object):
             fg = self.mf.rcdic["nfg"]
             bg = self.mf.rcdic["nbg"]
         style = ttk.Style()
-        style.configure("MLabel.TLabel", foreground=fg, background=bg)
+        style.configure("Menu.TLabel", foreground=fg, background=bg)
         self.mf.head.configure(text="Tartan Systems Menu (%s)" % self.usr,
-            style="MLabel.TLabel")
+            style="Menu.TLabel")
         self.menubar = MyFrame(self.mf.body)
         labs = {}
         mens = {}
         buts = {}
         column = 0
+        self.mf.rcdic["mfs"] = self.mfs
+        self.mf.setThemeFont(butt=False)
         font = tkfont.Font(font=(self.mf.rcdic["mft"], self.mf.rcdic["mfs"]))
         for m in self.menus:
             if m[0] == "MM":
@@ -1844,7 +1770,7 @@ class TartanMenu(object):
                 else:
                     m[2] = "%s\n%s %s" % tuple(m[2])
                 buts[nm] = MyMenuButton(self.menubar, bg=bg, fg=fg,
-                    menu=m[1], text=m[2], underline=pos)
+                    af=bg, ab=fg, menu=m[1], text=m[2], underline=pos)
                 mens[m[1]] = tk.Menu(buts[nm], fg="black", bg="white",
                     activeforeground=fg, activebackground=bg,
                     font=font, tearoff=False)
@@ -1913,12 +1839,10 @@ class TartanMenu(object):
             self.mf.rcdic["mfs"] = int(self.mf.rcdic["mfs"]) - 1
             self.mf.setThemeFont(butt=False)
             font = tkfont.Font(font="TkMenuFont")
-            for but in buts:
-                buts[but].configure(font=font)
             self.menubar.update_idletasks()
-        self.menubar.pack(anchor="nw", fill="x", expand="yes")
-        iwth = self.mf.body.winfo_reqwidth()
-        ihgt = self.mf.body.winfo_reqheight()
+        self.menubar.pack(anchor="nw", fill="x")
+        iwth = self.mf.body.winfo_width()
+        ihgt = self.mf.body.winfo_height()
         self.image = tk.Canvas(self.mf.body, width=iwth, height=ihgt)
         if self.img:
             self.tkimg = getImage("tartan", (iwth, ihgt))
@@ -1931,8 +1855,6 @@ class TartanMenu(object):
                 text="Tartan Systems", font=("Helvetica", 60), fill="white")
         self.image.pack(fill="both", expand="yes")
         self.mf.updateStatus("Select an Option from the Menu")
-        if self.mf.window.state() == "withdrawn":
-            self.mf.window.deiconify()
         self.menubar.focus_force()
         self.mf.startLoop()
 
@@ -1953,14 +1875,14 @@ class FileDialog(object):
                 setattr(self, opt, opts[opt])
         if "parent" not in opts:
             self.parent = None
-            self.root = tk.Toplevel()
+            self.root = tk.Tk()
             self.root.withdraw()
         else:
             self.root = self.parent.winfo_toplevel()
         if "title" not in opts:
             self.title = "Select ...."
         if "initd" not in opts:
-            self.initd = "."
+            self.initd = os.getcwd()
         if "ftype" not in opts:
             self.ftype = []
         if "multi" not in opts:
@@ -1973,13 +1895,11 @@ class FileDialog(object):
             else:
                 dialog = "__tk_choosedir"
             if self.parent:
-                w0 = int(self.parent.winfo_reqwidth() * .8)
-                h0 = int(self.parent.winfo_reqheight() * .8)
+                w0 = int(self.parent.winfo_width() * .8)
+                h0 = int(self.parent.winfo_height() * .8)
                 x, y = self.parent.winfo_rootx(), self.parent.winfo_rooty()
-                x = x + (int(self.parent.winfo_reqwidth() - w0) / 2)
-                y = y + (int(self.parent.winfo_reqheight() - h0) / 2)
-                w = self.root.winfo_screenwidth()
-                h = self.root.winfo_screenheight()
+                x = x + (int(self.parent.winfo_width() - w0) / 2)
+                y = y + (int(self.parent.winfo_height() - h0) / 2)
                 self.root.tk.call("wm", "geometry",
                     "%s.%s" % (self.parent, dialog),
                     "%dx%d+%d+%d" % (w0, h0, x, y))
@@ -1995,7 +1915,7 @@ class FileDialog(object):
             pass
 
     def askopenfilename(self):
-        self.root.after(100, self.setgeometry, "fle")
+        self.root.after(10, self.setgeometry, "fle")
         if self.multi:
             sel = tkfile.askopenfilenames(title=self.title,
                 parent=self.parent, initialdir=self.initd,
@@ -2005,14 +1925,16 @@ class FileDialog(object):
             else:
                 return sel
         else:
-            return tkfile.askopenfilename(title=self.title,
+            sel = tkfile.askopenfilename(title=self.title,
                 parent=self.parent, initialdir=self.initd,
                 filetypes=self.ftype)
+            return sel
 
     def askdirectory(self):
-        self.root.after(100, self.setgeometry, "dir")
-        return tkfile.askdirectory(title=self.title, parent=self.parent,
+        self.root.after(10, self.setgeometry, "dir")
+        sel = tkfile.askdirectory(title=self.title, parent=self.parent,
             initialdir=self.initd, mustexist=True)
+        return sel
 
 class SplashScreen(object):
     """
@@ -2046,7 +1968,8 @@ Please enjoy yourself while you wait ..."""
             x = int(sw / 2) - int(rootsize[0] / 2)
             y = int(sh / 2) - int(rootsize[1] / 2)
             self.window.geometry("%dx%d+%d+%d" % (rootsize + (x, y)))
-            self.window.deiconify()
+            if self.window.state() == "withdrawn":
+                self.window.deiconify()
         self.refreshSplash()
 
     def refreshSplash(self, text=None):
@@ -2096,6 +2019,14 @@ class Dbase(object):
             if self.dbase == "PgSQL":
                 self.dbmod = "psycopg2"
                 import psycopg2 as engine
+                try:
+                    # Typecast the numeric datatype as Float not Decimal
+                    pgx = engine.extensions
+                    NUM = pgx.new_type(pgx.DECIMAL.values, "NUM",
+                        lambda d, c: float(d) if d is not None else None)
+                    pgx.register_type(NUM)
+                except Exception as err:
+                    raise Exception("Typecast Error (%s)" % err)
                 self.dbf = "%s"
             elif self.dbase == "SQLite":
                 if self.dbdir:
@@ -2113,7 +2044,7 @@ class Dbase(object):
             self.dbopen = False
             self.engine = engine
             if not self.setVariables():
-                raise Exception
+                raise Exception("Variables Error")
         except:
             self.err = True
             showException(self.screen, self.wrkdir,
@@ -2230,15 +2161,6 @@ class Dbase(object):
                 self.db = self.engine.connect(database=self.dbdsn)
                 self.db.text_factory = str
             self.cu = self.db.cursor()
-            if self.dbase == "PgSQL" and self.dbmod == "psycopg2":
-                try:
-                    # Typecast the numeric datatype as Float not Decimal
-                    pgx = self.engine.extensions
-                    NUM = pgx.new_type(pgx.DECIMAL.values, "NUM",
-                        lambda d, c: float(d) if d is not None else None)
-                    pgx.register_type(NUM, self.db)
-                except:
-                    raise Exception
             self.setAutoCommit(auto)
             self.dbopen = True
         except Exception as e:
@@ -2277,11 +2199,10 @@ class Dbase(object):
     def setAutoCommit(self, auto=False):
         if self.dbase == "PgSQL":
             self.db.autocommit = auto
+        elif auto:
+            self.db.isolation_level = None
         else:
-            if auto:
-                self.db.isolation_level = None
-            else:
-                self.db.isolation_level = ""
+            self.db.isolation_level = ""
 
     def closeDbase(self):
         try:
@@ -2435,13 +2356,11 @@ class Dbase(object):
     def dropTable(self, table, frecs=False):
         if self.checkTable(table):
             self.cu.execute("Drop table %s" % table)
-            if frecs:
-                self.cu.execute(
-                    "Delete from ffield where ff_tabl = '%s'" % table)
-                self.cu.execute(
-                    "Delete from ftable where ft_tabl = '%s'" % table)
-            if self.dbase == "SQLite":
-                self.db.execute("VACUUM")
+        if frecs:
+            self.cu.execute(
+                "Delete from ffield where ff_tabl = '%s'" % table)
+            self.cu.execute(
+                "Delete from ftable where ft_tabl = '%s'" % table)
 
 class Sql(object):
     """
@@ -2472,8 +2391,9 @@ class Sql(object):
             self.tables = tables
         for table in self.tables:
             setattr(self, table, table)
-            cols = self.sqlRec(state=("Select * from ffield where ff_tabl=%s "
-                "order by ff_seq" % self.dbm.dbf, (table,)))
+            self.dbm.cu.execute("Select * from ffield where ff_tabl='%s' "
+                "order by ff_seq" % table)
+            cols = self.dbm.cu.fetchall()
             if cols and type(cols) in (list, tuple):
                 col = []
                 fld = ""
@@ -3431,7 +3351,7 @@ class CCD(object):
             self.data = "0"
         try:
             if self.data.count("-"):
-                self.err = "Invalid UnSigned Long (UI-)"
+                self.err = "Invalid UnSigned Long (UL-)"
             else:
                 self.work = int(self.data)
                 self.disp = self.data.rjust(self.quo)
@@ -3638,6 +3558,7 @@ class DBCreate(object):
                 self.sql.sqlRec("Insert into verupd values('%s', %s)" %
                     (self.ver, sysdt))
             if self.dbm.dbase == "SQLite":
+                self.dbm.commitDbase()
                 self.dbm.cu.execute("PRAGMA JOURNAL_MODE=DELETE")
                 self.dbm.cu.execute("PRAGMA SYNCHRONOUS=FULL")
             if self.cmt:
@@ -3674,6 +3595,7 @@ class DBCreate(object):
             self.dbm.createDbase()
             self.dbm.openDbase(dbuser=self.usr, dbpwd=self.pwd, auto=True)
         if self.dbm.dbase == "SQLite":
+            self.dbm.commitDbase()
             self.dbm.cu.execute("PRAGMA JOURNAL_MODE=OFF")
             self.dbm.cu.execute("PRAGMA SYNCHRONOUS=OFF")
         if self.spl:
@@ -3686,17 +3608,16 @@ class DBCreate(object):
                 self.dbm.createTable(table, drop=True, index=self.idx)
             for table in ("ffield", "ftable"):
                 self.dbm.populateTable(table, commit=False)
-        elif self.put == "g":
+        elif self.put == "g" and self.dbm.dbase == "PqSQL":
             tbs = self.sql.sqlRec("Select ft_tabl from ftable group by ft_tabl")
             for tb in tbs:
-                if self.dbm.dbase == "PgSQL":
-                    self.sql.sqlRec("Grant ALL on %s to group %s" % (tb[0],
-                        self.dbm.dbname))
-                    seq = self.sql.sqlRec("Select ff_name from ffield where "\
-                        "ff_tabl = '%s' and ff_type = 'US'" % tb[0])
-                    if seq:
-                        self.sql.sqlRec("Grant ALL on %s_%s_seq to group %s" %
-                            (tb[0], seq[0][0], self.dbm.dbname))
+                self.sql.sqlRec("Grant ALL on %s to group %s" % (tb[0],
+                    self.dbm.dbname))
+                seq = self.sql.sqlRec("Select ff_name from ffield where "\
+                    "ff_tabl = '%s' and ff_type = 'US'" % tb[0])
+                if seq:
+                    self.sql.sqlRec("Grant ALL on %s_%s_seq to group %s" %
+                        (tb[0], seq[0][0], self.dbm.dbname))
         elif self.put == "u":
             self.createUser(self.newusr, self.newpwd)
         if self.put in ("i", "p", "t"):
@@ -4084,8 +4005,8 @@ class TartanDialog(object):
                     self.butt.append(list(but))
             else:
                 setattr(self, arg, args[arg])
-        # Save window bindings
         self.window = self.mf.window
+        # Save window bindings
         self.svebind = []
         for bind in self.window.bind():
             if "<Key-Alt_L>" in bind:
@@ -4193,7 +4114,6 @@ class TartanDialog(object):
                 prt = {
                     "stype": "C",
                     "titl": "Available Printers",
-                    "head": ("Name", "Description"),
                     "data": data}
                 rvs = [("View","V"),("Print","P"),("None","N")]
                 mes = """Select what to do with the generated report.
@@ -4205,8 +4125,8 @@ Print  - The report will be printed on the selected printer."""
                 if self.view[0].lower() in ("y", "c", "x"):
                     if self.view[0].lower() in ("y", "c"):
                         rvs.append(("Export CSV","C"))
-                    if XLWT and self.view[0].lower() in ("y", "x"):
-                        rvs.append(("Export XLS","X"))
+                    if XLSX and self.view[0].lower() in ("y", "x"):
+                        rvs.append(("Export XLSX","X"))
                     mes = """%s
 
 Export - The report in the selected format will be opened
@@ -4599,7 +4519,7 @@ Export - The report in the selected format will be opened
             self.mstFrame = MyFrame(self.master, borderwidth=2, relief="ridge")
             tops = MyLabel(self.mstFrame, anchor="center", text=self.title,
                 borderwidth=2, relief="raised")
-            tops.grid(column=0, sticky="ew")
+            tops.grid(column=0, sticky="nsew")
         else:
             self.mstFrame = MyFrame(self.master)
         self.frt = ""
@@ -4619,24 +4539,17 @@ Export - The report in the selected format will be opened
         self.dfs = self.mf.rcdic["dfs"]
         while True:
             self.mstFrame.update_idletasks()
+            bh = self.mf.body.winfo_height()
             if self.mstFrame.winfo_reqwidth() > int(self.mf.geo[0]) or \
-                    self.mstFrame.winfo_reqheight() > int(self.mf.bh):
+                    self.mstFrame.winfo_reqheight() > int(bh):
                 self.mf.rcdic["dfs"] = int(self.mf.rcdic["dfs"]) - 1
                 self.mf.setThemeFont(butt=False)
                 self.mf.resizeChildren()
             else:
                 break
         self.mstFrame.place(anchor="center", relx=0.5, rely=0.5)
-        if self.mf.window.state() == "withdrawn":
-            self.mf.window.deiconify()
         self.mf.window.update_idletasks()
-        grab = False
-        while not grab:
-            try:
-                self.mstFrame.grab_set()
-                grab = True
-            except:
-                pass
+        self.mstFrame.grab_set()
 
     def drawNoteBook(self, page):
         # Create images for enabled and disabled
@@ -4832,6 +4745,7 @@ Export - The report in the selected format will be opened
             txt = ""
         if fld[3]:
             txt = txt + fld[3]
+        txt = txt.replace("(noesc)", "")
         rpad = dse - self.acc - len(txt) + 1
         if txt and rpad and rpad > 0:
             txt = txt + " " * rpad
@@ -4961,7 +4875,7 @@ Export - The report in the selected format will be opened
         typ = fld[1]
         siz = int(fld[2][0] / 1)
         lim = int(fld[2][1] / 1)
-        txt = fld[3]
+        txt = fld[3].replace("(noesc)", "")
         seq = ((row * self.colq[pag]) + col)
         if typ[0] == "O":                       # Output Field Only
             cr = f1 = None                      # Not Used with Output Field
@@ -5282,15 +5196,15 @@ Export - The report in the selected format will be opened
         color = self.getWidget().get().rstrip()
         if color:
             if CPICK:
-                return askcolor(color, parent=self.mstFrame)[1].lower()
+                sel = askcolor(color, parent=self.mstFrame)
             else:
-                return tkcolor.askcolor(parent=self.mstFrame,
-                    initialcolor=color)[1]
+                sel = tkcolor.askcolor(parent=self.mstFrame, initialcolor=color)
+        elif CPICK:
+            sel = askcolor(parent=self.mstFrame)
         else:
-            if CPICK:
-                return askcolor(parent=self.mstFrame)[1].lower()
-            else:
-                return tkcolor.askcolor(parent=self.mstFrame)[1]
+            sel = tkcolor.askcolor(parent=self.mstFrame)
+        if sel[1]:
+            return sel[1].lower()
 
     def doKeys(self, event):
         if str(event.widget.cget("state")) == "disabled":
@@ -5471,10 +5385,14 @@ Export - The report in the selected format will be opened
         # ======================================================================
         # Setting the status line help message
         # ======================================================================
-        if flds[8] and flds[1][0] == "I":
-            sufx = ", Enter to Continue, <F1> to Select"
-        else:
-            sufx = ", Enter to Continue"
+        sufx = ""
+        if not err:
+            if flds[8]:
+                sufx = ", Enter to Continue, <F1> to Select"
+            else:
+                sufx = ", Enter to Continue"
+        elif flds[8]:
+            sufx = ", <F1> to Select"
         if flds[9]:
             sufx = sufx + ", <F5> to Delete"
         if flds[1][1:] == "TV":
@@ -5497,14 +5415,15 @@ Export - The report in the selected format will be opened
                 sufx = sufx + " or <Esc> to Back Up"
         if err and err != "ok":
             if self.mf.rcdic["errs"] == "Y":
-                if sys.platform == "win32":
+                try:
+                    import beepy
+                    beepy.beep(1)
+                except:
                     try:
                         import winsound
                         winsound.Beep(2500, 1000)
                     except:
                         self.mf.window.bell()
-                else:
-                    self.mf.window.bell()
             self.mf.updateStatus("%s, Retry%s" % (err, sufx), "white", "red")
         else:
             self.mf.updateStatus("%s%s" % (text.lstrip(), sufx))
@@ -6645,9 +6564,7 @@ Export - The report in the selected format will be opened
             else:
                 self.doCheckButton(wid, state)
             return
-        if state == "normal":
-            wid.configure(state=state)
-        elif state == "disabled":
+        if state in ("normal", "disabled"):
             wid.configure(state=state)
         elif state == "focus":
             wid.focus_set()
@@ -6692,17 +6609,22 @@ Export - The report in the selected format will be opened
         return dics
 
     def closeProcess(self):
-        try:
-            # Clear dialog bindings
-            for bind in self.bindings:
-                self.mstFrame.winfo_toplevel().unbind(bind)
-        except:
-            pass
         self.mstFrame.destroy()
+        # Clear dialog bindings
+        for bind in self.bindings:
+            try:
+                self.window.unbind(bind)
+            except:
+                pass
         # Restore saved bindings
         for bind in self.svebind:
-            self.window.bind(bind[0], bind[1])
+            try:
+                self.window.bind(bind[0], bind[1])
+            except:
+                pass
+        # Restore default font
         self.mf.rcdic["dfs"] = self.dfs
+        # Restore default theme
         self.mf.setThemeFont(butt=False)
         self.mf.updateStatus("")
 
@@ -7064,7 +6986,6 @@ class SelectChoice(object):
     scrl   - Have Scrollbars True or False.
     styl   - Style to use.
     font   - Font to use.
-    addh   - Additional height.
     escape - Allow Escape.
     colr   - List or tuple denoting the fg and bg colours of the row
              depending on the value of the column e.g.
@@ -7073,8 +6994,11 @@ class SelectChoice(object):
     rowc   - Alternate the colours of every x rows e.g.
              rowc = (2, "black", "white", "black", "grey") or
              rowc = 2
+    spos   - When doing a search the following applies:
+                 A - Search anywhere in the string.
+                 B - Search from the beginning of the string.
     """
-    def __init__(self, scrn, titl, cols, data, lines=0, sort=True, wait=True, cmnd=None, butt=None, neww=True, deco=True, modal=True, live=True, posn=0, fltr=False, scrl=True, styl="Treeview", font="TkHeadingFont", addh=0, escape=True, colr=None, rowc=1):
+    def __init__(self, scrn, titl, cols, data, lines=0, sort=True, wait=True, cmnd=None, butt=None, neww=True, deco=True, modal=True, live=True, posn=0, fltr=False, scrl=True, styl="Treeview", font="TkHeadingFont", spos="B", escape=True, colr=None, rowc=1):
         self.scrn = scrn
         self.ocol = cols
         if titl:
@@ -7154,7 +7078,7 @@ class SelectChoice(object):
             self.rowc = (rowc, "black", "white", "black", "gray92")
         elif rowc:
             self.rowc = rowc
-        self.addh = addh
+        self.spos = spos
         self.escape = escape
         self.selection = None
         if not lines:
@@ -7171,31 +7095,36 @@ class SelectChoice(object):
         if self.wait:
             self.mstFrame.wait_window()
 
-    def setupWidgets(self):
-        if self.neww:
-            if self.scrn:
-                self.scrn.winfo_toplevel().config(cursor="watch")
-            mkw = MkWindow(trans=self.scrn, decor=self.deco, modal=self.modal,
-                title=self.titl, remov=False, resize=True)
-            if not self.deco:
-                mkw.newwin.configure(bg="black", bd=3)
-                mkw.newwin.attributes("-topmost", False)
-                if self.titl:
-                    titl = MyLabel(mkw.newwin, text=self.titl, anchor="c")
-                    tf = tkfont.nametofont("TkDefaultFont")
-                    nf = tkfont.Font(font=(tf.cget("family"), tf.cget("size"),
-                        "bold"))
-                    titl.configure(font=nf)
-                    titl.pack(fill="x", expand="yes")
-            self.window = mkw.newwin
-            self.mstFrame = MyFrame(self.window)
-            self.mstFrame.pack(fill="both", expand="yes")
-        else:
-            self.window = self.scrn.winfo_toplevel()
-            self.mstFrame = MyFrame(self.scrn)
-            self.mstFrame.grid(column=0, sticky="nsew")
-        self.mstFrame.grid_columnconfigure(0, weight=1)
-        self.mstFrame.grid_rowconfigure(0, weight=1)
+    def setupWidgets(self, clear=False):
+        if not clear:
+            if self.neww:
+                if self.scrn:
+                    self.scrn.winfo_toplevel().config(cursor="watch")
+                mkw = MkWindow(trans=self.scrn, decor=self.deco,
+                    title=self.titl, remov=False, resize=True)
+                if not self.deco:
+                    mkw.newwin.configure(bg="black", bd=3)
+                    mkw.newwin.attributes("-topmost", False)
+                    if self.titl:
+                        titl = MyLabel(mkw.newwin, text=self.titl, anchor="c")
+                        tf = tkfont.nametofont("TkDefaultFont")
+                        nf = tkfont.Font(font=(tf.cget("family"),
+                            tf.cget("size"), "bold"))
+                        titl.configure(font=nf)
+                        titl.pack(fill="x", expand="yes")
+                self.window = mkw.newwin
+                self.mstFrame = MyFrame(self.window)
+                self.mstFrame.pack(fill="both", expand="yes")
+            else:
+                self.window = self.scrn.winfo_toplevel()
+                self.mstFrame = MyFrame(self.scrn)
+                self.mstFrame.grid(column=0, sticky="nsew")
+        else:
+            for child in self.mstFrame.winfo_children():
+                child.destroy()
+            self.bbox.destroy()
+        self.mstFrame.columnconfigure(0, weight=1)
+        self.mstFrame.rowconfigure(0, weight=1)
         chgt = self.font.metrics("linespace")
         if self.scrn:
             tlin = int((self.scrn.winfo_reqheight() / chgt) * .8)
@@ -7249,9 +7178,9 @@ class SelectChoice(object):
         self.buttons = []
         if butt:
             self.button = None
-            bbox = MyButtonBox(self.window)
+            self.bbox = MyButtonBox(self.window)
             for num, but in enumerate(butt):
-                b = bbox.addButton(but[0], (self.doButton, but))
+                b = self.bbox.addButton(but[0], (self.doButton, but))
                 self.buttons.append(b)
 
     def doButton(self, button):
@@ -7363,13 +7292,16 @@ class SelectChoice(object):
             if self.posn:
                 self.tree.update_idletasks()
                 self.tree.see(start)
-            self.tree.focus_force()
         elif last:
             # Scroll to last entry
             self.tree.update_idletasks()
             self.tree.see(last)
         if self.neww:
             placeWindow(self.window, parent=self.scrn, expose=True)
+        if self.modal:
+            self.window.wait_visibility()
+            self.window.grab_set()
+            self.tree.focus_force()
 
     def addItem(self, num, item):
         item = list(item)
@@ -7491,7 +7423,7 @@ class SelectChoice(object):
                 continue
             start = None
             text = self.tree.item(child, "values")[self.srch]
-            if text.lower().count(pattern.lower()):
+            if text.lower().startswith(pattern.lower()):
                 self.tree.selection_set(child)
                 self.tree.update_idletasks()
                 self.tree.focus(child)
@@ -7551,7 +7483,10 @@ class SelectChoice(object):
                 self.tree.yview("moveto", 1)
         else:
             self.tree.update_idletasks()
-            idx = iids.index(self.tree.focus())
+            try:
+                idx = iids.index(self.tree.focus())
+            except:
+                idx = 0
             if event.keysym == "Next":
                 idx += self.lines
                 if idx >= len(iids):
@@ -7631,9 +7566,7 @@ class SelectChoice(object):
             self.closeProcess()
         else:
             self.data = copyList(newdata)
-            if self.neww:
-                self.window.destroy()
-            self.setupWidgets()
+            self.setupWidgets(clear=True)
             self.buildTree()
 
     def doExit(self, event=None):
@@ -7642,10 +7575,10 @@ class SelectChoice(object):
 
     def closeProcess(self):
         if self.neww:
-            self.window.destroy()
             if self.scrn:
                 self.scrn.update()
                 self.scrn.winfo_toplevel().config(cursor="arrow")
+            self.window.destroy()
         else:
             self.mstFrame.destroy()
 
@@ -7689,11 +7622,12 @@ class ScrollHtml(object):
             else:
                 self.root.pack(fill="both", expand="yes")
         else:
-            trans, modal, resiz, decor = None, True, True, True
-            win = MkWindow(trans=trans, modal=modal, resiz=resiz,
-                decor=decor, frame=True)
+            trans, resiz, decor = None, True, True
+            win = MkWindow(trans=trans, resiz=resiz, decor=decor, frame=True)
             self.window = win.newwin
-            self.window.deiconify()
+            if self.window.state() == "withdrawn":
+                self.window.deiconify()
+            self.window.grab_set()
             self.root = win.newfrm
         bbox = MyButtonBox(self.root)
         self.binds = []
@@ -7784,9 +7718,9 @@ class ScrollText(object):
             else:
                 self.frame.pack()
         else:
-            trans, modal, resiz, decor = None, True, True, True
+            trans, resiz, decor = None, True, True
             win = MkWindow(tk=True, trans=trans, title=self.title,
-                modal=modal, resiz=resiz, decor=decor, frame=True)
+                resiz=resiz, decor=decor, frame=True)
             self.window = win.newwin
             self.frame = win.newfrm
         bbox = MyButtonBox(self.frame)
@@ -7824,6 +7758,8 @@ class ScrollText(object):
             self.frame.grab_set()
         else:
             placeWindow(self.window, expose=True)
+            self.window.wait_visibility()
+            self.window.grab_set()
         self.text.focus_set()
 
     def execStCmd(self, *args):
@@ -7943,8 +7879,8 @@ class ProgressBar(object):
         self.quit = True
 
 class ShowEmail(object):
-    def __init__(self, window=False, message=None, embed=None, attach=None):
-        mkw = MkWindow(decor=True, modal=True, trans=window, size=(800, -1))
+    def __init__(self, parent=False, message=None, embed=None, attach=None):
+        mkw = MkWindow(decor=True, trans=parent, size=(800, -1))
         self.window = mkw.newwin
         if message or embed:
             self.window.configure(width=824, height=600)
@@ -7982,7 +7918,9 @@ class ShowEmail(object):
             hed.pack(fill="x", expand="yes")
         butt = MyButton(vbox, cmd=self.doClose, text="Close")
         butt.pack()
-        placeWindow(self.window, window, expose=True)
+        placeWindow(self.window, parent, expose=True)
+        self.window.wait_visibility()
+        self.window.grab_set()
         self.window.wait_window()
 
     def doClose(self, *args):
@@ -8106,8 +8044,7 @@ class TartanConfig(object):
     def drawDialog(self):
         pth = {
             "stype":  "F",
-            "types":  "dir",
-            "initd":  ""}
+            "types":  "dir"}
         if sys.platform == "win32":
             typ = "*.exe"
         else:
@@ -8327,6 +8264,8 @@ class TartanConfig(object):
     def doRcFile(self, frt, pag, r, c, p, i, w):
         if self.level < 3 and w != self.rcfile:
             return "Invalid File"
+        if not os.path.isdir(os.path.dirname(w)):
+            return "Invalid Directory (%s)" % os.path.dirname(w)
         self.rcfile = w
         self.edit = True
 
@@ -8381,10 +8320,6 @@ class TartanConfig(object):
                 self.df.loadEntry(frt, pag, p+x, data="")
             return "nd"
 
-    def doVwr(self, frt, pag, r, c, p, i, w):
-        if not w and not FITZ:
-            return "pymupdf Not Installed"
-
     def doAdmin(self, frt, pag, r, c, p, i, w):
         if self.dbase == "P" and not w:
             return "Invalid Administrator"
@@ -8393,9 +8328,47 @@ class TartanConfig(object):
         if not w:
             return "Invalid Password"
 
-    def doConvrt(self, frt, pag, r, c, p, i, w):
-        if w and not os.path.isfile(w):
-            return "Invalid Converter"
+    def doVwr(self, frt, pag, r, c, p, i, w):
+        def getDefaultApp():
+            dflt = None
+            try:
+                if sys.platform == "win32":
+                    import shlex
+                    import winreg
+                    class_root = winreg.QueryValue(winreg.HKEY_CLASSES_ROOT,
+                        ".pdf")
+                    with winreg.OpenKey(winreg.HKEY_CLASSES_ROOT,
+                            r"{}\shell\open\command".format(class_root)) as key:
+                        command = winreg.QueryValueEx(key, "")[0]
+                        return shlex.split(command)[0]
+                else:
+                    import os
+                    fle = os.path.join(os.getenv("HOME"),
+                            ".config/mimeapps.list")
+                    assoc = None
+                    if  os.path.isfile(fle):
+                        with open(fle, "r") as opf:
+                            for lin in opf:
+                                if lin.count("Added Associations"):
+                                    added = True
+                                    continue
+                                elif lin.count("Default Associations"):
+                                    added = False
+                                    dflt = True
+                                    continue
+                                if lin.count("application/pdf"):
+                                    if added:
+                                        assoc = lin.split("=")[1].split(";")
+                                    elif dflt:
+                                        dflt = lin.split("=")[1]
+                                        break
+                    if not dflt and assoc:
+                        dflt = assoc[0]
+                return dflt
+            except:
+                return
+        if not w and not getDefaultApp() and not FITZ:
+            return "Missing pymupdf and No Default"
 
     def doExport(self, frt, pag, r, c, p, i, w):
         if w and not os.path.isfile(w):
@@ -8460,7 +8433,10 @@ class TartanConfig(object):
                 idx = (x * 3) + 1
                 for y in range(2):
                     if not color[x][y]:
-                        color[x][y] = "#ffffff"
+                        if y:
+                            color[x][y] = "#ffffff"
+                        else:
+                            color[x][y] = "#000000"
                     self.df.doKeyPressed(frt, pag, p+idx+y, data=color[x][y])
             return "ff9"
         else:
@@ -8469,7 +8445,10 @@ class TartanConfig(object):
                 idx = (x * 3) + 1
                 for y in range(2):
                     if not color[x+1][y]:
-                        color[x+1][y] = "#ffffff"
+                        if y:
+                            color[x+1][y] = "#ffffff"
+                        else:
+                            color[x+1][y] = "#000000"
                     self.df.doKeyPressed(frt, pag, p+idx+y, data=color[x+1][y])
             return "ff20"
 
@@ -8530,6 +8509,7 @@ class TartanConfig(object):
             self.df.selPage(self.df.tags[self.df.pag - 2][0])
 
     def loadAllFields(self):
+        self.rcdic["dfs"] = self.mf.rcdic["dfs"]
         # DataBase
         if self.rcdic["dbase"] == "PgSQL":
             dbase = "P"
@@ -8681,24 +8661,29 @@ class TartanConfig(object):
             ["cbg", self.df.t_work[3][0][23]],
             ["sfg", self.df.t_work[3][0][25]],
             ["sbg", self.df.t_work[3][0][26]]])
-        f = open(self.rcfile, "w")
-        for a, b in cc:
-            f.write("['%s'] = '%s'\n" % (a, b))
-            if a == "bupdir":
-                self.bupdir = b
-            elif a == "wrkdir":
-                self.wrkdir = b
-            elif a == "upgdir":
-                self.upgdir = b
-            elif a == "vwr":
-                self.vwr = b
-            elif a == "prn":
-                self.prn = b
-            elif a == "exp":
-                self.exp = b
-            else:
-                setattr(self, a, str(b))
-        f.close()
+        try:
+            f = open(self.rcfile, "w")
+            for a, b in cc:
+                f.write("['%s'] = '%s'\n" % (a, b))
+                if a == "bupdir":
+                    self.bupdir = b
+                elif a == "wrkdir":
+                    self.wrkdir = b
+                elif a == "upgdir":
+                    self.upgdir = b
+                elif a == "vwr":
+                    self.vwr = b
+                elif a == "prn":
+                    self.prn = b
+                elif a == "exp":
+                    self.exp = b
+                else:
+                    setattr(self, a, str(b))
+            f.close()
+        except Exception as err:
+            showError(self.mf.body, "Access Error", "The rcfile %s "\
+                "Cannot be Created.\n\n%s." % (self.rcfile, err))
+            return
         showWarning(self.mf.body, "Configuration", "Please Note that Some "\
             "Changes will Only take effect once Tartan is Restarted.")
         self.closeProcess()
@@ -8935,12 +8920,12 @@ class AgeTrans(object):
         # Scrolled Selection
         self.lb = SelectChoice(self.mf.window, "Available Transactions",
             self.cols, self.work, sort=False, wait=False, cmnd=self.enterAll,
-            posn=self.posn, addh=80, escape=False)
+            posn=self.posn, escape=False)
         # Allocation Fields
         hbox = MyFrame(self.lb.window)
         hbox.pack(fill="x", expand="yes")
-        hbox.grid_columnconfigure(0, weight=1)
-        lab = MyLabel(hbox, text="Allocation Amount")
+        hbox.columnconfigure(0, weight=1)
+        lab = MyLabel(hbox, text="Allocated")
         lab.grid(row=0, column=0, sticky="ew")
         self.allAmt = MyEntry(hbox, width=13, maxsize=13, cmd=self.enterAmt)
         self.allAmt.configure(state="disabled")
@@ -8963,6 +8948,7 @@ class AgeTrans(object):
             ToolTip(xitBut, "Leave the Balance as Unallocated")
         ToolTip(canBut, "Cancel All Allocations")
         # Main Loop
+        placeWindow(self.lb.window, self.mf.window)
         self.lb.mstFrame.wait_window()
 
     def enterAll(self, data):
@@ -10215,7 +10201,7 @@ class FinReport(object):
             if self.s_print == "-" and amt >= 0:
                 self.clearData()
                 continue
-            if self.s_print == "Y":
+            if self.s_print != "N":
                 self.printLine()
             self.accumTotals(self.s_acbal)
             if self.s_store == "Y":
@@ -10247,7 +10233,7 @@ class FinReport(object):
         elif self.s_print == "-" and amt >= 0:
             pass
         else:
-            if self.s_print == "Y":
+            if self.s_print != "N":
                 self.printLine()
             self.accumTotals(self.s_acbal)
             if self.s_store == "Y":
@@ -10271,9 +10257,7 @@ class FinReport(object):
         elif self.s_print == "-" and amt >= 0:
             self.clearData()
             return
-        elif self.s_print == "N":
-            pass
-        else:
+        elif self.s_print != "N":
             self.printLine()
         if self.s_store == "Y":
             self.storeBalances()
@@ -10310,9 +10294,7 @@ class FinReport(object):
         elif self.s_print == "-" and amt >= 0:
             self.clearData()
             return
-        elif self.s_print == "N":
-            pass
-        else:
+        elif self.s_print != "N":
             self.printLine()
         self.accumTotals(self.s_acbal)
         self.clearData()
@@ -12899,7 +12881,7 @@ class PrintCards(object):
     skins  - Whether there are skins.
     sends  - The number of ends per skin.
     """
-    def __init__(self, mf, conum, cdes, game, datd, skips, ends=21, skins="N", sends=0):
+    def __init__(self, mf, conum, cdes, game, datd, skips, ends=21, skins="N", sends=0, args=None):
         self.mf = mf
         self.conum = conum
         self.cdes = cdes
@@ -12910,7 +12892,10 @@ class PrintCards(object):
         self.skins = skins
         self.sends = sends
         if self.doVariables():
-            self.doMainProcess()
+            if args:
+                self.tname, self.repprt = args
+            else:
+                self.doMainProcess()
             self.doPrintCards()
 
     def doVariables(self):
@@ -12944,6 +12929,7 @@ class PrintCards(object):
 
     def doEnd(self):
         self.df.closeProcess()
+        self.repprt = self.df.repprt
         showWarning(self.mf.body, "Change Paper",
             "In Order to Print Cards You Need to Change the Paper to "\
             "A6 Cards. Please Do So Now Before Continuing.")
@@ -12997,7 +12983,7 @@ class PrintCards(object):
                 self.form.doDrawDetail(self.form.newdic[key])
         self.form.output(self.pdfnam, "F")
         doPrinter(mf=self.mf, conum=self.conum, pdfnam=self.pdfnam,
-            repprt=self.df.repprt)
+            repprt=self.repprt)
 
     def doLoadStatic(self):
         tdc = self.form.sql.tpldet_col
@@ -13029,6 +13015,7 @@ class PrintDraw(object):
         self.date = date
         self.time = dtim
         defaults = {
+            "cdes": None,
             "takings": "y",
             "listing": "n",
             "board": "n",
@@ -13260,8 +13247,11 @@ class PrintDraw(object):
             repprt=self.repprt)
 
     def pageHeading(self, htyp="A", grn="A"):
-        txt = "TABS for the %s of %s (Type %s, Hist %s)" % (self.timed,
-            self.dated, self.dtype, self.dhist)
+        if not self.cdes:
+            txt = "TABS for the %s of %s (Type %s, Hist %s)" % (self.timed,
+                self.dated, self.dtype, self.dhist)
+        else:
+            txt = "%s for the %s of %s" % (self.cdes, self.timed, self.dated)
         if htyp == "C":
             self.fpdf.add_page(orientation="L")
             self.def_orientation = "L"
@@ -13366,8 +13356,6 @@ class PwdConfirm(object):
                 self.flag = "ok"
             else:
                 self.flag = "no"
-        elif not self.mf.window:
-            self.flag = "no"
         else:
             self.mainProcess()
             self.pc.mstFrame.wait_window()
@@ -13423,9 +13411,9 @@ class PwdConfirm(object):
             fld = (
                 (("T",0,0,0),"IHA",30,"Password","",
                     "","Y",self.doPwd,None,None,None),)
-        but = (("Cancel",None,self.doCancel,1,None, None),)
-        tnd = ((self.doExit, "n"), )
-        txt = (self.doCancel, )
+        but = (("Cancel",None,self.doExit,1,None, None),)
+        tnd = ((self.doEnd, "n"), )
+        txt = (self.doExit, )
         self.pc = TartanDialog(self.mf, screen=self.screen, tops=True,
             title=tit, eflds=fld, butt=but, tend=tnd, txit=txt)
         if self.product:
@@ -13436,17 +13424,17 @@ class PwdConfirm(object):
         if w not in (self.pwd, self.sup, self.mf.override):
             self.tries += 1
             if self.tries == 3:
-                return "xt"
+                return "nd"
             else:
                 return "Invalid Password"
         self.flag = "ok"
         return "nc"
 
-    def doCancel(self):
-        self.flag = "no"
-        self.doExit()
+    def doEnd(self):
+        self.pc.closeProcess()
 
     def doExit(self):
+        self.flag = None
         self.pc.closeProcess()
 
 class BankImport(object):
@@ -13475,7 +13463,10 @@ class BankImport(object):
             for fname in self.fname:
                 if self.impfmt == "O":
                     if OFX:
-                        self.importOfxTool(fname)
+                        try:
+                            self.importOfxTool(fname)
+                        except:
+                            self.importOfxFile(fname)
                     else:
                         self.importOfxFile(fname)
                 elif self.impfmt == "Q":
@@ -14240,7 +14231,7 @@ class RepPrt(object):
         self.pglin = 999
         self.expdatas = []
         if self.repprt[2] != "export":
-            self.fpdf = MyFpdf(name=self.name, head=len(self.head4), foot=True)
+            self.fpdf = MyFpdf(name=self.name, head=len(self.head4))
             for num, font in enumerate(self.fonts):
                 if not font:
                     self.fonts[num] = self.fpdf.font[1]
@@ -16280,7 +16271,7 @@ class FileImport(object):
         elif name.split(".")[-1].lower() == "ods":
             self.ftype = "ods"
             try:
-                self.workbk = gods(name)
+                self.workbk = getods(name)
                 self.sht["data"] = list(self.workbk.keys())
                 self.sht["data"].sort()
             except Exception as err:
@@ -16408,7 +16399,7 @@ class FileImport(object):
                             showError(self.mf.body, "Column Error",
                                 "Row %s, Column %s %s\n\n%s is Invalid" %
                                 (row + 1, col + 1, fmt[0], dat))
-                            raise Exception
+                            raise Exception(err)
             except:
                 imperr = True
         else:
@@ -16437,30 +16428,36 @@ class MyFpdf(fpdf.FPDF):
     fmat        - Page format e.g. A4
     font        - A family string or a tuple (family, style, size)
     name        - Document title
-    head        - String or List / Tuple as folows:
-                    Text - Heading or
+    head        - Integer / String or List / Tuple as folows:
                     Integer - Number of characters or
+                    String - Heading or
                     List / Tuple - (Heading, ("Family", "Style", Size))
     auto        - Automatic page breaks
     foot        - Turn footer on or off
     """
-    def __init__(self, orientation="P", unit="mm", fmat="A4", font="courier", name="", head="", auto=False, foot=False):
+    def __init__(self, orientation="P", unit="mm", fmat="A4", font="courier", name="", head="", auto=False, foot=True):
         self.unit = unit
         self.fmat = fmat
-        self.foot = foot
+        if self.fmat == "A4":
+            self.foot = foot
+        else:
+            self.foot = False
         self.suc = chr(151)
         t = time.localtime()
         self.sysdt = time.strftime("%d %B %Y %H:%M:%S", t)
-        fpdf.FPDF.__init__(self, orientation, self.unit, self.fmat)
-        self.setValues(name, head, font)
-        self.set_author("Tartan Systems")
-        self.set_fill_color(220)
-        self.set_title(name)
-        if not auto:
-            self.set_auto_page_break(False, margin=0)
-        if foot:
-            self.lpp -= 4
-            self.alias_nb_pages()
+        try:
+            fpdf.FPDF.__init__(self, orientation, self.unit, self.fmat)
+            self.setValues(name, head, font)
+            self.set_author("Tartan Systems")
+            self.set_fill_color(220)
+            self.set_title(name)
+            if not auto:
+                self.set_auto_page_break(False, margin=0)
+            if foot:
+                self.lpp -= 4
+                self.alias_nb_pages()
+        except Exception as err:
+            print(err)
 
     def setValues(self, name, head, font="", border=""):
         # Add TTF Fonts
@@ -16568,10 +16565,7 @@ class MyFpdf(fpdf.FPDF):
             else:
                 size = 10
         try:
-            if style:
-                self.set_font(family, style, size)
-            else:
-                self.set_font(family, size=size)
+            self.set_font(family, style, size)
             self.cwth = self.get_string_width("X")
             if default:
                 self.font = [family, size, self.font_size]
@@ -16727,15 +16721,14 @@ class DrawForm(MyFpdf):
         self.titl = tplmst[self.sql.tplmst_col.index("tpm_title")]
         self.tptyp = tplmst[self.sql.tplmst_col.index("tpm_type")]
         self.pgsz = tplmst[self.sql.tplmst_col.index("tpm_pgsize")]
-        self.chgsz = False
         if self.pgsz == "CC":
             self.pgsz = (86, 54)
         elif self.pgsz == "S8":
-            self.chgsz = True
             self.pgsz = (80, 500)
         elif self.pgsz == "S6":
-            self.chgsz = True
             self.pgsz = (57, 500)
+        elif self.pgsz == "A6":
+            self.pgsz = (105, 148)
         self.ortn = tplmst[self.sql.tplmst_col.index("tpm_orient")]
         self.tptp = {}
         self.head = []
@@ -17187,8 +17180,8 @@ class ToolTip(object):
         x = self.widget.winfo_rootx()
         y = self.widget.winfo_rooty() + self.widget.winfo_height()
         self.tipwindow = tw = tk.Toplevel(self.widget)
-        tw.wm_overrideredirect(True)
         self.tipwindow.withdraw()
+        tw.overrideredirect(True)
         label = MyLabel(tw, color=self.color, text=self.text, justify="left",
             relief="solid", borderwidth=2, font=self.font, wraplength=400)
         label.pack(ipadx=1, ipady=2)
@@ -17196,9 +17189,9 @@ class ToolTip(object):
         ww = label.winfo_reqwidth()
         if x + ww > label.winfo_screenwidth():
             x = x - ww
-        tw.wm_geometry("+%d+%d" % (x, y))
+        tw.geometry("+%d+%d" % (x, y))
         self.tipwindow.deiconify()
-        if self.pause:
+        if self.pause and event.type == "9":
             label.after(self.pause, self.hideTip)
 
     def hideTip(self, event=None):
@@ -17220,23 +17213,25 @@ Tartan Systems %s
 All Rights Reserved.
 
 Tartan is free software distributed under the terms
-of the GNU General Piblic License.
+of the GNU General Public License.
 
 For information and or support for this product please contact:
 
 Paul Malherbe
 
-Phone:        27-28-3165036
-Mobile:       27-82-9005260
-Email:    paul@tartan.co.za
-
+Phone:             27-28-3165036
+Mobile:            27-82-9005260
 """ % (ver, chr(169), time.localtime().tm_year)
         label = MyText(self.about, font=("Helvetica", 14), width=65,
             height=19, takefocus=False)
         label.insert("insert", info)
+        label.insert("end", "Email:         ")
         link = HyperlinkManager(label)
-        label.insert("insert", "https://www.tartan.co.za",
-            link.add(self.linkAbout))
+        label.insert("end", "paul@tartan.co.za",
+            link.add(self.linkMail))
+        label.insert("end", "\nWeb:            ")
+        label.insert("end", "www.tartan.co.za",
+            link.add(self.linkWeb))
         label.pack()
         label.tag_add("text", "1.0", "end")
         label.tag_config("text", justify="center")
@@ -17250,7 +17245,16 @@ Email:    paul@tartan.co.za
         self.b2 = bbox.addButton("Exit", self.exitAbout)
         self.mf.startLoop()
 
-    def linkAbout(self, *args):
+    def linkMail(self, *args):
+        try:
+            web = "mailto:paul@tartan.co.za"
+            webbrowser.open_new(web)
+            self.exitAbout()
+        except:
+            showError(self.mf.window, "Browser Error",
+                "Cannot Load Browser or URL")
+
+    def linkWeb(self, *args):
         try:
             web = "https://www.tartan.co.za"
             webbrowser.open_new(web)
@@ -17357,7 +17361,7 @@ class SimpleDialog(object):
     def __init__(self, parent=None, trans=None, modal=False, decor=True, style="TFrame", pad=2, bd=2, cols=None, butt=None, title=None, conf=False):
         self.parent = parent
         if not self.parent:
-            mkw = MkWindow(trans=trans, modal=modal, decor=decor, remov=False)
+            mkw = MkWindow(trans=trans, decor=decor, remov=False)
             self.window = mkw.newwin
         else:
             self.window = self.parent
@@ -17428,6 +17432,9 @@ class SimpleDialog(object):
             self.window.update_idletasks()
             geo = (self.sframe.winfo_reqwidth(), self.sframe.winfo_reqheight())
             placeWindow(self.window, parent=trans, size=geo, expose=True)
+            if modal:
+                self.window.wait_visibility()
+                self.window.grab_set()
         self.fld = self.ents[self.cols[0][0]]
         self.fld.focus_set()
 
@@ -17911,6 +17918,7 @@ class MakeManual(object):
             table = False
             skips = False
             tcont = False
+            note = False
             conts = []
             paras = []
             if type(docfle) == str:
@@ -17927,7 +17935,6 @@ class MakeManual(object):
                 if line and line[:4] == ".. _":
                     continue
                 # Replace links with blank
-                line = line.replace("`", "")
                 line = line.replace("_", "")
                 # Remove | lines
                 if line and line[0] == "|":
@@ -17936,6 +17943,18 @@ class MakeManual(object):
                 if line and line.count("PageBreak"):
                     self.fpdf.add_page()
                     continue
+                if line.count(".. NOTE::"):
+                    note = True
+                    continue
+                if note:
+                    if not line:
+                        note = False
+                        self.fpdf.drawText()
+                    else:
+                        line = line.strip()
+                        self.fpdf.drawText(line, font=self.fonts["bodyb"],
+                            fill=True, h=6, border="TLRB", ctyp="M")
+                    continue
                 if line.count(".. contents::"):
                     if vwr:
                         link = self.fpdf.add_link()
@@ -18055,8 +18074,8 @@ class MakeManual(object):
                 if not line.strip() and not lines[num + 1].strip():
                     # Two blank lines
                     continue
-                self.fpdf.drawText(line.strip(), font=self.fonts["bodyn"],
-                    ctyp="M")
+                # Other text
+                self.printText(line)
             if paras:
                 self.printPara(paras)
             if tcont and vwr:
@@ -18088,9 +18107,10 @@ class MakeManual(object):
             "head4": ("Arial", "B", 12),
             "head5": ("Arial", "B", 10),
             "bodyb": ("Arial", "B", 10),
+            "bodyi": ("Arial", "I", 10),
             "bodyn": ("Arial", "", 10)}
         self.fpdf = MyFpdf(name="Documents", head=80, font=self.fonts["bodyn"],
-            auto=True, foot=True)
+            auto=True)
         return True
 
     def printPara(self, paras):
@@ -18120,20 +18140,22 @@ class MakeManual(object):
                 words = line.split("*", 2)
             elif line.count("#"):
                 words = line.split("#")
+            elif line.count("+ "):
+                match = re.compile("[^\W\d]").search(line)
+                words = [line[:match.start()], line[match.start():]]
             if words:
                 if len(words) == 3:
                     if words[0]:
                         text = "%s%s" % (words[0], words[1].strip())
                     else:
                         text = words[1].rstrip()
-                else:
-                    text = words[0].rstrip()
-                wdth = self.fpdf.get_string_width(text) + 1
-                if len(words) == 3:
+                    wdth = self.fpdf.get_string_width(text) + 1
                     if words[2] and wdth > indent[level]:
                         indent[level] = wdth
                     lines.append((text, words[2], level, bold))
                 else:
+                    text = words[0].rstrip()
+                    wdth = self.fpdf.get_string_width(text) + 1
                     if words[1] and wdth > indent[level]:
                         indent[level] = wdth
                     lines.append((text, words[1].strip(), level, bold))
@@ -18150,51 +18172,23 @@ class MakeManual(object):
             if len(line) == 0:
                 self.fpdf.drawText()
             elif len(line) == 4:
+                x = self.fpdf.l_margin + \
+                    self.fpdf.get_string_width((line[2] + 2) * "X")
                 if line[3]:
                     self.setFont("bodyb")
                 else:
                     self.setFont("bodyn")
-                text = line[0].rstrip().replace("+ ", "%s " % chr(127))
-                self.fpdf.drawText(text, w=indent[line[2]], ln=0)
-                x = self.fpdf.get_x()
+                text = line[0].strip().replace("+", "%s " % chr(127))
+                self.fpdf.drawText(text, x=x, w=indent[line[2]], ln=0)
                 if line[1]:
-                    self.doRest(line[1], x)
+                    self.printText(line[1])
                 else:
                     self.fpdf.drawText()
             else:
-                text = line[0].rstrip().replace("+ ", "%s " % chr(127))
-                self.doRest(text)
-
-    def doRest(self, line, x=0):
-        line = line.strip()
-        spc = False
-        for tst in ("- ", "%s " % chr(127)):
-            if line[:2] == tst:
-                spc = True
-                break
-        text = ""
-        for word in line.split():
-            if not text:
-                text = word
-            else:
-                self.setFont("bodyn")
-                chk = x + self.fpdf.get_string_width("%s %s" % (text, word))
-                if chk > self.pmax:
-                    self.fpdf.drawText(text, x=x, font=self.fonts["bodyn"])
-                    text = word
-                    if spc:
-                        if not x:
-                            x = self.fpdf.l_margin
-                        x += self.fpdf.get_string_width(tst)
-                        spc = False
-                else:
-                    text = "%s %s" % (text, word)
-        if text:
-            self.fpdf.drawText(text, x=x, font=self.fonts["bodyn"])
-
-    def setFont(self, font):
-        fam, sty, siz = self.fonts[font]
-        self.fpdf.setFont(fam, sty, siz)
+                x = self.fpdf.l_margin + \
+                    self.fpdf.get_string_width((line[2] + 2) * "X")
+                text = line[0].strip().replace("+", "%s " % chr(127))
+                self.printText(text, x=x)
 
     def printTable(self):
         for num, dat in enumerate(self.heads):
@@ -18209,63 +18203,105 @@ class MakeManual(object):
                 self.fpdf.drawText(dat, w=wid, border="TLRB", ln=0)
             self.fpdf.drawText()
 
+    def printText(self, line):
+        line = line.strip()
+        spc = False
+        for tst in ("- ", "%s " % chr(127)):
+            if line[:2] == tst:
+                spc = True
+                break
+        x1 = x2 = self.fpdf.get_x()
+        y1 = self.fpdf.get_y()
+        line = line.replace("**", "*")
+        line = line.split()
+        bold = False
+        spcc = False
+        font = "bodyn"
+        for num, word in enumerate(line):
+            if word.startswith("*"):
+                bold = True
+                font = "bodyb"
+            if word.endswith("*") or word.endswith("*.") or word.endswith("*,"):
+                bold = False
+            word = word.replace("*", "")
+            if word.startswith("`"):
+                bold = True
+                font = "bodyi"
+            if word.endswith("`"):
+                bold = False
+            word = word.replace("`", "")
+            if x2 + self.fpdf.get_string_width(word) > self.pmax:
+                x2 = x1
+                if spc:
+                    x2 += self.fpdf.get_string_width(tst)
+                y1 += 5
+            elif spcc:
+                word = " %s" % word
+            self.fpdf.drawText(word, x=x2, y=y1, font=self.fonts[font], ln=0)
+            self.setFont(font)
+            x2 += self.fpdf.get_string_width(word)
+            y1 = self.fpdf.get_y()
+            if not bold:
+                font = "bodyn"
+            spcc = True
+        self.fpdf.drawText()
+
+    def setFont(self, font):
+        fam, sty, siz = self.fonts[font]
+        self.fpdf.setFont(fam, sty, siz)
+
 class ViewPDF(object):
     """
-    This class is used to view pdf files using pymupdf
+    This class is used to view pdf files using either the system default
+    pdf viewer, a viewer set up in the rcfile or pymupdf.
     """
     def __init__(self, mf=None, pdfnam=None):
         self.mf = mf
         if self.mf and self.mf.window:
             self.mf.window.withdraw()
-            self.win = MkWindow().newwin
-        else:
-            self.win = MkWindow(tk=True).newwin
         try:
-            self.win.tk.call("wm", "iconphoto", self.win._w,
-                "-default", getImage("pdfimg"))
-        except:
-            pass
-        if pdfnam is None:
-            pdfnam = self.getPdfName()
-        if pdfnam and os.path.isfile(pdfnam):
-            self.win.title(pdfnam)
-            if self.mf:
-                vwr = mf.rcdic["vwr"]
-            else:
-                vwr = ""
-            self.pdfnam = pdfnam
-            if vwr and os.path.exists(vwr):
-                exe, cmd = parsePrg(vwr)
-                cmd.append(pdfnam)
-                subprocess.call(cmd)
-            elif not FITZ:
-                try:
+            if pdfnam and os.path.isfile(pdfnam):
+                if self.mf:
+                    vwr = mf.rcdic["vwr"]
+                else:
+                    vwr = ""
+                self.pdfnam = pdfnam
+                if vwr and os.path.exists(vwr):
+                    # default to the selected viewer from the rcfile
+                    exe, cmd = parsePrg(vwr)
+                    cmd.append(pdfnam)
+                    subprocess.call(cmd)
+                elif not FITZ:
+                    # Try and use the default pdf viewer
                     if sys.platform == "win32":
                         os.startfile(pdfnam)
                     else:
                         subprocess.call(["xdg-open", pdfnam])
-                except:
-                    pass
+                else:
+                    # Use the Tartan pdf viewer
+                    if self.mf and self.mf.window:
+                        self.win = MkWindow(remov=False).newwin
+                    else:
+                        self.win = MkWindow(tk=True).newwin
+                    try:
+                        self.win.tk.call("wm", "iconphoto", self.win._w,
+                            "-default", getImage("pdfimg"))
+                    except:
+                        pass
+                    self.win.title(pdfnam)
+                    self.doDisplay()
             else:
-                self.doDisplay()
+                showError(None, "Error", "Invalid File Name\n\n%s" % pdfnam)
+        except Exception as err:
+            showError(None, "Error", "Cannot Display Report.\n\n%s" % err)
         if self.mf:
             self.mf.window.deiconify()
 
-    def getPdfName(self):
-        dialog = FileDialog(**{
-            "title": "Select PDF File",
-            "ftype": (("PDF Files", "*.pdf"),),
-            "multi": False})
-        return dialog.askopenfilename()
-
-    def doFocus(self, event=None):
-        event.widget.focus_set()
-
     def doDisplay(self):
         # Window dimensions and Image sizes
         self.win.resizable(0, 0)
         self.win.configure(borderwidth=2)
-        self.sw = int(self.win.winfo_screenwidth() * .90)
+        self.sw = self.win.winfo_screenwidth()
         self.sh = int(self.win.winfo_screenheight() * .90)
         self.doc = fitz.open(self.pdfnam)
         if self.doc.needsPass:
@@ -18274,9 +18310,9 @@ class ViewPDF(object):
         self.lastpg = self.doc.pageCount
         rect = self.doc[0].MediaBox
         if not self.doc[0].rotation:
-            self.siz = [int(rect[2]), int(rect[3])]
+            self.siz = [rect[2], rect[3]]
         else:
-            self.siz = [int(rect[3]), int(rect[2])]
+            self.siz = [rect[3], rect[2]]
         # Theme and fonts
         self.style = ttk.Style()
         if not self.mf:
@@ -18284,98 +18320,126 @@ class ViewPDF(object):
         self.font = ["Helvetica", 12]
         self.style.configure("pdf.TFrame", font=self.font)
         self.style.configure("pdf.TLabel", font=self.font)
-        self.style.configure("pdf.TButton", font=self.font, padding=2)
-        self.style.configure("pdf.TEntry", font=self.font, height=5)
+        self.style.configure("pdf.TButton", font=self.font, relief="flat")
+        self.style.configure("pdf.TEntry", font=self.font, height=4)
         self.style.configure("pdfbold.TLabel", font=self.font + ["bold"])
-        self.style.configure("pdf.TRadiobutton", font=self.font)
+        fg = self.style.lookup("pdf.TButton", "foreground")
+        bg = self.style.lookup("pdf.TButton", "background")
+        self.style.configure("pdf.TRadiobutton", width=5, font=self.font)
+        # Create arrowless scrollbars
+        self.style.layout("h.TScrollbar", [
+            ("Horizontal.Scrollbar.trough", {
+                "children": [("Horizontal.Scrollbar.thumb", {
+                    "expand": "1",
+                    "sticky": "nswe"})],
+                "sticky": "ew"})])
         # Widgets
-        self.frm = MyFrame(self.win)
-        self.frm.pack(fill="x")
-        self.bt1 = MyButton(self.frm, text="Goto", cmd=self.gotoPage,
+        fr1 = MyFrame(self.win)
+        fr1.pack(side="top", fill="x")
+        fr2 = MyFrame(fr1, borderwidth=1, relief="raised")
+        fr2.pack(fill="x", expand="yes")
+        # Buttons and Entries
+        self.bt1 = MyButton(fr2, text="Goto", cmd=self.gotoPage,
             style="pdf.TButton", underline=0)
         ToolTip(self.bt1, "Jump To Page Number")
         self.bt1.pack(padx=3, pady=3, side="left")
         self.entsiz = len(str(self.lastpg))
-        self.pgd = MyEntry(self.frm, width=self.entsiz, maxsize=self.entsiz,
-            font=self.font)
+        self.pgd = MyEntry(fr2, width=self.entsiz, maxsize=self.entsiz,
+            style="pdf.TEntry")
         self.pgd.bind("<Return>", self.enterPage)
         self.pgd.bind("<KP_Enter>", self.enterPage)
         self.pgd.pack(padx=3, pady=3, side="left")
-        lab = MyLabel(self.frm, text="of %s" % self.lastpg, color=False,
+        lab = MyLabel(fr2, text="of %s" % self.lastpg, color=False,
             style="pdf.TLabel")
         lab.pack(padx=3, pady=3, side="left")
-        self.bt2 = MyButton(self.frm, txt=False, text="Former",
+        self.bt2 = MyButton(fr2, txt=False, text="Former",
             cmd=self.priorPage, style="pdf.TButton", underline=0)
         ToolTip(self.bt2, "Show Previous Page")
         self.bt2.pack(padx=3, pady=3, side="left")
-        self.bt3 = MyButton(self.frm, txt=False, text="Next", cmd=self.nextPage,
-            style="pdf.TButton", underline=getUnderline(self.frm, "Next")[1])
+        self.bt3 = MyButton(fr2, txt=False, text="Next", cmd=self.nextPage,
+            style="pdf.TButton", underline=getUnderline(fr2, "Next")[1])
         ToolTip(self.bt3, "Show Next Page")
         self.bt3.pack(padx=3, pady=3, side="left")
-        self.bt8 = MyButton(self.frm, text="Close", cmd=self.doClose,
-            style="pdf.TButton", underline=0)
-        ToolTip(self.bt8, "Close the Document and Exit")
-        self.bt8.pack(padx=3, pady=3, side="right")
-        self.bt7 = MyButton(self.frm, text="Help", cmd=self.doHelp,
-            style="pdf.TButton", underline=0)
-        ToolTip(self.bt7, "Show Key Bindings")
-        self.bt7.pack(padx=3, pady=3, side="right")
-        self.bt6 = MyButton(self.frm, text="Print", cmd=self.doPrint,
-            style="pdf.TButton", underline=0)
-        ToolTip(self.bt6, "Print Document")
-        self.bt6.pack(padx=3, pady=3, side="right")
-        self.bt5 = MyButton(self.frm, text="Rotate", cmd=self.doRotate,
-            style="pdf.TButton", underline=0)
-        ToolTip(self.bt5, "Rotate Document")
-        self.bt5.pack(padx=3, pady=3, side="right")
-        self.bt4 = MyButton(self.frm, text="Zoom", style="pdf.TButton")
-        self.bt4.bind("<Button-1>", self.doZoom)
-        self.bt4.bind("<Button-3>", self.doZoom)
-        ToolTip(self.bt4, "Left Button to Zoom in Increments of 25%. Right "\
+        # Draw menu
+        imgm = getImage("menu", siz=(20, 20))
+        self.bt4 = MyMenuButton (fr2, text="Menu", relief="flat",
+            font=self.font, image=imgm, compound="left", underline=0,
+            fg=fg, bg=bg)
+        self.bt4.pack(exp="no", side="right")
+        self.bt4.menu = tk.Menu(self.bt4, font=self.font, bg=bg, fg=fg,
+            tearoff=0)
+        self.bt4["menu"] = self.bt4.menu
+        mods = []
+        if self.mf and self.mf.dbm:
+            try:
+                gc = GetCtl(self.mf)
+                ctlsys = gc.getCtl("ctlsys", error=False)
+                if ctlsys and ctlsys["sys_msvr"]:
+                    self.server = [ctlsys["sys_msvr"], ctlsys["sys_mprt"],
+                        ctlsys["sys_msec"], ctlsys["sys_maut"],
+                        ctlsys["sys_mnam"], ctlsys["sys_mpwd"]]
+                    if sendMail(self.server, "", "", "", check=True,
+                            err=self.mf.window, wrkdir=self.mf.rcdic["wrkdir"]):
+                        mods.append(("E-Mail", self.doEmail))
+            except:
+                pass
+        mods.extend([
+            ("Print", self.doPrint),
+            ("Save as..", self.doSave),
+            ("Send to..", self.doSend),
+            ("Help", self.doHelp)])
+        img = {}
+        for num, text in enumerate(mods):
+            img[num] = getImage(text[0], siz=(20, 20))
+            self.bt4.menu.add_command(label=text[0], image=img[num],
+                compound="left", command=text[1], underline=0)
+        self.bt4.menu.add_separator()
+        imgr = getImage("exit", (20, 20))
+        self.bt4.menu.add_command(label="Exit", image=imgr, compound="left",
+            command=self.doClose, underline=1)
+        # Rest of Buttons
+        self.bt5 = MyButton(fr2, text="Zoom", style="pdf.TButton")
+        self.bt5.bind("<Button-1>", self.doZoom)
+        self.bt5.bind("<Button-3>", self.doZoom)
+        ToolTip(self.bt5, "Left Button to Zoom in Increments of 25%. Right "\
             "Button to UnZoom. Ctrl plus the Numeric Keypad +- Keys can "\
-            "also be used.")
-        self.bt4.pack(padx=3, pady=3, side="right")
-        self.frm.update_idletasks()
+            "also be used. Use F11 to toggle full screen.")
+        self.bt5.pack(padx=3, pady=3, side="right")
+        fr1.update_idletasks()
         # Canvas
         self.cv = tk.Canvas(self.win, highlightthickness=0)
-        # Create arrowless scrollbars
-        self.style.layout("h.TScrollbar", [
-            ("Horizontal.Scrollbar.trough", {
-                "children": [("Horizontal.Scrollbar.thumb", {
-                    "expand": "1",
-                    "sticky": "nswe"})],
-                "sticky": "ew"})])
         self.horz = ttk.Scrollbar(self.win, orient="horizontal",
             style="h.TScrollbar")
         self.horz.config(command=self.cv.xview)
         self.cv.config(xscrollcommand=self.horz.set)
         self.horz.pack(fill="x", expand="no", side="bottom")
-        self.cv.pack(expand="yes")
+        self.cv.pack(fill="both", expand="yes")
         if sys.platform == "win32":
-            self.cv.bind("<MouseWheel>", self.doWheel)
-        else:
-            self.cv.bind("<Button-4>", self.doWheel)
-            self.cv.bind("<Button-5>", self.doWheel)
-        self.cv.bind("<Escape>", self.doClose)
-        self.cv.bind("<F1>", self.doHelp)
-        self.cv.bind("<F2>", self.doContents)
-        self.cv.bind("<Home>", self.homePage)
-        self.cv.bind("<Next>", self.nextPage)
-        self.cv.bind("<Prior>", self.priorPage)
-        self.cv.bind("<End>", self.lastPage)
-        self.cv.bind("<Up>", self.doKey)
-        self.cv.bind("<Down>", self.doKey)
-        self.cv.bind("<Left>", self.doKey)
-        self.cv.bind("<Right>", self.doKey)
-        self.cv.bind("<Control-f>", self.doSearch)
-        self.cv.bind("<Control-n>", self.nextSearch)
-        self.cv.bind("<Control-e>", self.endSearch)
-        self.cv.bind("<Control-KP_Add>", self.doZoom)
-        self.cv.bind("<Control-KP_Subtract>", self.doZoom)
+            self.win.bind("<MouseWheel>", self.doWheel)
+        else:
+            self.win.bind("<Button-4>", self.doWheel)
+            self.win.bind("<Button-5>", self.doWheel)
+        self.win.bind("<Escape>", self.doClose)
+        self.win.bind("<F1>", self.doHelp)
+        self.win.bind("<F2>", self.doContents)
+        self.win.bind("<F11>", self.doMaxi)
+        self.win.bind("<Home>", self.homePage)
+        self.win.bind("<Next>", self.nextPage)
+        self.win.bind("<Prior>", self.priorPage)
+        self.win.bind("<End>", self.lastPage)
+        self.win.bind("<Up>", self.doKey)
+        self.win.bind("<Down>", self.doKey)
+        self.win.bind("<Left>", self.doKey)
+        self.win.bind("<Right>", self.doKey)
+        self.win.bind("<Control-f>", self.doSearch)
+        self.win.bind("<Control-n>", self.nextSearch)
+        self.win.bind("<Control-e>", self.endSearch)
+        self.win.bind("<Control-KP_Add>", self.doZoom)
+        self.win.bind("<Control-KP_Subtract>", self.doZoom)
         self.win.update_idletasks()
         # Scale settings
         self.scale = 1
-        self.mat = fitz.Matrix(1, 1)
+        self.mat = list(fitz.Matrix(1, 1))
         self.zoom = self.scale
         # Other settings
         self.pgno = 1
@@ -18387,6 +18451,7 @@ class ViewPDF(object):
         self.wsiz = []
         # Display 1st page
         self.showPage()
+        self.maxi = False
         self.win.wait_window()
 
     def doPassword(self):
@@ -18437,23 +18502,23 @@ class ViewPDF(object):
 
     def homePage(self, event=None):
         self.pgno = 1
-        self.showPage("top")
+        self.showPage(pos="top")
 
     def lastPage(self, event=None):
         self.pgno = self.lastpg
-        self.showPage("top")
+        self.showPage(pos="top")
 
     def nextPage(self, event=None):
         if self.pgno == self.lastpg:
             return
         self.pgno += 1
-        self.showPage("top")
+        self.showPage(pos="top")
 
     def priorPage(self, event=None, pos="top"):
         if self.pgno == 1:
             return
         self.pgno -= 1
-        self.showPage(pos)
+        self.showPage(pos=pos)
 
     def gotoPage(self, event=None):
         self.pgd.configure(state="normal")
@@ -18466,40 +18531,43 @@ class ViewPDF(object):
             self.pgd.selection_range(0, "end")
             return
         self.pgno = pgno
-        self.showPage("top")
+        self.showPage(pos="top")
+
+    def doMaxi(self, event=None):
+        if not self.maxi:
+            self.maxi = self.mat[:]
+            self.win.geometry("%sx%s+0+0" % (self.sw, self.sh))
+            self.mat[0] = self.mat[3] = self.sw / self.siz[0]
+        else:
+            self.mat = self.maxi
+            self.maxi = False
+        self.wsiz = []
+        self.showPage()
 
     def doZoom(self, event=None):
         if event.num == 3 or event.keysym == "KP_Subtract":
             if self.zoom > self.scale:
                 self.zoom = round((self.zoom - .25), 2)
-        elif self.zoom < (self.scale + 2):
+        elif self.zoom < (self.scale + 3):
             while self.zoom <= self.mat[0]:
                 self.zoom = round((self.zoom + .25), 2)
         self.wsiz = []
         self.mat[0] = self.mat[3] = self.zoom
         self.showPage()
 
-    def doRotate(self, event=None):
-        page = self.doc[self.pgno - 1]
-        rot = page.rotation
-        if rot == 270:
-            rot = 0
-        else:
-            rot += 90
-        page.setRotation(rot)
-        self.showPage()
-
     def doSearch(self, event=None):
         def getSearch(event=None):
             self.search = ent.get()
+            self.okfound = False
             self.pags = []
             self.prec = {}
             for page in self.doc:
                 annot = page.firstAnnot
                 while annot:
                     annot = page.deleteAnnot(annot)
-                self.found = page.searchFor(self.search)
-                for inst in self.found:
+                found = page.searchFor(self.search)
+                for inst in found:
+                    self.okfound = True
                     numb = (page.number + 1)
                     if numb not in self.pags:
                         self.pags.append(numb)
@@ -18529,7 +18597,7 @@ class ViewPDF(object):
         frm.place(anchor="center", relx=0.5, rely=0.5)
         ent.focus_set()
         frm.wait_window()
-        if not self.found:
+        if not self.okfound:
             sp = SplashScreen(self.win, "Sorry, Not Found")
             time.sleep(2)
             sp.closeSplash()
@@ -18561,23 +18629,24 @@ class ViewPDF(object):
         if unbind:
             if key:
                 self.cvbinds = []
-                for bind in self.cv.bind():
+                for bind in self.win.bind():
                     if bind != exc:
-                        self.cvbinds.append((bind, self.cv.bind(bind)))
+                        self.cvbinds.append((bind, self.win.bind(bind)))
                         self.cv.unbind(bind)
-            for x in range(1, 8):
+            for x in range(1, 6):
                 bt = getattr(self, "bt%s" % x)
                 bt.configure(state="disabled")
         else:
             if key:
                 for bind in self.cvbinds:
-                    self.cv.bind(bind[0], bind[1])
-            for x in range(1, 8):
+                    self.win.bind(bind[0], bind[1])
+            for x in range(1, 6):
                 bt = getattr(self, "bt%s" % x)
                 bt.configure(state="normal")
         self.win.update_idletasks()
 
     def showPage(self, pos=None):
+        self.ltime = 0
         self.cv.delete("all")
         page = self.doc[self.pgno - 1]
         dlist = page.getDisplayList()
@@ -18589,8 +18658,8 @@ class ViewPDF(object):
         self.ti = tk.PhotoImage(data=pix.getImageData("ppm"))
         self.cv.create_image(0, 0, image=self.ti, anchor="nw", tags="img")
         self.cv.configure(width=self.ti.width(), height=self.ti.height())
+        # Limit display size to %-tage of screen size
         self.win.update_idletasks()
-        # Limit display size to 90% of screen size
         wsiz = [self.win.winfo_reqwidth(), self.win.winfo_reqheight()]
         if wsiz[0] > self.sw:
             wsiz[0] = self.sw
@@ -18621,8 +18690,10 @@ class ViewPDF(object):
                 y1, y2 = self.getVisibleArea()
             if self.cont:
                 self.cont = False
+        self.win.lift()
+        self.win.grab_set()
+        self.win.focus_set()
         self.win.update_idletasks()
-        self.cv.focus_set()
 
     def getVisibleArea(self):
         y1 = self.cv.canvasy(0)
@@ -18640,23 +18711,22 @@ class ViewPDF(object):
         data = (
             ("F1", "This help"),
             ("F2", "A Table of Contents, if available"),
+            ("F11", "Toggle Full Screen"),
+            ("Alt m", "Show the Menu"),
             ("Alt g", "Go To Page"),
             ("Alt f", "Former Page"),
             ("Alt n", "Next Page"),
-            ("Alt p", "Print the Document"),
-            ("Alt h", "This help"),
-            ("Alt c", "Close the Document"),
             ("Ctrl +", "Zoom"),
             ("Ctrl -", "Reverse Zoom"),
-            ("Ctrl f", "Search for text"),
-            ("Ctrl n", "Next occurrence of text"),
-            ("Ctrl e", "Clear highlighted text"),
+            ("Ctrl f", "Search for Text"),
+            ("Ctrl n", "Next occurrence of Text"),
+            ("Ctrl e", "Clear highlighted Text"),
             ("Arrows", "Scroll up, down, left and right"),
             ("Esc", "Close the Current View"))
         self.doUnbind(exc="<Key-F1>")
         SelectChoice(self.cv, titl="Keyboard Bindings", deco=False, modal=True,
-            cols=cols, data=data, font=self.font, lines=len(data), sort=False,
-            scrl=False, live=False)
+            cols=cols, data=data, font=self.font, lines=len(data),
+            sort=False, scrl=False, live=False)
         self.doUnbind(False)
         self.cv.focus_force()
 
@@ -18734,8 +18804,147 @@ class ViewPDF(object):
             self.prec[self.pgno] = found[0]
             self.cont = True
             self.showPage()
+        self.cv.focus_force()
+
+    def doSave(self):
+        if sys.platform == "win32":
+            lastdir = os.path.join(self.mf.rcdic["wrkdir"], "savedir")
         else:
-            self.cv.focus_force()
+            lastdir = os.path.join(self.mf.rcdic["wrkdir"], ".savedir")
+        if os.path.exists(lastdir):
+            infle = open(lastdir, "r")
+            name = infle.readline().rstrip()
+            infle.close()
+        else:
+            name = self.mf.rcdic["wrkdir"]
+        path = tkfile.asksaveasfilename(title="Choose Filename",
+            defaultextension=".pdf", filetypes=[("pdf Files", "*.pdf")],
+            initialdir=name, initialfile=os.path.basename(self.pdfnam))
+        if path:
+            try:
+                shutil.copyfile(self.pdfnam, path)
+                infle = open(lastdir, "w")
+                infle.write(os.path.dirname(os.path.normpath(path)))
+                infle.close()
+            except Exception as err:
+                showError(None, "Error", err)
+
+    def doSend(self):
+        if sys.platform == "win32":
+            os.startfile(self.pdfnam)
+        else:
+            subprocess.Popen(["xdg-open", self.pdfnam])
+        self.doClose()
+
+    def doEmail(self):
+        self.win.withdraw()
+        # From address
+        if sys.platform == "win32":
+            self.lasteml = os.path.join(self.mf.rcdic["wrkdir"], "fromeml")
+        else:
+            self.lasteml = os.path.join(self.mf.rcdic["wrkdir"], ".fromeml")
+        if os.path.exists(self.lasteml):
+            infle = open(self.lasteml, "r")
+            self.efrom = infle.readline().rstrip()
+            infle.close()
+        else:
+           self.efrom = ""
+        # To addresses
+        data = []
+        sql = Sql(self.mf.dbm, ["telmst", "telcon"],
+            prog=__name__)
+        tdm = sql.getRec("telmst", cols=["tdm_name",
+            "tdm_email"], where=[("tdm_email", "<>", "")],
+            order="tdm_name")
+        for t in tdm:
+            data.append([t[0], "", "", t[1]])
+        tdc = sql.getRec("telcon", cols=["tdc_name",
+            "tdc_contact", "tdc_desig", "tdc_email"],
+            where=[("tdc_email", "<>", "")],
+            order="tdc_name, tdc_contact")
+        if tdc:
+            data.extend(tdc)
+        adr = {
+            "stype": "C",
+            "titl": "Available Addresses",
+            "head": (
+                "Name", "Contact", "Designation", "Address"),
+            "typs": (("NA",0,"Y"),("NA",0),("NA",0),("NA",0)),
+            "data": data,
+            "mode": "M",
+            "index": 3}
+        tit = "Email Document"
+        fld = (
+            (("T",0,0,0),"ITX",30,"From Address","",
+                self.efrom,"N",None,None,None,("email", False)),
+            (("T",0,1,0),"ITX",50,"To Addresses","",
+                "","N",self.doETo,adr,None,("email", False),None,
+                "Comma Separated List of Addresses."))
+        self.ed = TartanDialog(self.mf, tops=True, tile=tit, eflds=fld,
+            tend=((self.doEEnd, "y"),), txit=(self.doEExit,))
+        if self.mf and self.mf.window:
+            self.mf.window.deiconify()
+        self.ed.mstFrame.wait_window()
+        if self.mf and self.mf.window:
+            self.mf.window.withdraw()
+        self.win.deiconify()
+
+    def doETo(self, frt, pag, r, c, p, i, w):
+        try:
+            data = list(eval(w))
+            addr = ""
+            for a in data:
+                if not addr:
+                    addr = a
+                else:
+                    addr = "%s,%s" % (addr, a)
+            self.ed.loadEntry(frt, pag, p, data=addr)
+        except:
+            pass
+
+    def doEEnd(self):
+        self.ed.closeProcess()
+        fromad, toad = self.ed.t_work[0][0]
+        toad = toad.replace(" ", "").split(",")
+        subj = "PDF Report"
+        att = [self.pdfnam]
+        sql = Sql(self.mf.dbm, "emllog", prog=__name__)
+        for add in toad:
+            ok = False
+            while not ok:
+                sp = SplashScreen(self.mf.window.focus_displayof(),
+                    "E-Mailing the Report to:\n\n%s\n\nPlease Wait....." % add)
+                ok = sendMail(self.server, fromad, add, subj, "", attach=att,
+                    wrkdir=self.mf.rcdic["wrkdir"])
+                sp.closeSplash()
+                if not ok:
+                    ok = askQuestion(self.mf.window.focus_displayof(),
+                        "E-Mail Error", "Problem Delivering This "\
+                        "Message.\n\nTo: %s\nSubject: %s\n\nWould "\
+                        "You Like to Retry?" % (add, subj))
+                    if ok == "yes":
+                        ok = None
+                    else:
+                        ok = "Failed"
+                else:
+                    ok = "OK"
+                if ok:
+                    try:
+                        tim = time.localtime()[0:  5]
+                        tim = "%04i-%02i-%02i %02i:%02i" % tim
+                        sql.insRec("emllog", data=[fromad.strip(),
+                            add.strip(), subj, tim, "OK"])
+                    except:
+                        pass
+        self.mf.dbm.commitDbase()
+        infle = open(self.lasteml, "w")
+        infle.write("%s\n" % self.ed.t_work[0][0][0])
+        infle.close()
+        self.ed.mstFrame.destroy()
+
+    def doEExit(self):
+        self.ed.closeProcess()
+        self.ed.mstFrame.destroy()
 
     def doPrint(self):
         def doDisable(event=None):
@@ -18788,56 +18997,25 @@ class ViewPDF(object):
                     wrk = tempfile.gettempdir()
                 showException(self.cv, wrk, err)
 
-        def getDevices():
-            dflt = None
-            prts = []
-            if sys.platform == "win32":
-                import win32print
-                dflt = win32print.GetDefaultPrinter()
-                lst = win32print.EnumPrinters(2)
-                for l in lst:
-                    prts.append(l[2].strip())
-            else:
-                proc = subprocess.Popen("lpstat -d", shell=True, bufsize=0,
-                    stdin=subprocess.PIPE, stdout=subprocess.PIPE,
-                    stderr=subprocess.PIPE, close_fds=True)
-                prt = proc.stdout.readline()
-                if type(prt) == bytes:
-                    prt = prt.decode("utf-8")
-                if prt.count(":"):
-                    dflt = prt.strip().split(":")[1]
-                proc = subprocess.Popen("lpstat -e", shell=True, bufsize=0,
-                    stdin=subprocess.PIPE, stdout=subprocess.PIPE,
-                    stderr=subprocess.PIPE, close_fds=True)
-                lst = proc.stdout.readlines()
-                for l in lst:
-                    if type(l) == bytes:
-                        l = l.decode("utf-8")
-                    prts.append(l.rstrip())
-            return (dflt, prts)
-
-        dflt, prts = getDevices()
+        prts = getPrinters()
         if not prts:
             return
         self.doUnbind()
-        win = MkWindow(trans=self.cv, modal=True, decor=False).newwin
+        win = MkWindow(trans=self.cv, decor=False).newwin
         win.configure(bg="black", borderwidth=2)
-        win.bind("<Enter>", self.doFocus)
         fr1 = MyFrame(win, relief="ridge", borderwidth=2,
             style="pdf.TFrame")
         fr1.pack(fill="both", expand="yes")
         lb1 = MyLabel(fr1, color=False, text="Available Printers",
             relief="raised", style="pdfbold.TLabel")
         lb1.pack(fill="x")
-        lbx = tk.Listbox(fr1, font=self.font, width=10)
+        lbx = tk.Listbox(fr1, font=self.font, width=10,
+            selectbackground="blue", selectforeground="white")
+        lbx.bind("<Return>", doExec)
+        lbx.bind("<KP_Enter>", doExec)
+        lbx.bind("<Escape>", doCancel)
         for prt in prts:
             lbx.insert("end", prt)
-        if dflt in prts:
-            idx = prts.index(dflt)
-        else:
-            idx = 0
-        lbx.selection_set(idx)
-        lbx.activate(idx)
         lbx.pack(fill="both", expand="yes")
         fr2 = MyFrame(win, relief="ridge", borderwidth=2,
             style="pdf.TFrame")
@@ -18845,43 +19023,47 @@ class ViewPDF(object):
         fr2 = MyFrame(win, relief="ridge", borderwidth=2,
             style="pdf.TFrame")
         fr2.pack(fill="both", expand="yes")
-        fr3 = MyFrame(fr2, style="pdf.TFrame")
-        fr3.pack(side="left", fill="both", expand="yes")
-        lb2 = MyLabel(fr3, color=False, text="Range", style="pdfbold.TLabel")
-        lb2.grid(row=0, column=0, sticky="w", columnspan=2)
+        fr2.columnconfigure(0, weight=1)
+        fr2.columnconfigure(1, weight=1)
+        fr2.columnconfigure(2, weight=1)
+        lb2 = MyLabel(fr2, color=False, text="Range", style="pdfbold.TLabel")
+        lb2.grid(row=0, column=0, sticky="w")
         var = tk.StringVar()
         var.set("A")
-        rb1 = ttk.Radiobutton(fr3, variable=var, text="All Pages",
-            value="A", command=doDisable, style="pdf.TRadiobutton")
-        rb1.grid(row=1, column=0, sticky="w")
-        rb2 = ttk.Radiobutton(fr3, variable=var, text="Current Page",
-            value="C", command=doDisable, style="pdf.TRadiobutton")
-        rb2.grid(row=2, column=0, sticky="w")
-        rb3 = ttk.Radiobutton(fr3, variable=var, text="Pages",
+        rb1 = MyRadioButton(fr2, variable=var, text="All Pages",
+            value="A", command=doDisable, style="pdf.TRadiobutton",
+            width=12)
+        rb1.grid(row=1, column=0, sticky="nsew")
+        rb2 = MyRadioButton(fr2, variable=var, text="Current Page",
+            value="C", command=doDisable, style="pdf.TRadiobutton",
+            width=12)
+        rb2.grid(row=2, column=0, sticky="nsew")
+        rb3 = MyRadioButton(fr2, variable=var, text="Pages",
             value="P", command=doPages, style="pdf.TRadiobutton")
-        rb3.grid(row=3, column=0, sticky="w")
-        ent = MyEntry(fr3, font=self.font)
+        rb3.grid(row=3, column=0, sticky="nsew")
+        ent = MyEntry(fr2, style="pdf.TEntry")
         ToolTip(ent, "Enter page numbers separated by commas.")
         ent.bind("<Return>", doExec)
         ent.bind("<KP_Enter>", doExec)
         ent.configure(state="disabled")
-        ent.grid(row=3, column=1)
-        fr4 = MyFrame(fr2, style="pdf.TFrame")
-        fr4.pack(side="left", fill="both", expand="yes")
-        lb3 = MyLabel(fr4, text="Copies", style="pdfbold.TLabel", color=False)
-        lb3.pack(fill="x")
-        spn = tk.Spinbox(fr4, from_=1, to=10, font=self.font)
-        spn.pack(fill="x")
-        fr5 = MyFrame(win, style="pdf.TFrame")
-        fr5.pack(fill="x", expand="yes")
-        bt1 = MyButton(fr5, text="Cancel", cmd=doCancel, underline=0,
+        ent.grid(row=3, column=1, sticky="nsew", columnspan=2)
+        lb3 = MyLabel(fr2, text="Copies", style="pdfbold.TLabel", color=False)
+        lb3.grid(row=0, column=2, sticky="e")
+        spn = tk.Spinbox(fr2, from_=1, to=10, font=self.font, width=5)
+        spn.grid(row=1, column=2, sticky="e")
+        fr3 = MyFrame(win, style="pdf.TFrame")
+        fr3.pack(fill="x", expand="yes")
+        bt1 = MyButton(fr3, text="Cancel", cmd=doCancel, underline=0,
             style="pdf.TButton")
         bt1.pack(side="left", fill="x", expand="yes")
-        bt2 = MyButton(fr5, text="Print", cmd=doExec, underline=0,
+        bt2 = MyButton(fr3, text="Print", cmd=doExec, underline=0,
             style="pdf.TButton")
         bt2.pack(side="left", fill="x", expand="yes")
         placeWindow(win, self.cv, expose=True)
+        lbx.selection_set(0)
+        lbx.activate(0)
         lbx.focus_set()
+        win.grab_set()
         win.wait_window()
         self.win.update_idletasks()
         self.doUnbind(False)
diff --git a/ass/ar1010.py b/ass/ar1010.py
old mode 100755
new mode 100644
diff --git a/ass/ar2010.py b/ass/ar2010.py
old mode 100755
new mode 100644
diff --git a/ass/ar2020.py b/ass/ar2020.py
old mode 100755
new mode 100644
diff --git a/ass/ar2030.py b/ass/ar2030.py
old mode 100755
new mode 100644
index 7eac688..c846efa
--- a/ass/ar2030.py
+++ b/ass/ar2030.py
@@ -38,8 +38,8 @@ class ar2030(object):
             self.args = None
         if self.setVariables():
             if self.args:
-                self.curdt = self.args[0]
-                self.endPage0()
+                if not self.doChkDate(self.args[0]):
+                    self.endPage0()
             else:
                 self.dataHeader()
                 if "wait" in self.opts:
@@ -92,14 +92,19 @@ class ar2030(object):
             txit=txt)
 
     def doTrdate(self, frt, pag, r, c, p, i, w):
-        if w < self.sper or w > self.eper:
+        chk = self.doChkDate(w)
+        if chk:
+            return chk
+
+    def doChkDate(self, date):
+        if date < self.sper or date > self.eper:
             return "Invalid Date, Not in Financial Period"
         if self.lastp and self.lastp < self.sper:
             dte1 = mthendDate(self.lastp * 100)
             dte2 = mthendDate(self.sper * 100)
             if dateDiff(dte1, dte2, "months") > 1:
                 return "Missing Depreciation for Previous Period"
-        self.curdt = w
+        self.curdt = date
 
     def endPage0(self):
         if self.args:
@@ -136,7 +141,17 @@ class ar2030(object):
             self.depacc = grp[self.sql.assgrp_col.index("asg_depacc")]
             self.expacc = grp[self.sql.assgrp_col.index("asg_expacc")]
             self.code = dat[self.sql.assmst_col.index("asm_code")]
-            self.depcod = dat[self.sql.assmst_col.index("asm_depcod")]
+            depcod = dat[self.sql.assmst_col.index("asm_depcod")]
+            # Get Depreciation Record
+            self.dep = self.sql.getRec(tables="assdep",
+                where=[("asd_cono", "=", self.opts["conum"]),
+                ("asd_code", "=", depcod)], limit=1)
+            if not self.dep:
+                showError(self.opts["mf"].body, "Error",
+                    "Depreciation Code %s Does Not Exist.\n\n"\
+                    "Aborting." % depcod)
+                abort = True
+                break
             bals = Balances(self.opts["mf"], "ASS", self.opts["conum"],
                 self.sper, keys=(self.group.work, self.code))
             asset = bals.doAssBals()
@@ -205,10 +220,6 @@ class ar2030(object):
         if years > 6:
             # Maximum of 7 variable rates in assdep record
             years = 6
-        # Get Depreciation Record
-        dep = self.sql.getRec("assdep", where=[("asd_cono", "=",
-            self.opts["conum"]), ("asd_code", "=", self.depcod)], limit=1)
-        #
         # Extract Depreciation up to previous year end
         whr = copyList(where)
         whr.extend([("ast_mtyp", "=", 4), ("ast_curdt", "<", self.sper)])
@@ -233,18 +244,18 @@ class ar2030(object):
             cmd[1] = 0
         if not cmd[2]:
             cmd[2] = 0
-        if dep[self.sql.assdep_col.index("asd_typec")] == "S":
+        if self.dep[self.sql.assdep_col.index("asd_typec")] == "S":
             # Straight Line
             cval = self.cap
-            crat = dep[self.sql.assdep_col.index("asd_rate1c")]
+            crat = self.dep[self.sql.assdep_col.index("asd_rate1c")]
             for x in range(2, years + 2):
-                n = dep[self.sql.assdep_col.index("asd_rate%sc" % x)]
+                n = self.dep[self.sql.assdep_col.index("asd_rate%sc" % x)]
                 if n:
                     crat = n
         else:
             # Depreciating Balance
             cval = float(ASD(self.cap) + ASD(pmd[0]))
-            crat = dep[self.sql.assdep_col.index("asd_rate1c")]
+            crat = self.dep[self.sql.assdep_col.index("asd_rate1c")]
         if cval:
             if cval < 0:
                 cdep = 0
@@ -255,22 +266,22 @@ class ar2030(object):
                 if cbal < 0:
                     cdep = float(ASD(cdep) + ASD(cbal))
                 cdep = float(ASD(0) - ASD(cdep))
-        typer = dep[self.sql.assdep_col.index("asd_typer")]
+        typer = self.dep[self.sql.assdep_col.index("asd_typer")]
         if self.rordp == "N" or typer == "N":
             rdep = 0
         else:
             if typer == "S":
                 # Straight Line
                 rval = self.cap
-                rrat = dep[self.sql.assdep_col.index("asd_rate1r")]
+                rrat = self.dep[self.sql.assdep_col.index("asd_rate1r")]
                 for x in range(2, years + 2):
-                    n = dep[self.sql.assdep_col.index("asd_rate%sr" % x)]
+                    n = self.dep[self.sql.assdep_col.index("asd_rate%sr" % x)]
                     if n:
                         rrat = n
             else:
                 # Depreciating Balance
                 rval = float(ASD(self.cap) + ASD(pmd[1]))
-                rrat = dep[self.sql.assdep_col.index("asd_rate1r")]
+                rrat = self.dep[self.sql.assdep_col.index("asd_rate1r")]
             if rval:
                 if rval < 0:
                     rdep = 0
diff --git a/ass/ar3010.py b/ass/ar3010.py
old mode 100755
new mode 100644
index 31edcd4..a057ce9
--- a/ass/ar3010.py
+++ b/ass/ar3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, MyFpdf, ProgressBar, Sql, TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
 from tartanWork import artrtp
@@ -41,9 +40,6 @@ class ar3010(object):
             prog=self.__class__.__name__)
         if self.sql.error:
             return
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -111,11 +107,9 @@ class ar3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %49s %10s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-91s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.asstrn_col
@@ -172,11 +166,9 @@ class ar3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %54s %5s" %
-            ("Asset Register Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("%-95s" % "Asset Register Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/ass/ar3020.py b/ass/ar3020.py
old mode 100755
new mode 100644
index c778c59..93a99a5
--- a/ass/ar3020.py
+++ b/ass/ar3020.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,10 +46,6 @@ class ar3020(object):
         if not assctl:
             return
         self.fromad = assctl["cta_emadd"]
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.s_per = int(self.opts["period"][1][0] / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
         self.totind = "N"
@@ -149,8 +144,7 @@ class ar3020(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %16s %33s %16s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-105s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bcnt = 0
         self.bmt1 = 0
@@ -165,7 +159,6 @@ class ar3020(object):
         self.gmt2 = [0,0,0,0,0]
         self.gvat = [0,0,0,0,0]
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         tc = self.sql.asstrn_col
         for num, dat in enumerate(recs):
@@ -235,12 +228,11 @@ class ar3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-36s %-7s %-2s %-7s %47s %5s" % \
+        self.fpdf.drawText("%-36s %-7s %-2s %-61s" %
             ("Asset Register Audit Trail for Period",
-            self.sdat.disp, "to", self.edat.disp, "Page", self.pgnum))
+            self.sdat.disp, "to", self.edat.disp))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/ass/ar3030.py b/ass/ar3030.py
old mode 100755
new mode 100644
index 47d9398..cf6d9c1
--- a/ass/ar3030.py
+++ b/ass/ar3030.py
@@ -51,8 +51,6 @@ class ar3030(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.sper = int(self.opts["period"][1][0] / 100)
         self.eper = int(self.opts["period"][2][0] / 100)
         return True
@@ -128,17 +126,12 @@ class ar3030(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.rordp == "Y":
-            self.head = ("%03u %-30s %22s %33s %23s %6s" % (self.opts["conum"],
-                self.opts["conam"], "", self.sysdttm, "",
-                    self.__class__.__name__))
+            self.head = "%03u %-118s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %8s %33s %9s %6s" % (self.opts["conum"],
-                self.opts["conam"], "", self.sysdttm, "",
-                    self.__class__.__name__))
+            self.head = "%03u %-91s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         oldgrp = ""
         oldcod = ""
-        self.pgnum = 0
         self.pglin = 999
         mc = self.sql.assmst_col
         for num, dat in enumerate(recs):
@@ -202,15 +195,14 @@ class ar3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.rordp == "Y":
-            self.fpdf.drawText("%-22s %-10s %82s %5s" % \
-                ("Asset Statements as at", self.sysdtd, "Page", self.pgnum))
+            self.fpdf.drawText("%-22s %-99s" % ("Asset Statements as at",
+                self.sysdtd))
         else:
-            self.fpdf.drawText("%-22s %-10s %54s %5s" % \
-                ("Asset Statements as at", self.sysdtd, "Page", self.pgnum))
+            self.fpdf.drawText("%-22s %-71s" % ("Asset Statements as at",
+                self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("(Options: From Period %7s to Period %7s)" % \
             (self.df.t_disp[0][0][0], self.df.t_disp[0][0][1]))
diff --git a/ass/ar3040.py b/ass/ar3040.py
old mode 100755
new mode 100644
index 179c773..1f8b86e
--- a/ass/ar3040.py
+++ b/ass/ar3040.py
@@ -54,8 +54,7 @@ class ar3040(object):
             t[1], t[2], t[3], t[4], self.__class__.__name__)
         self.sper = int(self.opts["period"][1][0] / 100)
         self.eper = int(self.opts["period"][2][0] / 100)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Code", "Description", "Purch-Date", "Cost-Price",
             "Accum-Dep", "Opening-Bal", "Purchases", "Improvements",
             "Write-Offs", "Depreciation", "Sales", "Profit/Loss",
@@ -150,7 +149,7 @@ class ar3040(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Asset Register Report as at %s" % self.sysdtd)
         self.expheads.append("Options: Report Period: %s Report Type: %s" % \
             (self.df.t_disp[0][0][0], self.typ))
@@ -205,15 +204,13 @@ class ar3040(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
-        self.head2 = "Asset Register Report as at %s%s" % (self.sysdtd, "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+        self.head1 = self.head
+        self.head2 = "Asset Register Report as at %s" % self.sysdtd
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head1)
-        self.pgnum = 0
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
         self.pglin = 999
         for seq, dat in enumerate(recs):
             p.displayProgress(seq)
@@ -299,10 +296,9 @@ class ar3040(object):
     def pageHeading(self, grp):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText("(%s %s %s %s)" % ("Options: Report Period:",
             self.df.t_disp[0][0][0], "Report Type:", self.typ))
@@ -315,7 +311,7 @@ class ar3040(object):
             "Cost-Price ", "Accum-Dep ", "Opening-Bal ", "Purchases ",
             "Improvements ", "  Write-Offs ", "Depreciation ", "Sales ",
             " Profit/Loss ", " Closing-Bal "))
-        self.fpdf.underLine(txt=self.head1)
+        self.fpdf.underLine(txt=self.head2)
         self.fpdf.setFont()
         self.pglin = 10
 
diff --git a/ass/ar3050.py b/ass/ar3050.py
old mode 100755
new mode 100644
diff --git a/ass/ar4010.py b/ass/ar4010.py
old mode 100755
new mode 100644
index ea32dd7..25d7de6
--- a/ass/ar4010.py
+++ b/ass/ar4010.py
@@ -54,8 +54,6 @@ class ar4010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.sper = int(self.opts["period"][1][0] / 100)
         self.eper = int(self.opts["period"][2][0] / 100)
         return True
@@ -181,7 +179,7 @@ class ar4010(object):
         asset = bals.doAssBals(start=self.sper, end=self.eper, trans="C")
         if not asset:
             return
-        cap, cdp, rdp, cbl, rbl, mov, self.trn = asset
+        cap, cdp, rdp, cbl, rbl, mov, trn = asset
         dte = self.sql.getRec("asstrn", cols=["min(ast_date)"],
             where=[("ast_cono", "=", self.opts["conum"]), ("ast_group", "=",
             self.group), ("ast_code", "=", self.code), ("ast_mtyp", "=",
@@ -225,34 +223,7 @@ class ar4010(object):
     def doTrans2(self, frt, pag, r, c, p, i, w):
         tit = "Transactions for Item: %s %s - %s" % \
             (self.group, self.code, self.desc)
-        if self.rordp == "Y":
-            col = ("ast_date", "ast_curdt", "ast_batch", "ast_type", "ast_mtyp",
-                "ast_refno", "ast_amt1", "ast_amt2", "ast_desc", "ast_seq")
-        else:
-            col = ("ast_date", "ast_curdt", "ast_batch", "ast_type", "ast_mtyp",
-                "ast_refno", "ast_amt1", "ast_desc", "ast_seq")
-        atc = [
-            ("ast_date", "   Date", 10, "D1", "N"),
-            ("ast_curdt", "Curr-Dt", 7, "D2", "N"),
-            ("ast_batch", "Batch", 7, "Na", "N"),
-            ("ast_type", "Typ", 3, ("XX", artrtp), "N"),
-            ("ast_mtyp", "Mov", 3, ("XX", armvtp), "N"),
-            ("ast_refno", "Reference", 9, "Na", "Y"),
-            ("ast_amt1", "  Amount-1", 15.2, "SD", "N")]
-        if self.rordp == "Y":
-            atc.append(("ast_amt2", "  Amount-2", 15.2, "SD", "N"))
-        atc.extend([
-            ("ast_desc", "Details", 30, "NA", "N"),
-            ("ast_seq", "Sequence", 8, "UI", "N")])
-        whr = [
-            ("ast_cono", "=", self.opts["conum"]),
-            ("ast_group", "=", self.group),
-            ("ast_code", "=", self.code),
-            ("ast_curdt", "<=", self.eper)]
-        if w == "N":
-            whr.append(("ast_curdt", ">=", self.sper))
-        odr = "ast_date, ast_refno"
-        dat = self.sql.getRec("asstrn", cols=col, where=whr, order=odr)
+        dat, atc, col = self.getTrans(hist=w)
         if dat:
             state = self.df.disableButtonsTags()
             while True:
@@ -297,13 +268,10 @@ class ar4010(object):
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         if self.rordp == "Y":
-            self.head = ("%03u %-30s %51s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-93s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %35s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-77s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt != "T":
             self.pageHeading()
@@ -313,22 +281,24 @@ class ar4010(object):
             doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
                 pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
         elif opt == "A":
-            if not self.trn[0]:
+            dat, atc, col = self.getTrans()
+            if not dat:
                 self.fpdf.output(pdfnam, "F")
                 doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
                     pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
             else:
                 self.pageHeading()
                 self.pageHeadingTrans()
-                self.printTrans()
+                self.printTrans(dat, atc)
                 self.fpdf.output(pdfnam, "F")
                 doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
                     pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
         elif opt == "T":
-            if self.trn[0]:
+            dat, atc, col = self.getTrans()
+            if dat:
                 self.pageHeading()
                 self.pageHeadingTrans()
-                self.printTrans()
+                self.printTrans(dat, atc)
                 self.fpdf.output(pdfnam, "F")
                 doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
                     pdfnam=pdfnam, header=self.tit, repprt=["N", "V", "view"])
@@ -380,17 +350,19 @@ class ar4010(object):
                 self.fpdf.drawText("%15s%-30s %15s" %
                         (" ", desc[n][:30], d[0]))
 
-    def printTrans(self):
-        for ct in self.trn[0]:
-            trdt = CCD(ct[self.trn[1].index("ast_date")], "D1", 10)
-            ref1 = CCD(ct[self.trn[1].index("ast_refno")], "Na", 9)
-            trtp = CCD(ct[self.trn[1].index("ast_type")], "UI", 1)
-            batch = CCD(ct[self.trn[1].index("ast_batch")], "Na", 7)
-            mtyp = CCD(ct[self.trn[1].index("ast_mtyp")], "UI", 1)
-            amt1 = CCD(ct[self.trn[1].index("ast_amt1")], "SD", 15.2)
+    def printTrans(self, trn, atc):
+        for ct in trn:
+            trdt = CCD(ct[0], "D1", 10)
+            ref1 = CCD(ct[5], "Na", 9)
+            trtp = CCD(ct[3], "UI", 1)
+            batch = CCD(ct[2], "Na", 7)
+            mtyp = CCD(ct[4], "UI", 1)
+            amt1 = CCD(ct[6], "SD", 15.2)
             if self.rordp == "Y":
-                amt2 = CCD(ct[self.trn[1].index("ast_amt2")], "SD", 15.2)
-            detail = CCD(ct[self.trn[1].index("ast_desc")], "NA", 30)
+                amt2 = CCD(ct[7], "SD", 15.2)
+                detail = CCD(ct[8], "NA", 30)
+            else:
+                detail = CCD(ct[7], "NA", 30)
             if self.pglin > self.fpdf.lpp:
                 self.pageHeading()
                 self.pageHeadingTrans()
@@ -408,17 +380,14 @@ class ar4010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.rordp == "Y":
-            self.fpdf.drawText("%-35s %-10s %44s %5s" % \
-                ("Assets Register Interrogation as at", self.sysdtd, "Page",
-                self.pgnum))
+            self.fpdf.drawText("%-35s %-61s" %
+                ("Assets Register Interrogation as at", self.sysdtd))
         else:
-            self.fpdf.drawText("%-35s %-10s %28s %5s" % \
-                ("Assets Register Interrogation as at", self.sysdtd, "Page",
-                self.pgnum))
+            self.fpdf.drawText("%-35s %-45s" %
+                ("Assets Register Interrogation as at", self.sysdtd))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 6
@@ -428,7 +397,7 @@ class ar4010(object):
         self.fpdf.drawText()
         self.fpdf.drawText("%-5s %-10s %s %s %-5s %s %s" % ("", "",
             self.df.topf[0][0][3], self.df.t_disp[0][0][0], "",
-            self.df.topf[1][0][3], self.df.t_disp[1][0][0]))
+            self.df.topf[0][1][3], self.df.t_disp[0][0][1]))
         self.fpdf.drawText()
         if self.rordp == "Y":
             self.fpdf.drawText("%-10s %-9s %-3s %-7s %3s %-15s %-15s %-30s" % \
@@ -442,6 +411,37 @@ class ar4010(object):
         self.fpdf.setFont()
         self.pglin = 8
 
+    def getTrans(self, hist="Y"):
+        if self.rordp == "Y":
+            col = ("ast_date", "ast_curdt", "ast_batch", "ast_type", "ast_mtyp",
+                "ast_refno", "ast_amt1", "ast_amt2", "ast_desc", "ast_seq")
+        else:
+            col = ("ast_date", "ast_curdt", "ast_batch", "ast_type", "ast_mtyp",
+                "ast_refno", "ast_amt1", "ast_desc", "ast_seq")
+        atc = [
+            ("ast_date", "   Date", 10, "D1", "N"),
+            ("ast_curdt", "Curr-Dt", 7, "D2", "N"),
+            ("ast_batch", "Batch", 7, "Na", "N"),
+            ("ast_type", "Typ", 3, ("XX", artrtp), "N"),
+            ("ast_mtyp", "Mov", 3, ("XX", armvtp), "N"),
+            ("ast_refno", "Reference", 9, "Na", "Y"),
+            ("ast_amt1", "  Amount-1", 15.2, "SD", "N")]
+        if self.rordp == "Y":
+            atc.append(("ast_amt2", "  Amount-2", 15.2, "SD", "N"))
+        atc.extend([
+            ("ast_desc", "Details", 30, "NA", "N"),
+            ("ast_seq", "Sequence", 8, "UI", "N")])
+        whr = [
+            ("ast_cono", "=", self.opts["conum"]),
+            ("ast_group", "=", self.group),
+            ("ast_code", "=", self.code),
+            ("ast_curdt", "<=", self.eper)]
+        if hist == "N":
+            whr.append(("ast_curdt", ">=", self.sper))
+        odr = "ast_date, ast_refno"
+        dat = self.sql.getRec("asstrn", cols=col, where=whr, order=odr)
+        return dat, atc, col
+
     def doExit(self):
         self.df.closeProcess()
         if "wait" not in self.opts:
diff --git a/ass/ar6010.py b/ass/ar6010.py
old mode 100755
new mode 100644
diff --git a/ass/arc110.py b/ass/arc110.py
old mode 100755
new mode 100644
diff --git a/ass/arc210.py b/ass/arc210.py
old mode 100755
new mode 100644
diff --git a/ass/arc310.py b/ass/arc310.py
old mode 100755
new mode 100644
diff --git a/ass/arc320.py b/ass/arc320.py
old mode 100755
new mode 100644
index 4f9bad7..0fb7c6e
--- a/ass/arc320.py
+++ b/ass/arc320.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, RepPrt, TartanDialog
 
 class arc320(object):
@@ -40,10 +39,6 @@ class arc320(object):
         if not assctl:
             return
         self.fromad = assctl["cta_emadd"]
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
 
     def mainProcess(self):
         tnd = ((self.doEnd,"Y"), )
diff --git a/bkm/bk1010.py b/bkm/bk1010.py
old mode 100755
new mode 100644
index c4d726c..26c7475
--- a/bkm/bk1010.py
+++ b/bkm/bk1010.py
@@ -25,9 +25,9 @@ COPYING
 """
 
 import time
-from TartanClasses import CCD, GetCtl, MyMessageBox, ScrollGrid, SelectChoice
-from TartanClasses import Sql
+from TartanClasses import CCD, GetCtl, ScrollGrid, SelectChoice, Sql
 from tartanFunctions import callModule, dateDiff, projectDate, showError
+from tartanFunctions import showInfo
 
 class bk1010(object):
     def __init__(self, **opts):
@@ -222,6 +222,7 @@ class bk1010(object):
             self.tt = None
         self.cal.window.destroy()
         self.opts["mf"].setThemeFont()
+        self.opts["mf"].window.deiconify()
         if not self.ptyp and not self.quit:
             callModule(self.opts["mf"], None, "bk1020",
                 coy=(self.opts["conum"], self.opts["conam"]),
@@ -261,12 +262,8 @@ class bk1010(object):
                 ("bkc_cono=bkm_cono",),
                 ("bkc_ccode=bkm_ccode",)],
             order="bkc_sname, bkc_names")
-        self.cal.window.withdraw()
-        self.opts["mf"].window.deiconify()
-        sc = SelectChoice(self.opts["mf"].window, "Select Booking", cols, data,
-            fltr=self.opts["mf"])
-        self.opts["mf"].window.withdraw()
-        self.cal.window.deiconify()
+        sc = SelectChoice(self.cal.window, "Select Booking", cols, data,
+            fltr=True)
         if sc.selection:
             self.number = int(sc.selection[1])
             self.opts["mf"].closeLoop()
@@ -314,18 +311,8 @@ class bk1010(object):
             text = "%s\n%-10s R%s" % (text, "Balance:", bal)
             if data[7]:
                 text = "%s\n\n%s" % (text, data[7])
-        mbox = MyMessageBox(args[2][0], "info", "Booking %s" % number,
-            text, plc=False)
-        cp = list(args[2][1])
-        fp = args[2][0].winfo_geometry().split("+")[0].split("x")
-        rp = (mbox.frame.winfo_reqwidth(), mbox.frame.winfo_reqheight())
-        if cp[0] + int(rp[0]) > int(fp[0]):
-            cp[0] = int(fp[0]) - int(rp[0])
-        if cp[1] + int(rp[1]) > int(fp[1]):
-            cp[1] = int(fp[1]) - int(rp[1])
-        mbox.frame.place(x=cp[0], y=cp[1])
-        mbox.frame.update_idletasks()
-        mbox.frame.grab_set()
+        # cp = list(args[2][1])
+        showInfo(args[2][0], "Booking %s" % number, text)
 
     def doBkm(self, *args):
         number = args[1].split("\n")
diff --git a/bkm/bk1020.py b/bkm/bk1020.py
old mode 100755
new mode 100644
index fbea568..0f8f996
--- a/bkm/bk1020.py
+++ b/bkm/bk1020.py
@@ -153,7 +153,7 @@ class bk1020(object):
         fld = [
             (("T",1,0,0),"IUI",7,"Booking Number","",
                 0,"Y",self.doNumber,bkm,None,None),
-            [("T",1,1,0),("IRB",r1s),0,"Type","",
+            [("T",1,1,0),("IRB",r1s),0,"Booking Type","",
                 "A","N",self.doType,None,None,None],
             (("T",1,2,0),"ITX",30,"Group Name","",
                 "","N",self.doGroup,None,None,None),
@@ -500,10 +500,10 @@ class bk1020(object):
                     "r","N",self.doURate,self.rt1,None,("efld",)),
                 (("C",0,0,4),"OTX",25,"Description"),
                 (("C",0,0,5),"OUD",10.2,"Normal-Rte"),
-                (("C",0,0,6),"IUI",3,"Ppl","",
+                (("C",0,0,6),"IUI",3,"Ppl","Number of People",
                     0,"N",self.doUPpl,None,None,("notzero",),None,
                     "Enter the number of Guests or Items"),
-                (("C",0,0,7),"IUI",3,"Per","",
+                (("C",0,0,7),"IUI",3,"Per","Number of Periods",
                     0,"N",self.doUPer,None,None,("notzero",),None,
                     "Enter the number of Periods"),
                 (("C",0,0,8),"IUD",6.2,"Disc-%","",
diff --git a/bkm/bk2010.py b/bkm/bk2010.py
old mode 100755
new mode 100644
diff --git a/bkm/bk3010.py b/bkm/bk3010.py
old mode 100755
new mode 100644
index 489e989..85df7ca
--- a/bkm/bk3010.py
+++ b/bkm/bk3010.py
@@ -100,8 +100,7 @@ class bk3010(object):
         else:
             odr = "bkm_stddte, bkm_grpdte, bkm_ccode"
         recs = self.sql.getRec(tables=tab, cols=col, where=whr, order=odr)
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=80, auto=True,
-            foot=True)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=80, auto=True)
         self.fpdf.header = self.pageHeading
         self.fpdf.add_page()
         newrec = []
diff --git a/bkm/bk3020.py b/bkm/bk3020.py
old mode 100755
new mode 100644
index cfec774..cd730f2
--- a/bkm/bk3020.py
+++ b/bkm/bk3020.py
@@ -55,8 +55,6 @@ class bk3020(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
         self.colsh = ["TP", "BatchNo", "Book-Num", "Name", "Reference",
             "Date", "Debits", "Credits", "Tax-Amount", "T", "Remarks"]
         self.forms = [("UI", 2, False, False, True), ("Na", 7),
@@ -209,7 +207,8 @@ class bk3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Bookings Manager Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -235,11 +234,9 @@ class bk3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %49s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-87s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %91s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-133s" % (self.opts["conum"], self.opts["conam"])
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
@@ -252,7 +249,6 @@ class bk3020(object):
         self.tcrs = 0
         self.tvat = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -330,17 +326,16 @@ class bk3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.totsonly == "Y":
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %20s %5s" % \
+            self.fpdf.drawText("%-38s %-7s %2s %-40s" % \
                 ("Bookings Manager Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+                self.sperd, "to", self.eperd))
         else:
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %66s %5s" % \
+            self.fpdf.drawText("%-38s %-7s %2s %-86s" % \
                 ("Bookings Manager Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+                self.sperd, "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/bkm/bk3030.py b/bkm/bk3030.py
old mode 100755
new mode 100644
index 1d69fd6..f126730
--- a/bkm/bk3030.py
+++ b/bkm/bk3030.py
@@ -206,8 +206,7 @@ class bk3030(object):
             self.hdes = "Arrivals for Weekend %s to %s" % (start, end)
         else:
             self.hdes = "Arrivals for Period %s to %s" % (start, end)
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=80, auto=True,
-            foot=True)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=80, auto=True)
         self.fpdf.header = self.pageHeading
         self.rtyp = "A"
         self.doArrival()
diff --git a/bkm/bk3040.py b/bkm/bk3040.py
old mode 100755
new mode 100644
index c54a6c4..24be86b
--- a/bkm/bk3040.py
+++ b/bkm/bk3040.py
@@ -50,8 +50,7 @@ class bk3040(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Number", "S", "Acc-Cod", "Name", "Group", "Tot-Balance",
             "Dr-Balance", "Cr-Balance"]
         self.forms = [("UI", 7), ("UA", 1), ("UA", 7), ("NA", 30),
@@ -116,7 +115,7 @@ class bk3040(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Booking's Balances up to %s" % self.period)
         self.expheads.append("Booking Status: %s" % self.statusd)
         self.expcolsh = [self.colsh]
@@ -150,14 +149,12 @@ class bk3040(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
-        self.head2 = "Booking's Balances up to %s%s" % (self.period, "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+        self.head1 = self.head
+        self.head2 = "Booking's Balances up to %s" % self.period
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         self.head3 = "Booking Status: %s" % self.statusd
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -223,17 +220,16 @@ class bk3040(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText(self.head3)
         self.fpdf.drawText()
         self.fpdf.drawText("%-7s %1s %-7s %-30s %-30s %-13s %-13s %-13s" %
             ("Number", "S", "Acc-Cod", "Name", "Group", " Tot-Balance",
             "      Debits", "     Credits"))
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.setFont()
         self.pglin = 8
 
diff --git a/bkm/bk3050.py b/bkm/bk3050.py
old mode 100755
new mode 100644
index d305b78..481137a
--- a/bkm/bk3050.py
+++ b/bkm/bk3050.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, TartanLabel, ProgressBar, Sql, TartanDialog
 from tartanFunctions import doPrinter, getModName, getSingleRecords, showError
 from tartanWork import labels
@@ -45,10 +44,6 @@ class bk3050(object):
         bkmctl = gc.getCtl("bkmctl", self.opts["conum"])
         if not bkmctl:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/bkm/bk3060.py b/bkm/bk3060.py
old mode 100755
new mode 100644
diff --git a/bkm/bk3070.py b/bkm/bk3070.py
old mode 100755
new mode 100644
diff --git a/bkm/bk3080.py b/bkm/bk3080.py
old mode 100755
new mode 100644
diff --git a/bkm/bk3090.py b/bkm/bk3090.py
old mode 100755
new mode 100644
diff --git a/bkm/bkc110.py b/bkm/bkc110.py
old mode 100755
new mode 100644
diff --git a/bkm/bkc210.py b/bkm/bkc210.py
old mode 100755
new mode 100644
diff --git a/bkm/bkc310.py b/bkm/bkc310.py
old mode 100755
new mode 100644
diff --git a/bkm/bkc410.py b/bkm/bkc410.py
old mode 100755
new mode 100644
diff --git a/bkm/bkc510.py b/bkm/bkc510.py
old mode 100755
new mode 100644
diff --git a/bks/bs1010.py b/bks/bs1010.py
old mode 100755
new mode 100644
diff --git a/bks/bs3010.py b/bks/bs3010.py
old mode 100755
new mode 100644
index 404c58f..e98e7eb
--- a/bks/bs3010.py
+++ b/bks/bs3010.py
@@ -143,7 +143,7 @@ Thanks and Regards.
                 "No Records Selected")
             self.opts["mf"].closeLoop()
             return
-        self.fpdf = MyFpdf(name="bs3010", head=90, auto=True, foot=True)
+        self.fpdf = MyFpdf(name="bs3010", head=90, auto=True)
         self.fpdf.header = self.pageHeading
         self.stat = recs[0][0]
         self.fpdf.add_page()
diff --git a/bks/bsc110.py b/bks/bsc110.py
old mode 100755
new mode 100644
diff --git a/bks/bsc210.py b/bks/bsc210.py
old mode 100755
new mode 100644
diff --git a/bwl/bc1010.py b/bwl/bc1010.py
old mode 100755
new mode 100644
index ee82f52..f1e97f7
--- a/bwl/bc1010.py
+++ b/bwl/bc1010.py
@@ -451,6 +451,7 @@ class bc1010(object):
             cols=(("a", "Tab Number          ", 6, "UI", "Tab"),))
         ent.sframe.wait_window()
         try:
+            self.merge = False
             if self.gender == "M":
                 start = self.mstart
                 if self.mstart < self.fstart:
@@ -475,9 +476,11 @@ class bc1010(object):
             chk = self.sql.getRec("bwltab", where=[("btb_cono", "=",
                 self.opts["conum"]), ("btb_tab", "=", tab)], limit=1)
             if chk:
-                showError(self.opts["mf"].body, "Invalid",
-                    "This Tab is Already Allocated")
-                raise Exception
+                ok = askQuestion(self.opts["mf"].body, "Invalid",
+                    "This Tab is Already Allocated, Do You Want to Merge?")
+                if ok == "no":
+                    raise Exception
+                self.merge = True
             self.tabcvt = True
             self.old = self.tab
             self.tab = tab
@@ -678,6 +681,10 @@ class bc1010(object):
         if self.tabcvt:
             # Conversion to Member
             for key in self.keys:
+                if key[0] == "bwltab" and self.merge:
+                    self.sql.delRec(key[0], where=[(key[1], "=",
+                        self.opts["conum"]), (key[2], "=", self.old)])
+                    continue
                 self.sql.updRec(key[0], cols=[key[2]], data=[self.tab],
                     where=[(key[1], "=", self.opts["conum"]),
                     (key[2], "=", self.old)])
diff --git a/bwl/bc1020.py b/bwl/bc1020.py
old mode 100755
new mode 100644
diff --git a/bwl/bc1030.py b/bwl/bc1030.py
old mode 100755
new mode 100644
diff --git a/bwl/bc1040.py b/bwl/bc1040.py
old mode 100755
new mode 100644
index f6714a4..25699c4
--- a/bwl/bc1040.py
+++ b/bwl/bc1040.py
@@ -51,7 +51,8 @@ class bc1040(object):
             "tables": ("bwltyp",),
             "cols": (
                 ("bct_code", "", 0, "Cod"),
-                ("bct_desc", "", 0, "Description", "Y")),
+                ("bct_desc", "", 0, "Description", "Y"),
+                ("bct_cfmat", "", 0, "F")),
             "where": [("bct_cono", "=", self.opts["conum"])]}
         r1s = (
             ("Tournament", "T"),
@@ -89,11 +90,17 @@ Teams: This is for Team Competitions e.g. Club V Club.
             (("T",0,7,0),"I@bct_grgame",0,"","",
                 0,"N",self.doGrGame,None,None,("efld",)),
             (("T",0,8,0),("IRB",r2s),0,"Adjust Scores","",
-                "N","N",self.doAdjust,None,None,None),
+                "N","N",self.doAdjust,None,None,None,None,
+                "Whether or Not to Modify the Scores of Groups, Other "\
+                "than Group A, when the Teams are Split into Groups."),
             (("T",0,9,0),"I@bct_expunge",0,"","",
-                "","N",None,None,None,("efld",)),
+                "","N",None,None,None,("efld",),None,
+                "These Comma Separated Game Scores will be Cleared when "\
+                "Teams are Split into Groups."),
             (("T",0,10,0),"I@bct_percent",0,"","",
-                100,"N",None,None,None,("efld",)),
+                100,"N",None,None,None,("efld",),None,
+                "This is the Percentage of the Remaining Game Scores which "\
+                "Will be Retained when Teams are Split into Groups."),
             (("T",0,11,0),"I@bct_drawn",0,"","",
                 1,"N",self.doDrawn,None,None,("efld",)),
             (("T",0,12,0),("IRB",r2s),0,"Strict S v S",
@@ -246,7 +253,7 @@ Are you Sure this is what you Want to Do?""", default="no")
         if self.cfmat in ("D", "K", "R"):
             if self.newtyp:
                 self.sql.insRec("bwlpts", data=[self.opts["conum"],
-                    self.ctype, "D", "N", 0, "N", 0, 0, 0, "N", 0, 0])
+                    self.ctype, "D", "N", 0, "N", 0, 0, 1, "N", 0, 0])
         else:
             self.df.setWidget(self.df.mstFrame, state="hide")
             if self.pdiff == "Y":
diff --git a/bwl/bc2010.py b/bwl/bc2010.py
old mode 100755
new mode 100644
index 2ce5a72..eef595e
--- a/bwl/bc2010.py
+++ b/bwl/bc2010.py
@@ -100,6 +100,7 @@ SYNOPSIS
     self.tsize = Team Size: Three or Four
     self.dbase: Draw Basis P - Position, R - Rating, C - Combination
     self.broken: list of tabs that have been in a broken rink
+                 or in the case of teams True or False
     bdt_flag: A - Arranged, B - Broken Rinks, C - Teams, D - Drawn
     self.dofix: In single gender draws fix broken teams by moving 1 player
 
@@ -183,7 +184,7 @@ class bc2010(object):
                 "available, Select whether or not to use the Alternative "\
                 "Gender Ratings."),
             (("T",0,4,0),("IRB",r2s),0,"Fix Odd Numbers","",
-                "Y","N",self.doBroken,None,None,None,None,"If Both "\
+                "Y","N",self.doFixOdd,None,None,None,None,"If Both "\
                 "Genders have an Odd number of tabs, move a Random "\
                 "Tab to Equalize the Numbers."),
             (("T",0,5,0),("IRB",r3s),0,"Draw By","",
@@ -361,6 +362,7 @@ class bc2010(object):
         if self.mixed == "N":
             self.rating = "N"
             self.mf.loadEntry(frt, pag, p + 1, data=self.rating)
+            self.mf.loadEntry(frt, pag, p + 2, data="Y")
             return "sk1"
 
     def doMixedRating(self, frt, pag, r, c, p, i, w):
@@ -370,10 +372,10 @@ class bc2010(object):
         if self.dbase == "C":
             return "sk1"
         self.nbase = self.dbase
-        self.mf.loadEntry(frt, pag, p + 1, data=self.dbase)
+        self.mf.loadEntry(frt, pag, p + 2, data=self.dbase)
         return "sk2"
 
-    def doBroken(self, frt, pag, r, c, p, i, w):
+    def doFixOdd(self, frt, pag, r, c, p, i, w):
         if w == "Y":
             self.dofix = True
         else:
@@ -494,13 +496,15 @@ class bc2010(object):
                 "Display a list of Entered Tabs",1),
             ("Modify",None,self.doModify,0,("T",1,7),None,
                 "Change the Ratings for this Tab in this Draw",1),
-            ("Draw",None,self.doDraw,0,("T",1,1),None,
+            ("Do Draw",None,self.doDraw,0,("T",1,1),None,
                 "Genetrate a New Draw",2),
             ("Edit Draw",None,self.doEdit,0,("T",1,1),None,
                 "Change the Draw",2),
+            ("View Draw",None,self.doEdit,0,("T",1,1),None,
+                "View the Draw",2),
             ("Print",None,self.doPrint,0,("T",1,1),None,
                 "Print the Draw",2),
-            ("Exit",None,self.doExit,1,None,None,None,2))
+            ("Exit",None,self.doExit,1,None,None,None,3,4))
         tnd = (None, (self.doEnd,"n"))
         txt = (None, self.doExit)
         # Create dialog
@@ -634,17 +638,19 @@ class bc2010(object):
         snam = acc[c.index("btb_surname")]
         fnam = acc[c.index("btb_names")]
         gend = acc[c.index("btb_gender")]
+        if self.mixed == "Y" and self.rating == "Y" and gend == "F":
+            pos = str(acc[c.index("btb_pos2")])
+            rte = str(acc[c.index("btb_rate2")])
+        else:
+            pos = str(acc[c.index("btb_pos1")])
+            rte = str(acc[c.index("btb_rate1")])
         if form == "T":
             self.tab = int(tab)
             self.df.loadEntry("T", 1, 1, data=snam)
             self.df.loadEntry("T", 1, 2, data=fnam)
             self.df.loadEntry("T", 1, 3, data=gend)
-            if self.mixed == "Y" and self.rating == "Y" and gend == "F":
-                self.df.loadEntry("T",1,4, data=str(acc[c.index("btb_pos2")]))
-                self.df.loadEntry("T",1,5, data=str(acc[c.index("btb_rate2")]))
-            else:
-                self.df.loadEntry("T",1,4, data=str(acc[c.index("btb_pos1")]))
-                self.df.loadEntry("T",1,5, data=str(acc[c.index("btb_rate1")]))
+            self.df.loadEntry("T",1,4, data=pos)
+            self.df.loadEntry("T",1,5, data=rte)
         else:
             if fnam:
                 name = snam.upper() + ", " + fnam[0][0].upper()
@@ -654,8 +660,10 @@ class bc2010(object):
                 self.at.loadEntry("C", 0, self.at.pos + 1, data=name)
             elif form == "B":
                 self.bg.loadEntry("C", 0, self.bg.pos + 1, data=name)
-            else:
+            elif form == "C":
                 return name
+            else:
+                return [name, pos, rte]
         return True
 
     def doDelete(self):
@@ -916,9 +924,16 @@ First Change the Bounce Game and then Delete It.""")
                 ("btb_rate1", "", 0, "RP")),
             "where": [("btb_cono", "=", self.opts["conum"])],
             "order": "btb_surname, btb_names"}
+        r1s = (("Yes", "Y"), ("No", "N"))
         fld = (
+            (("T",0,0,0),"IUI",1,"Team Size","",
+                3,"Y",self.doTSiz,None,None,("between",2,4)),
+            (("T",0,0,0),("IRB",r1s),0,"Prefer Pairs","",
+                "Y","N",self.doTR42,None,None,None,None,
+                "In the case of Trips select whether to Replace "\
+                "teams of Four with Pairs."),
             (("C",0,0,2),"IUI",3,"Skp","Skip",
-                "","N",self.doTTab,mem,None,None),
+                "","N",self.doTTab,mem,None,("notzero",)),
             (("C",0,1,3),"OUA",15,"Name"),
             (("C",0,1,4),"IUI",3,"3rd","Third",
                 "","N",self.doTTab,mem,None,None),
@@ -935,13 +950,23 @@ First Change the Bounce Game and then Delete It.""")
         state = self.df.disableButtonsTags()
         self.df.setWidget(self.df.mstFrame, state="hide")
         self.at = TartanDialog(self.opts["mf"], tops=True, title=tit,
-            eflds=fld, butt=but, cend=((self.doTEnd,"y"),),
+            eflds=fld, butt=but, tend=((self.doTEnd,"y"),),
+            txit=(self.doTExit,), cend=((self.doTEnd,"y"),),
             cxit=(self.doTExit,), rows=[18])
-        self.loadTeams()
         self.at.mstFrame.wait_window()
         self.df.enableButtonsTags(state)
         self.df.setWidget(self.df.mstFrame, state="show")
 
+    def doTSiz(self, frt, pag, r, c, p, i, w):
+        self.tsize = w
+        if self.tsize == 4:
+            self.rep42 = "N"
+            self.at.loadEntry(frt, pag, p + 1, data=self.rep42)
+            return "sk1"
+
+    def doTR42(self, frt, pag, r, c, p, i, w):
+        self.rep42 = w
+
     def doTTab(self, frt, pag, r, c, p, i, w):
         if not w:
             self.at.loadEntry(frt, pag, p + 1, data="")
@@ -971,8 +996,7 @@ First Change the Bounce Game and then Delete It.""")
                     self.at.focusField(frt, pag, pos + 1)
                 elif ok == "R":
                     self.doTDel(w)
-                    self.at.loadEntry(frt, pag, self.at.pos, data=w)
-                    self.doLoadTab(w, "A")
+                    return "rf"
                 else:
                     return "Duplicate Team"
             self.tskip = w
@@ -1003,19 +1027,29 @@ First Change the Bounce Game and then Delete It.""")
             self.at.focusField("C", 0, 1)
 
     def doTEnd(self):
-        self.teams[self.tskip] = []
-        for x in range(0, len(self.at.c_work[0][self.at.row]), 2):
-            mem = self.at.c_work[0][self.at.row][x]
-            self.teams[self.tskip].append(mem)
-            if mem and mem not in self.alltabs:
-                acc = self.sql.getRec("bwltab", cols=["btb_surname",
-                    "btb_names", "btb_gender", "btb_pos1", "btb_rate1"],
-                    where=[("btb_cono", "=", self.opts["conum"]), ("btb_tab",
-                    "=", mem)], limit=1)
-                self.alltabs[mem] = acc + ["Y"]
-        self.at.advanceLine(0)
-        self.drawn = False
-        self.doShowQuantity()
+        if self.at.frt == "T":
+            self.loadTeams()
+        else:
+            team = []
+            for x in range(0, len(self.at.c_work[0][self.at.row]), 2):
+                mem = self.at.c_work[0][self.at.row][x]
+                team.append(mem)
+                if mem and mem not in self.alltabs:
+                    acc = self.sql.getRec("bwltab", cols=["btb_surname",
+                        "btb_names", "btb_gender", "btb_pos1", "btb_rate1"],
+                        where=[("btb_cono", "=", self.opts["conum"]),
+                        ("btb_tab", "=", mem)], limit=1)
+                    self.alltabs[mem] = acc + ["Y"]
+            if team[2] and not team[3]:
+                team[3] = team[2]
+                team[2] = 0
+            if team[1] and not team[2]:
+                team[2] = team[1]
+                team[1] = 0
+            self.teams[self.tskip] = team
+            self.loadTeams()
+            self.drawn = False
+            self.doShowQuantity()
 
     def doTShow(self):
         if not self.teams:
@@ -1082,7 +1116,7 @@ First Change the Bounce Game and then Delete It.""")
         invalid = (0, 1, 3, 5)
         if not self.bounce and not self.teams and len(self.alltabs) in invalid:
             showError(self.opts["mf"].body, "Error",
-                "Invalid Number of Entries (0, 1, 3 or 5)")
+                "Invalid Number of Entries\n(0, 1, 3 or 5)")
             err = True
         if not err and self.teams:
             tabs = []
@@ -1096,19 +1130,29 @@ First Change the Bounce Game and then Delete It.""")
                         for mem in self.bounce[rnk][sd]:
                             if mem:
                                 tabs.append(mem)
-            data = []
+            self.tdata = []
             for t in self.alltabs:
                 if t not in tabs:
-                    data.append((t, self.doLoadTab(t, "C")))
-            if data:
-                data.sort()
+                    self.tdata.append([t] + self.doLoadTab(t, "D"))
+            if self.tdata:
+                self.dogen = False
+                self.tdata.sort()
                 cols = [
                     ("a", "Tab-No", 6, "UI", "N"),
-                    ("b", "Name", 20, "NA", "N")]
+                    ("b", "Name", 20, "NA", "N"),
+                    ("c", "Pos", 1, "UI", "N"),
+                    ("d", "Rte", 2, "UI", "N")]
+                but = [
+                    ("Generate", self.doGenTeams),
+                    ("Delete", self.doDelTabs)]
                 SelectChoice(self.opts["mf"].window,
                     "These Tabs Are Not In Teams",
-                    cols, data, live=False)
-                err = True
+                    cols, self.tdata, butt=but, live=False)
+                if self.dogen:
+                    self.doDraw()
+                    return
+                else:
+                    err = True
             if not err and len(self.teams) % 2:
                 showError(self.opts["mf"].body, "Error",
                     "Unequal Number of Teams (%s)" % len(self.teams))
@@ -1139,14 +1183,17 @@ Do you still want to continue?""" % np, default="no")
             fld = [
                 (("T",0,0,0),("IRB",r1s),0,"Draw Type","",
                     "S","N",self.doType,None,None,None,None,
-                    """Strength: The draw will try and pair the teams by Strength.
-Random: The teams will be Randomly paired.""")]
+                    """Strength: The draw will try and Pair the teams by Strength.
+Random: The teams will be Randomly Paired.""")]
             x = 1
+            self.dhist = "N"
         elif self.nbase in ("C", "R"):
             r1s = (("Random", "R"), ("Strength", "S"))
             fld = [
                 (("T",0,0,0),("IRB",r1s),0,"Draw Type","",
-                    "R","N",self.doType,None,None,None)]
+                    "R","N",self.doType,None,None,None,None,
+                    """Strength: The draw will try and Draw the teams by Strength.
+Random: The teams will be Randomly Drawn.""")]
             x = 1
         else:
             x = 0
@@ -1165,7 +1212,11 @@ Random: The teams will be Randomly paired.""")]
                 x += 1
             fld.extend([
                 (("T",0,x,0),("IRB",r2s),0,"Apply History","",
-                    "Y","N",self.doHist,None,None,None),
+                    "Y","N",self.doHist,None,None,None,None,
+                    """For at Least %s Weeks:
+Try Not to Pair the Same Skips
+Try to Avoid Broken Rink Repeats
+Try to Allocate Different Rinks""" % self.weeks),
                 (("T",0,x + 1,0),("IRB",r3s),0,"Team Size","",
                     "4","N",self.doSize,None,None,None),
                 (("T",0,x + 2,0),("IRB",r2s),0,"Prefer Pairs","",
@@ -1191,19 +1242,79 @@ Random: The teams will be Randomly paired.""")]
         self.df.enableButtonsTags(state)
         self.df.focusField("T", 1, 1)
 
+    def doGenTeams(self):
+        self.dogen = True
+        odds = self.doPositions(self.alltabs, grp=False)
+        if self.tsize == 3:
+            self.seconds += self.thirds
+            self.thirds = 0
+            if "4/3" in odds:
+                self.thirds += 1
+                self.seconds -= 1
+        for tm in self.teams:
+            for nm, tb in enumerate(self.teams[tm]):
+                tmm = []
+                if tb:
+                    if nm == 0:
+                        self.skips -= 1
+                    elif nm == 1:
+                        self.thirds -= 1
+                    elif nm == 2:
+                            self.seconds -= 1
+                    else:
+                        self.leads -= 1
+        tmp = sorted(self.tdata, key=itemgetter(2, 3), reverse=True)
+        skp = []
+        tds = []
+        sds = []
+        lds = []
+        for _ in range(self.skips):
+            skp.append(tmp.pop(0)[0])
+        for _ in range(self.thirds):
+            tds.append(tmp.pop(0)[0])
+        for _ in range(self.seconds):
+            sds.append(tmp.pop(0)[0])
+        for _ in range(self.leads):
+            lds.append(tmp.pop(0)[0])
+        tmm = {}
+        while skp:
+            num = skp.pop(0)
+            tmm[num] = [num]
+            if tds:
+                tmm[num].append(tds.pop(0))
+            else:
+                tmm[num].append(0)
+            if sds:
+                tmm[num].append(sds.pop(0))
+            else:
+                tmm[num].append(0)
+            tmm[num].append(lds.pop(0))
+        if skp or tds or sds or lds:
+            showError(self.opts["mf"].body, "Error",
+                "Unable To Generate Teams.\n\nPlease Do So Manually.")
+            return
+        self.teams = self.teams | tmm
+
+    def doDelTabs(self):
+        for tab in self.tdata:
+            del self.alltabs[tab[0]]
+        self.doShowQuantity()
+        self.doDraw()
+
     def doCancel(self):
         self.dw.closeProcess()
 
     def doType(self, frt, pag, r, c, p, i, w):
         self.dtype = w
         if self.teams:
-            self.dhist = "N"
-            self.tsize = 4
-            self.rep42 = "N"
             self.needed = self.getNeeded(len(self.alltabs))
         elif self.dtype == "S":
             self.dhist = "N"
             self.dw.loadEntry(frt, pag, p+1, data="N")
+        if self.teams:
+            self.needed = self.getNeeded(len(self.teams))
+            self.dw.topf[0][self.gpos][4] = \
+                "Greens (%s Rinks Needed)" % self.needed
 
     def doPer(self, frt, pag, r, c, p, i, w):
         self.dper = w
@@ -1321,6 +1432,7 @@ Random: The teams will be Randomly paired.""")]
         self.adraw1 = []
         self.rinks1 = copyList(self.rinks)
         self.ndict = copyList(self.alltabs)
+        random.shuffle(self.rinks1)
         if self.bounce:
             # Bounce games
             self.adraw2 = []
@@ -1342,7 +1454,6 @@ Random: The teams will be Randomly paired.""")]
             # same skip they played in their previous game. Also try and
             # put them on a different rink.
             self.adraw2 = []
-            random.shuffle(self.rinks1)
             temp = []
             for skp in self.teams:
                 dat = [0, 0]
@@ -1353,49 +1464,75 @@ Random: The teams will be Randomly paired.""")]
                         plr = self.ndict.pop(mem)
                         dat.append([mem] + plr)
                         dat[1] += plr[4]
+                dat[1] = dat[1] / dat[0]
                 temp.append(dat)
             if self.dtype == "S":
-                temp = sorted(temp, key=itemgetter(1))
+                three = []
+                four = []
+                for num, tmm in enumerate(temp):
+                    if tmm[0] == 4:
+                        four.append(tmm)
+                    elif tmm[0] == 3:
+                        three.append(tmm)
+                if len(four) % 2:
+                    four = random.choice(four)
+                    clos = 999
+                    for idx, tmm in enumerate(three):
+                        rte = tmm[2][5] + tmm[3][5] + tmm[4][5] + tmm[4][5]
+                        rte = rte / 4
+                        if rte > four[1]:
+                            dif = rte - four[1]
+                        else:
+                            dif = four[1] - rte
+                        if dif < clos:
+                            clos = dif
+                            three = tmm
+                    temp.remove(three)
+                    temp.remove(four)
+                    temp = sorted(temp, key=itemgetter(0, 1))
+                    temp.extend([three, four])
+                else:
+                    temp = sorted(temp, key=itemgetter(0, 1))
             else:
                 random.shuffle(temp)
+                temp = sorted(temp, key=itemgetter(0))
             while temp:
                 ok = False
-                rk1 = False
-                rk2 = False
+                rk1 = None
                 sk1 = temp.pop(0)       # Next skip
+                col = ["bdt_rink", "bdt_date", "bdt_time"]
                 whr = [
                     ("bdt_cono", "=", self.opts["conum"]),
                     ("bdt_tab", "=", sk1[2][0]),
                     ("bdt_pos", "=", 4),
                     ("bdt_flag", "=", "C")]
-                chk = self.sql.getRec("bwldrt", where=whr,
-                    order="bdt_date, bdt_time asc")
+                chk = self.sql.getRec("bwldrt", cols=col, where=whr,
+                    order="bdt_date desc, bdt_time asc", limit=1)
                 if chk:
-                    rk1 = chk[-1][4]    # Opposition skip of last game
+                    rk1 = chk[0]        # Rink of last game
                     whr = [
                         ("bdt_cono", "=", self.opts["conum"]),
+                        ("bdt_tab", "<>", sk1[2][0]),
+                        ("bdt_date", "=", chk[1]),
+                        ("bdt_time", "=", chk[2]),
+                        ("bdt_rink", "=", rk1),
                         ("bdt_pos", "=", 4),
-                        ("bdt_date", "=", chk[-1][2]),
-                        ("bdt_time", "=", chk[-1][3]),
                         ("bdt_flag", "=", "C")]
                     opp = self.sql.getRec("bwldrt", where=whr, limit=1)
-                    if opp:
-                        rk2 = opp[4]
+                    if opp:             # Opposition skip of last game
                         for skp in temp:
-                            if skp[2][0] is not opp[0]:
+                            if skp[0] == sk1[0] and skp[2][0] is not opp[1]:
                                 ok = True
                                 sk2 = skp
                                 temp.remove(skp)
                                 break
-                if not ok:
+                if not ok:              # Next skip
                     sk2 = temp.pop(0)
                 ok = False
-                if rk1 or rk2:
+                if rk1:
                     for rink in self.rinks1:
                         if rk1 and rink == rk1:
                             continue
-                        if rk2 and rink == rk2:
-                            continue
                         self.rinks1.remove(rink)
                         ok = True
                         break
@@ -1410,7 +1547,7 @@ Random: The teams will be Randomly paired.""")]
             self.tot = 0
             self.scl = 0
             self.bcl = 0
-            self.tcl = 0
+            self.pcl = 0
         else:
             grps = [[]]
             ntabs = []
@@ -1493,7 +1630,7 @@ Combination Number %10s"""
                     tot = self.doDrawRest(splash, text)
                     scl = 0
                     bcl = 0
-                    tcl = []
+                    pcl = []
                     for rink in range(0, len(self.adraw2), 2):
                         sk1 = self.adraw2[rink][2][0]
                         sk2 = self.adraw2[rink + 1][2][0]
@@ -1520,11 +1657,11 @@ Combination Number %10s"""
                                 for tab in check:
                                     chk = [tab, plr]
                                     if tab in self.hist[plr][0]:
-                                        if chk not in tcl:
-                                            tcl.append([plr, tab])
+                                        if chk not in pcl:
+                                            pcl.append([plr, tab])
                                     if tab in self.hist[plr][1]:
-                                        if chk not in tcl:
-                                            tcl.append([plr, tab])
+                                        if chk not in pcl:
+                                            pcl.append([plr, tab])
                         for plr in ops:
                             if plr in self.hist:
                                 check = copyList(ops)
@@ -1532,19 +1669,19 @@ Combination Number %10s"""
                                 for tab in check:
                                     chk = [tab, plr]
                                     if tab in self.hist[plr][0]:
-                                        if chk not in tcl:
-                                            tcl.append([plr, tab])
+                                        if chk not in pcl:
+                                            pcl.append([plr, tab])
                                     if tab in self.hist[plr][1]:
-                                        if chk not in tcl:
-                                            tcl.append([plr, tab])
-                    alldraw.append([scl, bcl, len(tcl), tot, self.adraw2, tcl])
+                                        if chk not in pcl:
+                                            pcl.append([plr, tab])
+                    alldraw.append([scl, bcl, len(pcl), tot, self.adraw2, pcl])
                 splash.closeSplash()
                 # Select the lowest draw where there are least clashes
                 # scl = skips clash
                 # bcl = broken rinks
-                # tcl = players clash
+                # pcl = players clash
                 # tot = total team difference
-                self.scl, self.bcl, self.tcl, self.tot, draw, t = \
+                self.scl, self.bcl, self.pcl, self.tot, draw, t = \
                     sorted(alldraw, key=itemgetter(0, 1, 2, 3))[0]
                 self.adraw1.extend(draw)
                 for d in draw:
@@ -1580,7 +1717,7 @@ Combination Number %10s"""
                 txt = "Best S v S Draw After Trying %s Different "\
                     "Combinations, Largest Team Difference is %s, "\
                     "Skips Clash %s, Players Clash %s, Broken %s" % \
-                    (self.count, self.tot, self.scl, self.tcl, self.bcl)
+                    (self.count, self.tot, self.scl, self.pcl, self.bcl)
             elif self.dhist == "N":
                 txt = "Best Random Draw After Trying %s Different "\
                     "Combinations, Largest Team Difference is %s" % \
@@ -1589,7 +1726,7 @@ Combination Number %10s"""
                 txt = "Best Random Draw After Trying %s Different "\
                     "Combinations, Largest Team Difference is %s, "\
                     "Skips Clash %s, Players Clash %s, Broken %s" % \
-                    (self.count, self.tot, self.scl, self.tcl, self.bcl)
+                    (self.count, self.tot, self.scl, self.pcl, self.bcl)
             self.doShowDraw(txt, self.adraw1)
             self.doSave()
 
@@ -1672,12 +1809,12 @@ Combination Number %10s"""
         draw2[1] = av2
         return av1, av2
 
-    def doPositions(self, grp):
+    def doPositions(self, tabs, grp=True):
         # Calculate the number of players, by position, required
         # Treating 2nds as 3rds in trips
-        teams = int(len(grp) / (self.tsize * 2))  # full teams
+        teams = int(len(tabs) / (self.tsize * 2))  # full teams
         odds = []                                 # others
-        rem = len(grp) % (self.tsize * 2)         # players short
+        rem = len(tabs) % (self.tsize * 2)         # players short
         if rem:
             if self.tsize == 2 and rem == 2:
                 odds = ["1/1"]
@@ -1797,12 +1934,14 @@ Combination Number %10s"""
             self.thirds = 0
             self.seconds = 0
             self.leads = 0
+        if not grp:
+            return odds
         # Group players by position
         self.skip1 = []
         self.third1 = []
         self.second1 = []
         self.lead1 = []
-        for tab in grp:
+        for tab in tabs:
             if self.nbase == "R":
                 tab[4] = 0
                 self.skip1.append(tab)
@@ -1930,7 +2069,6 @@ Combination Number %10s"""
         splash.refreshSplash()
         # Rinks
         rinks2 = copyList(self.rinks1)
-        random.shuffle(rinks2)
         # Shuffle players
         self.skip2 = copyList(self.skip1)
         random.shuffle(self.skip2)
@@ -2137,10 +2275,10 @@ Combination Number %10s"""
                             teams = True
                     if bounce:
                         rec.append("A")
-                    elif broken:
-                        rec.append("B")
                     elif teams:
                         rec.append("C")
+                    elif broken:
+                        rec.append("B")
                     else:
                         rec.append("D")
                     self.sql.insRec("bwldrt", data=rec)
@@ -2188,11 +2326,14 @@ Combination Number %10s"""
 
     def doCards(self, frt, pag, r, c, p, i, w):
         self.cards = w
-        if self.cards == "N":
+        if not self.teams and self.cards == "N":
+            self.cdes = None
             return "sk2"
 
     def doHead(self, frt, pag, r, c, p, i, w):
         self.cdes = w
+        if self.teams and self.cards == "N":
+            return "sk1"
 
     def doEnds(self, frt, pag, r, c, p, i, w):
         self.ends = w
@@ -2220,9 +2361,10 @@ Combination Number %10s"""
     def doPEnd(self):
         self.pd.closeProcess()
         if self.cards != "O":
-            PrintDraw(self.opts["mf"], self.opts["conum"], self.date, self.time,
-                takings=self.takings, listing=self.listing, board=self.board,
-                empty=self.empty, repprt=self.pd.repprt)
+            PrintDraw(self.opts["mf"], self.opts["conum"], self.date,
+                self.time, cdes=self.cdes, takings=self.takings,
+                listing=self.listing, board=self.board, empty=self.empty,
+                repprt=self.pd.repprt)
         if self.cards != "N":
             recs = self.sql.getRec(tables=["bwldrt", "bwltab"],
                 cols=["bdt_rink", "bdt_tab"], where=[("bdt_cono", "=",
@@ -2241,8 +2383,8 @@ Combination Number %10s"""
                     self.opts["conum"]), ("btb_tab", "=", recs[x+1][1])],
                     limit=1)
                 skips.append((grn, skp, opp))
-            PrintCards(self.opts["mf"], self.opts["conum"], self.cdes,
-                1, self.dated, skips, self.ends, "N", 0)
+            PrintCards(self.opts["mf"], self.opts["conum"], self.cdes, 1,
+                self.dated, skips, self.ends, "N", 0)
 
     def doPExit(self):
         self.pd.closeProcess()
@@ -2253,6 +2395,8 @@ Combination Number %10s"""
                 "The Draw Has Not Yet Been Done")
             self.df.focusField("T", 1, 1)
             return
+        state = self.df.disableButtonsTags()
+        self.df.setWidget(self.df.mstFrame, state="hide")
         self.adraw3 = copyList(self.adraw1)
         while True:
             draw = self.doShowDraw("Edit of Draw", self.adraw3, True)
@@ -2294,13 +2438,29 @@ Combination Number %10s"""
                     if draw[2][0] or draw[3][0] or draw[4][0] or draw[5][0]:
                         self.adraw1.append(draw)
                 self.doSave()
+        self.df.enableButtonsTags(state)
+        self.df.setWidget(self.df.mstFrame, state="show")
+        self.doShowQuantity()
+        self.df.focusField("T", 1, 1)
+
+    def doView(self):
+        if not self.drawn:
+            showError(self.opts["mf"].body, "Error",
+                "The Draw Has Not Yet Been Done")
+            self.df.focusField("T", 1, 1)
+            return
+        state = self.df.disableButtonsTags()
+        self.df.setWidget(self.df.mstFrame, state="hide")
+        self.doShowDraw("View of Draw", self.adraw1)
+        self.df.enableButtonsTags(state)
+        self.df.setWidget(self.df.mstFrame, state="show")
         self.doShowQuantity()
         self.df.focusField("T", 1, 1)
 
     def doShowDraw(self, title, draw, select=False):
         cols = (
             ("rink", "RK", 2, "UA", "N"),
-            ("rate", "AVG", 5.2, "UD", "N"),
+            ("rate", "AVG ", 5.2, "UD", "N"),
             ("skip", "Skip", 24, "UA", "N"),
             ("third", "Third", 24, "UA", "N"),
             ("second", "Second", 24, "UA", "N"),
@@ -2367,7 +2527,6 @@ Combination Number %10s"""
             (("T",0,8,0),"IUI",6,"Lead","",
                 0,"N",self.doChgTab,mem,None,("efld",)),
             (("T",0,8,0),"OUA",20,""))
-        self.df.setWidget(self.df.mstFrame, state="hide")
         self.cg = TartanDialog(self.opts["mf"], title=tit, tops=True,
             eflds=fld, tend=((self.doChgEnd,"n"),), txit=(self.doChgExit,),
             focus=False)
@@ -2377,11 +2536,10 @@ Combination Number %10s"""
             self.cg.loadEntry("T", 0, 2 + (2 * n), data=d[1])
         self.cg.focusField("T", 0, 1, clr=False)
         self.cg.mstFrame.wait_window()
-        self.df.setWidget(self.df.mstFrame, state="show")
 
     def doChgTab(self, frt, pag, r, c, p, i, w):
         if w and w not in self.alltabs:
-            return "Invalid Tab, Not in draw"
+            return "Invalid Tab, Not Entered"
         if not w:
             nam = ""
         else:
@@ -2449,7 +2607,7 @@ Combination Number %10s"""
             ("qty", "Qty", 3, "UI", "N"))
         data = self.sql.getRec("bwldrt", cols=["bdt_date", "bdt_time",
             "count(*)"], group="bdt_date, bdt_time", order="bdt_date, bdt_time")
-        sel = SelectChoice(self.opts["mf"].window, titl, cols, data, live=True)
+        sel = SelectChoice(self.opts["mf"].window, titl, cols, data)
         if not sel.selection:
             return
         self.teams = {}
diff --git a/bwl/bc2020.py b/bwl/bc2020.py
old mode 100755
new mode 100644
index 61e62b9..d3209c5
--- a/bwl/bc2020.py
+++ b/bwl/bc2020.py
@@ -101,7 +101,7 @@ class bc2020(object):
         r1s = (("Fixture", "F"), ("Practice", "P"))
         fld = (
             (("T",0,0,0),"I@bfm_fmat",0,"","",
-                "","N",self.doFmat,fmt,None,("efld",)),
+                "","Y",self.doFmat,fmt,None,("efld",)),
             (("T",0,0,0),"ONA",30,""),
             (("T",0,1,0),("IRB",r1s),0,"Type","",
                 "F","N",self.doType,None,None,None),
@@ -549,7 +549,7 @@ class bc2020(object):
         self.pr.closeProcess()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, "select_%s" % self.date, ext="pdf")
-        fpdf = MyFpdf(name=self.__class__.__name__, head=90, foot=True)
+        fpdf = MyFpdf(name=self.__class__.__name__, head=90)
         cw = fpdf.get_string_width("X")           # character width
         ld = 4.5                                  # line depth
         fm = {
diff --git a/bwl/bc2030.py b/bwl/bc2030.py
old mode 100755
new mode 100644
diff --git a/bwl/bc2040.py b/bwl/bc2040.py
old mode 100755
new mode 100644
index bddb7ed..c6cc026
--- a/bwl/bc2040.py
+++ b/bwl/bc2040.py
@@ -129,6 +129,10 @@ class bc2040(object):
                 return "rf"
             self.newcmp = True
         else:
+            if self.cmp[self.sql.bwlcmp_col.index("bcm_poff")]:
+                showError(self.opts["mf"].body, "Complete",
+                    "This Sectional Competition Has Been Completed.")
+                return "rf"
             gme = self.sql.getRec("bwlgme", cols=["count(*)"],
                 where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
                 self.ccod), ("bcg_ocod", "<>", 0)], limit=1)
@@ -141,7 +145,7 @@ Do You Want to Erase All Draws and Results?""", default="no")
                     return "rf"
                 self.erase = True
             self.newcmp = False
-            for num, fld in enumerate(self.cmp[1:-1]):
+            for num, fld in enumerate(self.cmp[1:-2]):
                 self.df.loadEntry(frt, pag, p+num, data=fld)
             ent = self.sql.getRec("bwlent", cols=["bce_scod"],
                 where=[("bce_cono", "=", self.opts["conum"]),
@@ -221,7 +225,13 @@ Do You Want to Erase All Draws and Results?""", default="no")
             self.df.loadEntry(frt, pag, p+3, data=ent[1])
         else:
             self.newent = True
-        if self.cfmat != "X":
+        if self.cfmat == "X":
+            if self.scod < self.nstart:
+                self.tcod = "H"
+            else:
+                self.tcod = "V"
+            self.df.loadEntry(frt, pag, p+2, data=self.tcod)
+        else:
             self.tcod = ""
             return "sk2"
 
@@ -318,7 +328,7 @@ Do You Want to Erase All Draws and Results?""", default="no")
 
     def doEnd(self):
         if self.df.frt == "T":
-            data = [self.opts["conum"]] + self.df.t_work[0][0]
+            data = [self.opts["conum"]] + self.df.t_work[0][0] + [0]
             if self.newcmp:
                 self.sql.insRec("bwlcmp", data=data)
             else:
diff --git a/bwl/bc2050.py b/bwl/bc2050.py
index b3bdaef..831fed1 100755
--- a/bwl/bc2050.py
+++ b/bwl/bc2050.py
@@ -45,16 +45,20 @@ import copy, random, time
 from operator import itemgetter
 from TartanClasses import CCD, GetCtl, MyFpdf, PrintCards, ProgressBar
 from TartanClasses import RepPrt, SplashScreen, Sql, TartanDialog
-from tartanFunctions import askQuestion, callModule, doPrinter, doWriteExport
-from tartanFunctions import getModName, getGreens, getSingleRecords, copyList
-from tartanFunctions import showError, showWarning
+from tartanFunctions import askQuestion, callModule, doDrawTable, doPrinter
+from tartanFunctions import doWriteExport, getModName, getGreens
+from tartanFunctions import getSingleRecords, copyList, showError
+from tartanFunctions import showWarning
 
 class bc2050(object):
     def __init__(self, **opts):
         self.opts = opts
         if self.setVariables():
             self.mainProcess()
-            self.opts["mf"].startLoop()
+            if "wait" in self.opts:
+                self.df.mstFrame.wait_window()
+            else:
+                self.opts["mf"].startLoop()
 
     def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["bwlcmp", "bwlgme", "bwltms",
@@ -74,7 +78,6 @@ class bc2050(object):
         self.today = ((t[0] * 10000) + (t[1] * 100) + t[2])
         self.game = 0
         random.seed()
-        self.grpcod = ["", "A", "B", "C"]
         return True
 
     def mainProcess(self):
@@ -99,6 +102,7 @@ class bc2050(object):
         r1s = (("No","N"),("Yes", "Y"))
         r2s = (("First", "F"), ("Last", "L"))
         r3s = (("No", "N"),("Yes","Y"),("Only", "O"))
+        r4s = (("Ends","E"),("Totals", "T"))
         fld = (
             (("T",0,0,0),"I@bcm_code",0,"","",
                 "","N",self.doCmpCod,cpt,None,None),
@@ -126,20 +130,26 @@ class bc2050(object):
                 "N","N",self.doGrpGrn,None,None,None),
             (("T",0,8,0),("IRB",r3s),0,"Print Cards","",
                 "N","N",self.doPrtCards,None,None,None),
-            (("T",0,9,0),("IRB",r1s),0,"All Cards","",
+            (("T",0,9,0),("IRB",r4s),0,"Card Type","",
+                "E","N",self.doTypCards,None,None,None),
+            (("T",0,10,0),("IRB",r1s),0,"All Cards","",
                 "Y","N",self.doAllCards,None,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         self.df = TartanDialog(self.opts["mf"], tops=False,
             eflds=fld, tend=tnd, txit=txt, view=("X","V"), mail=("Y","Y"))
-        self.df.setWidget(self.df.topEntry[0][11][2][0], state="hide")
-        if len(self.df.topEntry[0][11]) == 4:
-            self.df.setWidget(self.df.topEntry[0][11][3][0], state="hide")
+        self.df.setWidget(self.df.topEntry[0][12][2][0], state="hide")
+        if len(self.df.topEntry[0][12]) == 4:
+            self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
         if "args" in self.opts:
-            self.df.doKeyPressed("T", 0, 0, data=self.opts["args"][0])
-            self.df.doKeyPressed("T", 0, 2, data=self.opts["args"][1])
+            self.df.doKeyPressed("T", 0, 0, data=self.opts["args"])
 
     def doCmpCod(self, frt, pag, r, c, p, i, w):
+        dogme = False
+        self.args = None
+        self.fini = False
+        self.drawall = False
+        self.reprint = False
         bwlcmp = self.sql.getRec("bwlcmp", where=[("bcm_cono",
             "=", self.opts["conum"]), ("bcm_code", "=", w)], limit=1)
         if not bwlcmp:
@@ -149,14 +159,21 @@ class bc2050(object):
         self.df.loadEntry(frt, pag, p+1, data=self.cdes)
         self.sdat = bwlcmp[self.sql.bwlcmp_col.index("bcm_date")]
         self.ctyp = bwlcmp[self.sql.bwlcmp_col.index("bcm_type")]
-        bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
-            self.opts["conum"]), ("bct_code", "=", self.ctyp)], limit=1)
+        if not self.ctyp:
+            bwltyp = [self.opts["conum"], 0, "KO", "K", 1, 0, 21,
+                "N", 0, "N", "", 0, 0, "N", "N", ""]
+        else:
+            bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
+                self.opts["conum"]), ("bct_code", "=", self.ctyp)], limit=1)
         self.cfmat = bwltyp[self.sql.bwltyp_col.index("bct_cfmat")]
         self.tsize = bwltyp[self.sql.bwltyp_col.index("bct_tsize")]
         self.drawn = bwltyp[self.sql.bwltyp_col.index("bct_drawn")]
-        teams = self.sql.getRec("bwlent", cols=["bce_scod"],
+        ents = self.sql.getRec("bwlent", cols=["bce_scod"],
             where=[("bce_cono", "=", self.opts["conum"]),
             ("bce_ccod", "=", self.ccod)])
+        teams = []
+        for ent in ents:
+            teams.append(ent[0])
         if self.cfmat == "D":
             if len(teams) % self.tsize:
                 showError(self.opts["mf"].body, "Mismatch",
@@ -170,8 +187,8 @@ class bc2050(object):
                 "There is an Uneven Number of Teams (%s)" % self.totskp)
             return "rf"
         if self.cfmat in ("D", "K"):
-            if len(self.df.topEntry[0][11]) == 4:
-                self.df.setWidget(self.df.topEntry[0][11][3][0], state="show")
+            if len(self.df.topEntry[0][12]) == 4:
+                self.df.setWidget(self.df.topEntry[0][12][3][0], state="show")
             if self.totskp > 64:
                 showError(self.opts["mf"].body, "Maximum Exceeded",
                     "There are Too Many Entries (%s)" % self.totskp)
@@ -183,13 +200,13 @@ class bc2050(object):
             else:
                 self.games = 1
         elif self.cfmat == "R":
-            if len(self.df.topEntry[0][11]) == 4:
-                self.df.setWidget(self.df.topEntry[0][11][3][0], state="hide")
+            if len(self.df.topEntry[0][12]) == 4:
+                self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
             self.games = self.totskp - 1
             self.drawn = self.games
         else:
-            if len(self.df.topEntry[0][11]) == 4:
-                self.df.setWidget(self.df.topEntry[0][11][3][0], state="hide")
+            if len(self.df.topEntry[0][12]) == 4:
+                self.df.setWidget(self.df.topEntry[0][12][3][0], state="hide")
             self.games = bwltyp[self.sql.bwltyp_col.index("bct_games")]
         self.ends = bwltyp[self.sql.bwltyp_col.index("bct_ends")]
         self.groups = bwltyp[self.sql.bwltyp_col.index("bct_groups")]
@@ -202,39 +219,58 @@ class bc2050(object):
                 self.expunge.append(int(ex))
         self.strict = bwltyp[self.sql.bwltyp_col.index("bct_strict")]
         self.percent = bwltyp[self.sql.bwltyp_col.index("bct_percent")]
-        self.drawall = False
-        self.reprint = False
-        self.opts["mf"].dbm.rollbackDbase()
+        self.pdiff = bwltyp[self.sql.bwltyp_col.index("bct_pdiff")]
+        self.cchoice = False
+        if self.pdiff == "N" and self.drawn == self.games:
+            bwlpts = self.sql.getRec("bwlpts", cols=["bcp_e_points",
+                "bcp_s_points"], where=[("bcp_cono", "=", self.opts["conum"]),
+                ("bcp_code", "=", self.ctyp), ("bcp_ptyp", "=", "D")],
+                limit=1)
+            if not bwlpts[0] and not bwlpts[1]:
+                self.cchoice = True
         gme = self.sql.getRec("bwlgme", cols=["bcg_game", "bcg_type",
             "bcg_date", "bcg_aflag", "sum(bcg_points)"], where=[("bcg_cono",
             "=", self.opts["conum"]), ("bcg_ccod", "=", self.ccod)],
             group="bcg_game, bcg_type, bcg_aflag", order="bcg_game")
         if not gme and self.cfmat in ("D", "K", "R"):
-            if self.totskp % 2 and self.cfmat == "R":
-                ok = askQuestion(self.opts["mf"].body, "Mismatch",
-                    "There is an Uneven Number of Teams (%s), "\
-                    "Do You Want Byes?" % self.totskp)
-                if ok == "yes":
-                    teams.append([900001])
-                    self.totskp += 1
-                    self.games += 1
+            if self.cfmat == "R":
+                lbye = 1
+                self.doSections()
+                random.shuffle(teams)
+                if self.sects:
+                    if self.ssiz % 2 or self.totskp % self.ssiz:
+                        ok = askQuestion(self.opts["mf"].body, "Mismatch",
+                            "Uneven Number of Teams or Entries/Section (%s)\n"\
+                            "Do You Want Byes?" % self.ssiz)
+                        if ok == "no":
+                            return "rf"
+                    for x in range(0, len(teams), self.ssiz):
+                        team = teams[x:x+self.ssiz]
+                        while len(team) < self.ssiz:
+                            team.append(900000 + lbye)
+                            lbye += 1
+                        if self.ssiz % 2:
+                            team.append(900000 + lbye)
+                            lbye += 1
+                        self.doPopulate(team, sect=int((x/self.ssiz)+1))
                 else:
-                    return "rf"
+                    if self.totskp % 2:
+                        ok = askQuestion(self.opts["mf"].body, "Mismatch",
+                            "There is an Uneven Number of Teams (%s), "\
+                            "Do You Want Byes?" % self.totskp)
+                        if ok == "yes":
+                            teams.append(900000 + lbye)
+                            self.totskp += 1
+                            self.games += 1
+                            lbye += 1
+                        else:
+                            return "rf"
+                    self.doPopulate(teams)
             elif self.cfmat == "D":
                 # Drawn Knockout, Create Teams
-                teams = self.doDrawTeams(copyList(teams))
-            # Populate bwlgme records
-            data = [self.opts["conum"], self.ccod, 0, 0, "D", 0, 0, "",
-                0, 0, 0, 0, 0, 0, 0, "", 0, 1]
-            if self.cfmat in ("D", "K"):
-                games = 1
+                self.doPopulate(self.doDrawTeams(copyList(teams)))
             else:
-                games = self.totskp - 1
-            for game in range(games):
-                for skip in teams:
-                    data[2] = skip[0]
-                    data[3] = game + 1
-                    self.sql.insRec("bwlgme", data=data)
+                self.doPopulate(teams)
             self.game = 1
             self.gtyp = "D"
             self.df.loadEntry(frt, pag, p+2, data=self.game)
@@ -245,20 +281,30 @@ class bc2050(object):
                 self.grpgrn = "N"
                 return "sk10"
         elif self.cfmat in ("D", "K"):
-            ok = askQuestion(self.opts["mf"].body, "Drawn", "This Knockout "\
-                "Competition has Already Been Drawn, Do You Want to Reprint?")
+            if not self.ctyp:
+                ok = "yes"
+            else:
+                ok = askQuestion(self.opts["mf"].body, "Drawn",
+                    "This Knockout Competition has Already Been Drawn."\
+                    "\n\nDo You Want to Reprint?")
             if ok == "yes":
                 self.reprint = True
-                self.datd = CCD(gme[0][2], "D1", 10).disp
                 return "sk10"
             else:
                 return "rf"
         for game in gme:
+            if self.cfmat == "R":
+                if not game[2]:
+                    dogme = True
+                    break
+            elif not game[3] and not game[4]:
+                dogme = True
+                break
+        if dogme:
             self.game = game[0]
             self.gtyp = game[1]
-            if not game[3] and not game[4]:
-                self.df.loadEntry(frt, pag, p+2, data=self.game)
-                return
+            self.df.loadEntry(frt, pag, p+2, data=self.game)
+            return
         ok = askQuestion(self.opts["mf"].body, "All Drawn",
             "All Games are Already Drawn, Do You Want to Reprint?")
         if ok == "yes":
@@ -266,6 +312,39 @@ class bc2050(object):
         else:
             return "rf"
 
+    def doSections(self):
+        self.ssiz = 0
+        tit = ("Sections",)
+        r1s = (("No","N"),("Yes", "Y"))
+        fld = (
+            (("T",0,0,0),("IRB",r1s),0,"Sections","",
+                "N","Y",self.doSecEnt,None,None,None),
+            (("T",0,1,0),"IUI",2,"Entries per Section","",
+                0,"N",self.doSecSiz,None,None,("notzero",)))
+        state = self.df.disableButtonsTags()
+        self.df.setWidget(self.df.mstFrame, state="hide")
+        self.ss = TartanDialog(self.opts["mf"], title=tit, tops=True,
+            eflds=fld, tend=((self.doSecEnd,"y"),), txit=(self.doSecExit,))
+        self.ss.mstFrame.wait_window()
+        self.df.setWidget(self.df.mstFrame, state="show")
+        self.df.enableButtonsTags(state=state)
+
+    def doSecEnt(self, frt, pag, r, c, p, i, w):
+        if w == "Y":
+            self.sects = True
+        else:
+            self.sects = False
+            return "nd"
+
+    def doSecSiz(self, frt, pag, r, c, p, i, w):
+        self.ssiz = w
+
+    def doSecEnd(self):
+        self.ss.closeProcess()
+
+    def doSecExit(self):
+        self.ss.closeProcess()
+
     def doDrawTeams(self, teams):
         tabs = []
         col = ["btb_tab", "btb_gender", "btb_pos1", "btb_rate1"]
@@ -273,7 +352,7 @@ class bc2050(object):
         wom = 0
         for tab in teams:
             rec = self.sql.getRec("bwltab", cols=col, where=[("btb_cono",
-                "=", self.opts["conum"]), ("btb_tab", "=", tab[0])], limit=1)
+                "=", self.opts["conum"]), ("btb_tab", "=", tab)], limit=1)
             tabs.append(rec)
             if rec[1] == "M":
                 men += 1
@@ -348,6 +427,44 @@ class bc2050(object):
             self.sp.closeSplash()
         return team
 
+    def doPopulate(self, teams, sect=None):
+        # Populate bwlgme records
+        data = [self.opts["conum"], self.ccod, 0, 0, "D", 0, 0, "",
+            0, 0, 0, 0, 0, 0, 0, "", 0, 1]
+        if self.cfmat == "R":
+            sch = self.doMakeSchedule(teams)
+            games = len(teams) - 1
+            for game in range(games):
+                for chk in sch[game]:
+                    skp = teams[chk[0]]
+                    opp = teams[chk[1]]
+                    data[2] = skp
+                    data[3] = game + 1
+                    data[6] = opp
+                    if sect:
+                        data[8] = sect
+                    self.sql.insRec("bwlgme", data=data)
+                    data[2] = opp
+                    data[6] = skp
+                    self.sql.insRec("bwlgme", data=data)
+            return
+        for num, skip in enumerate(teams):
+            data[2] = skip
+            data[3] = self.game + 1
+            self.sql.insRec("bwlgme", data=data)
+
+    def doMakeSchedule(self, teams):
+        grps = [0+i for i in range(len(teams))]
+        half = int(len(teams) / 2)
+        sch = []
+        for _ in range(self.games):
+            pairings = []
+            for i in range(half):
+                pairings.append([grps[i], grps[len(teams)-i-1]])
+            grps.insert(1, grps.pop())
+            sch.append(pairings)
+        return sch
+
     def doGamNum(self, frt, pag, r, c, p, i, w):
         col = ["bcg_game", "bcg_type", "bcg_date", "sum(bcg_ocod)"]
         whr = [
@@ -361,7 +478,7 @@ class bc2050(object):
             return "Invalid Game, Missing, Skipped or Abandoned"
         if w > self.game and chk[1] in ("", "S"):
             return "Invalid Game Number, Previous Games Unfinished"
-        if not self.reprint and chk[3]:
+        if not self.reprint and chk[2]:
             ok = askQuestion(self.opts["mf"].body, "Game Drawn",
                 "This Game is Already Drawn, Do You Want to Reprint?",
                 default="no")
@@ -389,7 +506,9 @@ class bc2050(object):
             self.date = chk[2]
             self.datd = CCD(self.date, "D1", 10).disp
             self.df.loadEntry(frt, pag, p+1, data=self.date)
+            self.df.setWidget(self.df.topEntry[0][9][2][0], state="show")
             return "sk6"
+        self.df.setWidget(self.df.topEntry[0][9][2][0], state="hide")
         if w == 1 and self.drawn > 1 and (self.cfmat == "R" or \
                 (self.cfmat in ("T", "X") and self.gtyp == "D")):
             ok = askQuestion(self.opts["mf"].body, "Drawn Games",
@@ -445,6 +564,8 @@ class bc2050(object):
         if self.groups == "N" or self.game != self.games:
             self.grpgrn = "N"
             self.df.loadEntry(frt, pag, p+1, data=self.grpgrn)
+            if self.drawall and self.game > 1:
+                return "nd"
             return "sk1"
         grps = self.sql.getRec("bwlgme", cols=["bcg_group"],
             where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
@@ -460,13 +581,24 @@ class bc2050(object):
     def doPrtCards(self, frt, pag, r, c, p, i, w):
         self.prtcards = w
         if self.prtcards in ("Y", "O"):
-            if not self.reprint:
-                self.allcards = "Y"
-                self.df.loadEntry(frt, pag, p+1, data=self.allcards)
+            if not self.cchoice:
+                self.ctype = "E"
+                self.df.loadEntry(frt, pag, p+1, data=self.ctype)
+                if not self.reprint:
+                    self.allcards = "Y"
+                    self.df.loadEntry(frt, pag, p+1, data=self.allcards)
+                    return "sk2"
                 return "sk1"
         else:
             self.df.loadEntry(frt, pag, p+1, data="")
             self.df.loadEntry(frt, pag, p+2, data="")
+            return "sk2"
+
+    def doTypCards(self, frt, pag, r, c, p, i, w):
+        self.ctype = w
+        if not self.reprint:
+            self.allcards = "Y"
+            self.df.loadEntry(frt, pag, p+1, data=self.allcards)
             return "sk1"
 
     def doAllCards(self, frt, pag, r, c, p, i, w):
@@ -483,7 +615,8 @@ class bc2050(object):
                 self.printTeams()
             if not self.reprint:
                 self.opts["mf"].dbm.commitDbase(ask=True)
-            self.opts["mf"].closeLoop()
+            if "wait" not in self.opts:
+                self.opts["mf"].closeLoop()
             return
         if not self.reprint:
             if self.cfmat == "T" and self.gtyp == "D":
@@ -524,7 +657,7 @@ class bc2050(object):
                     self.sql.delRec("bwlgme", where=[("bcg_cono", "=",
                         self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
                         ("bcg_game", ">", self.games)])
-            else:
+            elif not self.drawall:
                 ok = askQuestion(self.opts["mf"].body, "Summary",
                     "Do You Want to Print a Draw Summary?", default="no")
                 if ok == "yes":
@@ -532,10 +665,6 @@ class bc2050(object):
                         coy=[self.opts["conum"], self.opts["conam"]],
                         args=[self.ccod, self.igend, self.df.repprt,
                             self.df.repeml])
-            if not self.drawall:
-                self.opts["mf"].dbm.commitDbase(ask=True, rback=False)
-        if self.prtcards in ("Y", "O"):
-            self.printCards()
         if self.drawall:
             self.sql.updRec("bwlgme", cols=["bcg_aflag"], data=["D"],
                 where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod",
@@ -553,10 +682,28 @@ class bc2050(object):
             if nxt:
                 self.df.doInvoke(["T", 0, 3, self.doGamNum], self.game)
             else:
-                self.df.closeProcess()
+                self.fini = True
+        if not self.drawall or self.fini:
+            self.df.closeProcess()
+            if not self.reprint:
                 self.opts["mf"].dbm.commitDbase(ask=True, rback=False)
-                self.opts["mf"].closeLoop()
-        else:
+            if self.drawall:
+                ok = askQuestion(self.opts["mf"].body, "Summary",
+                    "Do You Want to Print a Draw Summary?", default="no")
+                if ok == "yes":
+                    callModule(self.opts["mf"], None, "bc3090",
+                        coy=[self.opts["conum"], self.opts["conam"]],
+                        args=[self.ccod, self.igend, self.df.repprt,
+                            self.df.repeml])
+            if self.prtcards in ("Y", "O"):
+                if self.ctype == "E":
+                    if self.drawall:
+                        for self.game in range(1, self.games + 1):
+                            self.printCards()
+                    else:
+                        self.printCards()
+                else:
+                    self.printBoards()
             self.opts["mf"].closeLoop()
 
     def pairSkips(self):
@@ -565,31 +712,12 @@ class bc2050(object):
         if self.cfmat == "R":
             # Round Robin
             self.skips = []
-            recs = self.sql.getRec("bwlgme", cols=["bcg_scod"],
+            recs = self.sql.getRec("bwlgme", cols=["bcg_scod", "bcg_ocod"],
                 where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
                 self.ccod), ("bcg_game", "=", self.game)], order="bcg_scod")
-            skips = []
             for rec in recs:
-                skips.append(rec[0])
-            if self.game == 1:
-                self.skips = skips
-                return True
-            while skips:
-                skp = skips.pop(0)
-                self.skips.append(skp)
-                recs = self.sql.getRec("bwlgme", cols=["bcg_scod"],
-                    where=[("bcg_cono", "=", self.opts["conum"]),
-                    ("bcg_ccod", "=", self.ccod), ("bcg_game", "<", self.game),
-                    ("bcg_ocod", "=", skp)])
-                opps = []
-                for rec in recs:
-                    opps.append(rec[0])
-                for rec in skips:
-                    if rec not in self.skips and rec not in opps:
-                        opp = rec
-                        break
-                skips.remove(opp)
-                self.skips.append(opp)
+                if rec[0] not in self.skips:
+                    self.skips.extend(rec)
             return True
         if self.gtyp == "D":
             # Drawn Games
@@ -853,6 +981,7 @@ class bc2050(object):
             again = False
             cpydic = copyList(skpdic)
             cpyrnk = copyList(allrnk)
+            random.shuffle(cpyrnk)
             for y in range(0, len(self.skips), 2):
                 one = self.skips[y]
                 if one in cpydic:
@@ -864,7 +993,6 @@ class bc2050(object):
                     continue
                 # Check if end rinker
                 endr = bool(self.endrks and self.checkEnds(one, two))
-                random.shuffle(cpyrnk)
                 done = False
                 for rk in cpyrnk:
                     if endr and rk in self.endrks:
@@ -1161,19 +1289,18 @@ class bc2050(object):
                         txt2 = "%s AM" % self.ctimes[rnd]
                     else:
                         txt2 = "%s PM" % self.ctimes[rnd]
-                self.colsh[0].append((txt1, "centre"))
-                self.colsh[1].append((txt2, "centre"))
+                self.colsh[0].append((txt1, "center"))
+                self.colsh[1].append((txt2, "center"))
                 self.forms.append(("NA", 18))
-            self.colsh[0].append(("", "centre"))
-            self.colsh[1].append(("Winner", "centre"))
+            self.colsh[0].append(("", "center"))
+            self.colsh[1].append(("Winner", "center"))
             self.forms.append(("NA", 18))
             self.datas = [["BODY", [""] * (self.rnds + 1)]]
         else:
             head = (self.rnds * 19) + 19
             if head > 120:
                 head = 170
-            self.fpdf = MyFpdf(name=self.__class__.__name__, head=head,
-                foot=True)
+            self.fpdf = MyFpdf(name=self.__class__.__name__, head=head)
             self.pageHeading(date=True)
         if not self.reprint:
             self.doSeeds()
@@ -1447,6 +1574,9 @@ class bc2050(object):
         self.cd.closeProcess()
 
     def doSeeds(self):
+        if not self.ctyp:
+            self.seeds = []
+            return
         tit = ("Seeded Players",)
         skp = {
             "stype": "R",
@@ -1620,7 +1750,7 @@ class bc2050(object):
                     x + (cwth * n2), w=(cwth * nm), border="TLRB")
             else:
                 self.fpdf.drawText(self.getWinner(rd, grp, skip),
-                    x + (cwth * n2), w=(cwth * nm), border="LRB")
+                    x + (cwth * n2), w=(cwth * nm), border="TLRB")
             if not last or last == "up":
                 self.drawLink(cwth, l1, l2, x + (cwth * nx), y + int(chgt / 2),
                     y + (chgt * 2.5))
@@ -1654,7 +1784,7 @@ class bc2050(object):
                 y = rnds[rnd][1]
                 self.fpdf.drawText(self.getWinner(rd, grp, 0, rnd + 1),
                     x + (cwth * (l1 + l2)), y, w=(cwth * nm),
-                    border="LRB")
+                    border="TLRB")
                 inc1 = inc + .5
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
                     y + (chgt * inc1))
@@ -1662,7 +1792,7 @@ class bc2050(object):
                 x = rnds[rnd + 1][0]
                 y = rnds[rnd + 1][1]
                 self.fpdf.drawText(self.getWinner(rd, grp, 0, rnd + 2),
-                    x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="LRB")
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="TLRB")
                 inc1 -= 1
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
                     y-(chgt * inc1))
@@ -1674,13 +1804,13 @@ class bc2050(object):
             rd += 1
             if grp == 1:
                 self.fpdf.drawText(self.getWinner(rd, grp, 0, 1),
-                    x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="LRB")
+                    x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="TLRB")
         else:
             rd += 1
             if self.rnds > 5:
                 y += (chgt * 4)
             self.fpdf.drawText(self.getWinner(rd, grp, 0, 1),
-                x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="LRB")
+                x + (cwth * (l1 + l2)), y, w=(cwth * nm), border="TLRB")
             if grp == 1:
                 inc += .5
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
@@ -1690,7 +1820,7 @@ class bc2050(object):
                 x1 = x + (cwth * (l1 + l2 + nm))
                 y1 = y - (chgt * inc)
                 self.fpdf.drawText(self.getWinner(rd, grp, 0, 1),
-                    x1 + (cwth * (l1 + l2)), y1, w=(cwth * nm), border="LRB")
+                    x1 + (cwth * (l1 + l2)), y1, w=(cwth * nm), border="TLRB")
                 inc = 0 - inc + .5
                 self.drawLink(cwth, l1, l2, x + (cwth * n2), y + int(chgt / 2),
                     y + (chgt * inc))
@@ -1747,7 +1877,7 @@ class bc2050(object):
                     nl[1][1] = ["", "R"]
                     self.datas.append(nl)
                     nl = copy.deepcopy(line)
-                    nl[1][2] = ["", "LRB"]
+                    nl[1][2] = ["", "TLRB"]
                     self.datas.append(nl)
             else:
                 nl = copy.deepcopy(line)
@@ -1758,7 +1888,7 @@ class bc2050(object):
                     nl[1][1] = ["", "R"]
                     self.datas.append(nl)
                 nl = copy.deepcopy(line)
-                nl[1][1] = ["", "LRB"]
+                nl[1][1] = ["", "TLRB"]
                 self.datas.append(nl)
                 if not self.two:
                     self.two = 1
@@ -1773,7 +1903,7 @@ class bc2050(object):
                     nl[1][1] = ["", "R"]
                     self.datas.append(nl)
                     nl = copy.deepcopy(line)
-                    nl[1][2] = ["", "LRB"]
+                    nl[1][2] = ["", "TLRB"]
                     self.datas.append(nl)
 
     def completeBracket(self):
@@ -1782,7 +1912,7 @@ class bc2050(object):
             datas = copy.deepcopy(self.datas)
             br = False
             for num, line in enumerate(datas):
-                if type(line[1][rnd]) == list and line[1][rnd][1].count("LRB"):
+                if type(line[1][rnd]) == list and line[1][rnd][1].count("TLRB"):
                     if br:
                         br = False
                     else:
@@ -1791,7 +1921,7 @@ class bc2050(object):
                         qq = 0
                 elif br:
                     if qq == cc:
-                        self.datas[num][1][rnd + 1] = ["", "LRB"]
+                        self.datas[num][1][rnd + 1] = ["", "TLRB"]
                     else:
                         self.datas[num][1][rnd] = ["", "R"]
                     qq += 1
@@ -1853,18 +1983,18 @@ class bc2050(object):
         self.fpdf.line(x + (cwth * l1), inc, x + (cwth * (l1 + l2)), inc)
 
     def printGame(self):
-        if self.game <= self.grgame:
-            grp = [[0]]
-        else:
+        grp = [[0]]
+        if self.cfmat == "R" or self.game > self.grgame:
             grp = self.sql.getRec("bwlgme", cols=["bcg_group"],
-                where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
-                self.ccod)], group="bcg_group", order="bcg_group")
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod)], group="bcg_group",
+                order="bcg_group")
         whr = [
             ("bcg_cono", "=", self.opts["conum"]),
             ("bcg_ccod", "=", self.ccod),
             ("bcg_game", "=", self.game),
             ("btb_tab=bcg_scod",)]
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=65, foot=True)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=65)
         self.fpdf.lpp = 60
         self.pglin = 999
         lastg = None
@@ -1887,8 +2017,8 @@ class bc2050(object):
                         self.pageHeading()
                     self.groupHeading(g[0])
                     lastg = g[0]
-                if self.cfmat == "R" and skp[3] == 900001:
-                    opp = [900001, "** Bye **", ""]
+                if self.cfmat == "R" and skp[3] > 900000:
+                    opp = [skp[3], "** Bye **", ""]
                 else:
                     opp = self.sql.getRec("bwltab", cols=["btb_tab",
                         "btb_surname", "btb_names"], where=[("btb_cono", "=",
@@ -1959,7 +2089,10 @@ class bc2050(object):
         self.fpdf.drawText(font=["courier", "B", 18])
         head = "Draw for Game: %s" % self.game
         if group:
-            head += "  Group: %s" % self.grpcod[group]
+            if self.cfmat == "R":
+                head += "  Section: %s" % chr(64 + group)
+            else:
+                head += "  Group: %s" % chr(64 + group)
         head += "  Date: %s" % self.datd
         self.fpdf.drawText(head, font=["courier", "B", 18], align="C")
         self.fpdf.drawText()
@@ -1994,8 +2127,9 @@ class bc2050(object):
         if self.allcards == "N":
             gme = getSingleRecords(self.opts["mf"], "bwlgme", ("bcg_rink",
                 "bcg_scod", "bcg_ocod"), where=[("bcg_cono", "=",
-                self.opts["conum"]), ("bcg_ccod", "=", self.ccod), ("bcg_game",
-                "=", self.game)], group="bcg_rink", order="bcg_rink")
+                self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                ("bcg_game", "=", self.game)], group="bcg_rink",
+                order="bcg_rink")
             if not gme:
                 return
             for g in gme:
@@ -2003,8 +2137,8 @@ class bc2050(object):
         else:
             recs = self.sql.getRec("bwlgme", cols=["bcg_scod",
                 "bcg_ocod", "bcg_rink"], where=[("bcg_cono", "=",
-                self.opts["conum"]), ("bcg_ccod", "=", self.ccod), ("bcg_game",
-                "=", self.game)], order="bcg_rink")
+                self.opts["conum"]), ("bcg_ccod", "=", self.ccod),
+                ("bcg_game", "=", self.game)], order="bcg_rink")
         chk = []
         skips = []
         for rec in recs:
@@ -2021,8 +2155,83 @@ class bc2050(object):
             grn = rec[2]
             skips.append((grn, skp, opp))
             chk.extend([rec[0], rec[1]])
-        PrintCards(self.opts["mf"], self.opts["conum"], self.cdes, self.game,
-            self.datd, skips, self.ends, skins, sends)
+        pc = PrintCards(self.opts["mf"], self.opts["conum"], self.cdes,
+            self.game, self.datd, skips, self.ends, skins, sends,
+            args=self.args)
+        if self.drawall:
+            self.args = (pc.tname, pc.repprt)
+
+
+    def printBoards(self):
+        def getName(skip):
+            name = self.sql.getRec("bwltab", cols=["btb_surname", "btb_names"],
+                where=[("btb_cono", "=", 1), ("btb_tab", "=", skip)], limit=1)
+            if not name:
+                return ""
+            return "%s, %s" % (name[0], name[1])
+
+        showWarning(self.opts["mf"].window, "Change Paper",
+            "In Order to Print Cards You Need to Change the Paper to "\
+            "A4 Card Paper. Please Do So Now Before Continuing.")
+        bwlgme = self.sql.getRec("bwlgme", where=[("bcg_cono", "=",
+            self.opts["conum"]), ("bcg_ccod", "=", self.ccod)],
+            order="bcg_scod, bcg_game")
+        gmes = {}
+        for skip in bwlgme:
+            if not skip[6]:
+                skip[6] = ""
+            if skip[2] not in gmes:
+                gmes[skip[2]] = [(skip[6], skip[7])]
+            else:
+                gmes[skip[2]].append((skip[6], skip[7]))
+        skips = list(gmes.keys())
+        skips.sort()
+        if self.games <= 3:
+            count = 4
+        else:
+            count = 3
+        pads = 297 / count / 5
+        fpdf = MyFpdf(font="Helvetica", foot=False)
+        ff = {
+            "margins": ((1, 80), ((1, 1))),     # ((left, right), (top, bottom))
+            "repeat": (1, 1),                   # repeat across and below
+            "rows": []}                         # x, y, w, h, fill, text, qty
+        cw = fpdf.cwth
+        ld = 5
+        for num in range(0, len(skips), count):
+            nff = copy.deepcopy(ff)
+            for seq in range(count):
+                pad = seq * pads
+                skip = skips[num + seq]
+                nff["rows"].extend([
+                    [5, 1 + pad, 80, 2, .8, "%s" % self.cdes, True, True],
+                    [5, 3 + pad, [
+                        [10, 2, 0, "%s" % skip, True, True],
+                        [70, 2, 0, "%s" % getName(skip), False, True]]],
+                    [5, 5 + pad, [
+                        [10, 2, .8, "OPP", True],
+                        [30, 2, .8, "NAME", False],
+                        [10, 2, .8, "RINK", True],
+                        [10, 2, .8, "FOR", True],
+                        [10, 2, .8, "AGT", True],
+                        [10, 2, .8, "SIGN", True]]]])
+                opps = gmes[skip]
+                for idx, opp in enumerate(opps):
+                    nff["rows"].extend([
+                        [5, 7 + pad + (idx * 2), [
+                            [10, 2, 0, "%s" % opp[0], True],
+                            [30, 2, 0, "%s" % getName(opp[0])],
+                            [10, 2, 0, "%s" % opp[1], True],
+                            [10, 2, 0, "", True],
+                            [10, 2, 0, "", True],
+                            [10, 2, 0, "", True]]]])
+            fpdf.add_page()
+            last, table = doDrawTable(fpdf, nff, ppad=1, spad=5, cw=cw, ld=ld)
+        pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
+            self.__class__.__name__, self.opts["conum"], ext="pdf")
+        fpdf.output(pdfnam, "F")
+        doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
+            repprt=self.df.repprt)
 
     def doExit(self):
         self.df.closeProcess()
diff --git a/bwl/bc2060.py b/bwl/bc2060.py
old mode 100755
new mode 100644
index c9793ef..219df58
--- a/bwl/bc2060.py
+++ b/bwl/bc2060.py
@@ -1,6 +1,6 @@
 """
 SYNOPSIS
-    Bowls Competition Match Cards Maintenance.
+    Bowls Competition Draw Maintenance.
 
     This file is part of Tartan Systems (TARTAN).
 
diff --git a/bwl/bc2070.py b/bwl/bc2070.py
old mode 100755
new mode 100644
index 1092a49..91e9e42
--- a/bwl/bc2070.py
+++ b/bwl/bc2070.py
@@ -25,7 +25,8 @@ COPYING
 """
 
 from TartanClasses import ASD, TartanDialog, Sql
-from tartanFunctions import askChoice, askQuestion, copyList, showError
+from tartanFunctions import askChoice, askQuestion, callModule, copyList
+from tartanFunctions import showError
 
 class bc2070(object):
     def __init__(self, **opts):
@@ -74,6 +75,7 @@ class bc2070(object):
                 ("btb_tab=bce_scod",),
                 ("bcg_cono=bce_cono",),
                 ("bcg_scod=bce_scod",),
+                ("bcg_ocod<900000",),
                 ("bcg_sfor=0 and bcg_sagt=0",)],
             "whera": [
                 ("T", "bce_ccod", 0, 0),
@@ -119,15 +121,25 @@ class bc2070(object):
         self.ccod = w
         self.code = com[1]
         self.df.loadEntry(frt, pag, p + 1, data=com[0])
-        bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
-            self.opts["conum"]), ("bct_code", "=", com[1])], limit=1)
+        if not self.code:
+            bwltyp = [self.opts["conum"], 0, "KO", "K", 1, 0, 21,
+                "N", 0, "N", "", 0, 0, "N", "N", ""]
+        else:
+            bwltyp = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
+                self.opts["conum"]), ("bct_code", "=", com[1])], limit=1)
         self.cfmat = bwltyp[self.sql.bwltyp_col.index("bct_cfmat")]
         self.groups = bwltyp[self.sql.bwltyp_col.index("bct_groups")]
         self.grgame = bwltyp[self.sql.bwltyp_col.index("bct_grgame")]
         if self.cfmat == "R":
-            self.games = self.sql.getRec("bwlent", cols=["count(*)"],
-                where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
-                self.ccod)], limit=1)[0] - 1
+            games = self.sql.getRec("bwlgme", cols=["count(*)"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", 1)],
+                group="bcg_group")
+            self.games = 0
+            for gme in games:
+                if gme[0] > self.games:
+                    self.games = gme[0]
+            self.games -= 1
         elif self.cfmat in ("D", "K"):
             totskp = self.sql.getRec("bwlent", cols=["count(*)"],
                 where=[("bce_cono", "=", self.opts["conum"]),
@@ -233,6 +245,9 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
         bwlpts = self.sql.getRec("bwlpts", where=[("bcp_cono",
             "=", self.opts["conum"]), ("bcp_code", "=", self.code),
             ("bcp_ptyp", "=", gtyp)], limit=1)
+        if not bwlpts:
+            bwlpts = [self.opts["conum"], 0, "D", "N", 0, "N",
+                0, 0, 1, "N", 0, 0, ""]
         self.skins = bwlpts[self.sql.bwlpts_col.index("bcp_skins")]
         self.sends = bwlpts[self.sql.bwlpts_col.index("bcp_sends")]
         self.ponly = bwlpts[self.sql.bwlpts_col.index("bcp_p_only")]
@@ -347,7 +362,7 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
     def doShots(self, frt, pag, r, c, p, i, w):
         if i == 2:
             self.s_for = w
-            if self.cfmat in ("D", "K"):
+            if self.cfmat in ("D", "K", "R"):
                 self.p_for = 0
                 self.df.loadEntry(frt, pag, p + 1, data=0)
                 return "sk1"
@@ -361,6 +376,18 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
                 self.p_agt = 0
                 self.df.loadEntry(frt, pag, p + 1, data=0)
                 return "sk1"
+            if self.cfmat == "R":
+                if self.s_for == self.s_agt:
+                    self.p_for = self.p_agt = .5
+                elif self.s_for > self.s_agt:
+                    self.p_for = 1
+                    self.p_agt = 0
+                else:
+                    self.p_for = 0
+                    self.p_agt = 1
+                self.df.loadEntry(frt, pag, p - 3, data=self.p_for)
+                self.df.loadEntry(frt, pag, p + 1, data=self.p_agt)
+                return "sk1"
             if not self.s_agt or (not self.totpts and self.bonus != "Y"):
                 self.p_agt = w
                 self.df.loadEntry(frt, pag, p + 1, data=0)
@@ -584,6 +611,10 @@ Do You Still Want to Continue?""" % (text, word, plural, text), default="no")
                     if len(recs) == 1:
                         break
                 self.opts["mf"].dbm.commitDbase()
+            if self.cfmat in ("D", "K"):
+                callModule(self.opts["mf"], self.df, "bc2050",
+                    coy=[self.opts["conum"], self.opts["conam"]],
+                    args=self.ccod)
         self.df.closeProcess()
         self.opts["mf"].closeLoop()
 
diff --git a/bwl/bc3010.py b/bwl/bc3010.py
old mode 100755
new mode 100644
index c321463..8a7230d
--- a/bwl/bc3010.py
+++ b/bwl/bc3010.py
@@ -55,7 +55,7 @@ class bc3010(object):
                 ("bdm_dbase", "", 0, ""),
                 ("bdm_tsize", "", 0, "")),
             "where": [("bdm_cono", "=", self.opts["conum"])],
-            "order": "bdm_date, bdm_time desc"}
+            "order": "bdm_date desc, bdm_time desc"}
 
         r1s = (("Morning", "M"), ("Afternoon", "A"))
         r2s = (("Yes", "Y"), ("No", "N"))
diff --git a/bwl/bc3020.py b/bwl/bc3020.py
old mode 100755
new mode 100644
index c6127f9..b171ade
--- a/bwl/bc3020.py
+++ b/bwl/bc3020.py
@@ -180,8 +180,7 @@ class bc3020(object):
             d.extend([dte.disp, side[0], side[1], side[2], side[3]])
             dat.append(d)
             l = self.tab
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=120, auto=True,
-            foot=True)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=120, auto=True)
         self.fpdf.header = self.pageHeading
         if self.tots == "N":
             # Print teams
diff --git a/bwl/bc3030.py b/bwl/bc3030.py
old mode 100755
new mode 100644
index f1f3f64..29d8214
--- a/bwl/bc3030.py
+++ b/bwl/bc3030.py
@@ -314,6 +314,8 @@ class bc3030(object):
         self.opts["mf"].closeLoop()
 
     def getName(self, snam, fnam):
+        snam = snam.replace("VAN DER", "V D")
+        snam = snam.replace("JANSE VAN", "J V")
         if fnam:
             return "%s, %s" % (snam.upper(), fnam.split()[0][0].upper())
         else:
diff --git a/bwl/bc3040.py b/bwl/bc3040.py
old mode 100755
new mode 100644
index 88d47ea..8d4436f
--- a/bwl/bc3040.py
+++ b/bwl/bc3040.py
@@ -104,7 +104,7 @@ class bc3040(object):
         self.df.closeProcess()
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, "declare_%s" % self.date, ext="pdf")
-        fpdf = MyFpdf(name=self.__class__.__name__, head=90, foot=True)
+        fpdf = MyFpdf(name=self.__class__.__name__, head=90)
         cw = fpdf.get_string_width("X")             # character width
         ld = 4.3                                    # line depth
         r1 = {
diff --git a/bwl/bc3050.py b/bwl/bc3050.py
old mode 100755
new mode 100644
diff --git a/bwl/bc3060.py b/bwl/bc3060.py
old mode 100755
new mode 100644
diff --git a/bwl/bc3070.py b/bwl/bc3070.py
old mode 100755
new mode 100644
index 6066530..d20aa86
--- a/bwl/bc3070.py
+++ b/bwl/bc3070.py
@@ -103,7 +103,7 @@ class bc3070(object):
         recs = self.sql.getRec(tables=["bwlent", "bwltab"], cols=col,
             where=whr, order=odr)
         if recs:
-            self.fpdf = MyFpdf(auto=True, foot=True)
+            self.fpdf = MyFpdf(auto=True)
             self.fpdf.header = self.doHead
             self.fpdf.add_page()
             self.fpdf.set_font("Courier","",9)
diff --git a/bwl/bc3080.py b/bwl/bc3080.py
old mode 100755
new mode 100644
index 68a5947..1e48ba7
--- a/bwl/bc3080.py
+++ b/bwl/bc3080.py
@@ -176,7 +176,7 @@ Burnt Ends - Replay the end."""),
             self.fpdf.set_font("Arial","",8)
             h = 3.5
         else:
-            self.fpdf = MyFpdf(auto=True, foot=True)
+            self.fpdf = MyFpdf(auto=True)
             self.fpdf.set_font("Arial","",14)
             h = 6
         self.fpdf.header = self.pageHeading
@@ -199,8 +199,8 @@ Burnt Ends - Replay the end."""),
             self.fpdf.drawText(txt=self.sql.bwltyp_dic["bct_tsize"][4],
                 h=h, ln=0)
             self.fpdf.drawText(txt=ldic["bct_tsize"], x=x1, h=h, ctyp="M")
-            if ldic["bct_cfmat"] in ("D", "K", "R"):
-                return
+            #if ldic["bct_cfmat"] in ("D", "K", "R"):
+            #    return
             self.fpdf.drawText(txt="Draw", h=h, ln=0)
             if ldic["bct_drawn"] == ldic["bct_games"]:
                 txt = "All Games will be Random Draws."
@@ -212,9 +212,10 @@ Burnt Ends - Replay the end."""),
                     txt = "The First %s Games will be Random Draws and "\
                         "thereafter Strength v Strength." % ldic["bct_drawn"]
             self.fpdf.drawText(txt=txt, x=x1, h=h, ctyp="M")
-            self.fpdf.drawText(txt=self.sql.bwltyp_dic["bct_games"][4],
-                h=h, ln=0)
-            self.fpdf.drawText(txt=ldic["bct_games"], x=x1, h=h, ctyp="M")
+            if ldic["bct_games"]:
+                self.fpdf.drawText(txt=self.sql.bwltyp_dic["bct_games"][4],
+                    h=h, ln=0)
+                self.fpdf.drawText(txt=ldic["bct_games"], x=x1, h=h, ctyp="M")
             self.fpdf.drawText(txt=self.sql.bwltyp_dic["bct_ends"][4],h=h,ln=0)
             self.fpdf.drawText(txt=ldic["bct_ends"], x=x1, h=h, ctyp="M")
             if ldic["bct_grgame"]:
@@ -302,8 +303,13 @@ Burnt Ends - Replay the end."""),
                         (ldic[ptyp]["bcp_lose_by"] - 1)
                     self.fpdf.drawText(txt=txt, x=x2, h=h, ctyp="M")
                     pts += 1
-                txt = "Therefore a Maximum of %s Points per Game." % pts
-                self.fpdf.drawText(txt=txt, x=x1, h=h, ctyp="M")
+                if pts:
+                    if pts == 1:
+                        txt = "Point"
+                    else:
+                        txt = "Points"
+                    txt = "Therefore a Maximum of %s %s per Game." % (pts, txt)
+                    self.fpdf.drawText(txt=txt, x=x1, h=h, ctyp="M")
             if self.notes:
                 txt = "Notes"
                 self.fpdf.drawText(h=h)
diff --git a/bwl/bc3090.py b/bwl/bc3090.py
old mode 100755
new mode 100644
index 7f8b47d..45feea5
--- a/bwl/bc3090.py
+++ b/bwl/bc3090.py
@@ -96,9 +96,15 @@ class bc3090(object):
         if self.cfmat in ("D", "K"):
             return "Knockout Competitions has No Summary"
         if self.cfmat == "R":
-            self.games = self.sql.getRec("bwlent", cols=["count(*)"],
-                where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
-                self.ccod)], limit=1)[0] - 1
+            games = self.sql.getRec("bwlgme", cols=["count(*)"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", 1)],
+                group="bcg_group")
+            self.games = 0
+            for gme in games:
+                if gme[0] > self.games:
+                    self.games = gme[0]
+            self.games -= 1
         else:
             self.games = bwltyp[self.sql.bwltyp_col.index("bct_games")]
         self.grgame = bwltyp[self.sql.bwltyp_col.index("bct_grgame")]
@@ -109,7 +115,6 @@ class bc3090(object):
     def doEnd(self):
         if "args" not in self.opts:
             self.df.closeProcess()
-        groups = ["None", "A", "B", "C", "D", "E"]
         lst = self.sql.getRec("bwlgme", cols=["bcg_game",
             "sum(bcg_points)"], where=[("bcg_cono", "=", self.opts["conum"]),
             ("bcg_ccod", "=", self.ccod)], group="bcg_game", order="bcg_game")
@@ -190,7 +195,10 @@ class bc3090(object):
                         dup[1] = "X"
                     rks.append(rnk)
             dup.append("%s" % eds)
-            dat.insert(2, groups[grp])
+            if grp:
+                dat.insert(2, chr(64 + grp))
+            else:
+                dat.insert(2, "")
             dat.append("%1s%1s%1s" % tuple(dup))
             data.append(dat)
         head = [
@@ -198,8 +206,11 @@ class bc3090(object):
             ("Draw Summary Sheet", 16, "C")]
         cols = [
             ["a", "UI",  6, "Skp",  "y"],
-            ["b", "NA", 29, "Name", "y"],
-            ["c", "UA",  1, "G",    "y"]]
+            ["b", "NA", 29, "Name", "y"]]
+        if self.cfmat == "R":
+            cols.append(["c", "UA",  1, "S",    "y"])
+        else:
+            cols.append(["c", "UA",  1, "G",    "y"])
         for x in range(self.games):
             cols.extend([
                 ["d%s" % x, "UI", 6, "Opp", "y"],
diff --git a/bwl/bc3100.py b/bwl/bc3100.py
old mode 100755
new mode 100644
index e156867..e1acc0c
--- a/bwl/bc3100.py
+++ b/bwl/bc3100.py
@@ -24,8 +24,11 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
+import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, TartanDialog, Sql
-from tartanFunctions import askQuestion, copyList, doPrinter, getModName
+from tartanFunctions import askQuestion, callModule, copyList, doPrinter
+from tartanFunctions import getModName, getNextCode
+
 
 class bc3100(object):
     def __init__(self, **opts):
@@ -44,7 +47,6 @@ class bc3100(object):
         if not bwlctl:
             return
         self.fromad = bwlctl["ctb_emadd"]
-        self.grpcod = ["", "A", "B", "C"]
         return True
 
     def mainProcess(self):
@@ -88,14 +90,26 @@ class bc3100(object):
         self.ccod = w
         self.cdes = chk[self.sql.bwlcmp_col.index("bcm_name")]
         self.ctyp = chk[self.sql.bwlcmp_col.index("bcm_type")]
+        self.poff = chk[self.sql.bwlcmp_col.index("bcm_poff")]
         chk = self.sql.getRec("bwltyp", where=[("bct_cono", "=",
             self.opts["conum"]), ("bct_code", "=", self.ctyp)], limit=1)
         self.cfmat = chk[self.sql.bwltyp_col.index("bct_cfmat")]
         self.tsize = chk[self.sql.bwltyp_col.index("bct_tsize")]
-        if self.cfmat in ("D", "K", "R"):
-            self.games = self.sql.getRec("bwlent", cols=["count(*)"],
-                where=[("bce_cono", "=", self.opts["conum"]), ("bce_ccod", "=",
-                self.ccod)], limit=1)[0] - 1
+        if self.cfmat == "R":
+            games = self.sql.getRec("bwlgme", cols=["count(*)"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", 1)],
+                group="bcg_group")
+            self.games = 0
+            for gme in games:
+                if gme[0] > self.games:
+                    self.games = gme[0]
+            self.games -= 1
+        elif self.cfmat in ("D", "K"):
+            self.games = self.sql.getRec("bwlgme", cols=["count(*)"],
+                where=[("bcg_cono", "=", self.opts["conum"]),
+                ("bcg_ccod", "=", self.ccod), ("bcg_game", "=", 1)],
+                limit=1)[0] - 1
         else:
             self.games = chk[self.sql.bwltyp_col.index("bct_games")]
         self.groups = chk[self.sql.bwltyp_col.index("bct_groups")]
@@ -111,7 +125,7 @@ class bc3100(object):
                 break
             self.lgame = g[0]
         if not self.lgame:
-            return "Knockout or No Completed Games to Print"
+            return "Knockout or No Completed Games"
         self.df.loadEntry(frt, pag, p+1, data=self.cdes)
         self.df.loadEntry(frt, pag, p+2, data=self.lgame)
 
@@ -180,14 +194,14 @@ class bc3100(object):
                 self.df.loadEntry(frt, pag, p+2, data=self.sesg)
                 return "sk3"
             return "sk1"
-        if self.pgame < self.lgame:
+        if self.cfmat in ("D", "K", "R") or self.pgame < self.lgame:
             self.df.topf[0][3][5] = "N"
         else:
             self.df.topf[0][3][5] = "Y"
 
     def doGamRep(self, frt, pag, r, c, p, i, w):
         self.gamrep = w
-        if self.pgame < self.games:
+        if self.cfmat in ("D", "K", "R") or self.pgame < self.lgame:
             self.sesp = "N"
             self.sesg = "N"
             self.df.loadEntry(frt, pag, p+1, data=self.sesp)
@@ -209,17 +223,19 @@ class bc3100(object):
         chk = self.sql.getRec("bwlgme", cols=["bcg_group", "bcg_scod"],
             where=[("bcg_cono", "=", self.opts["conum"]), ("bcg_ccod", "=",
             self.ccod), ("bcg_game", "=", self.pgame)], order="bcg_group")
+        if chk[0][0] and self.cfmat == "R":
+            groups = "Y"
+        else:
+            groups = self.groups
         self.grps = {}
         for rec in chk:
-            if self.pgame <= self.grgame:
-                rec[0] = 0
             if rec[0] not in self.grps:
                 self.grps[rec[0]] = [[rec[1]], [], []]
             else:
                 self.grps[rec[0]][0].append(rec[1])
         self.keys = list(self.grps.keys())
         self.keys.sort()
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=65, foot=True)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=65)
         self.lastg = None
         for g in self.keys:
             self.pageHeading()
@@ -231,11 +247,15 @@ class bc3100(object):
         if self.pgame == self.games:
             # Enter Prizes
             for key in self.keys:
-                self.doPrizes(key)
+                if self.cfmat == "R" and groups == "Y":
+                    self.grps[key][1] = 0
+                else:
+                    self.doPrizes(key)
             # Match Winners & Summary
             self.gqty = len(self.keys)
             self.wins = {}
             self.allp = []
+            self.swin = []
             self.where = [
                 ("bcg_cono", "=", self.opts["conum"]),
                 ("bcg_ccod", "=", self.ccod),
@@ -243,7 +263,7 @@ class bc3100(object):
                 ("btb_cono=bcg_cono",),
                 ("btb_tab=bcg_scod",)]
             for grp in range(self.gqty):
-                if self.groups == "Y":
+                if groups == "Y":
                     gcod = grp + 1
                 else:
                     gcod = grp
@@ -268,6 +288,8 @@ class bc3100(object):
                     else:
                         nam = recs[x][1]
                     self.wins[gcod].append(nam)
+                if self.cfmat == "R" and groups == "Y":
+                    self.swin.append(self.grps[gcod][0][0])
             if self.sesp == "Y":
                 self.pageHeading("S")
                 self.doSesWin()
@@ -298,6 +320,13 @@ class bc3100(object):
         doPrinter(mf=self.opts["mf"], conum=self.opts["conum"], pdfnam=pdfnam,
             header=head, repprt=self.df.repprt, fromad=self.fromad,
             repeml=self.df.repeml)
+        if self.pgame == self.lgame and self.cfmat == "R" and \
+                groups == "Y" and not self.poff:
+            ok = askQuestion(self.opts["mf"].body, "Play-Offs",
+                "Must a Play-Off Draw be Created and/or Printed?",
+                default="yes")
+            if ok == "yes":
+                self.doSecEnd()
         self.opts["mf"].closeLoop()
 
     def doReport(self, rtyp, grp):
@@ -466,7 +495,7 @@ class bc3100(object):
             grps = list(sess[gme].keys())
             grps.sort()
             for grp in grps:
-                gtxt = "%3s" % self.grpcod[grp]
+                gtxt = "%3s" % chr(64 + grp)
                 self.fpdf.drawText(stxt, w=12, border="TLRB", ln=0)
                 if self.sesg == "Y":
                     self.fpdf.drawText(gtxt, w=12, border="TLRB", ln=0)
@@ -477,7 +506,10 @@ class bc3100(object):
         for num, gcod in enumerate(self.keys):
             if self.wins[gcod]:
                 if gcod:
-                    mess = "Match Winners - Group %s" % self.grpcod[gcod]
+                    if self.cfmat == "R":
+                        mess = "Match Winners - Section %s" % chr(64 + gcod)
+                    else:
+                        mess = "Match Winners - Group %s" % chr(64 + gcod)
                 else:
                     mess = "Match Winners"
                 self.fpdf.setFont(style="B", size=14)
@@ -514,7 +546,7 @@ class bc3100(object):
                 self.fpdf.drawText()
                 self.fpdf.setFont(style="B", size=18)
                 if gcod:
-                    self.fpdf.drawText("GROUP %s" % self.grpcod[gcod],
+                    self.fpdf.drawText("GROUP %s" % chr(64 + gcod),
                         h=10, align="C")
                     self.fpdf.drawText()
                 self.fpdf.drawText("%s Prize R%s - %s" % (place[num],
@@ -563,7 +595,10 @@ class bc3100(object):
         else:
             head = "Match Standings After Game Number: %s" % self.pgame
         if group:
-            head += "  for Group: %s" % self.grpcod[group]
+            if self.cfmat == "R":
+                head += "  for Section: %s" % chr(64 + group)
+            else:
+                head += "  for Group: %s" % chr(64 + group)
         self.fpdf.drawText(head, font=["courier", "B", 16], align="C")
         self.fpdf.drawText()
         self.fpdf.setFont(style="B")
@@ -595,7 +630,10 @@ class bc3100(object):
     def doPrizes(self, grp):
         self.przgrp = grp
         if grp:
-            tit = "Prizes for Group %s" % self.grpcod[grp]
+            if self.cfmat == "R":
+                tit = "Prizes for Section %s" % chr(64 + grp)
+            else:
+                tit = "Prizes for Group %s" % chr(64 + grp)
         else:
             tit = "Prizes for Match"
         r1s = (("Yes", "Y"), ("No", "N"))
@@ -633,7 +671,7 @@ class bc3100(object):
         self.pz.mstFrame.wait_window()
 
     def doPrzNum(self, frt, pag, r, c, p, i, w):
-        if not w:
+        if not w and self.cfmat != "R":
             ok = askQuestion(self.opts["mf"].body, "Prizes",
                 "Are You Sure that there are No Prizes?", default="no")
             if ok == "no":
@@ -666,6 +704,23 @@ class bc3100(object):
         self.grps[self.przgrp][2] = self.przeft
         self.pz.closeProcess()
 
+    def doSecEnd(self):
+        ccod = getNextCode(self.sql, "bwlcmp", "bcm_code",
+            where=[("bcm_cono", "=", self.opts["conum"])], last=999)
+        self.sql.updRec("bwlcmp", cols=["bcm_poff"], data=[ccod],
+            where=[("bcm_cono", "=", self.opts["conum"]),
+            ("bcm_code", "=", self.ccod)])
+        cdes = self.cdes + " Play-Off"
+        t = time.localtime()
+        cdte = ((t[0] * 10000) + (t[1] * 100) + t[2])
+        self.sql.insRec("bwlcmp", data=[self.opts["conum"],
+            ccod, cdes, cdte, 0, ""])
+        for skp in self.swin:
+            self.sql.insRec("bwlent", data=[self.opts["conum"],
+                ccod, skp, 0, "Y", ""])
+        callModule(self.opts["mf"], self.df, "bc2050", coy=[self.opts["conum"],
+            self.opts["conam"]], args=ccod)
+
     def doExit(self):
         self.df.closeProcess()
         self.opts["mf"].closeLoop()
diff --git a/bwl/bc3110.py b/bwl/bc3110.py
old mode 100755
new mode 100644
index b5853cb..a958b8f
--- a/bwl/bc3110.py
+++ b/bwl/bc3110.py
@@ -77,7 +77,7 @@ class bc3110(object):
         recs = self.sql.getRec(tables=["bwlent", "bwltab"], cols=col,
             where=whr, order="btb_surname")
         if recs:
-            fpdf = MyFpdf(name=self.__class__.__name__, head=90)
+            fpdf = MyFpdf(name=self.__class__.__name__, head=90, foot=False)
             for num, rec in enumerate(recs):
                 if not num % 5:
                     fpdf.add_page()
diff --git a/bwl/bc6010.py b/bwl/bc6010.py
old mode 100755
new mode 100644
diff --git a/bwl/bc6020.py b/bwl/bc6020.py
old mode 100755
new mode 100644
diff --git a/bwl/bc6030.py b/bwl/bc6030.py
old mode 100755
new mode 100644
index 008b6e5..3686c80
--- a/bwl/bc6030.py
+++ b/bwl/bc6030.py
@@ -24,6 +24,7 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
+import time
 from TartanClasses import TartanDialog, Sql
 
 class bc6030(object):
@@ -35,9 +36,12 @@ class bc6030(object):
 
     def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["bwlcmp", "bwlent", "bwlgme",
-            "bwlrnd"], prog=self.__class__.__name__)
+            "bwlrnd", "bwltyp", "bwlpts", "bwlfls", "bwlflm", "bwlflt",
+            "bwlflo"], prog=self.__class__.__name__)
         if self.sql.error:
             return
+        t = time.localtime()
+        self.today = ((t[0] * 10000) + (t[1] * 100) + t[2])
         return True
 
     def mainProcess(self):
@@ -45,11 +49,13 @@ class bc6030(object):
         r2s = (("No", "N"), ("All", "A"), ("Unplayed", "U"))
         fld = (
             (("T",0,0,0),("IRB",r1s),0,"Tabs-Inn","",
-                "N","N",self.doTabs,None,None,None),
+                "N","Y",self.doTabs,None,None,None),
             (("T",0,1,0),("IRB",r1s),0,"League","",
                 "N","N",self.doLeague,None,None,None),
-            (("T",0,2,0),("IRB",r2s),0,"Competitions","",
-                "N","N",self.doComps,None,None,None))
+            (("T",0,2,0),("IRB",r2s),0,"Competition Entries","",
+                "N","N",self.doComps,None,None,None),
+            (("T",0,3,0),("IRB",r1s),0,"Competition Types","",
+                "N","N",self.doTypes,None,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         self.df = TartanDialog(self.opts["mf"], tops=False,
@@ -64,6 +70,9 @@ class bc6030(object):
     def doComps(self, frt, pag, r, c, p, i, w):
         self.comps = w
 
+    def doTypes(self, frt, pag, r, c, p, i, w):
+        self.types = w
+
     def doEnd(self):
         self.df.closeProcess()
         if self.tabs == "Y":
@@ -80,12 +89,24 @@ class bc6030(object):
                 self.opts["conum"])])
             self.sql.delRec("bwlflo", where=[("bfo_cono", "=",
                 self.opts["conum"])])
+        delc = []
+        delt = []
         if self.comps in ("A", "U"):
-            dels = []
+            tabs = [
+                ("bwlcmp", "bcm_cono", "bcm_code"),
+                ("bwlcmp", "bcm_cono", "bcm_poff"),
+                ("bwlent", "bce_cono", "bce_ccod"),
+                ("bwlgme", "bcg_cono", "bcg_ccod"),
+                ("bwlrnd", "bcr_cono", "bcr_ccod")]
+            whr = [("bcm_cono", "=", self.opts["conum"])]
             if self.comps == "U":
-                comps = self.sql.getRec("bwlcmp", cols=["bcm_code"],
-                    where=[("bcm_cono", "=", self.opts["conum"])],
-                    order="bcm_code")
+                whr.append(("bcm_date", "<=", self.today))
+            comps = self.sql.getRec("bwlcmp", cols=["bcm_code"],
+                where=whr, order="bcm_code")
+            if self.comps == "A":
+                for comp in comps:
+                    delc.append(comp[0])
+            elif self.comps == "U":
                 col = ["sum(bcg_sfor)", "sum(bcg_sagt)",
                     "sum(bcg_points)"]
                 for comp in comps:
@@ -93,37 +114,70 @@ class bc6030(object):
                         where=[("bcg_cono", "=", self.opts["conum"]),
                         ("bcg_ccod", "=", comp[0])], limit=1)
                     if not chk:
-                        dels.append(comp[0])
+                        delc.append(comp[0])
                         continue
                     if not chk[0] and not chk[1] and not chk[2]:
-                        dels.append(comp[0])
-            if self.comps == "A" or dels:
-                tabs = [
-                    ("bwlcmp", "bcm_cono", "bcm_code"),
-                    ("bwlent", "bce_cono", "bce_ccod"),
-                    ("bwlgme", "bcg_cono", "bcg_ccod"),
-                    ("bwlrnd", "bcr_cono", "bcr_ccod")]
+                        delc.append(comp[0])
+            if delc:
                 for tab in tabs:
                     whr = [(tab[1], "=", self.opts["conum"])]
                     if self.comps == "U":
-                        whr.append((tab[2], "in", dels))
+                        whr.append((tab[2], "in", delc))
                     self.sql.delRec(tab[0], where=whr)
-                if self.comps == "U":
-                    # Renumber competitions
-                    comps = self.sql.getRec("bwlcmp", where=[("bcm_cono",
-                        "=", self.opts["conum"])], order="bcm_code")
-                    self.sql.delRec("bwlcmp", where=[("bcm_cono", "=",
-                        self.opts["conum"])])
-                    for num, dat in enumerate(comps):
-                        ccod = num + 1
-                        nrec = dat[:]
-                        nrec[1] = ccod
-                        self.sql.insRec("bwlcmp", data=nrec)
-                        for tab in tabs[1:]:
-                            self.sql.updRec(tab[0], cols=[tab[2]], data=[ccod],
-                                where=[(tab[1], "=", self.opts["conum"]),
-                                (tab[2], "=", dat[1])])
-        self.opts["mf"].dbm.commitDbase(ask=True)
+            if self.comps == "U":
+                # Renumber competitions
+                comps = self.sql.getRec("bwlcmp", where=[("bcm_cono",
+                    "=", self.opts["conum"])], order="bcm_code")
+                self.sql.delRec("bwlcmp", where=[("bcm_cono", "=",
+                    self.opts["conum"])])
+                for num, dat in enumerate(comps):
+                    ccod = num + 1
+                    nrec = dat[:]
+                    nrec[1] = ccod
+                    self.sql.insRec("bwlcmp", data=nrec)
+                    for tab in tabs[1:]:
+                        self.sql.updRec(tab[0], cols=[tab[2]], data=[ccod],
+                            where=[(tab[1], "=", self.opts["conum"]),
+                            (tab[2], "=", dat[1])])
+        if self.types == "Y":
+            typs = self.sql.getRec("bwltyp", cols=["bct_code"],
+                where=[("bct_cono", "=", self.opts["conum"])])
+            for typ in typs:
+                cnt = self.sql.getRec("bwlcmp", cols=["count(*)"],
+                    where=[("bcm_cono", "=", self.opts["conum"]),
+                    ("bcm_type", "=", typ[0])], limit=1)
+                if not cnt[0]:
+                    delt.append(typ[0])
+                    self.sql.delRec("bwltyp", where=[("bct_cono",
+                        "=", self.opts["conum"]), ("bct_code",
+                        "=", typ[0])])
+                    self.sql.delRec("bwlpts", where=[("bcp_cono",
+                        "=", self.opts["conum"]), ("bcp_code",
+                        "=", typ[0])])
+            # Renumber types
+            types = self.sql.getRec("bwltyp", where=[("bct_cono",
+                "=", self.opts["conum"])], order="bct_code")
+            self.sql.delRec("bwltyp", where=[("bct_cono", "=",
+                self.opts["conum"])])
+            for num, dat in enumerate(types):
+                ctyp = num + 1
+                nrec = dat[:]
+                nrec[1] = ctyp
+                self.sql.insRec("bwltyp", data=nrec)
+                self.sql.updRec("bwlpts", cols=["bcp_code"],
+                    data=[ctyp], where=[("bcp_cono", "=",
+                    self.opts["conum"]), ("bcp_code", "=", dat[1])])
+                self.sql.updRec("bwlcmp", cols=["bcm_type"],
+                    data=[ctyp], where=[("bcm_cono", "=",
+                    self.opts["conum"]), ("bcm_type", "=", dat[1])])
+        if self.types == "Y" and delt:
+            mess = "Delete (%s) Types" % len(delt)
+        else:
+            mess = ""
+        if self.comps in ("A", "U") and delc:
+            mess = "%s\nDelete (%s) Competitions" % (mess, len(delc))
+        if delt or delc:
+            self.opts["mf"].dbm.commitDbase(ask=True, mess=mess)
         self.opts["mf"].closeLoop()
 
     def doExit(self):
diff --git a/bwl/bcc110.py b/bwl/bcc110.py
old mode 100755
new mode 100644
index 0ee05cf..6dc5013
--- a/bwl/bcc110.py
+++ b/bwl/bcc110.py
@@ -178,7 +178,7 @@ class bcc110(object):
                 r = w - self.mstart
                 g = "Male"
             if r < 200:
-                return "ff3|Invalid Numbers, Too Few %s Tabs. (Minimum 200)" % g
+                return "ff5|Invalid Numbers, Too Few %s Tabs. (Minimum 200)" % g
         self.fstart = w
 
     def doNStart(self, frt, pag, r, c, p, i, w):
diff --git a/bwl/bcc210.py b/bwl/bcc210.py
old mode 100755
new mode 100644
diff --git a/crs/cr1010.py b/crs/cr1010.py
old mode 100755
new mode 100644
diff --git a/crs/cr2010.py b/crs/cr2010.py
old mode 100755
new mode 100644
index 0f12124..452ae94
--- a/crs/cr2010.py
+++ b/crs/cr2010.py
@@ -364,7 +364,7 @@ class cr2010(object):
             self.opts["conum"]), ("crm_acno", "=", w)], limit=1)
         if not acc:
             return "Invalid Account Number"
-        if acc[6] == "X":
+        if acc[7] == "X":
             return "Invalid Account, Redundant"
         self.cracno = w
         self.name = acc[0]
@@ -374,6 +374,7 @@ class cr2010(object):
         self.stdt = acc[4]
         self.pdis = acc[5]
         self.glac = acc[6]
+        self.popv = False
         self.df.loadEntry(frt, pag, p+1, data=self.name)
 
     def doRef1(self, frt, pag, r, c, p, i, w):
@@ -407,6 +408,13 @@ class cr2010(object):
         vrte = getVatRate(self.sql, self.opts["conum"], w, self.trndat)
         if vrte is None:
             return "Invalid V.A.T Code"
+        if vrte and not self.vatn:
+            ok = askQuestion(self.opts["mf"].window, "VAT Number",
+                "This Account Does Not Have a VAT Number.\n\nMust "\
+                "it be Populated?", default="yes")
+            if ok == "yes":
+                self.vatn = w
+                self.popv = True
         self.vatcode = w
         self.vatamt = round((self.trnamt * vrte / (vrte + 100)), 2)
         self.df.loadEntry(frt, pag, p+1, data=self.vatamt)
@@ -635,6 +643,13 @@ class cr2010(object):
         self.vatrte = getVatRate(self.sql, self.allcoy, w, self.trndat)
         if self.vatrte is None:
             return "Invalid V.A.T Code"
+        if self.vatrte and not self.vatn:
+            ok = askQuestion(self.opts["mf"].window, "VAT Number",
+                "This Account Does Not Have a VAT Number.\n\nMust "\
+                "it be Populated?", default="yes")
+            if ok == "yes":
+                self.vatn = w
+                self.popv = True
         self.vatcode = w
 
     def doAllAmt(self, frt, pag, r, c, p, i, w):
@@ -788,6 +803,11 @@ class cr2010(object):
         self.df.focusField("C", 2, self.df.col)
 
     def doCrsTrn(self):
+        # Creditors Master File
+        if self.popv:
+            self.sql.updRec("crsmst", cols=["crm_vatno"], data=["Unknown"],
+                where=[("crm_cono", "=", self.opts["conum"]),
+                ("crm_acno", "=", self.cracno)])
         # Creditors Ledger Transaction
         paydt = paymentDate(self.base, self.stdt, self.term, self.trndat)
         data = [self.opts["conum"], self.cracno, self.opts["rtn"],
diff --git a/crs/cr3010.py b/crs/cr3010.py
old mode 100755
new mode 100644
index c22e5f0..3a9a9a7
--- a/crs/cr3010.py
+++ b/crs/cr3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class cr3010(object):
         if not crsctl:
             return
         self.fromad = crsctl["ctc_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,9 +113,7 @@ class cr3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %44s %6s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-82s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
         self.pgnum = 0
diff --git a/crs/cr3020.py b/crs/cr3020.py
old mode 100755
new mode 100644
index 29470a1..ab4cd9c
--- a/crs/cr3020.py
+++ b/crs/cr3020.py
@@ -54,8 +54,6 @@ class cr3020(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
         self.colsh = ["TP", "BatchNo", "Acc-Num", "Name", "Reference",
             "Date", "Debits", "Credits", "Tax-Amount", "T", "Remarks"]
         self.forms = [("UI", 2, False, False, True), ("Na", 7), ("NA", 7),
@@ -212,7 +210,8 @@ class cr3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Creditor's Ledger Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -241,11 +240,9 @@ class cr3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = "%03u %-30s %57s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__)
+            self.head = "%03u %-95s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = "%03u %-30s %99s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__)
+            self.head = "%03u %-141s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bdrs = 0
@@ -256,7 +253,6 @@ class cr3020(object):
         self.tcrs = 0
         self.tvat = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -340,17 +336,16 @@ class cr3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.totsonly == "Y":
-            self.fpdf.drawText("%-40s %-10s %-2s %-10s %27s %5s" % \
+            self.fpdf.drawText("%-40s %-7s %-2s %-47s" % \
                 ("Creditor's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+                self.sperd, "to", self.eperd))
         else:
-            self.fpdf.drawText("%-40s %-10s %-2s %-10s %72s %5s" % \
+            self.fpdf.drawText("%-40s %-7s %-2s %-92s" % \
                 ("Creditor's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+                self.sperd, "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/crs/cr3030.py b/crs/cr3030.py
old mode 100755
new mode 100644
index ab3fa68..e987485
--- a/crs/cr3030.py
+++ b/crs/cr3030.py
@@ -53,8 +53,6 @@ class cr3030(object):
         self.fromad = crsctl["ctc_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -149,12 +147,10 @@ class cr3030(object):
 
     def printReport(self, mst):
         p = ProgressBar(self.opts["mf"].body, mxs=len(mst), esc=True)
-        self.head = ("%03u %-30s %14s %35s %14s %10s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-107s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.ctots = [0,0,0,0,0]
         self.gtots = [0,0,0,0,0]
-        self.pgnum = 0
         self.pglin = 999
         for num, rec in enumerate(mst):
             p.displayProgress(num)
@@ -175,7 +171,7 @@ class cr3030(object):
                 neg=False, zer="N")
             if not trns:
                 continue
-            if not self.pgnum:
+            if self.pglin == 999:
                 self.pageHeading(acno.disp, name.disp, ptyp)
             else:
                 self.newAccount(acno.disp, name.disp, ptyp)
@@ -225,12 +221,10 @@ class cr3030(object):
     def pageHeading(self, acno, name, ptyp):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-44s %-10s %49s %5s" % \
-            ("Creditors Transactions Due For Payment as at",
-            self.pdatd, "Page", self.pgnum))
+        self.fpdf.drawText("%-44s %-66s" % \
+            ("Creditors Transactions Due For Payment as at", self.pdatd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-21s%-1s%-3s%-9s%-10s%-3s%-12s%-2s%-1s" % \
             ("(Options: Terms-Base", self.ptyp, "", "Pay-Date", self.pdatd,
diff --git a/crs/cr3040.py b/crs/cr3040.py
old mode 100755
new mode 100644
index 34464b6..52b0eff
--- a/crs/cr3040.py
+++ b/crs/cr3040.py
@@ -52,8 +52,6 @@ class cr3040(object):
         self.fromad = crsctl["ctc_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         return True
 
@@ -102,12 +100,10 @@ class cr3040(object):
 
     def printReport(self, mst):
         p = ProgressBar(self.opts["mf"].body, mxs=len(mst), esc=True)
-        self.head = ("%03u %-30s %13s %33s %13s %10s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-102s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.ctots = [0,0,0,0]
         self.gtots = [0,0,0,0]
-        self.pgnum = 0
         self.pglin = 999
         for num, rec in enumerate(mst):
             p.displayProgress(num)
@@ -120,7 +116,7 @@ class cr3040(object):
                 acno.work)], zer="N")
             if not recs:
                 continue
-            if not self.pgnum:
+            if self.pglin == 999:
                 self.pageHeading(acno.disp, name.disp)
             else:
                 self.newAccount(acno.disp, name.disp)
@@ -168,12 +164,10 @@ class cr3040(object):
     def pageHeading(self, acno, name):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-42s %-7s %50s %5s" % \
-            ("Creditors Outstanding Transactions as at", self.curdd,
-            "Page", self.pgnum))
+        self.fpdf.drawText("%-42s %-64s" % \
+            ("Creditors Outstanding Transactions as at", self.curdd))
         self.fpdf.setFont()
         self.pglin = 3
         self.newAccount(acno, name)
diff --git a/crs/cr3050.py b/crs/cr3050.py
old mode 100755
new mode 100644
index f388bab..bfd0a06
--- a/crs/cr3050.py
+++ b/crs/cr3050.py
@@ -53,8 +53,6 @@ class cr3050(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
         self.colsh = ["Acc-Num", "Name", "Cr-Balance", "Tot-Balance",
             "Current", "30-Days", "60-Days", "90-Days", "Over-90-Days"]
         self.forms = [("NA", 7), ("NA", 30)] + [("SD", 13.2)] * 7
@@ -196,7 +194,8 @@ class cr3050(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Creditor's Age Analaysis up to %s" %
             self.opts["period"])
         self.expheads.append("Options: From %s To %s Low-Bal %s Dr-Bals "\
@@ -232,14 +231,11 @@ class cr3050(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
-        self.head2 = "Creditor's Age Analysis up to %s%s" % \
-            (self.opts["period"],"%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+        self.head1 = self.head
+        self.head2 = "Creditor's Age Analysis up to %s" % self.opts["period"]
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -331,10 +327,9 @@ class cr3050(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText("%-16s%-7s%-3s%-4s%-7s%-3s%-9s%-8s%-3s%-13s%-1s"\
             "%-3s%-17s%-1s%-1s" % ("(Options: From: ", self.fm, "", "To: ",
@@ -345,7 +340,7 @@ class cr3050(object):
             "%-13s" % ("Acc-Num", "Name", "  Dr-Balance", " Tot-Balance",
             "     Current", "     30-Days", "     60-Days", "     90-Days",
             "Over-90-Days"))
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.setFont()
         self.pglin = 8
 
diff --git a/crs/cr3060.py b/crs/cr3060.py
old mode 100755
new mode 100644
index 3792dc5..afc9632
--- a/crs/cr3060.py
+++ b/crs/cr3060.py
@@ -25,8 +25,8 @@ COPYING
 """
 
 import time
-from TartanClasses import CCD, GetCtl, MyFpdf, ProgressBar, Sql, TartanDialog
-from tartanFunctions import getModName, doPrinter, showError
+from TartanClasses import CCD, GetCtl, RepPrt, Sql, TartanDialog
+from tartanFunctions import showError
 
 class cr3060(object):
     def __init__(self, **opts):
@@ -48,8 +48,8 @@ class cr3060(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
+        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
+            t[1], t[2], t[3], t[4], self.__class__.__name__)
         return True
 
     def mainProcess(self):
@@ -71,7 +71,7 @@ class cr3060(object):
         tnd = ((self.doEnd,"Y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], title=self.tit, eflds=fld,
-            tend=tnd, txit=txt, view=("N","V"), mail=("Y","N"))
+            tend=tnd, txit=txt, view=("Y","V"), mail=("Y","N"))
 
     def doSort(self, frt, pag, r, c, p, i, w):
         self.sort = w
@@ -105,18 +105,35 @@ class cr3060(object):
         self.closeProcess()
 
     def printReport(self, recs):
-        p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %128s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
-        self.pglin = 999
+        mnam = self.__class__.__name__
+        head = ["Creditors Ledger Master List as at %s" % self.sysdtd]
+        if self.df.repprt[2] == "export":
+            head[0] += " %s" % self.sysdttm
+        cols = [
+            ["a", "NA", 7, "Acc-Num", "Y"],
+            ["b", "NA", 30, "Name", "Y"],
+            ["c", "NA", 30, "Address", "Y"],
+            ["d", "NA", 4, "PCod", "Y"],
+            ["e", "NA", 12, "Tel-Number", "Y"],
+            ["f", "NA", 12, "Fax-Number", "Y"]]
+        if self.condet == "M":
+            det = "Manager's Contact Details"
+        elif self.condet == "A":
+            det = "Accounts Contact Details"
+        else:
+            det = "Orders Contact Details"
+        cols.extend([
+            ["g", "NA", 40, det, "Y"],
+            ["h", "NA", 1, "P", "Y"],
+            ["i", "UI", 3, "Trm", "Y"],
+            ["j", "NA", 1, "B", "Y"],
+            ["k", "UI", 2, "St", "Y"],
+            ["l", "UI", 7, "CrLimit", "Y"],
+            ["m", "UD", 6.2, "Tr-Dis", "Y"],
+            ["n", "UD", 6.2, "Py-Dis", "Y"]])
+        data = []
         col = self.sql.crsmst_col
         for num, dat in enumerate(recs):
-            p.displayProgress(num)
-            if p.quit:
-                break
             acno = CCD(dat[col.index("crm_acno")], "NA", 7)
             name = CCD(dat[col.index("crm_name")], "NA", 30)
             add1 = CCD(dat[col.index("crm_add1")], "NA", 30)
@@ -142,55 +159,17 @@ class cr3060(object):
             limit = CCD(dat[col.index("crm_limit")], "UI", 7)
             trdis = CCD(dat[col.index("crm_trdis")], "UD", 6.2)
             pydis = CCD(dat[col.index("crm_pydis")], "UD", 6.2)
-            if self.pglin > self.fpdf.lpp:
-                self.pageHeading()
-            self.fpdf.drawText("%s %s %s %s %s %s %s %s %s %s %s %s %s %s" % \
-                (acno.disp, name.disp, add1.disp, pcod.disp, tel.disp,
-                fax.disp, nameml.disp, pyind.disp, terms.disp, termsb.disp,
-                stday.disp, limit.disp, trdis.disp, pydis.disp))
+            data.append([acno.work, name.work, add1.work, pcod.work, tel.work,
+                fax.work, nameml.work, pyind.work, terms.work, termsb.work,
+                stday.work, limit.work, trdis.work, pydis.work])
             if self.address == "Y" and add2.work:
-                self.fpdf.drawText("%38s %-30s" % ("", add2.disp))
-                self.pglin += 1
+                data.append(["", "", add2.work] + [""] * 11)
             if self.address == "Y" and add3.work:
-                self.fpdf.drawText("%38s %-30s" % ("", add3.disp))
-                self.pglin += 1
-            self.pglin += 1
-        p.closeProgress()
-        if self.fpdf.page and not p.quit:
-            pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
-                self.__class__.__name__, self.opts["conum"], ext="pdf")
-            self.fpdf.output(pdfnam, "F")
-            doPrinter(mf=self.opts["mf"], conum=self.opts["conum"],
-                pdfnam=pdfnam, header=self.tit, repprt=self.df.repprt,
-                fromad=self.fromad, repeml=self.df.repeml)
-        self.closeProcess()
-
-    def pageHeading(self):
-        self.fpdf.add_page()
-        self.fpdf.setFont(style="B")
-        self.pgnum += 1
-        self.fpdf.drawText(self.head)
-        self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %-10s %122s %5s" % \
-            ("Creditors Ledger Master List as at", self.sysdtd,
-                "Page", self.pgnum))
-        self.fpdf.drawText()
-        self.fpdf.drawText("%-15s%-1s%-1s" % ("(Options: Sort-",
-            self.df.t_disp[0][0][0], ")"))
-        self.fpdf.drawText()
-        if self.condet == "M":
-            det = "Manager's Contact Details"
-        elif self.condet == "A":
-            det = "Accounts Contact Details"
-        else:
-            det = "Orders Contact Details"
-        self.fpdf.drawText("%-7s %-30s %-30s %-4s %-12s %-12s %-40s %-1s "\
-            "%-3s %-1s %-2s %-7s %-6s %-6s" % ("Acc-Num", "Name", "Address",
-            "PCod", "Tel-Number", "Fax-Number", "%s" % det, "P", "Trm", "B",
-            "St", "CrLimit", "Tr-Dis", "Py-Dis"))
-        self.fpdf.underLine(txt=self.head)
-        self.fpdf.setFont()
-        self.pglin = 8
+                data.append(["", "", add3.work] + [""] * 11)
+        RepPrt(self.opts["mf"], conum=self.opts["conum"],
+            conam=self.opts["conam"], name=mnam, tables=data, heads=head,
+            cols=cols, ttype="D", repprt=self.df.repprt,
+            repeml=self.df.repeml, fromad=self.fromad)
 
     def doExit(self):
         self.df.closeProcess()
diff --git a/crs/cr3070.py b/crs/cr3070.py
old mode 100755
new mode 100644
index 43a05dc..64f0de9
--- a/crs/cr3070.py
+++ b/crs/cr3070.py
@@ -50,8 +50,6 @@ class cr3070(object):
         self.fromad = crsctl["ctc_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         return True
 
@@ -144,8 +142,7 @@ class cr3070(object):
             self.printBody()
 
     def printSetup(self):
-        self.head = ("%03u %-30s %13s %15s %14s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-102s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.prnt = "Y"
 
diff --git a/crs/cr3080.py b/crs/cr3080.py
old mode 100755
new mode 100644
diff --git a/crs/cr3090.py b/crs/cr3090.py
old mode 100755
new mode 100644
index e77621f..55dbe65
--- a/crs/cr3090.py
+++ b/crs/cr3090.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, TartanLabel, ProgressBar, Sql, TartanDialog
 from tartanFunctions import doPrinter, getModName, getSingleRecords, showError
 from tartanWork import labels
@@ -45,10 +44,6 @@ class cr3090(object):
         crsctl = gc.getCtl("crsctl", self.opts["conum"])
         if not crsctl:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/crs/cr3100.py b/crs/cr3100.py
old mode 100755
new mode 100644
diff --git a/crs/cr3110.py b/crs/cr3110.py
old mode 100755
new mode 100644
index aa7cdd9..fc5e517
--- a/crs/cr3110.py
+++ b/crs/cr3110.py
@@ -51,8 +51,7 @@ class cr3110(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.forms = [("NA", 7), ("NA", 30)] + [("SI", 10)] * 12
         self.gtots = [0] * 12
         self.mchart = []
@@ -112,7 +111,7 @@ class cr3110(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Creditor's Purchase History for the 12 Months "\
             "Period to %s" % self.coffd)
         self.expheads.append("Options: Ignore-Zeros %s" % self.zer)
@@ -146,14 +145,12 @@ class cr3110(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
+        self.head1 = self.head
         self.head2 = "Creditor's Purchase History for the 12 Months "\
-            "Period to %s%s" % (self.coffd, "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+            "Period to %s" % self.coffd
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -210,20 +207,20 @@ class cr3110(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText("(%-23s%1s)" % ("Options: Ignore Zeros:-",
             self.zer))
         self.fpdf.drawText()
         self.fpdf.drawText("%-7s %-30s %s" % ("Acc-Num", "Name", self.mthhead))
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.setFont()
         self.pglin = 8
 
     def grandTotal(self):
+        self.gtots.reverse()
         if self.df.repprt[2] == "export":
             self.expdatas.append(["ULINES"])
             self.expdatas.append(["TOTAL", ["", "Grand Totals"] + self.gtots])
@@ -239,7 +236,7 @@ class cr3110(object):
                 purchd = "%s" % a.disp
             mchart.append(a.work)
         self.mchart.append(mchart)
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.drawText("%-7s %-30s %s" % (" ", "Grand Totals", purchd))
 
     def doExit(self):
diff --git a/crs/cr4010.py b/crs/cr4010.py
old mode 100755
new mode 100644
index ff9b52b..42ded78
--- a/crs/cr4010.py
+++ b/crs/cr4010.py
@@ -52,8 +52,6 @@ class cr4010(object):
         self.fromad = crsctl["ctc_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         self.paidup = "N"
         return True
@@ -383,7 +381,6 @@ class cr4010(object):
                                 dic[nam][5]])
                     dat.append(rec[col.index(nam)])
                 data.append(dat)
-            gtots = ["crt_tramt", "paid", "balance"]
             if repprt:
                 prtdia = False
             else:
@@ -391,8 +388,8 @@ class cr4010(object):
             rp = RepPrt(self.opts["mf"], conum=self.opts["conum"],
                 conam=self.opts["conam"], name=self.__class__.__name__,
                 ttype="D", tables=data, heads=heads, cols=cols,
-                trtp=["crt_type", crtrtp], gtots=gtots, prtdia=prtdia,
-                repprt=repprt, repeml=repeml, fromad=self.fromad)
+                trtp=["crt_type", crtrtp], prtdia=prtdia, repprt=repprt,
+                repeml=repeml, fromad=self.fromad)
         self.df.setWidget(self.df.mstFrame, state="show")
         self.df.enableButtonsTags(state=state)
 
diff --git a/crs/cr6010.py b/crs/cr6010.py
old mode 100755
new mode 100644
diff --git a/crs/cr6020.py b/crs/cr6020.py
old mode 100755
new mode 100644
index a3adc0a..30f8bc3
--- a/crs/cr6020.py
+++ b/crs/cr6020.py
@@ -53,12 +53,6 @@ class cr6020(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.curdt = int(self.sysdtw / 100)
-        check = self.sql.sqlRec("Select cra_acno from crsage where cra_acno "\
-            "in (Select cra_acno from crsage group by cra_acno having "\
-            "sum(cra_amnt) <> 0) group by cra_acno")
-        for self.acno in check:
-            self.doReAgeAuto()
-            self.opts["mf"].dbm.commitDbase()
         if "args" not in self.opts:
             self.agevar = tk.BooleanVar()
             self.agevar.set(False)
diff --git a/crs/cr6030.py b/crs/cr6030.py
old mode 100755
new mode 100644
diff --git a/crs/crc110.py b/crs/crc110.py
old mode 100755
new mode 100644
diff --git a/csh/cs2010.py b/csh/cs2010.py
old mode 100755
new mode 100644
diff --git a/csh/cs3010.py b/csh/cs3010.py
old mode 100755
new mode 100644
index bb0ee78..718ab95
--- a/csh/cs3010.py
+++ b/csh/cs3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, MyFpdf, ProgressBar, Sql, TartanDialog
 from tartanFunctions import getModName, doPrinter
 
@@ -40,10 +39,6 @@ class cs3010(object):
             prog=self.__class__.__name__)
         if self.sql.error:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         self.dte = self.sql.getRec("cshcnt", cols=["max(cct_date)"],
             where=[("cct_cono", "=", self.opts["conum"])], limit=1)[0]
         self.denoms = (
@@ -96,7 +91,7 @@ class cs3010(object):
         elif w < self.fm:
             return "Invalid To Date"
         self.to = w
-        self.tod = self.df.t_disp[pag][r][p]
+        self.tod = CCD(w, "D1", 10).disp
         csh = self.sql.getRec("cshcnt", where=[("cct_cono", "=",
             self.opts["conum"]), ("cct_type", "=", "T"), ("cct_date",
             "between", self.fm, self.to)])
@@ -114,10 +109,8 @@ class cs3010(object):
         self.tk2 = self.sql.getRec("cshana", where=[("can_cono", "=",
             self.opts["conum"]), ("can_type", "=", "T"), ("can_date",
             "between", self.fm, self.to)], order="can_trdt, can_code")
-        self.head = ("%03u %-30s %40s %6s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-78s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         self.pageHeading()
         self.printExpTak(self.tk1, 1)
@@ -299,12 +292,10 @@ class cs3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-30s %10s to %10s %18s %5s" % \
-            ("Cash Reconciliation for Period", self.fmd,
-            self.tod, "Page", self.pgnum))
+        self.fpdf.drawText("%-30s %10s to %-35s" % \
+            ("Cash Reconciliation for Period", self.fmd, self.tod))
         self.fpdf.drawText()
         self.pglin = 4
         self.fpdf.setFont()
diff --git a/doc/ASS.rst b/doc/ASS.rst
old mode 100755
new mode 100644
index 38c3519..f6042fc
--- a/doc/ASS.rst
+++ b/doc/ASS.rst
@@ -128,7 +128,7 @@ Toolbox (AR)
 ............
 Change Asset Codes (AR)
 +++++++++++++++++++++++
-Use this routine to change asset groups and codes.
+Use this routine to change existing asset groups and codes.
 
 Interrogation (AR)
 ..................
diff --git a/doc/BKM.rst b/doc/BKM.rst
old mode 100755
new mode 100644
index dde73ca..b020686
--- a/doc/BKM.rst
+++ b/doc/BKM.rst
@@ -54,6 +54,86 @@ Use this routine to maintain booking contacts. The fields are self explanatory w
 
 + **Code** - Enter the code for the contact or blank for a new contact.
 
+Calendar (BK)
+.............
+Use this routine to display a booking's calendar showing all bookings currently entered. Double Left Clicking on an existing booking will display the booking and allow modifications and all the normal booking features as per the `Bookings (BK)`_ below. Right Clicking on an existing booking will display short deatisl of the booking. While in the calendar the following buttons are available:
+
++ **New Booking** - Selecting this button will allow the creation of a new booking as per `Bookings (BK)`_ below.
++ **Search Bookings** Selecting this button will display all the current bookings and will allow you to search and display a specific booking.
++ **Deposits List** - Selecting this button will enter the `Deposits Listing (BK)`_ routine as detailed above.
++ **Arrivals List** - Selecting this button will enter the `Arrivals Listing (BK)`_ routine as detailed above.
++ **Exit** - Select this button to exit out of the calendar.
+
+Bookings (BK)
+.............
+Use this routine to manage bookings.
+
+Booking Tab (BK)
+++++++++++++++++
+This page contains all the relevant details of the booking.
+
++ **Booking Number** - The booking number or 0 for a new booking.
++ **Type** - Select the type of booking.
++ **Group Name** - The name of the group if applicable.
++ **Number of Persons** - The number of people.
++ **Arrival (YYYYMMDD)** - The date of arrival.
++ **Departure (YYYYMMDD)** - The date of departure.
++ **Units** - Select whether to Continue with the existing booking or Edit the units booked.
+    + **Unit-Cod** - The unit's code made up of the unit type and the unit's code.
+    + **Description** - The description of the unit.
+    + **Rme** - The room code to allocate or zero for all rooms in the unit.
+    + **Rte** - The rate code to apply to this unit.
+    + **Ppl** - The number of guests.
+    + **Per** - The periods, if applicable.
+    + **Disc-%** - The discount percentage, if applicable.
+    + **Applied-Rt** - The final applicable rate or zero for no charge.
++ **Value** - The total value of the booking.
++ **Initial Deposit** - The initial deposit if applicable. If no deposit is entered the status of the booking will immediately be upgraded to confirmed.
++ **Initial Dep Due** - The last date that the initial deposit must be received by.
++ **Additional Deposit** - The additional deposit if applicable.
++ **Additional Dep Due** - The last date that the additional deposit must be received by.
++ **Account Balance** - The balance of the account. This could be a minus amount if a deposit has been received and the invoice not yet raised.
++ **Remarks** - Any additional details.
+
+Contact (BK)
+++++++++++++
+This page contains all the relevant contact details. All the fields are self explanatory with the exception of the following:
+
++ **Contact Code** - The contact's code or blank for a new contact.
+
+Booking Buttons (BK)
+++++++++++++++++++++
++ **Edit** - Select this button to alter an existing booking.
++ **Transact** - Select this button to capture a transaction. Valid transaction types are Receipt, Refund, Journal, Cancellation and Reinstatement. Some of the fields, depending on the type of transaction, will not be required.
+    + **Type** - The type of transaction.
+        + **Receipt** - Continue and enter the method, date, amount and details.
+        + **Refund** - Continue and enter the method, date, amount and details
+        + **Journal** - Continue and enter the date, amount and details. If integrated you must then enter the g/l-acc number, vat code and vat amount.
+        + **Cancel** - In the case of cancellations for confirmed and settled bookings you will be prompted to confirm the cancellation and if in the affirmative you will then be asked if a charge must levied on the cancellation. For charges continue with the amount and details of the charge.
+        + **Reinstate** - You can only re-instate a cancelled booking.
+    + **Method** - The method of the transaction. This only applies to Receipts and Refunds.
+    + **Date** - The date of the transaction.
+    + **Reference** - The transaction's reference number. This is automatic.
+    + **Amount** - The amount of the transaction.
+    + **Details** - The details of the transaction.
+    + **Acc-Num** - The general ledger account number, if integrated.
+    + **VAT Code** - The applicable VAT code.
+    + **VAT Amount** - The applicable VAT amount.
++ **Movements** - Select this button to display all movements on the account.
++ **Notes** - Select this button to maintain notes relating to this booking.
++ **Accept** - Select this button to accept the booking and to print a booking letter.
++ **Quit** - Select this button to terminate the current displayed booking.
+
+Invoices (BK)
+.............
+Use this routine to generate invoices.
+
++ **Starting Date** - The starting date.
++ **Ending Date** - The ending date.
++ **Include Queries** - Whether or not to include queries.
++ **Bookings** - Whether to generate all outstanding invoices or to selectively choose individual bookings.
++ **Template Name** - The template to use for the invoices.
+
 Reporting (BK)
 ..............
 Deposits Listing (BK)
@@ -140,6 +220,7 @@ Use this routine to produce a graph of bookings for a period not exceeding 12 mo
 
 + **Starting Period** - The starting period.
 + **Ending Period** - The ending period.
++ **Report By** - Select whether to report by beds occupied or monetary value.
 
 + **Action** - Select the parameters of the graph.
     + **Automatic** - Produce the graph for all booking statuses.
@@ -147,79 +228,3 @@ Use this routine to produce a graph of bookings for a period not exceeding 12 mo
     + **Exit** - Exit from the routine.
 + **Select Chart** - The type of graph to print. Please note that a pie chart can only be produced if a single status has been selected.
 + **Use Colour** - Select whether to use colours if pie chart or multiple statuses are selected.
-
-Calendar (BK)
-.............
-Use this routine to display a booking's calendar showing all bookings currently entered. Clicking on an existing booking will display the booking and allow modifications and all the normal booking features as per the `Bookings (BK)`_ below. While in the calendar the following buttons are available:
-
-+ **New Booking** - Selecting this button will allow the creation of a new booking as per `Bookings (BK)`_ below.
-+ **Deposits List** - Selecting this button will enter the `Deposits Listing (BK)`_ routine as detailed above.
-+ **Arrivals List** - Selecting this button will enter the `Arrivals Listing (BK)`_ routine as detailed above.
-+ **Exit** - Select this button to exit out of the calendar.
-
-Bookings (BK)
-.............
-Use this routine to manage bookings.
-
-Booking Tab (BK)
-++++++++++++++++
-This page contains all the relevant details of the booking.
-
-+ **Booking Number** - The booking number or 0 for a new booking.
-+ **Type** - Select the type of booking.
-+ **Group Name** - The name of the group if applicable.
-+ **Number of Persons** - The number of people.
-+ **Arrival (YYYYMMDD)** - The date of arrival.
-+ **Departure (YYYYMMDD)** - The date of departure.
-+ **Units** - Select whether to Continue with the existing booking or Edit the units booked.
-    + **Unit-Cod** - The unit's code made up of the unit type and the unit's code.
-    + **Description** - The description of the unit.
-    + **Rme** - The room code to allocate or zero for all rooms in the unit.
-    + **Rte** - The rate code to apply to this unit.
-    + **Ppl** - The number of guests.
-    + **Per** - The periods, if applicable.
-    + **Disc-%** - The discount percentage, if applicable.
-    + **Applied-Rt** - The final applicable rate or zero for no charge.
-+ **Value** - The total value of the booking.
-+ **Initial Deposit** - The initial deposit if applicable. If no deposit is entered the status of the booking will immediately be upgraded to confirmed.
-+ **Initial Dep Due** - The last date that the initial deposit must be received by.
-+ **Additional Deposit** - The additional deposit if applicable.
-+ **Additional Dep Due** - The last date that the additional deposit must be received by.
-+ **Account Balance** - The balance of the account. This could be a minus amount if a deposit has been received and the invoice not yet raised.
-+ **Remarks** - Any additional details.
-
-Contact (BK)
-++++++++++++
-This page contains all the relevant contact details. All the fields are self explanatory with the exception of the following:
-
-+ **Contact Code** - The contact's code or blank for a new contact.
-
-Booking Buttons (BK)
-++++++++++++++++++++
-+ **Edit** - Select this button to alter an existing booking.
-+ **Transact** - Select this button to capture a transaction. Valid transaction types are Receipt, Refund, Journal, Cancellation and Reinstatement. Some of the fields, depending on the type of transaction, will not be required.
-    + **Type** - The type of transaction.
-        + **Receipt** - Continue and enter the method, date, amount and details.
-        + **Refund** - Continue and enter the method, date, amount and details
-        + **Journal** - Continue and enter the date, amount and details. If integrated you must then enter the g/l-acc number, vat code and vat amount.
-        + **Cancel** - In the case of cancellations for confirmed and settled bookings you will be prompted to confirm the cancellation and if in the affirmative you will then be asked if a charge must levied on the cancellation. For charges continue with the amount and details of the charge.
-        + **Reinstate** - You can only re-instate a cancelled booking.
-    + **Method** - The method of the transaction. This only applies to Receipts and Refunds.
-    + **Date** - The date of the transaction.
-    + **Reference** - The transaction's reference number. This is automatic.
-    + **Amount** - The amount of the transaction.
-    + **Details** - The details of the transaction.
-    + **Acc-Num** - The general ledger account number, if integrated.
-    + **VAT Code** - The applicable VAT code.
-    + **VAT Amount** - The applicable VAT amount.
-+ **Movements** - Select this button to display all movements on the account.
-+ **Notes** - Select this button to maintain notes relating to this booking.
-+ **Accept** - Select this button to accept the booking and to print a booking letter.
-+ **Quit** - Select this button to terminate the current displayed booking.
-
-Unit and Rate Buttons (BK)
-++++++++++++++++++++++++++
-+ **Clear** - Select this button to clear all un-invoiced units.
-+ **Edit** - Select this button to edit an existing unit.
-+ **Exit** - Select this button to exit the screen.
-+ **Quit** - Select this button the quit the screen.
diff --git a/doc/BKS.rst b/doc/BKS.rst
old mode 100755
new mode 100644
diff --git a/doc/BWL.rst b/doc/BWL.rst
old mode 100755
new mode 100644
index 939c70f..a1d4a26
--- a/doc/BWL.rst
+++ b/doc/BWL.rst
@@ -85,9 +85,11 @@ The following *Buttons* are available:
 
 + **Bounce** - Use this button to enter bounce games.
 + **Teams** - Use this button to enter arranged teams.
+    **Team Size** - Enter the required team size.
+    + **Prefer Pairs** - Whether or not to replace fours with pairs. This only applies when the team size is three.
 + **Entered** - Use this button to display all entered players.
 + **Modify** - Use this button to change the player's position/ratings for this draw only.
-+ **Draw** - Use this button to make the draw once all tabs have been entered. You will have to enter the following:
++ **Draw** - Use this button to make the draw once all tabs/teams and bounce games have been entered. In the case of *Teams* if there are any tabs that have been entered and have not been allocated to teams you will be prompted to either *Generate*, *Delete* or *Exit*. If *Generate* is selected the programme will try to allocate the unallocated tabs into teams.
     + **Draw Type** - The type of draw i.e. Random or Strength v Strength.
     + **Apply Percentages** - This is only available if the basis of the draw is Combined. Select whether to apply percentages to position changes e.g. A player moving up in position would lose 10% of their rating and a player moving down in position would gain 10% of their rating.
     + **Apply History** - Whether or not to take previous draws into consideration when making the current draw.
@@ -122,20 +124,20 @@ All the tab numbers, names and ratings are stored in a relational database.
 
 When a draw is made the following takes place:
 
-+ **Required Positions** - Based on the number of entered players and the selected team size i.e. 3 or 4, we now calculate the number of skips, thirds, seconds and leads required. This takes into consideration split rinks as well.
++ **Required Positions** - Based on the number of entered players and the selected team size i.e. 3 or 4, we now calculate the number of skips, thirds, seconds and leads required. This takes split rinks into consideration as well.
 + **Ratings Only** - If only ratings are being used, i.e. no positions, the required number of players by position will be allocated by strength i.e. the required number of skips will be the highest rated players and the required number of thirds the next highest rated etc.
 + **Positions Only** - If only positions are being used, i.e. no ratings, and the required number of players, by position, is short the additional players will be randomly selected from the lower positions, in order.
-+ **Combination** - If a combination of positions and ratings is used and the required number of players, by position, is short the additional players will be the highest rated from the lower positions, in order. All players elevated to a higher position loses 10% of their rating, by position, for the current draw e.g. a third rated 18 could become a skip rated 16 or a second rated 20 could theoretically become a skip rated 16.
++ **Combination** - If a combination of positions and ratings is used and the required number of players, by position, is short the additional players will be the highest rated from the lower positions, in order. If `Apply Percentages` has been selected, all players elevated to a higher position lose 10% of their rating, by position, for the current draw e.g. a third rated 18 could become a skip rated 16 or a second rated 20 could become a skip rated 16. The reverse also applies i.e. players can gain 10%, by position, if demoted to a lower position.
 + **Draw**
     + **Random** - 5,000 *RANDOM* draws are now generated and the one with the least number of anomalies is selected.
         + **Teams** - Teams are created by randomly selecting a skip, third, second and lead. This is repeated until all players have been placed.
         + **Anomalies**
             + **When applying history** - If *Apply History* was selected the history period is the period entered on the bowls control record under *Weeks Between Draws* e.g. 4 weeks which equals 28 days.
-                + Skips that have played against each other during the history period
-                + Players that have played with the same players during the history period
-                + Players that have played in a broken rink during the history period
+                + *Skips that have played against each other during the history period*
+                + *Players that have played with the same players during the history period*
+                + *Players that have played in a broken rink during the history period*
             + **Always**
-                + Difference in team strengths
+                + *Difference in team strengths*
     + **Strength v Strength** - A single draw is generated as follows:
         + **Teams** - Teams are created by placing the highest rated skip with the highest rated third with the highest rated second with the highest rated lead. This is repeated until all players have been placed.
         + **Balance** - Teams are then paired and balanced i.e. players might be moved from one team to another to try and equalise the team strengths.
@@ -313,7 +315,9 @@ Competition Draw (BC)
 Use this routine to create a draw and, if relevant, print match cards as follows:
 
 + **Tournament, Teams and Round Robin**
-    + **Competition Code** - The relevant competition code.
+    + **Competition Code** - The relevant competition code. If the competition is a new competition and is a Round Robin competition you will have the facility to sectionalise it.
+        + **Sections** - Select Yes or No.
+        + **Entries per Section** - Enter the number of entries per section.
     + **Game Number** - The relevant game number.
     + **Game Date** - The date of the game.
     + **Pair Home with Away Skips** - This only applies to the first drawn game.
@@ -324,6 +328,9 @@ Use this routine to create a draw and, if relevant, print match cards as follows
     + **Greens** - The greens to be used, comma separated e.g. A,B,C will default to 6 rinks per green. You can default a green to seven by entering A7,B7,C which would give us 20 rinks. You can also exclude rinks by entering rinks to be used e.g. A2345,B345 which would give us 7 rinks.
     + **Group per Green** - Whether to allocate greens to groups. This only applies to the final game.
     + **Print Cards** - Whether or not to print score cards.
+    + **Card Type** - If available, select the type of scorecard to print.
+        + **Ends** - A scorecard showing all ends.
+        + **Totals** - A scorecard showing only game totals.
     + **All Cards** - If cards were selected to be printed, whether to print all cards or only selected ones.
 
 + **Knockout**
@@ -382,6 +389,8 @@ If the last game of the competition is being printed, enter the following:
 
 Results are ranked in the order of most points, largest shot difference and then least shots conceded.
 
+If the competition type is a Sectional Round Robin you will be asked whether you want to generate and print a Play-Off draw. Should you decide not to do so at this stage you can do so at another time by reprinting this report.
+
 Contact Request Forms (BC)
 ++++++++++++++++++++++++++
 Use this routine to print forms with player's missing contact details.
diff --git a/doc/CRS.rst b/doc/CRS.rst
old mode 100755
new mode 100644
diff --git a/doc/CSH.rst b/doc/CSH.rst
old mode 100755
new mode 100644
diff --git a/doc/CTL.rst b/doc/CTL.rst
old mode 100755
new mode 100644
index f4a225b..1cf62e1
--- a/doc/CTL.rst
+++ b/doc/CTL.rst
@@ -23,11 +23,11 @@ This routine is used to create or amend a system control record by entering the
 
 Company Records Maintenance
 ...........................
-This routine is used to create or amend company records, at least one company, number 1, must be created.
+This routine is used to create or amend company records, at least one company record, number 1, must be created.
 
 While most of the fields are self explanatory the following are of note:
 
-+ **E-Mail Address** - Your default email address.
++ **E-Mail Address** - The company's default email address.
 + **V.A.T. Default** - Any alphanumeric character. If the code, except **N** which is used for no V.A.T., has not previously been created you will be prompted to create one as in `V.A.T. Records Maintenance`_.
 + **Systems** - You must tick all the systems that you would like to enable otherwise they will not appear on your menu.
 + **Logo** - You can select an image file to be used as the letterhead for invoices, statements and remittance advices. this file should be a jpg file.
@@ -50,6 +50,15 @@ Use this routine to set passwords to override certain security limitations e.g.
 + **Code** - The relevant restrictions code. F1 will show existing overrides and the `All Codes` button will show all available restrictions.
 + **Password** - The password required to override this restriction.
 
+**Examples**
+
+.. csv-table::
+  :header: "System", "Code", "Description"
+  :widths: 6, 20, 50
+
+  "MST", "TarBck", "Allow Database Backup"
+  "MST", "TarRes", "Allow Database Restore"
+
 Module Passwords Listing
 ........................
 Use this routine to produce a report of the modules and passwords created using `Module Passwords Maintenance`_.
@@ -105,6 +114,16 @@ Use this routine to print a report of all changes effected on masterfile records
 + **Table Name** - Enter the table name or Enter for all tables.
 + **User Login** - Enter the user login or Enter for all users.
 
+Application Usage Report
+........................
+Use this routine to print a report of applications usage history.
+
++ **Date From** - Enter the starting date or Enter for beginning of file.
++ **Date To** - Enter the cut-off date or Enter for end of file.
++ **User Name** - Enter the user's name or Enter for all.
++ **Module** - Enter the module code or Enter for all.
++ **Date Order** - Select the date order of the report details.
+
 Financial Year End Routine
 ..........................
 Use this routine to end a financial period. This will create opening balances in the next financial period and if you elect to Finalise the period it will disable any further postings to the applicable period and any previous periods.
diff --git a/doc/DRS.rst b/doc/DRS.rst
old mode 100755
new mode 100644
diff --git a/doc/GEN.rst b/doc/GEN.rst
old mode 100755
new mode 100644
diff --git a/doc/HLP.rst b/doc/HLP.rst
old mode 100755
new mode 100644
diff --git a/doc/LON.rst b/doc/LON.rst
old mode 100755
new mode 100644
diff --git a/doc/MEM.rst b/doc/MEM.rst
old mode 100755
new mode 100644
index 0417095..39ee7ec
--- a/doc/MEM.rst
+++ b/doc/MEM.rst
@@ -255,8 +255,7 @@ Toolbox (ML)
 ............
 Transaction Reallocations (ML)
 ++++++++++++++++++++++++++++++
-Synchronise Access Control (ML)
-+++++++++++++++++++++++++++++++
+Use this routine to reallocate and age transactions.
 
 Member Records (ML)
 ...................
diff --git a/doc/QST.rst b/doc/QST.rst
old mode 100755
new mode 100644
index 3f78dcf..28c0705
--- a/doc/QST.rst
+++ b/doc/QST.rst
@@ -19,11 +19,12 @@ General Ledger
 ..............
 If you are going to use the `General Ledger` you must perform the following procedures in order:
 
-+ Create the chart of accounts using `Masterfile Records`.
-+ Create control accounts using `Control Accounts`. Select the `Populate` button to automatically populate a company's set of accounts.
-+ Capture the account's opening balances using `Opening Balances`.
-+ Print a trial balance using `Trial Balance` and ensure that your accounts balance. If not, recapture the incorrect ones.
-+ Capture the account's budgets using `Budgets` if required.
++ Create the chart of accounts using `File Maintenance -> Masterfile Records`.
+    + Select the `Populate` button to automatically populate a company's set of accounts.
++ Create control accounts using `File Maintenance -> Control Accounts`.
++ Capture account's opening balances using `Data Caspture -> Opening Balances`.
++ Print a trial balance using `Reporting -> Trial Balance` and ensure that your accounts balance. If not, recapture the incorrect ones.
++ Capture budgets using `Data Capture -> Budgets`, if required.
 
 The General Ledger system is at this stage fully functional and you can capture postings, produce basic reports and do interrogations etc.
 
@@ -31,10 +32,10 @@ Asset's Ledger
 ..............
 If you are going to use the `Asset's Register` you must at least perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
-+ Create depreciation codes using `Depreciation Codes`.
-+ Create group records using `Group Records`.
-+ Create masterfile records and take on opening balances for existing assets using `Opening Balances`.
++ Create a control record using `File Maintenance -> Control Record`.
++ Create depreciation codes using `File Maintenance -> Depreciation Codes`.
++ Create group records using `File Maintenance -> Group Records`.
++ Create masterfile records and take on opening balances for existing assets using `Data Capture -> Opening Balances`.
 
 The Asset's Register system is at this stage fully functional and you can capture payments, receipts and journal entries. Please note that new assets are captured via the data capture routines i.e. Payments and/or Journal Entries.
 
@@ -42,10 +43,10 @@ Bookings Manager
 ................
 If you are going to use the `Booking's Manager` you must at least perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
-+ Create unit records using `Unit Records`.
-+ Create rate records using `Rate Records`.
-+ Create booking letters using `Booking Letters`.
++ Create a control record using `File Maintenance -> Control Record`.
++ Create unit records using `File Maintenance -> Unit Records`.
++ Create rate records using `File Maintenance -> Rate Records`.
++ Create booking letters using `File Maintenance -> Booking Letters`.
 
 The Booking's Manager system is at this stage fully functional and you can capture bookings and booking's movements.
 
@@ -85,11 +86,11 @@ Creditor's Ledger
 .................
 If you are going to use the `Creditor's Ledger` you must perform the following procedures in order:
 
-+ Create a control record for the company using `Control Record`.
++ Create a control record for the company using `File Maintenance -> Control Record`.
 + If you elected to integrate with the General Ledger you must create the `crs_ctl` and `dis_rec` control accounts as per above.
-+ Create Creditor's accounts using `Masterfile Records`.
-+ Capture the account's opening balances using `Journals` in `Data Capture`.
-+ Print an aged analysis using `Age Analysis` and ensure that your totals balance. If not, recapture the incorrect ones.
++ Create Creditor's accounts using `File Maintenance -> Masterfile Records`.
++ Capture the account's opening balances using `Data Capture -> Journals`.
++ Print an aged analysis using `Reporting -> Age Analysis` and ensure that your totals balance. If not, recapture the incorrect ones.
 
 Please remember that if you are integrating the Creditors and General Ledger systems, the control account must balance with the age analysis.
 
@@ -101,29 +102,39 @@ Debtor's Ledger
 ...............
 If you are going to use the `Debtor's Ledger` you must perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
++ Create a control record using `File Maintenance -> Control Record`.
 + If you elected to integrate with the General Ledger you must create the `drs_ctl` and `dis_all` controls as per above.
-+ If you are going to make use of chain stores, i.e. the facility to have separate accounts for branches within a chain with a consolidated statement. You would have to create the necessary chain store records using `Chain Stores`.
-+ If you are going to group your accounts by business activity, create the necessary records using `Business Activities`.
-+ If you are going to group your accounts by business types, create the necessary records using `Business Types`.
-+ If you are going to group your accounts by area, create the necessary records using `Areas`.
++ If you are going to make use of chain stores, i.e. the facility to have separate accounts for branches within a chain with a consolidated statement. You would have to create the necessary chain store records using `File Maintenance -> Chain Stores`.
++ If you are going to group your accounts by business activity, create the necessary records using `File Maintenance -> Business Activities`.
++ If you are going to group your accounts by business types, create the necessary records using `File Maintenance -> Business Types`.
++ If you are going to group your accounts by area, create the necessary records using `File Maintenance -> Areas`.
 + If you are going to group your accounts by salesman, create the necessary records using `Salesmen`.
-+ Create Debtor's accounts using `Masterfile Records`.
-+ Capture the account's opening balances using `Journals` in `Data Capture`.
-+ Print an aged analysis using `Age Analysis` and ensure that your totals balance. If not, recapture the incorrect ones.
++ Create Debtor's accounts using `File Maintenance -> Masterfile Records`.
++ Capture the account's opening balances using `Data Capture -> Journals`.
++ Print an aged analysis using `Reporting -> Age Analysis` and ensure that your totals balance. If not, recapture the incorrect ones.
 
 Please remember that if you are integrating the Debtors and General Ledger systems, the control account must balance with the age analysis.
 
 The Debtor's Ledger system is at this stage fully functional and you can capture postings, produce basic reports and do interrogations etc.
 
+Loan's Ledger
+.............
+If you are going to use the `Loan's Ledger` you must at least perform the following procedures in order:
+
++ Create a control record using `File Maintenance -> Control Record`.
++ If you elected to integrate with the General Ledger you must create the `lon_ctl` controls as per above.
++ Create existing or new loans using `Data Capture` and just entering on the `Acc-Num` iand `LN` fields.
+
+The Loan's Ledger system is at this stage fully functional and you can capture postings, produce basic reports and do interrogations etc.
+
 Member's Ledger
 ...............
 If you are going to use the `Member's Ledger` you must at least perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
++ Create a control record using `File Maintenance -> Control Record`.
 + If you elected to integrate with the General Ledger you must create the `mem_ctl` and `mem_pen` controls as per above.
-+ Create category records using `Category Records`.
-+ Create contact records using `Contact Records`.
++ Create category records using `File Maintenance -> Category Records`.
++ Create contact records using `File Maintenance -> Contact Records`.
 
 The Member's Ledger system is at this stage fully functional and you can add members, edit member details, capture postings, produce basic reports and do interrogations etc.
 
@@ -131,9 +142,9 @@ Rental's Ledger - Standard
 ..........................
 If you are going to use the `Rental's Ledger (Standard)` you must at least perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
-+ Create premises records using `Premises Records`.
-+ Create masterfile records using `Masterfile Records`.
++ Create a control record using `File Maintenance -> Control Record`.
++ Create premises records using `File Maintenance -> Premises Records`.
++ Create masterfile records using `File Maintenance -> Masterfile Records`.
 
 The Rental's Ledger (Standard) system is at this stage fully functional and you can capture payments, receipts and journal entries.
 
@@ -141,10 +152,10 @@ Rental's Ledger - Extended
 ..........................
 If you are going to use the `Rental's Ledger (Extended)` you must at least perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
-+ Create owners records using `Owners Records`.
-+ Create premises records using `Premises Records`.
-+ Create tenants records using `Tenants Records`.
++ Create a control record using `File Maintenance -> Control Record`.
++ Create owners records using `File Maintenance -> Owners Records`.
++ Create premises records using `File Maintenance -> Premises Records`.
++ Create tenants records using `File Maintenance -> Tenants Records`.
 
 The Rental's Ledger (Standard) system is at this stage fully functional and you can capture payments, receipts and journal entries.
 
@@ -152,15 +163,15 @@ Store's Ledger
 ..............
 If you are going to use the `Store's Ledger` you must perform the following procedures in order:
 
-+ Create a control record for the company using `Control Record`.
++ Create a control record for the company using `File Maintenance -> Control Record`.
 + If you elected to integrate with the General Ledger you must create the `stk_soh` and `stk_susp` controls as per above.
-+ Create units of issue records using `Units of Issue`.
-+ Create product groups using `Product Groups`.
-+ Create stock records for the company by selecting `Masterfile Records`.
-+ Enter the current stock on hand for the company by selecting `Stock Take Returns`.
-+ Print a variance report using `Stock Take Variance Report` and ensure that all the quantities have been entered correctly. Correct any errors by redoing the previous step for the incorrect ones only.
-+ Update the stock items using `Stock Take Merge`.
-+ Print a stock on hand report using `Stock on Hand`.
++ Create units of issue records using `File Maintenance -> Units of Issue`.
++ Create product groups using `File Maintenance -> Product Groups`.
++ Create stock records for the company by selecting `File Maintenance -> Masterfile Records`.
++ Enter the current stock on hand for the company by selecting `Stock Take -> Returns`.
++ Print a variance report using `Stock Take -> Variance Report` and ensure that all the quantities have been entered correctly. Correct any errors by redoing the previous step for the incorrect ones only.
++ Update the stock items using `Stock Take -> Merge`.
++ Print a stock on hand report using `Reporting -> Stock on Hand`.
 
 Please remember that if you are integrating the Stores and General Ledger systems, the control account must balance with the stock on hand report.
 
@@ -172,7 +183,7 @@ If you are going to use `Sales Invoicing` you must perform the following procedu
 
 + Setup the Debtor's System as in 8) above ensuring that you create at least one salesman's record.
 + Setup the Store's System as in 9) above.
-+ Create a control record using `Control Record`.
++ Create a control record using `File Maintenance -> Control Record`.
 
 The Sale's Invoicing system is at this stage fully functional and you can capture invoices, credit notes, sales orders and quotations.
 
@@ -180,12 +191,12 @@ Salaries and Wages
 ..................
 If you are going to use `Salaries and Wages` you must at least perform the following procedures in order:
 
-+ Create a control record using `Control Record`.
++ Create a control record using `File Maintenance -> Control Record`.
 + If you elected to integrate with the General Ledger you must create the `wag_ctl`, `wag_slc` and `wag_sli` controls as per above.
-+ Create at least one branch record using `Branch Records`.
-+ Create at least one department record using `Department Records`.
-+ Create all necessary earnings and deduction records using `Earning and Deduction Codes`.
-+ Create employee records using `Employee Masterfile`.
++ Create at least one branch record using `File Maintenance -> Branch Records`.
++ Create at least one department record using `File Maintenance -> Department Records`.
++ Create all necessary earnings and deduction records using `File Maintenance -> Earning and Deduction Codes`.
++ Create employee records using `File Maintenance -> Employee Masterfile`.
 
 The Salaries and Wages system is at this stage fully functional and you can capture clock cards and produce payslips etc.
 
diff --git a/doc/RCA.rst b/doc/RCA.rst
old mode 100755
new mode 100644
diff --git a/doc/RTL.rst b/doc/RTL.rst
old mode 100755
new mode 100644
diff --git a/doc/SCP.rst b/doc/SCP.rst
old mode 100755
new mode 100644
diff --git a/doc/SLN.rst b/doc/SLN.rst
old mode 100755
new mode 100644
diff --git a/doc/SLS.rst b/doc/SLS.rst
old mode 100755
new mode 100644
diff --git a/doc/STR.rst b/doc/STR.rst
old mode 100755
new mode 100644
index d668685..5ac7101
--- a/doc/STR.rst
+++ b/doc/STR.rst
@@ -54,10 +54,10 @@ Use this routine to create, amend and delete store's ledger records.
     + **Description** - The description of the item.
     + **Unit of Issue** - The unit of issue code relating to the item.
     + **Units Per Pack** - The number of units making up the pack. If applicable, the price for a single item would be the purchase or selling price divided by this number.
-    + **Value Indicator** - Select the cost price value indicator as follows:
+    + **Cost Price Indicator** - Select the cost price value indicator as follows:
         + **Average** - The cost price will be the value divided by the quantity.
         + **Standard** - The cost will be a fixed cost price.
-        + **None** - The item will not have a cost print. This is normally used for goods which are not purchased and are not standard e.g. recipes, travelling, labour etc.
+        + **None** - The item will not have a cost price. This is normally used for goods which are not purchased and are not standard e.g. recipes, travelling, labour etc.
     + **VAT Code** - The default vat code for the item.
     + **Exclusive Chain Store** - If chain stores are enabled in the debtor's ledger and the item is exclusive to a Chain Store, this is the Chain Store code.
     + **Exclusive Account** - If the item is exclusive to a debtor's account, this is the debtor's account number.
@@ -78,9 +78,18 @@ Use this routine to create, amend and delete store's ledger records.
         + **Code** - The product code.
         + **Quantity** - The quantity of the item needed for the recipe.
 
+Standard Cost Prices (ST)
++++++++++++++++++++++++++
+Use this routine to create and amend product standard cost prices.
+
++ **Product Group** - The product group.
++ **Product Code** - The product code.
++ **Location** - The location code, if applicable.
++ **Cost Price** - The cost price.
+
 Fixed Selling Prices (ST)
 +++++++++++++++++++++++++
-Use this routine to create and amend product selling prices. These prices will take preference where automatic markup selling prices have been enabled.
+Use this routine to create and amend product fixed selling prices. These prices will take preference even if they are set to zero.
 
 + **Product Group** - The product group.
 + **Product Code** - The product code.
diff --git a/doc/SYS.rst b/doc/SYS.rst
old mode 100755
new mode 100644
index 9d09b61..baef518
--- a/doc/SYS.rst
+++ b/doc/SYS.rst
@@ -3,7 +3,7 @@
 ==================================
 .. _GPL: http://www.gnu.org/licenses/gpl.html
 
-:Version:   5.13
+:Version:   6.0
 :Author:    Paul Malherbe
 :Contact:   paul@tartan.co.za
 :Home:      http://www.tartan.co.za
@@ -36,7 +36,7 @@ In 2011, version 4, I dropped support for windows 9x and also replaced reportlab
 
 In 2015, version 5, I replaced PyGtk with Tkinter and ttk.
 
-In 2020, version 5.13, I dropped support for MySQL and Firebird databases.
+In 2020, version 6.0, I dropped support for MySQL and Firebird databases.
 
 .. _Python: http://www.python.org
 .. _Tkinter: http://www.python.org/topics/tkinter
@@ -47,39 +47,40 @@ In 2020, version 5.13, I dropped support for MySQL and Firebird databases.
 
 Installation Procedure
 ----------------------
-Linux and Source
-................
-Ensure that the following dependencies are installed on your system:
-
-+ python >= 2.7.5 and < 3.0.0
+Source
+.......
+Ensure that python is installed on your system:
 
-Windows also requires pywin32 >= build 216 downloaded from:
-
-    https://sourceforge.net/projects/pywin32/files/pywin32/
++ python >= 3.5
 
 The following dependencies must be installed using pip:
 
 + fpdf                  # Used to create all documents
 + pillow                # Used by fpdf and imaging
-+ pymupdf               # Used by the built-in PDF Viewer and Bulk Mail
 + pywin32               # Windows only
 
+The following dependancy should also be installed using pip:
+
++ pymupdf               # Used by the Tartan PDF Viewer/Printer and Bulk Mail
+
 Additionally, the following dependencies should also be installed using pip:
 
-+ markdown              # Bulk Mail - enable markdown format
-+ odfpy                 # ODS File Reader - file imports
++ markdown              # Bulk Mail - Enable Markdown Format
 + ofxtools              # OFX File Reader - bank statements
-+ progress              # Curses progress bar
++ openpyxl              # XLSX File Reader and Writer
++ progress              # Curses Progress Bar
 + pyaes                 # Password Manager - pm1010
-+ pycrypto              # Password Manager - pm1010
++ pycryptodome          # Password Manager - pm1010
++ pyexcel               # XLS File Reader
++ pyexcel-ods           # ODS File Reader
 + pygal                 # SVG Charts
-+ pysmb                 # Netbios file names
-+ python-escpos         # POS esc commands
-+ requests              # Web scraping
-+ send2trash            # Move files to recycle bin
++ pysmb                 # Netbios File Names
++ python-escpos         # POS Escape Commands
++ requests              # Web Scraping
++ send2trash            # Move Files to Recycle Bin
++ svglib                # SVG to PDF File Converter
++ tkcolorpicker         # Alternative to colorchooser for Tkinter
 + tkinterhtml           # HTML Viewer
-+ xlrd                  # Excel Read - file imports
-+ xlwt                  # Excel Write - file exports
 
 And, depending on your database needs:
 
@@ -87,11 +88,11 @@ And, depending on your database needs:
 
 Then download the following file from ftp://ftp.tartan.co.za
 
-+ Tartan_5.x.x.tar.gz
++ Tartan_5.x.tar.gz
 
-Extract Tartan_5.x.x.tar.gz into a directory of your choice as follows:
+Extract Tartan_5.x.tar.gz into a directory of your choice as follows:
 
-+ cd your.directory && tar -xvzf Tartan_5.x.x.tar.gz
++ cd your.directory && tar -xvzf Tartan_5.x.tar.gz
 
 Tartan should now be installed on your computer and you can continue with the `Startup Procedure`_.
 
@@ -99,9 +100,9 @@ Windows Binary
 ..............
 Download the following file from ftp://ftp.tartan.co.za or if you are in possession of a CD this is not necessary.
 
-+ Tartan_5.x.x.exe
++ Tartan_5.x.exe
 
-Install Tartan_5.x.x.exe by browsing to it and double clicking and then accept the defaults, except, agree to creating an icon on your desktop.
+Install Tartan_5.x.exe by browsing to it and double clicking and then accept the defaults, except, agree to creating an icon on your desktop.
 
 Tartan should now be installed on your computer and you can continue with the `Startup Procedure`_.
 
@@ -194,6 +195,22 @@ Whenever a report is being produced you will have the opportunity of deciding on
 + **E-Mail Address** - If available, enter the email address, if more than one, comma separate them.
 + **E-Mail Message** - If available, enter the email message as well as any additional attachments, if any.
 
+Tartan PDF Viewer
+.................
+If no external pdf viewer is entered in the preferences and pymupdf is installed the Tartan PDF viewer will be used.
+
++ **Goto** - This button will alow you to enter a page number.
++ **Zoom** - This button, depending on whether the left or right mouse button is pressed, will increase or decrease the font and page size.
++ **Menu** - This button wil display a menu with the following options:
+    + **Email** - This button, if available, will enable the emailing of the document:
+        + **From Address** - The email address of the sender.
+        + **To Address** - A comma separated list of receiving email addresses.
+    + **Print** - This button wil open a print dialog screen.
+    + **Save as..** - This button wil enable the saving of the document with a different/same name and/or a different directory.
+    + **Send to..** - This button will open the document using the system default pdf viewer e.g. Acrobat.
+    + **Help** - This button will display the various key bindings.
+    + **Exit** - This button will close the viewer. Escape can also be used.
+
 Error Messages
 ..............
 Should an error message occur and there is a file named *errors.txt* in the `Work Path` as created in `Preferences`_. Please email the file to errors@tartan.co.za after which you may delete it.
@@ -250,7 +267,7 @@ Use this routine to create or amend user's records, permissions etc.
 
 .. csv-table::
   :header: "Coy", "SS", "Prog", "Password", "Meaning"
-  :widths: 5, 5, 6, 10, 50
+  :widths: 5, 5, 6, 10, 55
 
   "0", "gl", "    ", "    ", "All G/L modules for all companies would be denied."
   "0", "gl", "2032", "    ", "G/L payments data capture for all companies would be denied."
@@ -302,10 +319,8 @@ Select this routine to export data to an external database in a chosen directory
 + **Company(s)** - Select *Single* for a single company or *Multi* for multiple companies.
 + **Company Number** - Enter the single company number to export.
 
-::
-
-    If the selected company or companies is/are linked to other companies you
-    will be asked if all linked companies should be exported.
+.. NOTE::
+    If the selected company or companies is/are linked to other companies you will be asked if all linked companies should be exported.
 
 + **Directory** - Enter the directory where the exported file must be placed.
 + **Database Name** - Enter the name of the exported file or accept the default.
@@ -360,9 +375,9 @@ Use this routine to configure Tartan, however, depending on your security level,
     + **Backup Path** - This is the path where backups of the database will be stored.
     + **Work Path** - This is the path of the work directory. All temporary files will be created in this directory.
     + **Upgrade Path** - This is the path where any upgrades will be stored.
-    + **PDF Viewer** - This is the full path of an External program used to display pdf files. The default is `Blank` for the built-in pdf viewer. External programme for LINUX is **evince** and for Windows **SumatraPDF** or  **Foxit Reader**.
-    + **Print Command** - This is the full path of the print program used to print pdf files. The LINUX default is **lpr** and Windows is **SumatraPDF**. Another recommended program for windows is **Foxit Reader**. If necessary use %p% for the printer name and %f% for the file name e.g. the print command for Sumatra could be `the-path-to\SumatraPDF.exe -print-to %p% %f%`.
-    + **Spreadsheet Reader** - This is the full path of the program used to read csv and xls file formats.
+    + **PDF Viewer** - This is the full path of an External program used to display pdf files. The default is `Blank` for the built-in pdf viewer. Suggested programme for LINUX is **evince** and for Windows **SumatraPDF** or **Foxit Reader**.
+    + **Print Command** - This is the full path of an External print program used to print pdf files. The default is `Blank` for the built-in pdf printer. Suggested LINUX default is **lpr** and Windows is **SumatraPDF**. Another recommended program for windows is **Foxit Reader**. If necessary use %p% for the printer name and %f% for the file name e.g. the print command for Sumatra could be `the-path-to\SumatraPDF.exe -print-to %p% %f%`.
+    + **Spreadsheet Reader** - This is the full path of the program used to read xlsx, xls and csv files.
     + **Screen Geometry** - This defaults to the suggested geometry for your screen. Entering a zero will achieve the same result.
     + **Screen Placement** - Where the Tartan Window must be placed on the monitor i.e. Left, Centre or Right.
     + **Show Tartan Image** - Whether to display the Tartan image on the Main Menu screen.
@@ -381,7 +396,7 @@ Use this routine to configure Tartan, however, depending on your security level,
     + **Default Font**
         + **Name** - This is the font family to be used in all other cases.
         + **Size** - This is font size to be used in all other cases.
-    + **Theme** - The theme to be used. The default theme is `clam`.
+    + **Theme** - The theme to be used. The default theme is `clam`.  To make more themes available download themes of your choice and install them in a folder named `thm` which must be in the Tartan root folder i.e. where the Tartan file ms0000.py or ms0000.exe resides.
     + **Colour Scheme** - The colour scheme to be used. The default scheme is `Red`.
     + **Normal**
         + **FG** - The normal label and button foreground colour.
diff --git a/doc/UTY.rst b/doc/UTY.rst
old mode 100755
new mode 100644
index 996644a..4285292
--- a/doc/UTY.rst
+++ b/doc/UTY.rst
@@ -129,7 +129,7 @@ In the event of Financial Statements (gl3050), if there are available Report Str
 
 Template Manager
 ................
-Use this routine to create, edit or delete templates.
+Use this routine to create, edit or delete templates. All templates hard coded into Tartan canot be altered. They can however be copied and then altered. In order to do this you would enter a new template name and then press the Copy Button.
 
 + **Name** - The name of the template.
 + **Title** - The title of the template.
diff --git a/doc/WAG.rst b/doc/WAG.rst
old mode 100755
new mode 100644
index 07ca20d..74a6d75
--- a/doc/WAG.rst
+++ b/doc/WAG.rst
@@ -46,16 +46,14 @@ Use this routine to create and amend the earnings and deduction records.
 + **Employee Portion** - Amount if the portion is a monetary value or Rate if the portion is a rate.
     + **Base** - If you have indicated that the portion is a rate, you must now indicate the code of the base of the calculation, as follows:
 
-        + **1** - X \* Normal Rate of Pay * Value
-        + **2** - Normal Pay * Value
-        + **3** - Normal Pay * Value / 100
-        + **4** - X \* Daily Rate of Pay * Value
-        + **5** - X \* Hourly Rate of Pay * Value
-        + **6** - U.I.F. Pay * Value
+        + **1** - X `times` Normal Rate of Pay `times` Value
+        + **2** - Normal Pay `times` Value
+        + **3** - Normal Pay `times` Value `divided` by 100
+        + **4** - X `times` Daily Rate of Pay `times` Value
+        + **5** - X `times` Hourly Rate of Pay `times` Value
+        + **6** - U.I.F. Pay `times` Value
         + **Where:**
             + **X** refers to a data captured period e.g. hours or days.
-            + **\*** indicates multiplication.
-            + **\/** indicates division
             + **Value** refers to the 'Value' field below.
         + **Value** - The actual amount or rate to be used in the calculations.
         + **Limit** - The maximum amount allowed e.g. U.I.F. - 116.62.
diff --git a/doc/gnugpl.html b/doc/gnugpl.html
old mode 100755
new mode 100644
diff --git a/doc/gnugpl.md b/doc/gnugpl.md
old mode 100755
new mode 100644
diff --git a/doc/gnugpl.txt b/doc/gnugpl.txt
old mode 100755
new mode 100644
diff --git a/doc/manual.css b/doc/manual.css
old mode 100755
new mode 100644
diff --git a/doc/mystylesheet b/doc/mystylesheet
old mode 100755
new mode 100644
diff --git a/drs/dr1010.py b/drs/dr1010.py
old mode 100755
new mode 100644
diff --git a/drs/dr1020.py b/drs/dr1020.py
old mode 100755
new mode 100644
diff --git a/drs/dr2010.py b/drs/dr2010.py
old mode 100755
new mode 100644
diff --git a/drs/dr2020.py b/drs/dr2020.py
old mode 100755
new mode 100644
diff --git a/drs/dr2030.py b/drs/dr2030.py
old mode 100755
new mode 100644
index 2ecc49b..1a1f022
--- a/drs/dr2030.py
+++ b/drs/dr2030.py
@@ -61,8 +61,8 @@ class dr2030(object):
             where=[("ctm_cono", "=", self.opts["conum"])], limit=1)
         for col in ("ctm_name", "ctm_add1", "ctm_add2", "ctm_add3",
                     "ctm_pcode", "ctm_regno", "ctm_taxno", "ctm_tel",
-                    "ctm_fax", "ctm_b_name", "ctm_b_ibt", "ctm_b_acno",
-                    "ctm_logo"):
+                    "ctm_fax", "ctm_b_name", "ctm_b_branch", "ctm_b_ibt",
+                    "ctm_b_acno", "ctm_logo"):
             setattr(self, "%s" % col, ctl[self.sql.ctlmst_col.index(col)])
         if "LETTERHEAD" in os.environ:
             self.ctm_logo = os.environ["LETTERHEAD"]
@@ -305,6 +305,12 @@ class dr2030(object):
         self.fpdf.drawText(x=22.5*cw, y=12.5*ld, txt=drm[col.index("drm_add2")])
         self.fpdf.drawText(x=22.5*cw, y=13.5*ld, txt=drm[col.index("drm_add3")])
         self.fpdf.drawText(x=22.5*cw, y=14.5*ld, txt=drm[col.index("drm_pcod")])
+        if self.ctm_b_name:
+            dat = "Name:    %s" % self.ctm_b_name
+            dat = "%s\nBranch:  %s" % (dat, self.ctm_b_branch)
+            dat = "%s\nCode:    %s" % (dat, self.ctm_b_ibt)
+            dat = "%s\nAccount: %s\n " % (dat, self.ctm_b_acno)
+            self.fpdf.drawText(x=22.5*cw, y=37*ld, txt=dat, ctyp="M")
         self.emadd = CCD(drm[col.index("drm_acc_email")], "TX")
         # Tables
         r1 = {
@@ -342,6 +348,10 @@ class dr2030(object):
                     [11, 1.5],
                     [12, 1.5, .8, "Total Value"],
                     [13, 1.5]]]]}
+        if self.ctm_b_name:
+            r1["rows"].extend([
+                [22, 35, [[32, 1.5, .8, "Banking Details", False]]],
+                [22, 36.5, [[32, 5.5]]]])
         doDrawTable(self.fpdf, r1, cw=cw, ld=ld, font=False)
 
     def printTotals(self, cw, ld, ica, iva):
diff --git a/drs/dr3010.py b/drs/dr3010.py
old mode 100755
new mode 100644
index 71eb39f..b13b1eb
--- a/drs/dr3010.py
+++ b/drs/dr3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class dr3010(object):
         if not drsctl:
             return
         self.fromad = drsctl["ctd_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,12 +113,9 @@ class dr3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %48s %6s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-86s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.drstrn_col
@@ -178,11 +171,9 @@ class dr3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %49s %5s" %
-            ("Debtors Ledger Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("%-90s" % ("Debtors Ledger Batch Error Listing"))
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/drs/dr3020.py b/drs/dr3020.py
old mode 100755
new mode 100644
index da892ee..25c1532
--- a/drs/dr3020.py
+++ b/drs/dr3020.py
@@ -57,8 +57,7 @@ class dr3020(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["TP", "BatchNo", "Chn", "Acc-Num", "Name", "Reference",
             "Date", "Debits", "Credits", "Tax-Amount", "T", "Remarks"]
         self.forms = [("UI", 2, False, False, True), ("Na", 7),
@@ -259,7 +258,7 @@ class dr3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Debtor's Ledger Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -288,11 +287,9 @@ class dr3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %49s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-87s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %91s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-133s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bdrs = 0
@@ -303,7 +300,6 @@ class dr3020(object):
         self.tcrs = 0
         self.tvat = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -389,17 +385,16 @@ class dr3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.totsonly == "Y":
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %21s %5s" % \
+            self.fpdf.drawText("%-38s %-7s %-2s %-41s" % \
                 ("Debtor's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+                self.sperd, "to", self.eperd))
         else:
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %67s %5s" % \
+            self.fpdf.drawText("%-38s %-7s %-2s %-87s" % \
                 ("Debtor's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+                self.sperd, "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/drs/dr3030.py b/drs/dr3030.py
old mode 100755
new mode 100644
index 3fee935..80d4208
--- a/drs/dr3030.py
+++ b/drs/dr3030.py
@@ -52,8 +52,6 @@ class dr3030(object):
         self.fromad = drsctl["ctd_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -97,13 +95,10 @@ class dr3030(object):
 
     def printReport(self, mst):
         p = ProgressBar(self.opts["mf"].body, mxs=len(mst), esc=True)
-        self.head = ("%03u %-30s %33s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-71s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.ctots = [0,0,0]
         self.gtots = [0,0,0]
-        self.pgnum = 0
         self.pglin = 999
         for seq, rec in enumerate(mst):
             p.displayProgress(seq)
@@ -118,7 +113,7 @@ class dr3030(object):
                 neg=False, zer="N")
             if not trns:
                 continue
-            if not self.pgnum:
+            if self.pglin == 999:
                 self.pageHeading(chn.disp, acno.disp, name.disp)
             else:
                 self.newAccount(chn.disp, acno.disp, name.disp)
@@ -158,12 +153,10 @@ class dr3030(object):
     def pageHeading(self, chn, acno, name):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-42s %-10s %15s %5s" % \
-            ("Debtors Transactions Due For Payment as at", self.pdatd,
-            "Page", self.pgnum))
+        self.fpdf.drawText("%-42s %-32s" % \
+            ("Debtors Transactions Due For Payment as at", self.pdatd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-19s%-10s%-1s" % \
             ("(Options: Pay Date-", self.df.t_disp[0][0][0], ")"))
diff --git a/drs/dr3040.py b/drs/dr3040.py
old mode 100755
new mode 100644
index 4c8fa44..37c0d62
--- a/drs/dr3040.py
+++ b/drs/dr3040.py
@@ -52,8 +52,6 @@ class dr3040(object):
         self.fromad = drsctl["ctd_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         return True
 
@@ -102,12 +100,10 @@ class dr3040(object):
 
     def printReport(self, mst):
         p = ProgressBar(self.opts["mf"].body, mxs=len(mst), esc=True)
-        self.head = ("%03u %-30s %13s %33s %13s %10s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-102s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.ctots = [0,0,0,0]
         self.gtots = [0,0,0,0]
-        self.pgnum = 0
         self.pglin = 999
         for num, rec in enumerate(mst):
             p.displayProgress(num)
@@ -124,7 +120,7 @@ class dr3040(object):
                 chn.work), ("drt_acno", "=", acno.work)], zer="N")
             if not trns:
                 continue
-            if not self.pgnum:
+            if self.pglin == 999:
                 self.pageHeading(chn.disp, acno.disp, name.disp)
             else:
                 self.newAccount(chn.disp, acno.disp, name.disp)
@@ -172,12 +168,10 @@ class dr3040(object):
     def pageHeading(self, chn, acno, name):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-40s %-7s %52s %5s" %
-            ("Debtors Outstanding Transactions as at", self.curdd,
-            "Page", self.pgnum))
+        self.fpdf.drawText("%-38s %-7s" %
+            ("Debtors Outstanding Transactions as at", self.curdd))
         self.fpdf.setFont()
         self.pglin = 3
         self.newAccount(chn, acno, name)
diff --git a/drs/dr3050.py b/drs/dr3050.py
old mode 100755
new mode 100644
index 7999bbb..d122d6b
--- a/drs/dr3050.py
+++ b/drs/dr3050.py
@@ -53,8 +53,7 @@ class dr3050(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Chn", "Acc-Num", "Name", "Cr-Balance", "Tot-Balance",
             "Current", "30-Days", "60-Days", "90-Days", "Over-90-Days"]
         self.forms = [("UI", 3), ("NA", 7), ("NA", 30)] + [("SD", 13.2)] * 7
@@ -203,7 +202,7 @@ class dr3050(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Debtor's Age Analaysis up to %s" %
             self.opts["period"])
         self.expheads.append("Options: Activity %s Type %s Low-Bal %s "\
@@ -239,16 +238,13 @@ class dr3050(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
-        self.head2 = "Debtor's Age Analysis up to %s%s" % (self.opts["period"],
-            "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+        self.head1 = self.head
+        self.head2 = "Debtor's Age Analysis up to %s" % self.opts["period"]
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -343,10 +339,9 @@ class dr3050(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText("(%s%-3s%3s%6s%-3s%3s%9s%-8s%3s%13s%1s%3s%17s%s)" %
             ("Options: Activity: ", self.drsact, "", "Type: ", self.drstyp, "",
@@ -357,7 +352,7 @@ class dr3050(object):
             "%-13s %-13s" % ("Chn", "Acc-Num", "Name", "  Cr-Balance",
             " Tot-Balance", "     Current", "     30-Days", "     60-Days",
             "     90-Days", "Over-90-Days"))
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.setFont()
         self.pglin = 8
 
diff --git a/drs/dr3060.py b/drs/dr3060.py
old mode 100755
new mode 100644
index 04f9dd3..6a81090
--- a/drs/dr3060.py
+++ b/drs/dr3060.py
@@ -193,11 +193,8 @@ class dr3060(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %141s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-179s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -263,12 +260,10 @@ class dr3060(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-32s %-10s %133s %5s" % \
-            ("Debtors Ledger Master List as at", self.sysdtd,
-                "Page", self.pgnum))
+        self.fpdf.drawText("%-32s %-150s" % \
+            ("Debtors Ledger Master List as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("(%-15s%1s)" % ("Options: Sort-",
             self.df.t_disp[0][0][0]))
@@ -281,7 +276,7 @@ class dr3060(object):
             det = "Orders Contact Details"
         self.fpdf.drawText("%-3s %-7s %-30s %-30s %-4s %-12s %-12s %-40s "\
             "%-7s %-3s %-3s %-3s %1s %-3s %-3s %-7s" % ("Chn", "Acc-Num",
-            "Name", "Address", "Code", "Tel-Number", "Fax-Number", "%s" % det,
+            "Name", "Address", "Code", "Tel-Number", "Fax-Number", det,
             "Deliver", "Rep", "Act", "Typ", "P", "Rft","Rjt","C-Limit"))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
diff --git a/drs/dr3080.py b/drs/dr3080.py
old mode 100755
new mode 100644
diff --git a/drs/dr3090.py b/drs/dr3090.py
old mode 100755
new mode 100644
index 723dad5..7fa3602
--- a/drs/dr3090.py
+++ b/drs/dr3090.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, TartanLabel, ProgressBar, Sql, TartanDialog
 from tartanFunctions import doPrinter, getModName, getSingleRecords, showError
 from tartanWork import labels
@@ -45,10 +44,6 @@ class dr3090(object):
         drsctl = gc.getCtl("drsctl", self.opts["conum"])
         if not drsctl:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/drs/dr3100.py b/drs/dr3100.py
old mode 100755
new mode 100644
diff --git a/drs/dr3110.py b/drs/dr3110.py
old mode 100755
new mode 100644
index e8afc84..3bf2dd2
--- a/drs/dr3110.py
+++ b/drs/dr3110.py
@@ -53,8 +53,7 @@ class dr3110(object):
             (t[0], t[1], t[2], t[3], t[4])
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.forms = [("UI",3), ("NA",7), ("NA",30), ("Na",3), ("UA",3),
             ("UA",3)] + [("SI",10)] * 12
         self.stots = [0] * 12
@@ -148,7 +147,7 @@ class dr3110(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(acs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Debtor's Sales History for the 12 Months "\
             "Period to %s" % self.coffd)
         self.expheads.append("Options:- Ignore-Zeros: %s" % self.zer)
@@ -191,16 +190,14 @@ class dr3110(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
+        self.head1 = self.head
         self.head2 = "Debtor's Sales History for the 12 Months "\
-            "Period to %s%s" % (self.coffd, "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+            "Period to %s" % self.coffd
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         self.repno = None
         self.actno = None
@@ -298,10 +295,9 @@ class dr3110(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText("(%-23s %1s %-12s %1s)" % \
             ("Options:- Ignore Zeros:", self.zer, "By Salesman:", self.rep))
@@ -345,7 +341,7 @@ class dr3110(object):
         else:
             self.fpdf.drawText("%-3s %-7s %-30s %-3s %3s %3s %s" % ("Chn",
                 "Acc-Num", "Name", "Rep", "Act", "Typ", self.mthhead))
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.setFont()
         self.pglin = 10
 
@@ -379,7 +375,7 @@ class dr3110(object):
                 salesd = "%s" % a.disp
             mchart.append(a.work)
         self.mchart.append(mchart)
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         if self.rep == "Y":
             self.fpdf.drawText("%7s %3s %-30s %-3s %-3s %s" % ("", "",
                 desc, "", "", salesd))
diff --git a/drs/dr3120.py b/drs/dr3120.py
old mode 100755
new mode 100644
index 9b51122..1c66402
--- a/drs/dr3120.py
+++ b/drs/dr3120.py
@@ -48,8 +48,6 @@ class dr3120(object):
         self.fromad = drsctl["ctd_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -99,11 +97,9 @@ class dr3120(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %11s %34s %10s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-95s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.tots = [0,0]
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -156,12 +152,10 @@ class dr3120(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-36s %-7s %45s %5s" % \
-            ("Debtors Interest to be Charged up to",
-            self.df.t_disp[0][0][0], "Page", self.pgnum))
+        self.fpdf.drawText("%-36s %-7s" %
+            ("Debtors Interest to be Charged up to", self.df.t_disp[0][0][0]))
         self.fpdf.drawText()
         self.fpdf.drawText("%-18s%-10s%-3s%-7s%-2s%-1s" % \
             ("(Options: Cut-Off-", self.df.t_disp[0][0][0], "",
diff --git a/drs/dr4010.py b/drs/dr4010.py
old mode 100755
new mode 100644
index 2efb445..0c8dfff
--- a/drs/dr4010.py
+++ b/drs/dr4010.py
@@ -58,8 +58,6 @@ class dr4010(object):
         self.paidup = "N"
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         return True
 
@@ -561,7 +559,6 @@ class dr4010(object):
                     else:
                         dat.append(rec[col.index(nam)])
                 data.append(dat)
-            gtots = ["drt_tramt", "paid", "balance"]
             if repprt:
                 prtdia = False
             else:
@@ -569,8 +566,8 @@ class dr4010(object):
             rp = RepPrt(self.opts["mf"], conum=self.opts["conum"],
                 conam=self.opts["conam"], name=self.__class__.__name__,
                 ttype="D", tables=data, heads=heads, cols=cols,
-                trtp=["drt_type", drtrtp], gtots=gtots, prtdia=prtdia,
-                repprt=repprt, repeml=repeml, fromad=self.fromad)
+                trtp=["drt_type", drtrtp], prtdia=prtdia, repprt=repprt,
+                repeml=repeml, fromad=self.fromad)
         self.df.setWidget(self.df.mstFrame, state="show")
         self.df.enableButtonsTags(state=state)
 
diff --git a/drs/dr6010.py b/drs/dr6010.py
old mode 100755
new mode 100644
diff --git a/drs/dr6020.py b/drs/dr6020.py
old mode 100755
new mode 100644
diff --git a/drs/dr6030.py b/drs/dr6030.py
old mode 100755
new mode 100644
diff --git a/drs/dr6040.py b/drs/dr6040.py
old mode 100755
new mode 100644
diff --git a/drs/drc110.py b/drs/drc110.py
old mode 100755
new mode 100644
diff --git a/drs/drc210.py b/drs/drc210.py
old mode 100755
new mode 100644
diff --git a/drs/drc220.py b/drs/drc220.py
old mode 100755
new mode 100644
index 1d7c1b7..0ad8ad0
--- a/drs/drc220.py
+++ b/drs/drc220.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog
 from tartanFunctions import showError
 
@@ -49,10 +48,6 @@ class drc220(object):
                 "Chain Stores are Not Enabled")
             return
         self.fromad = drsctl["ctd_emadd"]
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/drs/drc310.py b/drs/drc310.py
old mode 100755
new mode 100644
diff --git a/drs/drc320.py b/drs/drc320.py
old mode 100755
new mode 100644
index 3ceba8c..72e1621
--- a/drs/drc320.py
+++ b/drs/drc320.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog
 
 class drc320(object):
@@ -44,10 +43,6 @@ class drc320(object):
         if not drsctl:
             return
         self.fromad = drsctl["ctd_emadd"]
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/drs/drc410.py b/drs/drc410.py
old mode 100755
new mode 100644
diff --git a/drs/drc420.py b/drs/drc420.py
old mode 100755
new mode 100644
index 5582c45..97c28be
--- a/drs/drc420.py
+++ b/drs/drc420.py
@@ -50,7 +50,7 @@ class drc420(object):
         tnd = ((self.doEnd,"Y"), )
         txt = (self.closeProcess, )
         self.df = TartanDialog(self.opts["mf"], eflds=[], tend=tnd,
-            txit=txt, view=("N","V"), mail=("Y","N"))
+            txit=txt, view=("Y","V"), mail=("Y","N"))
 
     def doEnd(self):
         recs = self.sql.getRec("drsdel", order="del_code")
diff --git a/drs/drc510.py b/drs/drc510.py
old mode 100755
new mode 100644
diff --git a/drs/drc520.py b/drs/drc520.py
old mode 100755
new mode 100644
index 52b8bb9..b491a8f
--- a/drs/drc520.py
+++ b/drs/drc520.py
@@ -41,10 +41,7 @@ class drc520(object):
         if self.sql.error:
             return
         t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.mtyp = "S"
         return True
 
@@ -83,10 +80,8 @@ class drc520(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%-24s %37s %5s %6s" % \
-            ("Tartan Systems", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%-75s" % "Tartan Systems"
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         old_sys = recs[0][0]
         for num, dat in enumerate(recs):
@@ -128,15 +123,13 @@ class drc520(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.sys.work == "INV":
             desc = "Debtors  Invoice  Messages as at"
         else:
             desc = "Debtors Statement Messages as at"
-        self.fpdf.drawText("%-32s %-10s %25s %5s" % \
-            (desc, self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-32s %-42s" % (desc, self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-14s %-3s %-10s %-30s" % ("", "Num",
             "", "Message"))
diff --git a/drs/drc610.py b/drs/drc610.py
old mode 100755
new mode 100644
diff --git a/drs/drc710.py b/drs/drc710.py
old mode 100755
new mode 100644
diff --git a/gen/gl1010.py b/gen/gl1010.py
old mode 100755
new mode 100644
index 0f8802d..916f243
--- a/gen/gl1010.py
+++ b/gen/gl1010.py
@@ -117,8 +117,10 @@ class gl1010(object):
                 "Generate a Chart of Accounts with Accompanying Control "\
                 "Records and Financial Statement Report. This Only Applies "\
                 "to Unpopulated (NEW) Ledgers."],
-            ("Accept",None,self.doAccept,0,("T",0,2),(("T",0,0),("T",0,1))),
-            ("Cancel",None,self.doCancel,0,("T",0,2),(("T",0,0),("T",0,1))),
+            ("Accept",None,self.doAccept,0,(("T",0,2),("T",0,5)),
+                (("T",0,0),("T",0,1))),
+            ("Cancel",None,self.doCancel,0,(("T",0,2),("T",0,5)),
+                (("T",0,0),("T",0,1))),
             ("Quit",None,self.doQuit,1,None,None,"",1,4)]
         tnd = ((self.doEnd,"y"), )
         txt = (self.doQuit, )
diff --git a/gen/gl1020.py b/gen/gl1020.py
old mode 100755
new mode 100644
diff --git a/gen/gl1030.py b/gen/gl1030.py
old mode 100755
new mode 100644
diff --git a/gen/gl1040.py b/gen/gl1040.py
old mode 100755
new mode 100644
diff --git a/gen/gl1050.py b/gen/gl1050.py
old mode 100755
new mode 100644
diff --git a/gen/gl1060.py b/gen/gl1060.py
old mode 100755
new mode 100644
diff --git a/gen/gl2010.py b/gen/gl2010.py
old mode 100755
new mode 100644
diff --git a/gen/gl2020.py b/gen/gl2020.py
old mode 100755
new mode 100644
diff --git a/gen/gl2030.py b/gen/gl2030.py
old mode 100755
new mode 100644
diff --git a/gen/gl2040.py b/gen/gl2040.py
old mode 100755
new mode 100644
diff --git a/gen/gl2050.py b/gen/gl2050.py
old mode 100755
new mode 100644
diff --git a/gen/gl3010.py b/gen/gl3010.py
old mode 100755
new mode 100644
index f19256e..13be126
--- a/gen/gl3010.py
+++ b/gen/gl3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, MyFpdf, ProgressBar, Sql, TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
 from tartanWork import gltrtp
@@ -41,9 +40,6 @@ class gl3010(object):
             prog=self.__class__.__name__)
         if self.sql.error:
             return
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -111,11 +107,9 @@ class gl3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %38s %10s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-80s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.gentrn_col
@@ -173,11 +167,9 @@ class gl3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %43s %5s" %
-            ("General Ledger Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("General Ledger Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/gen/gl3020.py b/gen/gl3020.py
old mode 100755
new mode 100644
index 04bfa67..1493f1d
--- a/gen/gl3020.py
+++ b/gen/gl3020.py
@@ -54,8 +54,7 @@ class gl3020(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["TP", "BatchNo", "Coy", "Acc-Num", "Description",
             "Reference", "Date", "Debits", "Credits", "Tax-Amount", "T",
             "Remarks"]
@@ -312,7 +311,7 @@ class gl3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("General Ledger Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -341,11 +340,11 @@ class gl3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = "%03i %-37s %57s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm)
+            self.head = "%03i %-95s" % (self.opts["conum"],
+                self.opts["conam"])
         else:
-            self.head = "%03i %-41s %97s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm)
+            self.head = "%03i %-138s" % (self.opts["conum"],
+                self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bdrs = 0
@@ -356,7 +355,6 @@ class gl3020(object):
         self.tcrs = 0
         self.tvat = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -441,17 +439,16 @@ class gl3020(object):
 
     def pageHeading(self):
         self.fpdf.add_page()
-        self.pgnum += 1
         self.fpdf.drawText(self.head, font=["B"])
         self.fpdf.drawText()
         if self.totsonly == "Y":
-            self.fpdf.drawText("%-37s %-7s %-2s %-7s %36s %5s" %
+            self.fpdf.drawText("%-37s %-7s %-2s %-50s" %
                 ("General Ledger Audit Trail for Period", self.sperd,
-                "to", self.eperd, "Page", self.pgnum))
+                "to", self.eperd))
         else:
-            self.fpdf.drawText("%-37s %-7s %-2s %-7s %80s %5s" %
+            self.fpdf.drawText("%-37s %-7s %-2s %-94s" %
                 ("General Ledger Audit Trail for Period", self.sperd,
-                "to", self.eperd, "Page", self.pgnum))
+                "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/gen/gl3030.py b/gen/gl3030.py
old mode 100755
new mode 100644
index 5e5e4e3..8cf8cc7
--- a/gen/gl3030.py
+++ b/gen/gl3030.py
@@ -47,8 +47,7 @@ class gl3030(object):
         t = time.localtime()
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Coy", "Acc-Num", "Description", "Date", "Reference",
             "Typ", "Batch", "Remarks", "Debit", "Credit", "Balance"]
         self.forms = [("UI", 3), ("UI", 7), ("NA", 30), ("D1", 10),
@@ -177,7 +176,7 @@ class gl3030(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("General Ledger Account Statements for Period "\
             "%s to %s" % (self.sdate.disp, self.edate.disp))
         self.expcolsh = [self.colsh]
@@ -194,6 +193,8 @@ class gl3030(object):
                 self.sdate.work), ("glt_curdt", "<=", self.edate.work)],
                 order="glt_acno, glt_curdt, glt_trdt, glt_type, glt_refno, "\
                 "glt_batch")
+            if self.pages == "Y" and (acctot or trn):
+                self.expdatas.append(["PAGE", [self.expheads, self.expcolsh]])
             prt = False
             if acctot:
                 prt = True
@@ -210,7 +211,7 @@ class gl3030(object):
                     self.acno.work, self.desc.work, trdt.work, refno.work,
                     gltrtp[(trtp.work - 1)][0], batch.work, detail.work,
                     dbt.work, crt.work, acctot]])
-            if prt:
+            if self.pages == "N" and prt:
                 self.expdatas.append(["BLANK"])
         p.closeProgress()
         doWriteExport(xtype=self.df.repprt[1], name=expnam,
@@ -218,11 +219,9 @@ class gl3030(object):
             datas=self.expdatas, rcdic=self.opts["mf"].rcdic)
 
     def printReport(self, recs):
-        self.pgnum = 0
         self.pglin = 999
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %59s %10s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-101s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         for seq, dat in enumerate(recs):
             p.displayProgress(seq)
@@ -235,7 +234,7 @@ class gl3030(object):
                 order="glt_acno, glt_curdt, glt_trdt, glt_type, glt_refno, "\
                 "glt_batch")
             if acctot or trn:
-                if not self.pgnum or self.pages == "Y":
+                if self.pglin == 999 or self.pages == "Y":
                     self.pageHeading()
                 else:
                     self.newAccount()
@@ -318,7 +317,6 @@ class gl3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.sacno == 0:
@@ -329,10 +327,9 @@ class gl3030(object):
             eacc = "Last"
         else:
             eacc = self.df.t_disp[0][0][2]
-        self.fpdf.drawText("%-38s %-7s %2s %-7s %-10s %7s %2s %7s %11s %5s" % \
+        self.fpdf.drawText("%-38s %-7s %2s %-7s %-10s %7s %2s %-25s" % \
             ("General Ledger Statements for Accounts", sacc, "to", eacc,
-            "for Period", self.sdate.disp, "to", self.edate.disp, "Page",
-            self.pgnum))
+            "for Period", self.sdate.disp, "to", self.edate.disp))
         self.fpdf.setFont()
         self.pglin = 3
         self.newAccount()
diff --git a/gen/gl3040.py b/gen/gl3040.py
old mode 100755
new mode 100644
index f8cefb2..749371b
--- a/gen/gl3040.py
+++ b/gen/gl3040.py
@@ -171,6 +171,25 @@ class gl3040(object):
                 vals[2].work, vals[3].work, vals[4].work]])
         p.closeProgress()
         self.grandTotal()
+        a = open("name", "w")
+        a.write(expnam)
+        a.close()
+        a = open("heads", "w")
+        for l in expheads:
+            a.write(l + "\n")
+        a.close()
+        a = open("colsh", "w")
+        for l in expcolsh:
+            a.write(str(l) + "\n")
+        a.close()
+        a = open("forms", "w")
+        for l in expforms:
+            a.write(str(l) + "\n")
+        a.close()
+        a = open("datas", "w")
+        for l in self.expdatas:
+            a.write(str(l) + "\n")
+        a.close()
         doWriteExport(xtype=self.repprt[1], name=expnam,
             heads=expheads, colsh=expcolsh, forms=expforms,
             datas=self.expdatas, rcdic=self.opts["mf"].rcdic)
@@ -194,7 +213,7 @@ class gl3040(object):
                 (sdate.disp, edate.disp)
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if "args" not in self.opts or "noprint" in self.opts["args"]:
-            self.fpdf = MyFpdf(name=self.__class__.__name__, head=80, foot=True)
+            self.fpdf = MyFpdf(name=self.__class__.__name__, head=80)
         self.pglin = 999
         for num, rec in enumerate(recs):
             p.displayProgress(num)
diff --git a/gen/gl3050.py b/gen/gl3050.py
old mode 100755
new mode 100644
index 1e0cda7..e550be6
--- a/gen/gl3050.py
+++ b/gen/gl3050.py
@@ -176,7 +176,7 @@ class gl3050(object):
             view = None
             mail = None
         else:
-            var = ["",0,"S","N","N",1,"N","V","","","B","Y","Y","Y"]
+            var = ["",0,"S","N","N",1,"N","V","","","B","Y","N","Y"]
             view = ("Y", "V")
             mail = ("Y", "N")
         fld = (
@@ -978,8 +978,7 @@ Custom  - Customised Report"""),
                 self.expforms.append(self.titles[col[0]][1:])
         self.expdatas = []
         self.counter = 0
-        p = ProgressBar(self.opts["mf"].body, mxs=len(self.allfields),
-            esc=True)
+        p = ProgressBar(self.opts["mf"].body, mxs=len(self.allfields), esc=True)
         for num, dat in enumerate(self.allfields):
             p.displayProgress(num)
             if dat[6] < self.counter:
@@ -1245,8 +1244,7 @@ Custom  - Customised Report"""),
             self.width = self.lhead
         if "args" not in self.opts or "noprint" in self.opts["args"] or \
                 "stream" in self.opts["args"]:
-            self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.width,
-                foot=True)
+            self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.width)
         self.pgnum = 0
         self.pglin = 999
         self.achart = []
@@ -1746,7 +1744,7 @@ Custom  - Customised Report"""),
                     else:
                         start = 1
                     if line[1] == "B":
-                        expcolsh[0][start] = ""
+                        expcolsh[0][start][0] = ""
                         expcolsh[1][start] = ""
                         expcolsh[1][start + 1] = ""
                         expcolsh[1][start + 2] = ""
diff --git a/gen/gl3060.py b/gen/gl3060.py
old mode 100755
new mode 100644
diff --git a/gen/gl3070.py b/gen/gl3070.py
old mode 100755
new mode 100644
diff --git a/gen/gl3080.py b/gen/gl3080.py
old mode 100755
new mode 100644
index 54a881f..f749a8d
--- a/gen/gl3080.py
+++ b/gen/gl3080.py
@@ -40,11 +40,9 @@ class gl3080(object):
             "gentrn", "genrct"], prog=self.__class__.__name__)
         if self.sql.error:
             return
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.s_per = int(self.opts["period"][1][0] / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
+        t = time.localtime()
         self.c_per = (t[0] * 100) + t[1]
         return True
 
@@ -140,8 +138,8 @@ class gl3080(object):
     def printReport(self):
         p = ProgressBar(self.opts["mf"].body,
             mxs=(len(self.pays) + len(self.recs) + len(self.imps)))
-        self.head = ("%03u %-30s" % (self.opts["conum"], self.opts["conam"]))
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=90, foot=True)
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=90)
         self.pglin = 999
         self.tot_chq = 0
         self.tot_dep = 0
diff --git a/gen/gl3090.py b/gen/gl3090.py
old mode 100755
new mode 100644
diff --git a/gen/gl4010.py b/gen/gl4010.py
old mode 100755
new mode 100644
index 1c38697..b79b465
--- a/gen/gl4010.py
+++ b/gen/gl4010.py
@@ -43,10 +43,7 @@ class gl4010(object):
         if self.sql.error:
             return
         t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.i_per = int(self.opts["period"][1][0] / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
         df = self.e_per - self.i_per - 87
@@ -357,6 +354,7 @@ class gl4010(object):
             view=("Y","V"), mail=("Y","N"))
         self.pr.mstFrame.wait_window()
         self.df.setWidget(self.df.mstFrame, state="show")
+        self.df.focusField("T", 2, 1)
 
     def doPrtSel(self, frt, pag, r, c, p, i, w):
         self.sel = w
@@ -370,8 +368,7 @@ class gl4010(object):
 
     def doPrtEnd(self):
         self.pr.closeProcess()
-        self.head = ("%03u %-30s %57s %10s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-99s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.pgnum = 0
         self.pglin = 999
@@ -463,9 +460,8 @@ class gl4010(object):
                         acctot, detail))
                 RepPrt(self.opts["mf"], name=self.__class__.__name__,
                     conum=self.opts["conum"], conam=self.opts["conam"],
-                    tables=data, heads=heads, cols=cols, gtots=["debit",
-                    "credit"], repprt=self.pr.repprt, repeml=self.pr.repeml,
-                    ttype="D")
+                    tables=data, heads=heads, cols=cols, ttype="D",
+                    repprt=self.pr.repprt, repeml=self.pr.repeml)
 
     def doPrtExit(self):
         self.pr.closeProcess()
diff --git a/gen/gl4020.py b/gen/gl4020.py
old mode 100755
new mode 100644
index 061b373..8643c00
--- a/gen/gl4020.py
+++ b/gen/gl4020.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from operator import itemgetter
 from TartanClasses import ASD, GetCtl, ScrollGrid, SplashScreen, Sql, SRec
 from TartanClasses import TartanDialog
@@ -63,9 +62,6 @@ class gl4020(object):
             self.cons = False
         else:
             self.cons = True
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.s_per = int(self.opts["period"][1][0] / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
         if self.opts["period"][0]:
diff --git a/gen/gl6010.py b/gen/gl6010.py
old mode 100755
new mode 100644
diff --git a/gen/gl6020.py b/gen/gl6020.py
old mode 100755
new mode 100644
diff --git a/gen/gl6030.py b/gen/gl6030.py
old mode 100755
new mode 100644
index 6cfc276..27ccd5a
--- a/gen/gl6030.py
+++ b/gen/gl6030.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, Sql, TartanDialog
 from tartanFunctions import getModName, doPrinter
 
@@ -140,10 +139,6 @@ class gl6030(object):
             prog=self.__class__.__name__)
         if self.sql.error:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.start = self.opts["period"][1][0]
         self.s_per = int(self.start / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
@@ -562,10 +557,8 @@ class gl6030(object):
         else:
             self.gsl_bal = 0.00
             self.sln_bal = 0.00
-        head = ("%03u %-30s %2s %33s %3s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        head = "%03u %-78s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=head)
-        self.pgnum = 0
         self.pglin = 999
         self.pageHeading(head)
         if self.arint == "Y":
@@ -672,12 +665,11 @@ class gl6030(object):
     def pageHeading(self, desc=None):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(desc)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-47s %-7s %20s %5s" % \
+        self.fpdf.drawText("%-47s %-7s" %
             ("General Ledger Integrated Controls up to Period",
-            self.df.t_disp[0][0][0], "Page", self.pgnum))
+            self.df.t_disp[0][0][0]))
         self.fpdf.drawText()
         self.fpdf.drawText("%-24s %-29s %-16s %-20s" % ("Description",
             "Control Account", "Ledger", "Difference"))
diff --git a/gen/gl6040.py b/gen/gl6040.py
old mode 100755
new mode 100644
index 41d9460..0bfbca7
--- a/gen/gl6040.py
+++ b/gen/gl6040.py
@@ -24,19 +24,17 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, MyFpdf, Sql, TartanDialog
 from tartanFunctions import getModName, doPrinter
 
 class gl6040(object):
     def __init__(self, **opts):
         self.opts = opts
-        if self.getAccounts():
-            self.setVariables()
+        if self.setVariables():
             self.mainProcess()
             self.opts["mf"].startLoop()
 
-    def getAccounts(self):
+    def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["ctlmst", "genint", "genbal",
             "gentrn"], prog=self.__class__.__name__)
         if self.sql.error:
@@ -52,14 +50,8 @@ class gl6040(object):
                 self.opts["conum"])], limit=1)
             if acn:
                 self.accs.append([acc[0], acc[1], acn[0]])
-        return True
-
-    def setVariables(self):
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.s_per = int(self.opts["period"][1][0] / 100)
+        return True
 
     def mainProcess(self):
         self.tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
@@ -82,10 +74,8 @@ class gl6040(object):
         self.doExit()
 
     def printReport(self):
-        self.head = ("%03u %-30s %2s %35s %3s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-80s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         for acc in self.accs:
             if self.pglin > self.fpdf.lpp:
@@ -148,14 +138,13 @@ class gl6040(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-40s %-20s %15s %5s" % \
-            ("General Ledger Integrated Controls as at ",
-            self.df.t_disp[0][0][0], "Page", self.pgnum))
+        self.fpdf.drawText("%-40s %-10s" %
+            ("General Ledger Integrated Controls as at",
+            self.df.t_disp[0][0][0]))
         self.fpdf.drawText()
-        self.fpdf.drawText("%-3s %-32s%15s %15s %15s" % \
+        self.fpdf.drawText("%-3s %-32s%15s %15s %15s" %
             ("Coy", "Company-Name", "Balance-1", "Balance-2", "Difference"))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
diff --git a/gen/gl6050.py b/gen/gl6050.py
old mode 100755
new mode 100644
diff --git a/gen/gl6060.py b/gen/gl6060.py
old mode 100755
new mode 100644
diff --git a/gen/gl6070.py b/gen/gl6070.py
old mode 100755
new mode 100644
diff --git a/gen/gl6080.py b/gen/gl6080.py
old mode 100755
new mode 100644
diff --git a/gen/glc110.py b/gen/glc110.py
old mode 100755
new mode 100644
diff --git a/gen/glc210.py b/gen/glc210.py
old mode 100755
new mode 100644
diff --git a/lon/ln1010.py b/lon/ln1010.py
old mode 100755
new mode 100644
diff --git a/lon/ln2010.py b/lon/ln2010.py
old mode 100755
new mode 100644
diff --git a/lon/ln2020.py b/lon/ln2020.py
old mode 100755
new mode 100644
diff --git a/lon/ln2030.py b/lon/ln2030.py
old mode 100755
new mode 100644
diff --git a/lon/ln3010.py b/lon/ln3010.py
old mode 100755
new mode 100644
index e0d659f..aeb1b36
--- a/lon/ln3010.py
+++ b/lon/ln3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class ln3010(object):
         if not lonctl:
             return
         self.fromad = lonctl["cln_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,12 +113,9 @@ class ln3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %39s %6s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-77s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.lontrn_col
@@ -179,11 +172,9 @@ class ln3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-31s %42s %5s" %
-            ("Staff Loans Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("Staff Loans Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/lon/ln3020.py b/lon/ln3020.py
old mode 100755
new mode 100644
index 215905a..58b8d68
--- a/lon/ln3020.py
+++ b/lon/ln3020.py
@@ -49,11 +49,9 @@ class ln3020(object):
             return
         self.fromad = lonctl["cln_emadd"]
         t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
             (t[0], t[1], t[2], t[3], t[4])
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["TP", "BatchNo", "Acc-Num", "Ln", "Reference",
             "Trans-Date", "Remarks", "Debits", "Credits"]
         self.forms = [("UI", 2), ("NA", 7), ("UA", 7), ("UI", 2),
@@ -173,7 +171,7 @@ class ln3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Loans's Ledger Audit Trail for Period "\
             "%s to %s" % (self.sdatd, self.edatd))
         self.expcolsh = [self.colsh]
@@ -203,13 +201,7 @@ class ln3020(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        if self.totsonly == "Y":
-            self.head = ("%03u %-30s %48s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
-        else:
-            self.head = ("%03u %-30s %48s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-86s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bdrs = 0
@@ -218,7 +210,6 @@ class ln3020(object):
         self.tdrs = 0
         self.tcrs = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -295,19 +286,10 @@ class ln3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText(
-            "%-34s %-7s %2s %-7s %30s %5s" % \
-            ("Loans Audit Trail for Period",
-            self.sdatd, "to", self.edatd, "Page", self.pgnum))
-        else:
-            self.fpdf.drawText(
-            "%-34s %-7s %-2s %-7s %30s %5s" % \
-            ("Loans Audit Trail for Period",
-            self.sdatd, "to", self.edatd, "Page", self.pgnum))
+        self.fpdf.drawText("%-28s %-7s %2s %-7s" % \
+            ("Loans Audit Trail for Period", self.sdatd, "to", self.edatd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/lon/ln3030.py b/lon/ln3030.py
old mode 100755
new mode 100644
index 1c7a726..aa9e52a
--- a/lon/ln3030.py
+++ b/lon/ln3030.py
@@ -48,8 +48,6 @@ class ln3030(object):
         self.fromad = lonctl["cln_emadd"]
         t = time.localtime()
         self.curdt = int(((t[0] * 10000) + (t[1] * 100) + t[2]) / 100)
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -103,16 +101,13 @@ class ln3030(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.pend == "Y":
-            self.head = ("%03u %-30s %80s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-118s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %52s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-90s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         ltot = 0
         itot = 0
         ntot = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, rec in enumerate(recs):
             p.displayProgress(num)
@@ -178,15 +173,9 @@ class ln3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.pend == "Y":
-            txt = "%-29s %-7s %78s %5s" % ("Loans Balances Listing as at",
-                self.cdte, "Page", self.pgnum)
-        else:
-            txt = "%-29s %-7s %50s %5s" % ("Loans Balances Listing as at",
-                self.cdte, "Page", self.pgnum)
+        txt = "%-29s %-7s" % ("Loans Balances Listing as at", self.cdte)
         self.fpdf.drawText(txt=txt)
         self.fpdf.drawText()
         self.fpdf.drawText("%s %s  %s %s)" % \
diff --git a/lon/ln3040.py b/lon/ln3040.py
old mode 100755
new mode 100644
diff --git a/lon/ln3050.py b/lon/ln3050.py
old mode 100755
new mode 100644
diff --git a/lon/ln4010.py b/lon/ln4010.py
old mode 100755
new mode 100644
index ebbf9e0..3962283
--- a/lon/ln4010.py
+++ b/lon/ln4010.py
@@ -52,8 +52,6 @@ class ln4010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.history = "N"
         return True
 
@@ -287,11 +285,8 @@ class ln4010(object):
     def doPrintOption(self, opt):
         if opt == "N":
             return
-        self.head = ("%03u %-30s %47s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-89s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt != "T":
             self.pageHeading()
@@ -381,12 +376,10 @@ class ln4010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-31s %-10s %44s %5s" % \
-            ("Staff Loans Interrogation as at", self.sysdtd, "Page",
-            self.pgnum))
+        self.fpdf.drawText("%-31s %-10s" %
+            ("Staff Loans Interrogation as at", self.sysdtd))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 6
diff --git a/lon/ln6010.py b/lon/ln6010.py
old mode 100755
new mode 100644
diff --git a/lon/lnc110.py b/lon/lnc110.py
old mode 100755
new mode 100644
diff --git a/mem/ml1010.py b/mem/ml1010.py
old mode 100755
new mode 100644
index a9a33a3..59d53a1
--- a/mem/ml1010.py
+++ b/mem/ml1010.py
@@ -120,11 +120,11 @@ class ml1010(object):
         self.sysdt = ((t[0] * 10000) + (t[1] * 100) + t[2])
         if dateDiff(self.tme, self.sysdt, "months") > 1:
             showError(self.opts["mf"].body, "Date Error",
-                """More than Two Month Ends Have Not Been Run!!!
+                """More than Two Month Ends Have Not Been Run.
 
-This Could Have Serious Date and Transaction Issues!!!
+This Could Have Serious Date and Transaction Issues.
 
-Please Contact your Accounts Manager and Report This!!!""")
+Please Contact your Accounts Manager and Report This.""")
         self.new = False
         self.edit = False
         self.idnum = 0
@@ -454,7 +454,7 @@ Please Contact your Accounts Manager and Report This!!!""")
         self.surname = self.memmst[self.sql.memmst_col.index("mlm_surname")]
         names = self.memmst[self.sql.memmst_col.index("mlm_names")]
         gender = self.memmst[self.sql.memmst_col.index("mlm_gender")]
-        nation = self.memmst[self.sql.memmst_col.index("mlm_nation")]
+        self.nation = self.memmst[self.sql.memmst_col.index("mlm_nation")]
         self.dob = self.memmst[self.sql.memmst_col.index("mlm_dob")]
         self.idnum = self.memmst[self.sql.memmst_col.index("mlm_idnum")]
         self.occup = self.memmst[self.sql.memmst_col.index("mlm_occup")]
@@ -472,8 +472,8 @@ Please Contact your Accounts Manager and Report This!!!""")
         self.df.loadEntry("T", 0, 3, data=self.surname)
         self.df.loadEntry("T", 1, 0, data=names)
         self.df.loadEntry("T", 1, 1, data=gender)
-        self.df.loadEntry("T", 1, 2, data=nation)
-        self.df.loadEntry("T", 1, 3, data=countries[nation][1])
+        self.df.loadEntry("T", 1, 2, data=self.nation)
+        self.df.loadEntry("T", 1, 3, data=countries[self.nation][1])
         self.df.loadEntry("T", 1, 4, data=self.dob)
         if not self.dob:
             self.age = 0
@@ -1401,7 +1401,7 @@ Names:   %s
         if jpg:
             self.image = ShowImage(self.df.nb.Page7, jpg,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"],
-                msiz=int(self.opts["mf"].bh*.75))
+                msiz=int(self.opts["mf"].body.winfo_height()*.75))
 
     def doPrint(self):
         mess = "Select the Required Print Option."
@@ -1500,7 +1500,7 @@ Names:   %s
         fld = (
             (("T",0,0,0),"INA",20,"Template Name - Front","",
                 self.cftpl,"Y",self.doPrtTpl,tpm,None,("notblank",)),
-            (("T",0,0,0),"INA",20,"Template Name - Back","",
+            (("T",0,1,0),"INA",20,"Template Name - Back","",
                 self.cbtpl,"Y",self.doPrtTpl,tpm,None,None))
         self.pf = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=fld, tend=((self.doPrtEnd,"N"),), view=("N","V"))
@@ -1546,7 +1546,7 @@ Names:   %s
             self.df.setWidget(self.df.mstFrame, state="show")
             img = ShowImage(self.df.nb.Page7, jpg,
                 wrkdir=self.opts["mf"].rcdic["wrkdir"],
-                msiz=int(self.opts["mf"].bh*.75), crop=True)
+                msiz=int(self.opts["mf"].body.winfo_height()*.75), crop=True)
             tmp = os.path.join(self.opts["mf"].rcdic["wrkdir"], "temp.jpg")
             siz = img.roi.size
             img.roi.save(tmp)
diff --git a/mem/ml2010.py b/mem/ml2010.py
old mode 100755
new mode 100644
diff --git a/mem/ml2020.py b/mem/ml2020.py
old mode 100755
new mode 100644
diff --git a/mem/ml3010.py b/mem/ml3010.py
old mode 100755
new mode 100644
index 1337a63..fd92a43
--- a/mem/ml3010.py
+++ b/mem/ml3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class ml3010(object):
         if not memctl:
             return
         self.fromad = memctl["mcm_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,12 +113,9 @@ class ml3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %43s %6s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-81s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.memtrn_col
@@ -176,11 +169,9 @@ class ml3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-36s %42s %5s" %
-            ("Members Ledger Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("Members Ledger Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/mem/ml3020.py b/mem/ml3020.py
old mode 100755
new mode 100644
index 25a18b1..a63749e
--- a/mem/ml3020.py
+++ b/mem/ml3020.py
@@ -76,8 +76,6 @@ class ml3020(object):
             t[1], t[2], t[3], t[4], self.__class__.__name__)
         self.tit = ("%03i %s" % (self.opts["conum"], self.opts["conam"]),
             "Member's Ledger Audit Trail (%s)" % self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
         self.colsh = ["TP", "BatchNo", "Mem-No", "Name", "Reference",
             "Date", "Debits", "Credits", "Tax-Amount", "T", "Remarks"]
         self.forms = [("UI", 2, False, False, True), ("Na", 7),
@@ -228,7 +226,8 @@ class ml3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Member's Ledger Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -257,11 +256,9 @@ class ml3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %49s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-87s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %91s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-133s" % (self.opts["conum"], self.opts["conam"])
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
@@ -274,7 +271,6 @@ class ml3020(object):
         self.tcrs = 0
         self.tvat = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -355,17 +351,11 @@ class ml3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %21s %5s" % \
-                ("Member's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
-        else:
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %67s %5s" % \
-                ("Member's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+        self.fpdf.drawText("%-38s %-7s %-2s %-7s" %
+            ("Member's Ledger Audit Trail for Period",
+            self.sperd, "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
@@ -455,7 +445,7 @@ class ml3020(object):
     def grandTotal(self):
         tot = [0, 0, 0, 0, 0]
         if self.repprt[2] == "export":
-            for x, t in enumerate(mltrtp):
+            for x in range(len(mltrtp)):
                 tot[0] = float(ASD(tot[0]) + ASD(self.gdr[x]))
                 tot[1] = float(ASD(tot[1]) + ASD(self.gcr[x]))
                 tot[2] = float(ASD(tot[2]) + ASD(self.gvt[x]))
@@ -466,7 +456,7 @@ class ml3020(object):
             return
         self.totind = "Y"
         self.pageHeading()
-        for x in range(0, len(mltrtp)):
+        for x, t in enumerate(mltrtp):
             qt = CCD(self.gqt[x], "SI", 8)
             dr = CCD(self.gdr[x], "SD", 13.2)
             cr = CCD(self.gcr[x], "SD", 13.2)
diff --git a/mem/ml3030.py b/mem/ml3030.py
old mode 100755
new mode 100644
index 8ed8f90..bf4d2d0
--- a/mem/ml3030.py
+++ b/mem/ml3030.py
@@ -50,8 +50,7 @@ class ml3030(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Mem-No", "Member", "Cr-Balance", "Tot-Balance",
             "Current", "30-Days", "60-Days", "90-Days", "Over-90-Days"]
         self.forms = [("UI", 6), ("NA", 30)] + [("SD", 13.2)] * 7
@@ -257,7 +256,7 @@ class ml3030(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Members Age Analysis up to %s" %
             self.opts["period"])
         self.expheads.append(self.getOptions())
@@ -290,17 +289,14 @@ class ml3030(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
-        self.head2 = "Members Age Analysis up to %s%s" % (self.opts["period"],
-            "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11  # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+        self.head1 = self.head
+        self.head2 = "Members Age Analysis up to %s" % self.opts["period"]
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -365,10 +361,9 @@ class ml3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText(self.getOptions())
         self.fpdf.drawText()
@@ -376,7 +371,7 @@ class ml3030(object):
             "%-13s" % ("Mem-No", "Member", "  Cr-Balance", " Tot-Balance",
             "     Current", "     30-Days", "     60-Days", "     90-Days",
             "Over-90-Days"))
-        self.fpdf.underLine(txt=self.head1)
+        self.fpdf.underLine(txt=self.head2)
         self.fpdf.setFont()
         self.pglin = 8
 
diff --git a/mem/ml3040.py b/mem/ml3040.py
old mode 100755
new mode 100644
diff --git a/mem/ml3050.py b/mem/ml3050.py
old mode 100755
new mode 100644
diff --git a/mem/ml3060.py b/mem/ml3060.py
old mode 100755
new mode 100644
index fd8c662..6e4c015
--- a/mem/ml3060.py
+++ b/mem/ml3060.py
@@ -69,8 +69,7 @@ class ml3060(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
             (t[0], t[1], t[2], t[3], t[4])
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Mem-No", "Titles", "Inits", "Surname", "Actions",
             "Category", "Action-Dte", "Operator", "Start-Date", " End-Date",
             "Last-Date"]
@@ -110,7 +109,7 @@ class ml3060(object):
             (("T",0,1,0),"Id1",10,"Starting Date","",
                 self.sysdtw,"Y",self.doStartDate,None,None,None),
             (("T",0,2,0),"ID1",10,"Ending   Date","Ending Date",
-                self.sysdtw,"Y",self.doEndDate,None,None,None),
+                self.sysdtw,"Y",self.doEndDate,None,None,("notzero",)),
             (("T",0,3,0),("IRB",self.ctyp),0,"Change Type","",
                 "A","Y",self.doChgTyp,None,None,None),
             (("T",0,4,0),("IRB",self.catg),0,"Category","",
@@ -136,7 +135,7 @@ class ml3060(object):
     def doEndDate(self, frt, pag, r, c, p, i, w):
         if w < self.start.work:
             return "Invalid End Date, Before Start Date"
-        self.end = CCD(w, "d1", 10)
+        self.end = CCD(w, "D1", 10)
         if self.reptyp == "P":
             self.chgtyp = "A"
             self.cat = None
@@ -195,11 +194,13 @@ class ml3060(object):
         whr = [("chg_tab", "=", "memcat")]
         if self.reptyp == "P":
             whr.append(("chg_dte", "=", self.dte))
-        elif self.start.work:
-            whr.append(("chg_dte", "between", (self.start.work * 1000000),
-                (self.end.work * 1000000) + 999999))
         else:
-            whr.append(("chg_dte", "<=", (self.end.work * 1000000) + 999999))
+            end = str((self.end.work * 1000000) + 999999)
+            if self.start.work:
+                start = str(self.start.work * 1000000)
+                whr.append(("chg_dte", "between", start, end))
+            else:
+                whr.append(("chg_dte", "<=", end))
         if self.chgtyp != "A":
             whr.append(("chg_act", "=", self.chgtyp))
         if self.cat:
@@ -225,7 +226,7 @@ class ml3060(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(chg), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Members Category Changes between %s and %s" %
             (self.start.disp, self.end.disp))
         self.expheads.append(self.getOptions())
@@ -258,9 +259,7 @@ class ml3060(object):
 
     def printReport(self, chg):
         p = ProgressBar(self.opts["mf"].body, mxs=len(chg), esc=True)
-        self.head = ("%03u %-30s %27s %33s %46s %10s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=154)
         self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(chg):
@@ -318,7 +317,7 @@ class ml3060(object):
             act = "Changed"
         else:
             act = "Unknown"
-        dte = data[self.sql.chglog_col.index("chg_dte")]
+        dte = int(data[self.sql.chglog_col.index("chg_dte")])
         dte = CCD(int(dte / 1000000), "D1", 10)
         usr = CCD(data[self.sql.chglog_col.index("chg_usr")], "NA", 20)
         old = CCD(data[self.sql.chglog_col.index("chg_old")], "d1", 10)
@@ -354,7 +353,7 @@ class ml3060(object):
             "%10s %10s" % ("Mem-No", "Titles", "Inits", "Surname", "Actions",
             "Category", "Action-Dte", "Operator", "Start-Date", " End-Date",
             "Last-Date"))
-        self.fpdf.underLine(txt=self.head)
+        self.fpdf.underLine(txt="X"*154)
         self.fpdf.setFont()
         self.pglin = 8
 
diff --git a/mem/ml3070.py b/mem/ml3070.py
old mode 100755
new mode 100644
diff --git a/mem/ml3080.py b/mem/ml3080.py
old mode 100755
new mode 100644
diff --git a/mem/ml3090.py b/mem/ml3090.py
old mode 100755
new mode 100644
index 45d2624..34e99c0
--- a/mem/ml3090.py
+++ b/mem/ml3090.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import CCD, GetCtl, Sql, TartanDialog
 from tartanFunctions import askChoice, sendMail, showError
 from tartanWork import countries
@@ -64,12 +63,6 @@ class ml3090(object):
         memctl = gc.getCtl("memctl", self.opts["conum"])
         if not memctl:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
-            t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
         return True
 
     def mainProcess(self):
@@ -82,7 +75,7 @@ class ml3090(object):
                 ("mcc_code", "", 0, "Cd"),
                 ("mcc_desc", "", 0, "Description", "Y")),
             "where": [("mcc_cono", "=", self.opts["conum"])],
-            "whera": [["T", "mcc_type", 2]],
+            "whera": [["T", "mcc_type", 0]],
             "order": "mcc_code",
             "size": (400, 600)}
         mlm = {
diff --git a/mem/ml3100.py b/mem/ml3100.py
old mode 100755
new mode 100644
diff --git a/mem/ml3110.py b/mem/ml3110.py
old mode 100755
new mode 100644
index 6ebaf68..a489df6
--- a/mem/ml3110.py
+++ b/mem/ml3110.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, TartanLabel, ProgressBar, Sql, TartanDialog
 from tartanFunctions import doPrinter, getModName, showError
 from tartanWork import labels
@@ -45,10 +44,6 @@ class ml3110(object):
         memctl = gc.getCtl("memctl", self.opts["conum"])
         if not memctl:
             return
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/mem/ml3120.py b/mem/ml3120.py
old mode 100755
new mode 100644
diff --git a/mem/ml6010.py b/mem/ml6010.py
old mode 100755
new mode 100644
diff --git a/mem/mlc110.py b/mem/mlc110.py
old mode 100755
new mode 100644
diff --git a/mem/mlc210.py b/mem/mlc210.py
old mode 100755
new mode 100644
diff --git a/mem/mlc310.py b/mem/mlc310.py
old mode 100755
new mode 100644
diff --git a/mem/mlc410.py b/mem/mlc410.py
old mode 100755
new mode 100644
diff --git a/mem/mlm010.py b/mem/mlm010.py
old mode 100755
new mode 100644
diff --git a/ms0000.py b/ms0000.py
index f41e294..d10e88f 100755
--- a/ms0000.py
+++ b/ms0000.py
@@ -45,14 +45,14 @@ if "TARVER" in os.environ:
     temp = tuple(os.environ["TARVER"].split("."))
     VERSION = (int(temp[0]), int(temp[1].rstrip()))
 else:
-    VERSION = (5, 13)
+    VERSION = (6, 0)
     os.environ["TARVER"] = "%s.%s" % VERSION
 
 class ms0000(object):
     def __init__(self, opts, args):
         self.cv = [VERSION, "%s.%s" % VERSION]
         default = [
-            ("altered", False),
+            ("altered", True),
             ("bpwd", ""),
             ("conum", None),
             ("debug", False),
@@ -77,7 +77,7 @@ class ms0000(object):
             setattr(self, arg, val)
         for o, v in opts:
             if o in ("-a", "--altered"):
-                self.altered = True
+                self.altered = False
             if o in ("-b", "--bpwd"):
                 self.bpwd = v
             elif o in ("-c", "--conum"):
@@ -146,9 +146,6 @@ class ms0000(object):
                 self.xdisplay = False
             elif o in ("-z", "--zerobar"):
                 self.zerobar = True
-        if self.script:
-            exec("import %s" % self.script)
-            self.doExit(dbm=False)
         if self.output:
             # Redirect stdout
             for pid in range(1000):
@@ -164,6 +161,9 @@ class ms0000(object):
                         break
                 except:
                     pass
+        if self.script:
+            exec("import %s" % self.script)
+            self.doExit(dbm=False)
         if self.help:
             print("""
 Tartan Systems Help
@@ -171,7 +171,7 @@ Tartan Systems Help
 Usage:      python ms0000.py [options]
 
 Options:
-            -a, --altered           Check for Altered Tables
+            -a, --altered           Toggle Check for Altered Tables
             -b, --bpwd=             The backup password
             -c, --conum=            The company number
             -d, --debug             Enter debug/trace mode
@@ -202,7 +202,7 @@ Options:
             elif not self.user:
                 print("xdisplay False but No User Name")
                 self.doExit(dbm=False)
-        # Check for required modules are installed
+        # Check that required modules are installed
         mods = [
             ("fpdf", "fpdf", "__version__"),
             ("PIL", "pillow", "__version__")]
@@ -220,35 +220,38 @@ Options:
             if errs:
                 self.doExit(dbm=False)
         else:
-            # Print/Display installed versions
+            # Print/Display all dependancies
             nm = platform.uname()
             print("%-16s: %s" % ("Tartan", self.cv[1]))
             print("%-16s: %s, %s, %s" % ("O/System", nm[0], nm[2], nm[4]))
-            print("%-16s: %s" % ("python", sys.version.split()[0]))
+            if sys.maxsize > 2**32:
+                py = "python 64bit"
+            else:
+                py = "python 32bit"
+            print("%-16s: %s" % (py, sys.version.split()[0]))
             from TartanClasses import tk
             print("%-16s: %s" % ("tcl/tk",
                 tk.Tcl().eval("info patchlevel")))
             mods.extend([
-                ("Crypto", "pycryptodome", "__version__"),
-                ("escpos", "python-escpos", ("version", "version")),
+                ("sqlite3", "pysqlite", "version"),
+                ("sqlite3", "sqlite3", "sqlite_version"),
                 ("fitz", "pymupdf", "version"),
                 ("markdown", "markdown", "__version__"),
                 ("ofxtools", "ofxtools", "__version__"),
+                ("openpyxl", "openpyxl", "__version__"),
                 ("progress", "progress", "__version__"),
                 ("psycopg2", "psycopg2", "__version__"),
                 ("pyaes", "pyaes", "VERSION"),
-                ("pyexcel_ods", "pyexcel-ods", None),
                 ("pygal", "pygal", "__version__"),
+                ("Crypto", "pycryptodome", "__version__"),
+                ("pyexcel", "pyexcel", "__version__"),
+                ("pyexcel_ods", "pyexcel-ods", None),
+                ("smb", "pysmb", None),
                 ("requests", "requests", "__version__"),
                 ("send2trash", "send2trash", None),
-                ("smb", "pysmb", None),
-                ("sqlite3", "pysqlite", "version"),
-                ("sqlite3", "sqlite3", "sqlite_version"),
                 ("svglib", "svglib", ("svglib", "__version__")),
                 ("tkcolorpicker", "tkcolorpicker", None),
-                ("tkinterhtml", "tkinterhtml", None),
-                ("xlrd", "xlrd", "__VERSION__"),
-                ("xlwt", "xlwt", "__VERSION__")])
+                ("tkinterhtml", "tkinterhtml", None)])
             for mod in mods:
                 ver = chkMod(mod[0])
                 if not ver:
@@ -274,10 +277,10 @@ Options:
         if self.debug:
             # Set trace mode
             import trace
+            igd = [sys.prefix, sys.exec_prefix]
             igm = ["__init__"]
             if self.exclude:
                 igm.extend(self.exclude)
-            igd = [sys.prefix, sys.exec_prefix]
             os.environ["TARTANDB"] = "1"
             self.tracer = trace.Trace(ignoredirs=igd, ignoremods=igm,
                 trace=1, count=0)
@@ -309,7 +312,6 @@ Options:
                 if self.mf.rcdic == "error":
                     self.doExit(dbm=False)
                 self.mf.dbm = None
-                self.mf.window.deiconify()
                 cfg = TartanConfig(self.mf, rcfile=self.rcfile,
                     rcdic=self.rcdic, level=9)
                 if not cfg.rcfile:
@@ -322,16 +324,17 @@ Options:
             if self.mf.rcdic == "error":
                 self.doExit(dbm=False)
         if self.xdisplay:
+            # Display the main title
             titl = "%s - (%s - %s@%s)" % (main, self.rcdic["dbase"],
                 self.rcdic["dbname"], self.rcdic["dbhost"])
             self.mf.window.title(titl)
             self.mf.head.configure(text="Tartan Systems")
         # Try connecting to the database and create if missing
-        self.db = Dbase(rcdic=self.rcdic, screen=self.mf.body)
-        if self.db.err:
+        self.dbm = Dbase(rcdic=self.rcdic, screen=self.mf.body)
+        if self.dbm.err:
             self.doExit(dbm=False)
-        self.mf.dbm = self.db
-        chk = self.db.checkDbase()
+        self.mf.dbm = self.dbm
+        chk = self.dbm.checkDbase()
         if chk not in (True, False):
             showError(self.mf.window, "Database", chk)
             self.doExit()
@@ -353,11 +356,11 @@ Options:
                     ("-p", self.rcdic["dbpwd"]),
                     ("-v", self.cv[1]),
                     ("-x", True)]
-                DBCreate(dbm=self.db, opts=opts)
+                DBCreate(dbm=self.dbm, opts=opts)
                 self.tarUpd(True)
         if not self.nocheck:
             # Open the database
-            self.db.openDbase()
+            self.dbm.openDbase()
             # Check for ctlsys and if missing call msc110
             err = self.doCheckSys()
             if not err:
@@ -367,7 +370,10 @@ Options:
                 # If error, exit
                 self.doExit()
             # Close dbase
-            self.db.closeDbase()
+            self.dbm.closeDbase()
+        if not self.program or self.program != "tarUpd":
+            # Check Tartan version and File Formats
+            self.doVersionCheck()
         if self.user:
             # Check if user details supplied are valid
             self.userReadCheck(user=self.user["name"], pwd=self.user["pwd"],
@@ -381,9 +387,6 @@ Options:
         if not self.user:
             # Exit if not valid user
             self.doExit()
-        if not self.program or self.program != "tarUpd":
-            # Check tartan version
-            self.doVersionCheck()
         if self.query:
             # Excecute sql query
             if self.user["lvl"] == 9:
@@ -392,7 +395,7 @@ Options:
                 err = "Invalid Security Level"
             if err:
                 if self.xdisplay:
-                    showError(self.mf.body, "Data Base Error",
+                    showError(self.mf.window, "Data Base Error",
                         "\nDbCommand Error: %s\n" % err)
                 else:
                     print("Data Base Error", "DbCommand Error: %s\n" % err)
@@ -414,12 +417,10 @@ Options:
                             found = True
                             break
             if found:
-                if self.xdisplay and self.program != "ps2010":
-                    self.mf.window.deiconify()
                 self.execCommand(mod[0], self.program, mod[4], rtn=self.tcode,
                     menu=False)
             else:
-                print("Invalid Module (%s) or Missing Options e,g, "\
+                print("Invalid Module (%s) or Missing Options e.g. "\
                     "(-c, -f or -t)" % self.program)
             self.doExit()
         if self.itoggle:
@@ -438,9 +439,8 @@ Options:
         self.tarmen = TartanMenu(mf=self.mf, usr=self.user["name"],
             men=self.usrmen, mod=self.usrmod, lvl=self.user["lvl"],
             cmd=self.execCommand, img=self.image)
-        if not self.doVersionCheck():
-            # Check for notes
-            self.checkNotes()
+        # Check for notes
+        self.checkNotes()
         # Display the tartan menu
         self.tarmen.drawMenu()
 
@@ -465,9 +465,83 @@ Options:
         self.tarmen = None
         self.email = None
 
+    def doVersionCheck(self):
+        if self.xdisplay:
+            scrn = self.mf.window
+        else:
+            scrn = "text"
+        self.dbm.openDbase()
+        sql = Sql(self.dbm, ["ftable", "ffield", "verupd"])
+        chk = sql.getRec("verupd", limit=1)
+        if not chk:
+            showError(scrn, "Version Error", "Missing verupd Table")
+            self.doExit()
+        v = chk[0].split(".")
+        ov = (int(v[0]), int(v[1].rstrip()))
+        if ov < (5, 5):
+            showError(scrn, "Version Error",
+                """The Version of the Data, %s.%s, is too Old.
+
+Please follow the upgrade instructions at http://www.tartan.co.za/Downloads
+
+or
+
+Email paul@tartan.co.za, with your version number, for assistance.""" % ov)
+            self.doExit()
+        if ov > self.cv[0]:
+            self.dbm.closeDbase()
+            ok = askQuestion(scrn, "Version Error",
+                """Your Version of TARTAN (%s) Is Older than the File Formats!
+
+Do You Want to Upgrade TARTAN Now?""" % self.cv[1], default="yes")
+            if ok == "yes":
+                self.sysUpd()
+            self.doExit()
+        err = bool(ov != self.cv[0])
+        chg = False
+        if not err and self.altered:
+            # Check for Altered Tables
+            for tb in tabdic:
+                for ext in ("fld", "idx"):
+                    lines = tabdic[tb][ext]
+                    f1 = []
+                    for line in lines:
+                        f1.append(line)
+                    if ext == "fld":
+                        fle = sql.getRec("ffield", where=[("ff_tabl",
+                            "=", tb)], order="ff_seq")
+                        f2 = []
+                        for f in fle:
+                            tp = [int(f[1]), f[2], f[3], float(f[4])]
+                            tp.extend(f[5:])
+                            f2.append(tp)
+                    else:
+                        fle = sql.getRec("ftable", where=[("ft_tabl",
+                            "=", tb)], order="ft_seq")
+                        f2 = []
+                        for f in fle:
+                            tp = [f[1], int(f[2]), f[3]]
+                            for t in f[4:]:
+                                if t:
+                                    tp.append(t)
+                            f2.append(tp)
+                    if f1 != f2:
+                        chg = True
+                        break
+        self.dbm.closeDbase()
+        if chg or err:
+            ok = askQuestion(scrn, "Version Error",
+                """Your File Formats Need Updating,
+
+Do You Want to Update Your Files?""", default="yes")
+            if ok == "yes":
+                self.tarUpd(True)
+            else:
+                self.doExit()
+
     def userLogin(self):
-        if not self.db.dbopen:
-            self.db.openDbase()
+        if not self.dbm.dbopen:
+            self.dbm.openDbase()
             dbopend = True
         else:
             dbopend = False
@@ -475,7 +549,7 @@ Options:
             self.userReadCheck()
             if self.user and not self.user["pwd"]:
                 if dbopend:
-                    self.db.closeDbase()
+                    self.dbm.closeDbase()
                 return
         if self.user:
             login = self.user["name"]
@@ -500,7 +574,7 @@ Options:
         self.loop = True
         self.mf.startLoop()
         if dbopend:
-            self.db.closeDbase()
+            self.dbm.closeDbase()
 
     def usrNam(self, frt, pag, r, c, p, i, w):
         self.userReadCheck(w)
@@ -530,12 +604,12 @@ Options:
         self.mf.closeLoop()
 
     def userReadCheck(self, user=None, userchk=False, pwd=None, pwdchk=False):
-        if not self.db.dbopen:
-            self.db.openDbase()
+        if not self.dbm.dbopen:
+            self.dbm.openDbase()
             dbopend = True
         else:
             dbopend = False
-        sql = Sql(self.db, ["ctlmst", "ctlpwu", "ctlpwm"], prog="ms0000")
+        sql = Sql(self.dbm, ["ctlmst", "ctlpwu", "ctlpwm"], prog="ms0000")
         if not user:
             chk = sql.getRec("ctlpwu")
             if len(chk) == 1:
@@ -544,7 +618,7 @@ Options:
             limit=1)
         if userchk:
             if dbopend:
-                self.db.closeDbase()
+                self.dbm.closeDbase()
             return usr
         if not usr:
             self.user = {}
@@ -633,7 +707,7 @@ Options:
                             nop.remove([sss, mod])
             # Generate dictionary of financial companies
             self.fcoy = {}
-            sql = Sql(self.db, ["ctlmst", "ctlynd"], prog="ms0000")
+            sql = Sql(self.dbm, ["ctlmst", "ctlynd"], prog="ms0000")
             jon = "Left outer join ctlynd on cye_cono=ctm_cono"
             col = ["ctm_cono", "max(cye_period)"]
             grp = "ctm_cono"
@@ -673,7 +747,7 @@ Options:
                 if add:
                     self.usrmod.append(mod)
         if dbopend:
-            self.db.closeDbase()
+            self.dbm.closeDbase()
 
     def userCheckPwd(self, pwd):
         try:
@@ -718,25 +792,16 @@ Options:
 
     def execCommand(self, typ, prg, tit="", rtn=None, menu=True, password=True):
         if menu:
+            self.tarmen.closeMenu()
             if self.program and prg == "ps2010":
                 self.mf.window.iconify()
-            self.tarmen.closeMenu()
-        if prg not in ("sysUpd", "sysEnd"):
-            if prg == "tarUpd":
-                vtype = "upd"
-            else:
-                vtype = "chk"
-            if self.doVersionCheck(vtype):
-                if menu:
-                    self.tarmen.drawMenu()
-                return
         if rtn is not None:
             try:
                 rtn = int(rtn)
             except:
                 rtn = None
-        if not self.db.dbopen:
-            self.db.openDbase()
+        if not self.dbm.dbopen:
+            self.dbm.openDbase()
             dbopend = True
         else:
             dbopend = False
@@ -767,12 +832,12 @@ System --> Change Password""")
                                 self.mf.head, self.mf.body, self.mf.status):
                             wgt.destroy()
                     showException(self.mf.body, self.rcdic["wrkdir"],
-                        "Function %s Error %s" % (prg, err), dbm=self.db)
+                        "Function %s Error %s" % (prg, err), dbm=self.dbm)
                 else:
                     showException(None, self.rcdic["wrkdir"],
-                        "Function %s Error" % prg, dbm=self.db)
+                        "Function %s Error" % prg, dbm=self.dbm)
                 if dbopend:
-                    self.db.closeDbase()
+                    self.dbm.closeDbase()
                 self.doExit()
         elif typ[0] == "P":
             self.mf.updateStatus("")
@@ -809,7 +874,7 @@ System --> Change Password""")
                             if per == (None, None, None):
                                 error = True
                             elif rtn and per[2] == "Y":
-                                showError(self.mf.body, "Period Error",
+                                showError(self.mf.window, "Period Error",
                                     "This Period Has Already Been Finalised")
                                 error = True
                             else:
@@ -823,7 +888,7 @@ System --> Change Password""")
                         if not self.conum:
                             error = True
                     if mcoy and self.conum != mcoy:
-                        showError(self.mf.body, "Company Error",
+                        showError(self.mf.window, "Company Error",
                             "This Company, Module Combination "\
                             "is Not Allowed for This User")
                         error = True
@@ -850,12 +915,12 @@ System --> Change Password""")
         if dbopend:
             try:
                 # Rollback any uncommitted transactions
-                self.db.rollbackDbase()
+                self.dbm.rollbackDbase()
             except:
                 pass
             try:
                 # Close the database
-                self.db.closeDbase()
+                self.dbm.closeDbase()
             except:
                 pass
         if menu:
@@ -866,8 +931,9 @@ System --> Change Password""")
                 self.tarmen.men = self.usrmen
                 self.tarmen.mod = self.usrmod
                 self.tarmen.setVariables()
-            if not self.doVersionCheck():
-                self.checkNotes()
+            # Check for Notes
+            self.checkNotes()
+            # Draw the Menu
             self.tarmen.drawMenu()
         elif self.xdisplay:
             self.mf.head.configure(text="Tartan Systems")
@@ -898,7 +964,7 @@ System --> Change Password""")
     def getCompany(self, prg=None, period=None):
         self.prg = prg
         self.pertyp = period
-        sql = Sql(self.db, "ctlmst", prog="ms0000")
+        sql = Sql(self.dbm, "ctlmst", prog="ms0000")
         if self.acoy:
             whr = [("ctm_cono", "in", tuple(self.acoy))]
         else:
@@ -998,13 +1064,13 @@ System --> Change Password""")
         self.cp.topf[0][2][5] = self.finper
 
     def getLastPeriod(self):
-        sql = Sql(self.db, "ctlynd", prog="ms0000")
+        sql = Sql(self.dbm, "ctlynd", prog="ms0000")
         p = sql.getRec("ctlynd", cols=["max(cye_period)"],
             where=[("cye_cono", "=", self.conum)])
         self.finper = int(p[0][0])
 
     def finPeriod(self, frt, pag, r, c, p, i, w):
-        sql = Sql(self.db, "ctlynd", prog="ms0000")
+        sql = Sql(self.dbm, "ctlynd", prog="ms0000")
         r = sql.getRec("ctlynd", cols=["cye_period"],
             where=[("cye_cono", "=", self.conum), ("cye_period", "=", w)],
             limit=1)
@@ -1031,10 +1097,10 @@ System --> Change Password""")
                 pass
         try:
             rtn = popt.get("rtn", 0)
-            sql = Sql(self.db, ["ffield", "ctllog"], prog="ms0000")
+            sql = Sql(self.dbm, ["ffield", "ctllog"], prog="ms0000")
             if not sql.error:
                 chk = sql.getRec("ffield", where=[("ff_tabl", "=", "ctllog")])
-            if not sql.error and len(chk) == 7:
+            if not sql.error and len(chk) == 8:
                 if not self.user:
                     name = "admin"
                 else:
@@ -1054,7 +1120,7 @@ System --> Change Password""")
                 logd.append(int(
                     "%04i%02i%02i%02i%02i%02i" % time.localtime()[:-3]))
                 sql.insRec("ctllog", data=logd)
-                self.db.commitDbase()
+                self.dbm.commitDbase()
             err = runModule(prg[0], **popt)
             if err:
                 raise Exception(err)
@@ -1064,20 +1130,20 @@ System --> Change Password""")
                     if wgt not in (self.mf.head, self.mf.body, self.mf.status):
                         wgt.destroy()
                 showException(self.mf.body, self.rcdic["wrkdir"],
-                    "%s\n\nMod: %s\nArg: %s" % (err, prg, popt), dbm=self.db)
+                    "%s\n\nMod: %s\nArg: %s" % (err, prg, popt), dbm=self.dbm)
             else:
                 showException(None, self.rcdic["wrkdir"],
-                    "%s\nMod: %s\nArg: %s" % (err, prg, popt), dbm=self.db)
+                    "%s\nMod: %s\nArg: %s" % (err, prg, popt), dbm=self.dbm)
 
     def checkNotes(self):
-        if not self.db.dbopen:
-            self.db.openDbase()
+        if not self.dbm.dbopen:
+            self.dbm.openDbase()
             dbopend = True
         else:
             dbopend = False
         t = time.localtime()
         self.cdate = ((t[0] * 10000) + (t[1] * 100) + t[2])
-        self.sql = Sql(self.db, ["ctlnot", "ctlpwu"], prog="ms0000")
+        self.sql = Sql(self.dbm, ["ctlnot", "ctlpwu"], prog="ms0000")
         chk = self.sql.getRec("ctlnot", where=[("(", "not_user", "=",
             self.user["name"], "or", "not_auser", "=", self.user["name"],
             ")"), ("not_adate", ">", 0), ("not_adate", "<=", self.cdate),
@@ -1089,7 +1155,7 @@ System --> Change Password""")
             if ok == "yes":
                 self.showNotes(chk)
         if dbopend:
-            self.db.closeDbase()
+            self.dbm.closeDbase()
 
     def showNotes(self, notes):
         data = []
@@ -1174,7 +1240,7 @@ System --> Change Password""")
         self.sql.updRec("ctlnot", cols=["not_aflag", "not_adate", "not_auser"],
             data=[self.chgflag, self.chgdate, self.chguser], where=[("not_seq",
             "=", self.nseq)])
-        self.db.commitDbase()
+        self.dbm.commitDbase()
         self.doNExit()
 
     def doNExit(self):
@@ -1182,23 +1248,23 @@ System --> Change Password""")
         self.mf.closeLoop()
 
     def chgUsr(self):
-        if not self.db.dbopen:
-            self.db.openDbase()
+        if not self.dbm.dbopen:
+            self.dbm.openDbase()
             dbopend = True
         else:
             dbopend = False
-        sql = Sql(self.db, "ctlpwu", prog=self.__class__.__name__)
+        sql = Sql(self.dbm, "ctlpwu", prog=self.__class__.__name__)
         cnt = sql.getRec("ctlpwu", cols=["count(*)"],
             where=[("usr_name", "<>", self.user["name"])], limit=1)
         if not cnt[0]:
             showError(self.mf.window, "Change", "There are No Other Users")
             if dbopend:
-                self.db.closeDbase()
+                self.dbm.closeDbase()
             return
         self.userLogout()
         self.userLogin()
         if dbopend:
-            self.db.closeDbase()
+            self.dbm.closeDbase()
         if not self.user:
             self.doExit()
         self.tarmen.usr = self.user["name"]
@@ -1261,10 +1327,10 @@ System --> Change Password""")
             return
         t = time.localtime()
         dte = (t[0] * 10000) + (t[1] * 100) + t[2]
-        sql = Sql(self.db, "ctlpwu", prog="ms0000")
+        sql = Sql(self.dbm, "ctlpwu", prog="ms0000")
         sql.updRec("ctlpwu", cols=["usr_pwd", "usr_last"], data=[self.pwd,
             dte], where=[("usr_name", "=", self.user["name"])])
-        self.db.commitDbase()
+        self.dbm.commitDbase()
         self.user["pwd"] = self.pwd
         self.user["last"] = dte
         self.np.closeProcess()
@@ -1312,18 +1378,7 @@ System --> Change Password""")
 
     def doSysLoc(self, frt, pag, r, c, p, i, w):
         self.updtyp = w
-        self.upgsys = ""
-        for mod in self.mods:
-            if mod == ["BC"] and self.upgsys != "Tartan":
-                self.upgsys = "Bwlclb"
-            elif mod == ["BS"] and self.upgsys != "Tartan":
-                self.upgsys = "Bksclb"
-            elif mod == ["CS"] and self.upgsys != "Tartan":
-                self.upgsys = "Cshana"
-            elif mod == ["SC"] and self.upgsys != "Tartan":
-                self.upgsys = "Seccmp"
-            else:
-                self.upgsys = "Tartan"
+        self.upgsys = "Tartan"
         if self.updtyp == "I":
             err = self.doSysChkUpgrade()
             if err:
@@ -1380,11 +1435,9 @@ System --> Change Password""")
                 return
             return ("Upgrade Error", "No Upgrade Available")
         except:
-            return ("Connection Error",
-                """Please Ensure that You Are Connected to the Internet.
-
-
-If Not, Please Connect and then Try Again!""")
+            return ("Connection Error", "Please Ensure that You Are "\
+                "Connected to the Internet. If Not, Please Connect "\
+                "and then Try Again!""")
 
     def doSysUpgrade(self):
         self.su.closeProcess()
@@ -1413,7 +1466,10 @@ If Not, Please Connect and then Try Again!""")
         try:
             if self.updtyp == "I":
                 if sys.platform == "win32":
-                    nam = self.upgsys + "_%s.%s.exe" % self.nv
+                    if sys.maxsize > 2**32:
+                        nam = self.upgsys + "_%s.%s-64.exe" % self.nv
+                    else:
+                        nam = self.upgsys + "_%s.%s-32.exe" % self.nv
                 else:
                     nam = self.upgsys + "_%s.%s.%s.tgz" % self.nv
                 fle = os.path.join(self.mf.rcdic["upgdir"], nam)
@@ -1453,9 +1509,9 @@ If Not, Please Connect and then Try Again!""")
         elif self.xdisplay:
             self.mf.head.configure(text="Update File Formats (tarUpd)")
             self.mf.updateStatus("")
-        dbopen = self.db.dbopen
+        dbopen = self.dbm.dbopen
         if not dbopen:
-            self.db.openDbase()
+            self.dbm.openDbase()
         popt = {
             "mf": self.mf,
             "bar": True,
@@ -1467,90 +1523,7 @@ If Not, Please Connect and then Try Again!""")
             "ver": self.cv[1]}
         self.doRunModule("tb1020", **popt)
         if not dbopen:
-            self.db.closeDbase()
-
-    def doVersionCheck(self, vtype="chk"):
-        if not self.db.dbopen:
-            self.db.openDbase()
-            dbopend = True
-        else:
-            dbopend = False
-        if self.xdisplay:
-            scrn = self.mf.window
-        else:
-            scrn = "text"
-        sql = Sql(self.db, ["ftable", "ffield", "verupd"])
-        chk = sql.getRec("verupd", limit=1)
-        if not chk:
-            showError(scrn, "Version Error", "Missing verupd Table")
-            self.doExit()
-        v = chk[0].split(".")
-        ov = (int(v[0]), int(v[1].rstrip()))
-        if ov < (5, 5):
-            showError(scrn, "Version Error",
-                """The Version of the Data, %s.%s, is too Old.
-
-Please follow the upgrade instructions at http://www.tartan.co.za/Downloads
-
-or
-
-Email paul@tartan.co.za, with your version number, for assistance.""" % ov)
-            self.doExit()
-        if ov > self.cv[0]:
-            if dbopend:
-                self.db.closeDbase()
-            ok = askQuestion(scrn, "Version Error",
-                """Your Version of TARTAN (%s) Is Older than the File Formats!
-
-Do You Want to Upgrade TARTAN Now?""" % self.cv[1], default="yes")
-            if ok == "yes":
-                self.sysUpd()
-            self.doExit()
-        if vtype == "upd":
-            if dbopend:
-                self.db.closeDbase()
-            return
-        err = bool(ov != self.cv[0])
-        chg = False
-        if self.altered:
-            for tb in tabdic:
-                for ext in ("fld", "idx"):
-                    lines = tabdic[tb][ext]
-                    f1 = []
-                    for line in lines:
-                        f1.append(line)
-                    if ext == "fld":
-                        fle = sql.getRec("ffield", where=[("ff_tabl",
-                            "=", tb)], order="ff_seq")
-                        f2 = []
-                        for f in fle:
-                            tp = [int(f[1]), f[2], f[3], float(f[4])]
-                            tp.extend(f[5:])
-                            f2.append(tp)
-                    else:
-                        fle = sql.getRec("ftable", where=[("ft_tabl",
-                            "=", tb)], order="ft_seq")
-                        f2 = []
-                        for f in fle:
-                            tp = [f[1], int(f[2]), f[3]]
-                            for t in f[4:]:
-                                if t:
-                                    tp.append(t)
-                            f2.append(tp)
-                    if not f1 == f2:
-                        chg = True
-                        break
-        if dbopend:
-            self.db.closeDbase()
-        if chg or err:
-            ok = askQuestion(scrn, "Version Error",
-                """Your File Formats Need Updating,
-
-Do You Want to Update Your Files?""", default="yes")
-            if ok == "yes":
-                self.tarUpd(True)
-            else:
-                self.doExit()
+            self.dbm.closeDbase()
 
     def tarExp(self):
         from TartanClasses import ExportDbase
@@ -1569,12 +1542,12 @@ Do You Want to Update Your Files?""", default="yes")
 
     def tarBck(self):
         from TartanClasses import TarBckRes
-        self.db.openDbase()
+        self.dbm.openDbase()
         cf = PwdConfirm(self.mf, conum=0, system="MST", code="TarBck",
             passwd=self.bpwd)
         if cf.flag == "ok":
             try:
-                sql = Sql(self.db, ["ctlmst", "ctlsys"], prog="ms0000")
+                sql = Sql(self.dbm, ["ctlmst", "ctlsys"], prog="ms0000")
                 if sql.error:
                     raise Exception
                 csys = sql.getRec("ctlsys", cols=["sys_budays",
@@ -1588,7 +1561,7 @@ Do You Want to Update Your Files?""", default="yes")
                 TarBckRes(self.mf, mode="B", csys=csys, pbar=False)
             else:
                 TarBckRes(self.mf, mode="B", csys=csys)
-        else:
+        elif cf.flag == "no":
             if self.xdisplay:
                 scrn = self.mf.window
             else:
@@ -1612,8 +1585,6 @@ Do You Want to Update Your Files?""", default="yes")
             showError(None, "Error", "Invalid Preferences File (%s)\n\n%s"
                 % (self.rcfile, self.rcdic))
             self.doExit(dbm=False)
-        geo = self.rcdic["geo"].split("x")
-        self.mf.geo = [int(geo[0]), int(geo[1])]
         self.mf.resizeChildren()
 
     def sysEnd(self):
@@ -1677,7 +1648,7 @@ Do You Want to Update Your Files?""", default="yes")
     def doHousekeeping(self):
         fles = []
         for tp in ("csv", "gif", "html", "jpg", "odt", "pdf", "png", \
-                                        "ps", "svg", "xls", "xml"):
+                                    "ps", "svg", "xls", "xlsx", "xml"):
             fles.extend(glob.glob(os.path.join(self.rcdic["wrkdir"],
                 "*.%s" % tp)))
         if fles:
@@ -1717,8 +1688,8 @@ Do You Want to Update Your Files?""", default="yes")
                         pass
 
     def doExit(self, dbm=True, sysexit=True):
-        if dbm and self.db.dbopen:
-            self.db.closeDbase()
+        if dbm and self.dbm.dbopen:
+            self.dbm.closeDbase()
         if self.debug:
             sys.settrace(None)
         if self.output:
@@ -1737,7 +1708,7 @@ Do You Want to Update Your Files?""", default="yes")
                     mess = ""
                     for x in range(maxi):
                         mess = "%s%s" % (mess, lines[x - maxi])
-                    if self.help or self.version:
+                    if self.help or self.script or self.version:
                         scrn = None
                     else:
                         scrn = self.mf.body
@@ -1765,7 +1736,7 @@ Do You Want to Update Your Files?""", default="yes")
             sys.exit()
 
     def doCheckSys(self):
-        sql = Sql(self.db, "ctlsys", prog=self.__class__.__name__)
+        sql = Sql(self.dbm, "ctlsys", prog=self.__class__.__name__)
         if sql.error:
             return "error"
         rec = sql.getRec("ctlsys", limit=1)
@@ -1779,7 +1750,7 @@ Do You Want to Update Your Files?""", default="yes")
                 rec = [0, "N", 0, 0, 0, "", 0, 0, 0, "", "", "N",
                     "", "", "N", 0]
                 sql.insRec("ctlsys", rec)
-                self.db.commitDbase()
+                self.dbm.commitDbase()
         if not rec:
             return "error"
 
@@ -1828,7 +1799,7 @@ Do You Want to Update Your Files?""", default="yes")
 
     def getCtlSys(self, cols):
         try:
-            sql = Sql(self.db, "ctlsys", prog="ms0000")
+            sql = Sql(self.dbm, "ctlsys", prog="ms0000")
             if sql.error:
                 raise Exception
             sss = sql.getRec("ctlsys", cols=cols, limit=1)
@@ -1853,7 +1824,7 @@ Do You Want to Update Your Files?""", default="yes")
                 flenam = open(name, "r")
             else:
                 return "Invalid Query File (%s)" % name
-        self.db.openDbase()
+        self.dbm.openDbase()
         for line in flenam:
             line = line.rstrip()
             if not line or line[0] == "#":
@@ -1875,9 +1846,9 @@ Do You Want to Update Your Files?""", default="yes")
                         break
             try:
                 if comm[0] == "commit":
-                    self.db.commitDbase()
+                    self.dbm.commitDbase()
                 else:
-                    sq = Sql(self.db)
+                    sq = Sql(self.dbm)
                     if sel:
                         ret = sq.sqlRec(line, limit=qty)
                         self.mess = ""
@@ -1891,7 +1862,6 @@ Do You Want to Update Your Files?""", default="yes")
                             else:
                                 self.mess = self.mess + "\n" + r
                         if self.xdisplay and self.output:
-                            self.mf.window.deiconify()
                             self.mf.head.configure(text="SQL Query")
                             but = ([("Save", self.doSave)])
                             ScrollText(scrn=self.mf.body, mess=self.mess,
@@ -1901,9 +1871,9 @@ Do You Want to Update Your Files?""", default="yes")
                     else:
                         sq.sqlRec(line)
             except:
-                self.db.closeDbase()
+                self.dbm.closeDbase()
                 return "Error in SQL Statement\n\n%s" % line
-        self.db.closeDbase()
+        self.dbm.closeDbase()
 
     def doSave(self):
         fle = open(os.path.join(self.rcdic["wrkdir"], "query.txt"), "w")
@@ -1925,7 +1895,7 @@ if __name__ == "__main__":
         epath = "%s%s%s" % (os.environ["PATH"], os.pathsep, ppath)
         os.environ["PATH"] = epath
     # Ubuntu Unity uses the Global Menu which breaks Tartan's Menu
-    if sys.platform == "linux2":
+    if sys.platform in ("linux", "linux2"):
         os.environ["UBUNTU_MENUPROXY"] = "0"
     # Load options
     try:
diff --git a/mst/ms1010.py b/mst/ms1010.py
old mode 100755
new mode 100644
index 6ac7535..fc496d1
--- a/mst/ms1010.py
+++ b/mst/ms1010.py
@@ -173,8 +173,8 @@ class ms1010(object):
             for x in range(0, len(mods), 2):
                 idx = self.sys.index(mods[x:x+2])
                 self.df.loadEntry(frt, pag+2, idx, data="Y")
-            self.df.loadEntry(frt, pag+3, 0, data=self.old[-1])
             self.logo = self.old[self.sql.ctlmst_col.index("ctm_logo")]
+            self.df.loadEntry(frt, pag+3, 0, data=self.logo)
             if self.logo:
                 self.displayLogo(self.logo)
 
diff --git a/mst/ms1020.py b/mst/ms1020.py
old mode 100755
new mode 100644
diff --git a/mst/ms1030.py b/mst/ms1030.py
old mode 100755
new mode 100644
index 5f1b9e0..27b3cbc
--- a/mst/ms1030.py
+++ b/mst/ms1030.py
@@ -89,7 +89,7 @@ class ms1030(object):
             (("T",0,4,0),"IHA",30,"Password","",
                 "","N",self.doPwd,None,self.doDelete,None))
         but = (
-            ("Show All",self.ctl,None,0,("T",0,3),("T",0,0)),
+            ("Show All",self.ctl,None,0,("T",0,1),("T",0,0)),
             ("Cancel",None,self.doCancel,0,("T",0,2),("T",0,0)),
             ("Quit",None,self.doExit,1,None,None))
         tnd = ((self.doEnd,"y"), )
@@ -104,6 +104,7 @@ class ms1030(object):
             if not nam:
                 return "Invalid Company Number"
         self.coy = w
+        self.sys = None
 
     def doSystem(self, frt, pag, r, c, p, i, w):
         d1 = ""
diff --git a/mst/ms1040.py b/mst/ms1040.py
old mode 100755
new mode 100644
diff --git a/mst/ms3010.py b/mst/ms3010.py
old mode 100755
new mode 100644
index 22bc550..0a216a2
--- a/mst/ms3010.py
+++ b/mst/ms3010.py
@@ -67,8 +67,7 @@ class ms3010(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
             (t[0], t[1], t[2], t[3], t[4])
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["C", "T", "Curr-Dt", "S", "TT", "Acc-Num", "Reference",
             "Date", "Remarks", "Rate-%", "Input-Value", "Input-Tax ",
             "Output-Value", "Output-Tax"]
@@ -258,7 +257,7 @@ class ms3010(object):
             typ="VAT Categories")
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("VAT Statement for Period %s to %s" % \
             (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -337,10 +336,7 @@ class ms3010(object):
     def printReport(self, recs):
         p1 = ProgressBar(self.opts["mf"].body, mxs=len(recs),
             typ="VAT Categories")
-        self.head = ("%03u %-30s %30s %18s %27s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=135)
         self.pglin = 999
         self.pcat = None
         self.pcode = None
@@ -423,6 +419,7 @@ class ms3010(object):
                 self.doPrintCodeTotal(ttype="P", line=False)
             else:
                 self.doPrintCodeTotal()
+            self.fpdf.drawText(self.fpdf.suc * 135)
             self.doPrintCatTotal()
             if self.cat in ("A", "B"):
                 self.doPrintHeading("S")
@@ -492,7 +489,6 @@ class ms3010(object):
         if htype in ("A", "S"):
             self.fpdf.add_page()
             self.fpdf.setFont(style="B")
-            self.pgnum += 1
             self.fpdf.drawText(self.head)
             self.fpdf.drawText()
             if self.flag == "Y":
@@ -501,9 +497,9 @@ class ms3010(object):
                 flag = "(Transactions Not Flagged)"
             elif self.flag == "R":
                 flag = "(Transactions Paid on %s)" % self.paidd
-            self.fpdf.drawText("%-24s %-7s %-2s %-7s %-79s %4s %5s" % \
+            self.fpdf.drawText("%-24s %-7s %-2s %-7s %-s" % \
                 ("VAT Statement for Period",
-                self.sperd, "to", self.eperd, flag, "Page", self.pgnum))
+                self.sperd, "to", self.eperd, flag))
             self.fpdf.drawText()
             if htype == "A":
                 if self.totsonly != "Y":
@@ -532,7 +528,7 @@ class ms3010(object):
                 "%13s %13s %13s %13s" % ("Curr-Dt", "S", "TT", "Acc-Num",
                 "Reference", "   Date", "Remarks", "Rate-%", "Input-Value ",
                 "Input-Tax ", "Output-Value ", " Output-Tax "))
-        self.fpdf.underLine(txt=self.head)
+        self.fpdf.drawText(self.fpdf.suc * 135)
         self.fpdf.setFont()
         self.pglin += 3
 
@@ -543,7 +539,7 @@ class ms3010(object):
         m = CCD(self.ctopt, "SD", 13.2)
         if ttype == "P":
             if self.totsonly != "Y" and line:
-                self.fpdf.drawText("%-125s" % (self.fpdf.suc * len(self.head)))
+                self.fpdf.drawText(self.fpdf.suc * 135)
             self.fpdf.drawText("%-41s %-14s %-22s %-13s %-13s %-13s %-13s" %
                 ("", "Code-Total", self.pcode, j.disp, k.disp, l.disp, m.disp))
         else:
@@ -569,8 +565,7 @@ class ms3010(object):
                 continue
             if ttype == "P":
                 if not num:
-                    self.fpdf.drawText("%-125s" % (
-                        self.fpdf.suc * len(self.head)))
+                    self.fpdf.drawText(self.fpdf.suc * 135)
                 self.fpdf.drawText("%-41s %-14s %-15s %-6s "\
                     "%-13s %-13s %-13s %-13s" % ("", "Category-Total",
                     self.pcat, rte, j.disp, k.disp, l.disp, m.disp))
@@ -584,7 +579,7 @@ class ms3010(object):
 
     def doPrintSummary(self, ttype="P"):
         if ttype == "X":
-            expheads = [self.head % self.sysdttm]
+            expheads = [self.head + " %s" % self.sysdttm]
             expheads.append("VAT Summary for Period %s to %s" % \
                 (self.sperd, self.eperd))
             expcolsh = [self.colsh[8:]]
@@ -626,7 +621,7 @@ class ms3010(object):
                         m.work]]
                     self.expdatas.append(line)
         if ttype == "P":
-            self.fpdf.drawText("%-125s" % (self.fpdf.suc * len(self.head)))
+            self.fpdf.drawText(self.fpdf.suc * 135)
         else:
             self.expdatas.append(["ULINES"])
         d = CCD("Grand Total", "NA", 30)
diff --git a/mst/ms3020.py b/mst/ms3020.py
old mode 100755
new mode 100644
index 4911311..e4a5e45
--- a/mst/ms3020.py
+++ b/mst/ms3020.py
@@ -24,23 +24,15 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import RepPrt, TartanDialog
 from tartanWork import allsys, pwctrl
 
 class ms3020(object):
     def __init__(self, **opts):
         self.opts = opts
-        self.setVariables()
         self.mainProcess()
         self.opts["mf"].startLoop()
 
-    def setVariables(self):
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
-
     def mainProcess(self):
         sss = []
         data = [["ALL", "All Systems"]]
@@ -56,9 +48,12 @@ class ms3020(object):
             "titl": "Select the Required System",
             "head": ("COD", "Description"),
             "data": data}
+        r1s = (("Yes", "Y"), ("No", "N"))
         fld = (
             (("T",0,0,0),"IUA",3,"System","",
-                "ALL","Y",self.doSys,stt,None,("in", sss)),)
+                "ALL","Y",self.doSys,stt,None,("in", sss)),
+            (("T",0,1,0),("IRB",r1s),0,"Only Enabled","",
+                "Y","N",self.doTyp,None,None,None))
         tnd = ((self.doEnd,"y"), )
         txt = (self.doExit, )
         self.df = TartanDialog(self.opts["mf"], eflds=fld, tend=tnd,
@@ -67,13 +62,16 @@ class ms3020(object):
     def doSys(self, frt, pag, r, c, p, i, w):
         self.sys = w
 
+    def doTyp(self, frt, pag, r, c, p, i, w):
+        self.typ = w
+
     def doEnd(self):
         self.df.closeProcess()
         self.printReport()
         self.closeProcess()
 
     def printReport(self):
-        tables = ["ctlpwr"]
+        state = self.df.disableButtonsTags()
         heads = ["Module Passwords Master Listing"]
         cols = [
             ["pwd_cono","UI",3.0,"Coy"],
@@ -81,14 +79,26 @@ class ms3020(object):
             ["pwd_code","NA",20.0,"Access Code"],
             ["pwd_desc","NA",50.0,"Description"],
             ["pwd_pass","HA",30.0,"Password"]]
-        if self.sys == "ALL":
-            whr = []
+        if self.typ == "Y":
+            tables = ["ctlpwr"]
+            if self.sys == "ALL":
+                whr = []
+            else:
+                whr = [("pwd_sys", "=", self.sys)]
+            odr = "pwd_cono, pwd_sys, pwd_code"
+            RepPrt(self.opts["mf"], name=self.__class__.__name__,
+                tables=tables, heads=heads, cols=cols, where=whr,
+                order=odr, repprt=self.df.repprt)
         else:
-            whr = [("pwd_sys", "=", self.sys)]
-        odr = "pwd_cono, pwd_sys, pwd_code"
-        state = self.df.disableButtonsTags()
-        RepPrt(self.opts["mf"], name=self.__class__.__name__, tables=tables,
-            heads=heads, cols=cols, where=whr, order=odr, repprt=self.df.repprt)
+            ccol = cols[:]
+            ccol[0][1] = "NA"
+            data = []
+            for ctl in pwctrl:
+                if self.sys == "ALL" or ctl[0] == self.sys:
+                    data.append(("", ctl[0], ctl[1], ctl[2], ""))
+            RepPrt(self.opts["mf"], name=self.__class__.__name__,
+                tables=data, heads=heads, cols=ccol, ttype="D",
+                repprt=self.df.repprt)
         self.df.enableButtonsTags(state=state)
 
     def doExit(self):
diff --git a/mst/ms3030.py b/mst/ms3030.py
old mode 100755
new mode 100644
index 31e1787..d5076ea
--- a/mst/ms3030.py
+++ b/mst/ms3030.py
@@ -44,7 +44,7 @@ class ms3030(object):
             "tables": ("emllog",),
             "cols": (("eml_too", "", 0, "E-Mail Address", "F"),),
             "group": "eml_too"}
-        r1s = (("Ascending", "A"), ("Descending","D"))
+        r1s = (("Descending","D"), ("Ascending", "A"))
         fld = (
             (("T",0,0,0),"Id1",10,"Date From","",
                 0,"N",self.doDate,None,None,("efld",)),
@@ -53,7 +53,7 @@ class ms3030(object):
             (("T",0,2,0),"INA",50,"Recipient","",
                 "","N",self.doRecpt,eml,None,("efld",)),
             (("T",0,3,0),("IRB",r1s),0,"Date Order","",
-                "A","N",self.doOrder,None,None,None))
+                "D","N",self.doOrder,None,None,None))
         tnd = ((self.doEnd,"y"),)
         txt = (self.doExit,)
         self.df = TartanDialog(self.opts["mf"], tops=False,
@@ -61,11 +61,11 @@ class ms3030(object):
 
     def doDate(self, frt, pag, r, c, p, i, w):
         if p == 0:
-            self.frm = w
-        elif w < self.frm:
-            return "Invalid Date, Less than Start Date"
+            self.frm = CCD(w, "d1", 10)
+        elif w < self.frm.work:
+            return "Invalid, Before From"
         else:
-            self.too = w
+            self.too = CCD(w, "D1", 10)
 
     def doRecpt(self, frt, pag, r, c, p, i, w):
         self.recpt = w
@@ -75,13 +75,15 @@ class ms3030(object):
 
     def doEnd(self):
         self.df.closeProcess()
-        frm = CCD(self.frm, "d1", 10).disp
-        too = CCD(self.too, "D1", 10).disp
-        hds = "Email Log Report from %s to %s" % (frm, too)
+        if not self.frm.work:
+            frm = "Beginning"
+        else:
+            frm = self.frm.disp
+        hds = "Email Log Report from %s to %s" % (frm, self.too.disp)
         col = ["eml_too", "eml_sub", "eml_dtt", "eml_sta"]
         whr = [
-            ("eml_dtt", ">=", "%10s 00:00" % frm),
-            ("eml_dtt", "<=", "%10s 99:99" % too)]
+            ("eml_dtt", ">=", "%10s 00:00" % self.frm.disp),
+            ("eml_dtt", "<=", "%10s 99:99" % self.too.disp)]
         if self.recpt:
             whr.append(("eml_too", "like", "%s%s%s" % ("%", self.recpt, "%")))
         if self.order == "A":
diff --git a/mst/ms3040.py b/mst/ms3040.py
old mode 100755
new mode 100644
index dbbda9a..bd9154b
--- a/mst/ms3040.py
+++ b/mst/ms3040.py
@@ -1,6 +1,6 @@
 """
 SYNOPSIS
-    Masterfile hanges Log.
+    Masterfile Changes Log.
 
     This file is part of Tartan Systems (TARTAN).
 
@@ -73,11 +73,11 @@ class ms3040(object):
 
     def doDate(self, frt, pag, r, c, p, i, w):
         if p == 0:
-            self.frm = w
-        elif w < self.frm:
+            self.frm = CCD(w, "d1", 10)
+        elif w < self.frm.work:
             return "Invalid Date, Less than Start Date"
         else:
-            self.too = w
+            self.too = CCD(w, "D1", 10)
 
     def doTable(self, frt, pag, r, c, p, i, w):
         self.table = w
@@ -102,9 +102,11 @@ class ms3040(object):
 
     def doEnd(self):
         self.df.closeProcess()
-        frm = CCD(self.frm, "d1", 10)
-        too = CCD(self.too, "D1", 10)
-        hds = "Changes Log Report from %s to %s" % (frm.disp, too.disp)
+        if not self.frm.work:
+            frm = "Beginning"
+        else:
+            frm = self.frm.disp
+        hds = "Changes Log Report from %s to %s" % (frm, self.too.disp)
         col = [
             ("chg_tab", "NA", 6.0, "TabNam"),
             ("chg_act", "UA", 1.0, "A"),
@@ -115,12 +117,12 @@ class ms3040(object):
             ("chg_dte", "TS", 19.0, "Date-&-Time-Changed"),
             ("chg_usr", "NA", 20.0, "User-Login")]
         whr = [
-            ("chg_dte", ">=", str(frm.work * 1000000)),
-            ("chg_dte", "<=", str((too.work * 1000000) + 999999))]
+            ("chg_dte", ">=", str(self.frm.work * 1000000)),
+            ("chg_dte", "<=", str((self.too.work * 1000000) + 999999))]
         if self.byusr == "Y":
-            odr = "chg_tab, chg_dte"
+            odr = "chg_tab, chg_dte desc"
         else:
-            odr = "chg_dte"
+            odr = "chg_dte desc"
         if self.table:
             whr.append(("chg_tab", "=", self.table))
         if self.user:
diff --git a/mst/ms3050.py b/mst/ms3050.py
index 68a92aa..d56486e 100644
--- a/mst/ms3050.py
+++ b/mst/ms3050.py
@@ -165,7 +165,6 @@ class ms3050(object):
         for mod in mods:
             sss = mod[0][:2]
             if sss not in pkgs:
-                print("A", sss)
                 continue
             if pkgs[sss].upper() not in allsys:
                 if sss == "si":
@@ -177,7 +176,7 @@ class ms3050(object):
             else:
                 stm = allsys[pkgs[sss].upper()][0]
             if sss not in self.allmod:
-                print("Missing", sss)
+                continue
             if mod[0][2] == "2" and mod[1]:
                 ttt = mod[1]
             else:
@@ -190,10 +189,6 @@ class ms3050(object):
                         dat.insert(0, mod[2])
                         dat.extend(mod[3:])
                     data.append(dat)
-                else:
-                    print("C", sss, mod[0], ttt)
-            else:
-                print("B", mod[0])
         return data
 
     def doExit(self):
diff --git a/mst/msc110.py b/mst/msc110.py
old mode 100755
new mode 100644
diff --git a/mst/msy010.py b/mst/msy010.py
old mode 100755
new mode 100644
diff --git a/mst/msy020.py b/mst/msy020.py
old mode 100755
new mode 100644
diff --git a/rca/rc1010.py b/rca/rc1010.py
old mode 100755
new mode 100644
diff --git a/rca/rc1020.py b/rca/rc1020.py
old mode 100755
new mode 100644
diff --git a/rca/rc1030.py b/rca/rc1030.py
old mode 100755
new mode 100644
diff --git a/rca/rc2010.py b/rca/rc2010.py
old mode 100755
new mode 100644
index a1c81ac..363d1a1
--- a/rca/rc2010.py
+++ b/rca/rc2010.py
@@ -27,7 +27,7 @@ COPYING
 import time
 from TartanClasses import ASD, GetCtl, NotesCreate, PwdConfirm, Sql
 from TartanClasses import SelectChoice, TartanDialog
-from tartanFunctions import getVatRate, mthendDate, projectDate, runModule
+from tartanFunctions import getVatRate, projectDate, runModule
 from tartanWork import rcmvtp, rctrtp
 
 class rc2010(object):
@@ -165,7 +165,7 @@ class rc2010(object):
                 "N","N",self.doOwnCod,vtm,None,("efld",)),
             (("C",1,0,5),"ISD",11.2,"V.A.T","V.A.T Amount",
                 "","N",self.doOwnVat,None,None,None),
-            (("C",1,0,6),"INA",43,"Details","Transaction Details",
+            (("C",1,0,6),"INA",47,"Details","Transaction Details",
                 "","N",self.doOwnDet,None,None,None),
             (("T",2,0,0),"INA",7,"Acc-Num","Account Number",
                 "","Y",self.doAccNum,tnm,None,None),
@@ -508,6 +508,7 @@ class rc2010(object):
         self.showOwnerTrans()
         if self.acno:
             self.showTenantTrans()
+        self.df.nb.grab_set()
 
     def showOwnerTrans(self):
         whr = [("rot_cono", "=", self.opts["conum"]), ("rot_acno", "=",
@@ -545,12 +546,12 @@ class rc2010(object):
             ("rot_trdt", "Trans-Date", 10, "D1", "N"),
             ("rot_type", "Typ", 3, ("XX", rctrtp), "N"),
             ("rot_refno", "Reference", 9, "Na", "N"),
-            ("rot_desc", "Details", 30, "NA", "N"),
+            ("rot_desc", "Details", 39, "NA", "N"),
             ("rot_tramt", "Amount", 11.2, "SD", "N"),
             ("rot_taxamt", "VAT-Amount", 11.2, "SD", "N"),
             ("balance", "Balance", 15.2, "SD", "N"))
         self.otrn = SelectChoice(self.df.topPage1, None, col, data, wait=False,
-            neww=False, live=False, lines=9)
+            neww=False, live=False, modal=False, lines=9)
 
     def showTenantTrans(self):
         try:
@@ -580,7 +581,7 @@ class rc2010(object):
             ("rtu_taxamt", "VAT-Amount", 11.2, "SD", "N"),
             ("balance", "Balance", 15.2, "SD", "N"))
         self.ttrn = SelectChoice(self.df.topPage2, None, col, data, wait=False,
-            neww=False, live=False, lines=9)
+            neww=False, live=False, modal=False, lines=9)
 
     def showTenantBalance(self):
         bal = self.sql.getRec("rcatnt",
diff --git a/rca/rc3010.py b/rca/rc3010.py
old mode 100755
new mode 100644
index e6fc119..fcd68d5
--- a/rca/rc3010.py
+++ b/rca/rc3010.py
@@ -49,8 +49,6 @@ class rc3010(object):
         self.fromad = rcactl["cte_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         self.totind = "N"
         return True
@@ -84,7 +82,7 @@ class rc3010(object):
             (("T",0,1,0),"Id2",7,"Starting Period","",
                 self.curdt,"Y",self.doStartPer,None,None,("efld",)),
             (("T",0,2,0),"Id2",7,"Ending Period","",
-                self.curdt,"Y",self.doEndPer,None,None,("efld",)),
+                self.curdt,"Y",self.doEndPer,None,None,("notzero",)),
             (("T",0,3,0),"Id1",10,"Starting Date","",
                 self.sysdtw,"Y",self.doStartDat,None,None,("efld",)),
             (("T",0,4,0),"Id1",10,"Ending Date","",
@@ -185,13 +183,9 @@ class rc3010(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %33s %6s" % \
-                (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+            self.head = "%03u %-71s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %21s %33s %22s %6s" % \
-                (self.opts["conum"], self.opts["conam"], "", self.sysdttm,
-                "", self.__class__.__name__))
+            self.head = "%03u %-116s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bamt = 0
@@ -205,7 +199,6 @@ class rc3010(object):
         self.gam = [0] * (len(rttrtp) + 1)
         self.gvt = [0] * (len(rttrtp) + 1)
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -268,19 +261,13 @@ class rc3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText(
-            "%-36s %-10s %-2s %-10s %7s %5s" % \
-            ("Rental Owners Audit Trail for Period",
-            self.sperd, "to", self.eperd, "Page", self.pgnum))
+        if not self.sperd:
+            self.fpdf.drawText("Rental Owners Audit Trail to %s" % self.eperd)
         else:
-            self.fpdf.drawText(
-            "%-36s %-10s %-2s %-10s %52s %5s" % \
-            ("Rental Owners Audit Trail for Period",
-            self.sperd, "to", self.eperd, "Page", self.pgnum))
+            self.fpdf.drawText("Rental Owners Audit Trail for Period "\
+                "%s to %s" % (self.sperd, self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/rca/rc3020.py b/rca/rc3020.py
old mode 100755
new mode 100644
index 55b1f62..858e250
--- a/rca/rc3020.py
+++ b/rca/rc3020.py
@@ -49,8 +49,6 @@ class rc3020(object):
         self.fromad = rcactl["cte_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.curdt = int(self.sysdtw / 100)
         self.totind = "N"
         return True
@@ -182,13 +180,9 @@ class rc3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %33s %6s" % \
-                (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+            self.head = "%03u %-71s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-32s %30s %33s %31s %6s" % \
-                (self.opts["conum"], self.opts["conam"], "", self.sysdttm, "",
-                self.__class__.__name__))
+            self.head = "%03u %-136s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bamt = 0
@@ -202,7 +196,6 @@ class rc3020(object):
         self.gam = [0] * (len(rttrtp) + 1)
         self.gvt = [0] * (len(rttrtp) + 1)
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -269,19 +262,10 @@ class rc3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText(
-            "%-37s %-10s %-2s %-10s %6s %5s" % \
-            ("Rental Tenants Audit Trail for Period",
-            self.sperd, "to", self.eperd, "Page", self.pgnum))
-        else:
-            self.fpdf.drawText(
-            "%-37s %-10s %-2s %-10s %71s %5s" % \
-            ("Rental Tenants Audit Trail for Period",
-            self.sperd, "to", self.eperd, "Page", self.pgnum))
+        self.fpdf.drawText("Rental Tenants Audit Trail for Period "\
+            "%s to %s" % (self.sperd, self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/rca/rc3030.py b/rca/rc3030.py
old mode 100755
new mode 100644
index 2c3d9f5..e421ed5
--- a/rca/rc3030.py
+++ b/rca/rc3030.py
@@ -48,8 +48,6 @@ class rc3030(object):
         self.fromad = rcactl["cte_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -95,12 +93,9 @@ class rc3030(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %33s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-71s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.tots = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, rec in enumerate(recs):
             p.displayProgress(num)
@@ -138,11 +133,10 @@ class rc3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-33s %-7s %27s %5s" % ("Rental Owners Master "\
-            "Report up to", self.opts["period"], "Page", self.pgnum))
+        self.fpdf.drawText("%-33s %-7s" % ("Rental Owners Master "\
+            "Report up to", self.opts["period"]))
         self.fpdf.drawText()
         self.fpdf.drawText("%-27s%-1s%-1s" % ("(Options: "\
             "Ignore-Zero-Bal: ", self.df.t_disp[0][0][2], ")"))
diff --git a/rca/rc3040.py b/rca/rc3040.py
old mode 100755
new mode 100644
index 94d0137..7b36e87
--- a/rca/rc3040.py
+++ b/rca/rc3040.py
@@ -50,8 +50,6 @@ class rc3040(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -126,11 +124,8 @@ class rc3040(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %125s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-167s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         mst = self.sql.rcatnm_col
         con = self.sql.rcacon_col
@@ -266,11 +261,10 @@ class rc3040(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %-10s %119s %5s" % ("Rental Tenants Master "\
-            "Report as at", self.datd, "Page", self.pgnum))
+        self.fpdf.drawText("%-34s %-10s" % ("Rental Tenants Master "\
+            "Report as at", self.datd))
         self.fpdf.drawText()
         opts = "%-14s %-1s" % ("(Options: Type", self.styp)
         if self.styp == "E":
diff --git a/rca/rc3050.py b/rca/rc3050.py
old mode 100755
new mode 100644
diff --git a/rca/rc3060.py b/rca/rc3060.py
old mode 100755
new mode 100644
diff --git a/rca/rc3070.py b/rca/rc3070.py
old mode 100755
new mode 100644
diff --git a/rca/rc3080.py b/rca/rc3080.py
old mode 100755
new mode 100644
diff --git a/rca/rc3090.py b/rca/rc3090.py
old mode 100755
new mode 100644
diff --git a/rca/rc4010.py b/rca/rc4010.py
old mode 100755
new mode 100644
index b05452e..e7eac9d
--- a/rca/rc4010.py
+++ b/rca/rc4010.py
@@ -49,8 +49,6 @@ class rc4010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -199,11 +197,8 @@ class rc4010(object):
     def doPrintOption(self, opt):
         if opt == "N":
             return
-        self.head = ("%03u %-30s %59s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-101s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt != "T":
             self.pageHeading()
@@ -288,12 +283,10 @@ class rc4010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %-10s %53s %5s" % \
-            ("Rentals Ledger Interrogation as at", self.sysdtd, "Page",
-            self.pgnum))
+        self.fpdf.drawText("%-34s %-10s" % \
+            ("Rentals Ledger Interrogation as at", self.sysdtd))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 6
diff --git a/rca/rc4020.py b/rca/rc4020.py
old mode 100755
new mode 100644
index 7d700c4..0d5c924
--- a/rca/rc4020.py
+++ b/rca/rc4020.py
@@ -49,8 +49,6 @@ class rc4020(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -306,11 +304,8 @@ class rc4020(object):
     def doPrintOption(self, opt):
         if opt == "N":
             return
-        self.head = ("%03u %-30s %63s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-105s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt not in ("D", "T"):
             self.pageHeading()
@@ -443,17 +438,14 @@ class rc4020(object):
     def pageHeading(self, deposit=False):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if deposit:
-            self.fpdf.drawText("%-42s %-10s %49s %5s" % \
-                ("Rentals Ledger Deposit Interrogation as at", self.depdtd,
-                "Page", self.pgnum))
+            self.fpdf.drawText("%-42s %-10s" % \
+                ("Rentals Ledger Deposit Interrogation as at", self.depdtd))
         else:
-            self.fpdf.drawText("%-34s %-10s %57s %5s" % \
-                ("Rentals Ledger Interrogation as at", self.sysdtd,
-                "Page", self.pgnum))
+            self.fpdf.drawText("%-34s %-10s" % \
+                ("Rentals Ledger Interrogation as at", self.sysdtd))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 6
diff --git a/rca/rcc110.py b/rca/rcc110.py
old mode 100755
new mode 100644
diff --git a/rca/rcc210.py b/rca/rcc210.py
old mode 100755
new mode 100644
diff --git a/rca/rcc220.py b/rca/rcc220.py
old mode 100755
new mode 100644
index 4e0af74..4abb001
--- a/rca/rcc220.py
+++ b/rca/rcc220.py
@@ -48,8 +48,6 @@ class rcc220(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -74,10 +72,8 @@ class rcc220(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%-24s %37s %5s %6s" % \
-            ("Tartan Systems", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%-3u %-71s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         old_sys = recs[0][0]
         for num, dat in enumerate(recs):
@@ -122,11 +118,10 @@ class rcc220(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-22s %-10s %35s %5s" % \
-            ("Rentals Messages as at", self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-22s %-10s" % \
+            ("Rentals Messages as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-14s %-3s %-10s %-30s" % ("", "Num", "",
             "Message"))
diff --git a/rca/rcc310.py b/rca/rcc310.py
old mode 100755
new mode 100644
diff --git a/rca/rcm010.py b/rca/rcm010.py
old mode 100755
new mode 100644
diff --git a/readme.md b/readme.md
old mode 100755
new mode 100644
diff --git a/rtl/rt1010.py b/rtl/rt1010.py
old mode 100755
new mode 100644
diff --git a/rtl/rt2010.py b/rtl/rt2010.py
old mode 100755
new mode 100644
diff --git a/rtl/rt3010.py b/rtl/rt3010.py
old mode 100755
new mode 100644
index ea459b2..9cdf210
--- a/rtl/rt3010.py
+++ b/rtl/rt3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class rt3010(object):
         if not rtlctl:
             return
         self.fromad = rtlctl["ctr_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,12 +113,9 @@ class rt3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %55s %10s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-97s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.rtltrn_col
@@ -181,11 +174,9 @@ class rt3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %60s %5s" %
-            ("Rentals Ledger Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("Rentals Ledger Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/rtl/rt3020.py b/rtl/rt3020.py
old mode 100755
new mode 100644
index 21c0af1..99e59c1
--- a/rtl/rt3020.py
+++ b/rtl/rt3020.py
@@ -49,10 +49,8 @@ class rt3020(object):
         self.fromad = rtlctl["ctr_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
-            t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
+            (t[0], t[1], t[2], t[3], t[4])
         self.colsh = ["TP", "BatchNo", "Prm-Cod", "Acc-Num", "Name",
             "Reference", "Date", "Debits", "Credits", "Tax-Amount",
             "T", "Remarks"]
@@ -197,7 +195,8 @@ class rt3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Rental's Ledger Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -226,11 +225,9 @@ class rt3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %49s %6s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-87s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %91s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-133s" % (self.opts["conum"], self.opts["conam"])
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
@@ -243,7 +240,6 @@ class rt3020(object):
         self.tcrs = 0
         self.tvat = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -326,17 +322,11 @@ class rt3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %21s %5s" % \
-                ("Rental's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
-        else:
-            self.fpdf.drawText("%-38s %-10s %-2s %-10s %67s %5s" % \
-                ("Rental's Ledger Audit Trail for Period",
-                self.sperd, "to", self.eperd, "Page", self.pgnum))
+        self.fpdf.drawText("%-38s %-7s %-2s %-7s" % \
+            ("Rental's Ledger Audit Trail for Period",
+            self.sperd, "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/rtl/rt3030.py b/rtl/rt3030.py
old mode 100755
new mode 100644
index d68111b..c6dbc9f
--- a/rtl/rt3030.py
+++ b/rtl/rt3030.py
@@ -50,8 +50,6 @@ class rt3030(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -133,11 +131,8 @@ class rt3030(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %103s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-145s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         mst = self.sql.rtlmst_col
         con = self.sql.rtlcon_col
@@ -253,11 +248,10 @@ class rt3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %-10s %97s %5s" % ("Rentals Ledger Master "\
-            "Report as at", self.datd, "Page", self.pgnum))
+        self.fpdf.drawText("%-34s %-10s" % ("Rentals Ledger Master "\
+            "Report as at", self.datd))
         self.fpdf.drawText()
         opts = "%-14s %-1s" % ("(Options: Type", self.styp)
         if self.styp == "E":
diff --git a/rtl/rt3040.py b/rtl/rt3040.py
old mode 100755
new mode 100644
diff --git a/rtl/rt3050.py b/rtl/rt3050.py
old mode 100755
new mode 100644
diff --git a/rtl/rt4010.py b/rtl/rt4010.py
old mode 100755
new mode 100644
index ea7f461..ec090e8
--- a/rtl/rt4010.py
+++ b/rtl/rt4010.py
@@ -52,8 +52,6 @@ class rt4010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -258,11 +256,8 @@ class rt4010(object):
     def doPrintOption(self, opt):
         if opt == "N":
             return
-        self.head = ("%03u %-30s %59s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-101s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt != "T":
             self.pageHeading()
@@ -351,12 +346,10 @@ class rt4010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-34s %-10s %53s %5s" % \
-            ("Rentals Ledger Interrogation as at", self.sysdtd, "Page",
-            self.pgnum))
+        self.fpdf.drawText("%-34s %-10s" % \
+            ("Rentals Ledger Interrogation as at", self.sysdtd))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 6
diff --git a/rtl/rt6010.py b/rtl/rt6010.py
old mode 100755
new mode 100644
diff --git a/rtl/rtc110.py b/rtl/rtc110.py
old mode 100755
new mode 100644
diff --git a/rtl/rtc210.py b/rtl/rtc210.py
old mode 100755
new mode 100644
diff --git a/rtl/rtm010.py b/rtl/rtm010.py
old mode 100755
new mode 100644
diff --git a/scp/sc1010.py b/scp/sc1010.py
old mode 100755
new mode 100644
diff --git a/scp/sc2010.py b/scp/sc2010.py
old mode 100755
new mode 100644
index c14a7b5..6d3560f
--- a/scp/sc2010.py
+++ b/scp/sc2010.py
@@ -219,7 +219,7 @@ Do You Want to Modify and Redraw It?""", default="no")
             self.pcod = cod
         chk = self.sql.getRec("scpmem", cols=["scm_surname",
             "scm_names", "scm_gender"], where=[("scm_cono", "=",
-            self.opts["conum"]), ("scm_scod", "=", self.scod)], limit=1)
+            self.opts["conum"]), ("scm_scod", "=", cod)], limit=1)
         if not chk:
             return "Invalid Player Code"
         if self.tsex in ("M", "F") and chk[2] != self.tsex:
diff --git a/scp/sc2020.py b/scp/sc2020.py
old mode 100755
new mode 100644
index e1cca32..e096966
--- a/scp/sc2020.py
+++ b/scp/sc2020.py
@@ -731,12 +731,12 @@ class sc2020(object):
             else:
                 head = (self.rnds * 26) + 25
             self.fpdf = MyFpdf(name=self.__class__.__name__, head=head,
-                font="Helvetica", foot=True)
+                font="Helvetica")
             self.fpdf.def_orientation = "P"
             self.fpdf.font[2] = 5
         else:
             self.fpdf = MyFpdf(name=self.__class__.__name__, head=65,
-                font="Helvetica", foot=True)
+                font="Helvetica")
         recs = self.sql.getRec("scpgme", cols=["scg_snum", "scg_subs"],
             where=self.gwhr, group="scg_snum, scg_subs",
             order="scg_snum, scg_subs")
diff --git a/scp/sc2030.py b/scp/sc2030.py
old mode 100755
new mode 100644
diff --git a/scp/sc3010.py b/scp/sc3010.py
old mode 100755
new mode 100644
index 86d27ea..c5e25a0
--- a/scp/sc3010.py
+++ b/scp/sc3010.py
@@ -86,7 +86,7 @@ class sc3010(object):
         recs = self.sql.getRec(tables=["scpent", "scpmem", "scpclb"], cols=col,
             where=whr, order="scm_surname")
         if recs:
-            self.fpdf = MyFpdf(auto=True, name="sc3010", head=90, foot=True)
+            self.fpdf = MyFpdf(auto=True, name="sc3010", head=90)
             self.fpdf.header = self.doHead
             self.fpdf.add_page()
             cwth = self.fpdf.cwth
diff --git a/scp/scc110.py b/scp/scc110.py
old mode 100755
new mode 100644
diff --git a/sls/si2010.py b/sls/si2010.py
old mode 100755
new mode 100644
index 0ee6b7a..05514de
--- a/sls/si2010.py
+++ b/sls/si2010.py
@@ -44,9 +44,9 @@ class si2010(object):
         tables = [
             "ctlsys", "ctlmst", "ctlmes", "ctlrep", "ctlvrf", "ctlvtf",
             "drschn", "drsmst", "drstrn", "drsdel", "genmst", "gentrn",
-            "strgrp", "strmf1", "strmf2", "strprc", "strgmu", "strcmu",
-            "strrcp", "strtrn", "struoi", "slsctl", "slsiv1", "slsiv2",
-            "slsiv3", "tplmst"]
+            "strgrp", "strmf1", "strmf2", "strgmu", "strcmu", "strrcp",
+            "strtrn", "struoi", "slsctl", "slsiv1", "slsiv2", "slsiv3",
+            "tplmst"]
         self.sql = Sql(self.opts["mf"].dbm, tables,
             prog=self.__class__.__name__)
         if self.sql.error:
@@ -127,7 +127,7 @@ class si2010(object):
         self.pr = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=fld, tend=((self.doPrtClose,"y"),), txit=(self.doPrtExit,),
             view=("N","P"), mail=("N","Y","Y"))
-        self.pr.mstFrame.wait_window()
+        self.opts["mf"].startLoop()
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec("tplmst", where=[("tpm_tname", "=", w),
@@ -153,6 +153,7 @@ class si2010(object):
 
     def doPrtClose(self):
         self.pr.closeProcess()
+        self.opts["mf"].closeLoop()
 
     def mainProcess(self):
         rep = {
@@ -1096,7 +1097,7 @@ class si2010(object):
             eflds=fld, tend=((self.doDelEnd,"y"),), txit=(self.doDelExit,),
             focus=False)
         if self.drsdel:
-            self.doLoadDel("y")
+            self.doLoadDel(True)
         else:
             self.da.focusField("T", 0, 1)
         self.da.mstFrame.wait_window()
@@ -1113,7 +1114,7 @@ class si2010(object):
             return "nd"
 
     def doLoadDel(self, focus=False):
-        for n, m in enumerate(self.drsdel):
+        for n, m in enumerate(self.drsdel[:-1]):
             self.da.loadEntry("T", 0, n, data=m)
         if focus:
             self.da.focusField("T", 0, 2, clr=False)
@@ -1704,7 +1705,9 @@ class si2010(object):
                     self.oldline)])
                 for item in items:
                     quan = item[6] * qty
-                    cost = item[7] * quan
+                    icost = getCost(self.sql, self.opts["conum"], item[4],
+                        item[5], loc=self.loc, qty=1, ind="I")
+                    cost = icost * quan
                     data = [self.opts["conum"], item[4], item[5], self.loc,
                         self.trdt, 6, self.othno, self.batch, ref2, quan, cost,
                         0, self.curdt, self.name, self.chain, self.acno,
diff --git a/sls/si3010.py b/sls/si3010.py
old mode 100755
new mode 100644
index cb29305..642dbdc
--- a/sls/si3010.py
+++ b/sls/si3010.py
@@ -190,13 +190,10 @@ class si3010(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.rtype == "L":
-            self.head = ("%03u %-30s %115s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-157s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %44s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-86s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -288,7 +285,6 @@ class si3010(object):
         self.fpdf.setFont()
 
     def pageHeading(self):
-        self.pgnum += 1
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
         self.fpdf.drawText(self.head)
@@ -299,14 +295,8 @@ class si3010(object):
             txt = "Works"
         else:
             txt = "Quote"
-        if self.rtype == "L":
-            self.fpdf.drawText("%-40s %-10s %64s %5s" % \
-                ("Outstanding %s Documents Report as at" % txt, self.sysdtd,
-                "Page", self.pgnum))
-        else:
-            self.fpdf.drawText("%-40s %-10s %35s %5s" % \
-                ("Outstanding %s Documents Report as at" % txt, self.sysdtd,
-                "Page", self.pgnum))
+        self.fpdf.drawText("%-37s %-10s" % \
+            ("Outstanding %s Documents Report as at" % txt, self.sysdtd))
         self.fpdf.setFont()
         self.pglin = 3
 
diff --git a/sls/si3020.py b/sls/si3020.py
old mode 100755
new mode 100644
index 38367d5..b4df2d6
--- a/sls/si3020.py
+++ b/sls/si3020.py
@@ -57,8 +57,6 @@ class si3020(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
         self.colsh = [["", "", "", "",
             ["*********** Month to Date **********", 4, 7],
             ["*********** Year To Date ***********", 8, 11]]]
@@ -160,7 +158,8 @@ class si3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Sales Report By Product up to %s" % self.cutper)
         self.expcolsh = self.colsh
         self.expforms = self.forms
@@ -185,11 +184,9 @@ class si3020(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %-66s %-40s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm))
+        self.head = "%03u %-138s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         lstgrp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -288,11 +285,10 @@ class si3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-29s %-7s %98s %5s" % \
-            ("Sales Report By Product up to", self.cutper, "Page", self.pgnum))
+        self.fpdf.drawText("%-29s %-7s" % \
+            ("Sales Report By Product up to", self.cutper))
         self.fpdf.drawText()
         acc = self.getGroup(self.grp.work)
         if acc:
diff --git a/sls/si3030.py b/sls/si3030.py
old mode 100755
new mode 100644
index 73a56e4..b345c79
--- a/sls/si3030.py
+++ b/sls/si3030.py
@@ -55,8 +55,6 @@ class si3030(object):
         self.fromad = slsctl["ctv_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -145,13 +143,11 @@ class si3030(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %-10s %-49s %-9s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-108s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.stot = [0] * 3
         self.gtot = [0] * 3
         lstgrp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, rec in enumerate(recs):
             p.displayProgress(num)
@@ -216,12 +212,11 @@ class si3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         per = CCD(self.per, "D2", 7)
-        self.fpdf.drawText("%-27s %-7s %70s %5s" % \
-            ("Period Sales By Product for", per.disp, "Page", self.pgnum))
+        self.fpdf.drawText("%-27s %-7s" % \
+            ("Period Sales By Product for", per.disp))
         self.fpdf.drawText()
         acc = self.getGroup(self.grp.work)
         if acc:
diff --git a/sls/si3040.py b/sls/si3040.py
old mode 100755
new mode 100644
index db26199..8aab325
--- a/sls/si3040.py
+++ b/sls/si3040.py
@@ -64,8 +64,6 @@ class si3040(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
         self.forms = [("UA",3),("NA",20),("NA",30),("NA",10)] + [("SI",10)]*12
         self.stots = [0] * 12
         self.gtots = [0] * 12
@@ -218,7 +216,8 @@ class si3040(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Stores Sales History for the 12 Month Period "\
             "to %s" % self.coffd)
         self.expcolsh = [self.colsh]
@@ -233,20 +232,19 @@ class si3040(object):
             if not vals:
                 continue
             cod, dsc, uoi, amt, purchd, purchw = vals
-            line = ["BODY", [self.grp.work,cod.work,dsc.work,uoi.work]+purchw]
+            line = ["BODY", [self.grp.work, cod.work, dsc.work, uoi.work]]
+            line[1].extend(purchw)
             self.expdatas.append(line)
         p.closeProgress()
         self.grandTotal()
-        doWriteExport(xtype=self.df.repprt[1], name=expnam,
-            heads=self.expheads, colsh=self.expcolsh, forms=self.expforms,
-            datas=self.expdatas, rcdic=self.opts["mf"].rcdic)
+        doWriteExport(xtype=self.df.repprt[1], name=expnam, heads=self.expheads,
+            colsh=self.expcolsh, forms=self.expforms, datas=self.expdatas,
+            rcdic=self.opts["mf"].rcdic)
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %110s %40s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm))
+        self.head = "%03u %-182s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         self.lstgrp = ""
         for num, dat in enumerate(recs):
@@ -323,12 +321,10 @@ class si3040(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-47s %-7s %124s %5s" % \
-            ("Stores Sales History for the 12 Month Period to", self.coffd,
-            "Page", self.pgnum))
+        self.fpdf.drawText("%-47s %-7s" % \
+            ("Stores Sales History for the 12 Month Period to", self.coffd))
         self.fpdf.drawText()
         acc = self.getGroup(self.grp.work)
         if acc:
@@ -376,8 +372,10 @@ class si3040(object):
     def grandTotal(self):
         if self.df.repprt[2] == "export":
             self.expdatas.append(["ULINES"])
-            self.expdatas.append(["TOTAL",
-                ["", "", "Grand Totals", ""] + self.gtots])
+            datas = ["TOTAL", ["", "", "Grand Totals", ""]]
+            for x in range(11,-1,-1):
+                datas[1].append(CCD(self.gtots[x], "SI", 10).work)
+            self.expdatas.append(datas)
             self.expdatas.append(["ULINED"])
             return
         purchd = ""
diff --git a/sls/si3050.py b/sls/si3050.py
old mode 100755
new mode 100644
index 0c9eccd..7d9704d
--- a/sls/si3050.py
+++ b/sls/si3050.py
@@ -56,8 +56,6 @@ class si3050(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -206,20 +204,16 @@ class si3050(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.vals == "Y":
-            spc1 = " " * 12
-            spc2 = " " * 11
+            spc = " " * 67
         else:
-            spc1 = " " * 28
-            spc2 = " " * 27
-        self.head = ("%03u %-30s %s %35s %s %6s" % (self.opts["conum"],
-            self.opts["conam"], spc1, self.sysdttm, spc2,
-                self.__class__.__name__))
+            spc = " " * 99
+        self.head = "%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], spc)
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.dtot = [0] * 3
         self.gtot = [0] * 3
         old_chn = recs[0][8]
         old_drs = recs[0][9]
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -278,16 +272,10 @@ class si3050(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.vals == "Y":
-            spc = " " * 49
-        else:
-            spc = " " * 81
-        self.fpdf.drawText("%-30s %-10s %s %4s %5s" % \
-            ("Sales By Customer Report as at", self.sysdtd, spc,
-            "Page", self.pgnum))
+        self.fpdf.drawText("%-30s %-10s" % \
+            ("Sales By Customer Report as at", self.sysdtd))
         self.fpdf.drawText()
         if not self.drsact:
             act = "All"
diff --git a/sls/si3060.py b/sls/si3060.py
old mode 100755
new mode 100644
index 62c1851..df04f72
--- a/sls/si3060.py
+++ b/sls/si3060.py
@@ -52,8 +52,6 @@ class si3060(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -131,13 +129,11 @@ class si3060(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %32s %33s %33s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-138s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.stot = [0] * 3
         self.gtot = [0] * 3
         old_rep = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -189,21 +185,19 @@ class si3060(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-30s %-10s %94s %5s" % \
-            ("Sales By Salesman Report as at",
-            self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-30s %-10s" % \
+            ("Sales By Salesman Report as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-23s%-7s%-3s%-11s%-7s%-1s" % \
             ("(Options: Start Period ", self.df.t_disp[0][0][0], "",
                 "End Period ", self.df.t_disp[0][0][1], ")"))
         self.fpdf.drawText()
         rep = self.sql.getRec("ctlrep", cols=["rep_name"],
-            where=[("rep_cono", "=", self.opts["conum"]), ("rep_code", "=",
-            self.rep.work)], limit=1)
-        if not rep:
+            where=[("rep_cono", "=", self.opts["conum"]),
+            ("rep_code", "=", self.rep.work)], limit=1)
+        if rep:
             repn = rep[0]
         else:
             repn = ""
diff --git a/sls/si3070.py b/sls/si3070.py
old mode 100755
new mode 100644
index 9a3f580..da4dec7
--- a/sls/si3070.py
+++ b/sls/si3070.py
@@ -52,8 +52,6 @@ class si3070(object):
         self.fromad = slsctl["ctv_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.mchart = []
         return True
 
@@ -131,12 +129,10 @@ class si3070(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %48s %33s %48s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-169s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.stots = [0] * 13
         self.ctots = [0] * 13
-        self.pgnum = 0
         self.pglin = 999
         for x1, r1 in enumerate(recs):
             p.displayProgress(x1)
@@ -206,12 +202,11 @@ class si3070(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         per = CCD(self.end, "D2", 7)
-        self.fpdf.drawText("%-29s %-7s %129s %5s" % \
-            ("Salesman's Sales History up to", per.disp, "Page", self.pgnum))
+        self.fpdf.drawText("%-29s %-7s" % \
+            ("Salesman's Sales History up to", per.disp))
         self.fpdf.drawText()
         if self.rep1:
             opt = "(Options: From Rep %s" % self.rep1
diff --git a/sls/si3080.py b/sls/si3080.py
old mode 100755
new mode 100644
diff --git a/sls/si3090.py b/sls/si3090.py
old mode 100755
new mode 100644
diff --git a/sls/si6010.py b/sls/si6010.py
old mode 100755
new mode 100644
diff --git a/sls/si6020.py b/sls/si6020.py
old mode 100755
new mode 100644
diff --git a/sls/sic110.py b/sls/sic110.py
old mode 100755
new mode 100644
diff --git a/str/st1010.py b/str/st1010.py
old mode 100755
new mode 100644
index 4c2ea23..6483841
--- a/str/st1010.py
+++ b/str/st1010.py
@@ -156,7 +156,7 @@ class st1010(object):
             (("T",1,2,0),"INA",10,"Unit of Issue","",
                 "","N",self.doUoi,unm,None,("notblank",)),
             (("T",1,2,0),"ONA",30,""),
-            (("T",1,3,0),("IRB",r2s),0,"Value Indicator","",
+            (("T",1,3,0),("IRB",r2s),0,"Cost Price Indicator","",
                 "A","N",self.doValInd,None,None,None),
             (("T",1,4,0),"IUA",1,"VAT Code","",
                 "","N",self.doVat,vtm,None,("notblank",)),
diff --git a/str/st1020.py b/str/st1020.py
old mode 100755
new mode 100644
diff --git a/str/st1030.py b/str/st1030.py
old mode 100755
new mode 100644
diff --git a/str/st2010.py b/str/st2010.py
old mode 100755
new mode 100644
index fe8e366..5614da9
--- a/str/st2010.py
+++ b/str/st2010.py
@@ -44,7 +44,7 @@ class st2010(object):
         self.sql = Sql(self.opts["mf"].dbm, ["ctlmst", "ctlmes", "ctlvrf",
             "ctlrep", "crsmst", "gentrn", "strgrp", "strloc", "strmf1",
             "strmf2", "strpom", "strpot", "strtrn", "strgmu", "strcmu",
-            "strprc", "tplmst"], prog=self.__class__.__name__)
+            "tplmst"], prog=self.__class__.__name__)
         if self.sql.error:
             return
         gc = GetCtl(self.opts["mf"])
@@ -98,7 +98,7 @@ class st2010(object):
         self.pr = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=fld, tend=((self.doPrtEnd,"y"),), txit=(self.doPrtExit,),
             view=("N","P"), mail=("N","Y","Y"))
-        self.pr.mstFrame.wait_window()
+        self.opts["mf"].startLoop()
 
     def doTplNam(self, frt, pag, r, c, p, i, w):
         acc = self.sql.getRec("tplmst", where=[("tpm_tname", "=", w),
@@ -115,9 +115,6 @@ class st2010(object):
         self.curdt = int(self.trdt / 100)
         self.batch = "S%s" % self.curdt
 
-    #def doAutoMkUp(self, frt, pag, r, c, p, i, w):
-    #    self.mkup = w
-
     def doPrtEnd(self):
         self.doPrtClose()
 
@@ -127,6 +124,7 @@ class st2010(object):
 
     def doPrtClose(self):
         self.pr.closeProcess()
+        self.opts["mf"].closeLoop()
 
     def mainProcess(self):
         doc = {
@@ -464,6 +462,7 @@ class st2010(object):
             return "Invalid Code (Redundant)"
         if strmf1[self.sql.strmf1_col.index("st1_value_ind")] == "N":
             return "Invalid Code (Value Indicator)"
+        self.vatcod = strmf1[self.sql.strmf1_col.index("st1_vatcode")]
         strmf2 = self.sql.getRec("strmf2", where=[("st2_cono", "=",
             self.opts["conum"]), ("st2_group", "=", self.grp), ("st2_code",
             "=", w), ("st2_loc", "=", self.loc)], limit=1)
@@ -499,6 +498,7 @@ class st2010(object):
 
     def doQty(self, frt, pag, r, c, p, i, w):
         self.qty = w
+        self.df.loadEntry(frt, pag, p+1, data=self.vatcod)
 
     def doVat(self, frt, pag, r, c, p, i, w):
         self.vatrte = getVatRate(self.sql, self.opts["conum"], w, self.trdt)
diff --git a/str/st2020.py b/str/st2020.py
old mode 100755
new mode 100644
index b922c97..d1c18a8
--- a/str/st2020.py
+++ b/str/st2020.py
@@ -26,8 +26,7 @@ COPYING
 
 import time
 from TartanClasses import ASD, FileImport, GetCtl, RepPrt, Sql, TartanDialog
-from tartanFunctions import askQuestion, callModule, getCost, getSell
-from tartanFunctions import showError
+from tartanFunctions import askQuestion, callModule, getCost, showError
 
 class st2020(object):
     def __init__(self, **opts):
@@ -41,7 +40,7 @@ class st2020(object):
 
     def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["gentrn", "strgrp", "strmf1",
-            "strmf2", "strgmu", "strcmu", "strtrn", "strpom", "strprc"],
+            "strmf2", "strgmu", "strcmu", "strtrn", "strpom"],
             prog=self.__class__.__name__)
         if self.sql.error:
             return
@@ -59,7 +58,6 @@ class st2020(object):
         self.glint = strctl["cts_glint"]
         self.locs = strctl["cts_locs"]
         self.plevs = strctl["cts_plevs"]
-        self.automu = strctl["cts_automu"]
         self.fromad = strctl["cts_emadd"]
         if self.glint == "Y":
             ctlctl = gc.getCtl("ctlctl", self.opts["conum"])
@@ -81,7 +79,7 @@ class st2020(object):
         self.pr = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=[], tend=((self.doPrtEnd,"y"),), txit=(self.doPrtExit,),
             view=("N","P"), mail=("N","Y"))
-        self.pr.mstFrame.wait_window()
+        self.opts["mf"].startLoop()
 
     def doPrtEnd(self):
         self.doPrtClose()
@@ -92,6 +90,7 @@ class st2020(object):
 
     def doPrtClose(self):
         self.pr.closeProcess()
+        self.opts["mf"].closeLoop()
 
     def dataHeader(self):
         gpm = {
@@ -150,9 +149,6 @@ class st2020(object):
             (("C",0,0,7),"IUD",5.2,"Dis-%","Discount Percentage",
                 "","N",self.doDisPer,None,None,("efld",)),
             (("C",0,0,8),"OSD",9.2,"Value")]
-        if self.automu == "N":
-            fld.append((("C",0,0,9),"IUD",9.2,"Unit-Sell","Unit Selling Price",
-                "","N",self.doUsell,None,None,("efld",)))
         tnd = ((self.endPage0,"n"),)
         txt = (self.exitPage0,)
         cnd = ((self.endPage1,"y"),)
@@ -327,13 +323,6 @@ class st2020(object):
         self.ucost = float(ASD(self.ucost) - ASD(udis))
         self.tcost = float(ASD(self.tcost) - ASD(tdis))
         self.df.loadEntry(frt, pag, p+1, data=self.tcost)
-        if self.automu == "N":
-            self.usell = getSell(self.sql, self.opts["conum"],
-                self.group, self.code, self.loc, 1, ind="P")
-            self.df.loadEntry(frt, pag, p+2, data=self.usell)
-
-    def doUsell(self, frt, pag, r, c, p, i, w):
-        self.nsell = w
 
     def endPage0(self):
         self.df.focusField("C", 0, 1)
@@ -370,14 +359,6 @@ class st2020(object):
             self.tcost, 0, self.curdt, self.desc, 0, "", "", "STR",
             self.trdis, "N", self.opts["capnm"], self.sysdtw, 0]
         self.sql.insRec("strtrn", data=data)
-        if self.automu == "N" and self.nsell != self.usell:
-            # Price Record
-            self.sql.delRec("strprc", where=[("stp_cono", "=",
-                self.opts["conum"]), ("stp_group", "=", self.group),
-                ("stp_code", "=", self.code), ("stp_loc", "=", self.loc),
-                ("stp_level", "=", 1)])
-            self.sql.insRec("strprc", data=[self.opts["conum"],
-                self.group, self.code, self.loc, 1, self.nsell])
         if self.glint == "N":
             return
         # General Ledger Control Transaction (Stock On Hand)
diff --git a/str/st2030.py b/str/st2030.py
old mode 100755
new mode 100644
index cca40d9..438813c
--- a/str/st2030.py
+++ b/str/st2030.py
@@ -71,7 +71,7 @@ class st2030(object):
         self.pr = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=[], tend=((self.doPrtEnd,"y"),), txit=(self.doPrtExit,),
             view=("N","P"))
-        self.pr.mstFrame.wait_window()
+        self.opts["mf"].startLoop()
 
     def doPrtEnd(self):
         self.doPrtClose()
@@ -82,6 +82,7 @@ class st2030(object):
 
     def doPrtClose(self):
         self.pr.closeProcess()
+        self.opts["mf"].closeLoop()
 
     def dataHeader(self):
         gpm = {
diff --git a/str/st2040.py b/str/st2040.py
old mode 100755
new mode 100644
diff --git a/str/st3010.py b/str/st3010.py
old mode 100755
new mode 100644
index 2f012db..18af607
--- a/str/st3010.py
+++ b/str/st3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class st3010(object):
         if not strctl:
             return
         self.fromad = strctl["cts_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,12 +113,9 @@ class st3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %43s %6s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-81s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.strtrn_col
@@ -179,11 +172,9 @@ class st3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-33s %-45s %5s" %
-            ("Stores Ledger Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("Stores Ledger Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/str/st3020.py b/str/st3020.py
old mode 100755
new mode 100644
index 0b865f9..d39237b
--- a/str/st3020.py
+++ b/str/st3020.py
@@ -54,8 +54,6 @@ class st3020(object):
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
             (t[0], t[1], t[2], t[3], t[4])
-        self.head = ("%03u %-30s %s" % (self.opts["conum"], self.opts["conam"],
-            "%s"))
         self.colsh = ["TP", "BatchNo", "Grp", "Product-Code", "L",
             "Reference", "Date", "Remarks", "Acc-Num", "Quantity",
             "Cost-Value", "Sale-Value"]
@@ -185,6 +183,12 @@ class st3020(object):
 
     def doTots(self, frt, pag, r, c, p, i, w):
         self.totsonly = w
+        if self.totsonly == "Y":
+            self.df.setWidget(self.df.topEntry[0][8][3][0], state="hide")
+            self.df.setWidget(self.df.topEntry[0][8][4][0], state="hide")
+        else:
+            self.df.setWidget(self.df.topEntry[0][8][3][0], state="show")
+            self.df.setWidget(self.df.topEntry[0][8][4][0], state="show")
 
     def doEnd(self):
         self.df.closeProcess()
@@ -207,7 +211,8 @@ class st3020(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Store's Ledger Audit Trail for Period "\
             "%s to %s" % (self.sperd, self.eperd))
         self.expcolsh = [self.colsh]
@@ -236,13 +241,9 @@ class st3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %1s %33s %1s %6s" % (self.opts["conum"],
-                self.opts["conam"], "", self.sysdttm, "",
-                    self.__class__.__name__))
+            self.head = "%03u %-75s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %25s %33s %25s %6s" % (self.opts["conum"],
-                self.opts["conam"], "", self.sysdttm, "",
-                    self.__class__.__name__))
+            self.head = "%03u %-123s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bcnt = 0
         self.bqty = 0
@@ -253,7 +254,6 @@ class st3020(object):
         self.tcst = 0
         self.tsel = 0
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -333,17 +333,11 @@ class st3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText("%-36s %-10s %-2s %-10s "\
-            "%11s %5s" % ("Stores Ledger Audit Trail for Period",
-            self.sperd, "to", self.eperd, "Page", self.pgnum))
-        else:
-            self.fpdf.drawText("%-36s %-10s %-2s %-10s %59s %5s" % \
+        self.fpdf.drawText("%-36s %-7s %-2s %-7s" % \
             ("Stores Ledger Audit Trail for Period",
-            self.sperd, "to", self.eperd, "Page", self.pgnum))
+            self.sperd, "to", self.eperd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/str/st3030.py b/str/st3030.py
old mode 100755
new mode 100644
index b7ff834..63993ed
--- a/str/st3030.py
+++ b/str/st3030.py
@@ -239,11 +239,10 @@ class st3030(object):
         hdr = 77 + (len(self.levs) * 10)
         if self.costs == "Y":
             hdr += 22
-        self.head = ("%03u %-30s" % (self.opts["conum"], self.opts["conam"]))
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=hdr, foot=True)
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=hdr)
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         old_grp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -276,10 +275,9 @@ class st3030(object):
 
     def printCost(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s" % (self.opts["conum"], self.opts["conam"]))
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=100, foot=True)
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=100)
         old_grp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -321,7 +319,7 @@ class st3030(object):
         if self.rtype == "C":
             return (grp, code, desc, uoi, qty, acst, lcst)
         # Selling Prices
-        vat = CCD(data[4], "NA", 1)
+        vat = CCD(data[4], "UA", 1)
         rte = 0
         if self.vatinc == "Y":
             vatrte = getVatRate(self.sql, self.opts["conum"],
@@ -347,7 +345,6 @@ class st3030(object):
         locd = self.getLoc(self.loc)[0]
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
         if self.rtype == "S":
diff --git a/str/st3040.py b/str/st3040.py
old mode 100755
new mode 100644
index 19a9da9..a056035
--- a/str/st3040.py
+++ b/str/st3040.py
@@ -147,11 +147,9 @@ class st3040(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %8s %33s %8s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-89s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         old_grp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -188,11 +186,10 @@ class st3040(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-29s %-10s %45s %5s" % \
-            ("Stores Master Code List as at", self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-29s %-10s" % \
+            ("Stores Master Code List as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-5s %3s" % ("Group", self.groupd))
         self.fpdf.drawText()
diff --git a/str/st3050.py b/str/st3050.py
old mode 100755
new mode 100644
index 9ff3bc1..4d5f636
--- a/str/st3050.py
+++ b/str/st3050.py
@@ -49,8 +49,6 @@ class st3050(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -145,11 +143,9 @@ class st3050(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %33s %6s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
+        self.head = "%03u %-71s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         oldrec = ""
-        self.pgnum = 0
         self.pglin = 999
         st1 = self.sql.strmf1_col
         srr = self.sql.strrcp_col
@@ -198,8 +194,7 @@ class st3050(object):
                 fromad=self.fromad, repeml=self.df.repeml)
 
     def pageHeading(self, grp, cod, chg=False):
-        if self.pgnum and self.page == "N" and chg and \
-                            self.pglin < (self.fpdf.lpp - 10):
+        if self.page == "N" and chg and self.pglin < (self.fpdf.lpp - 10):
             self.fpdf.drawText()
             self.fpdf.drawText()
             self.fpdf.setFont(style="B")
@@ -207,11 +202,10 @@ class st3050(object):
         else:
             self.fpdf.add_page()
             self.fpdf.setFont(style="B")
-            self.pgnum += 1
             self.fpdf.drawText(self.head)
             self.fpdf.drawText()
-            self.fpdf.drawText("%-19s %-10s %38s %5s" % ("Stock Recipes as at",
-                self.sysdtd, "Page", self.pgnum))
+            self.fpdf.drawText("%-19s %-10s" % ("Stock Recipes as at",
+                self.sysdtd))
             self.fpdf.drawText()
             self.pglin = 4
         self.fpdf.drawText("%-5s %3s  %-4s %s  %-8s %s %s" % ("Group", grp,
diff --git a/str/st3060.py b/str/st3060.py
old mode 100755
new mode 100644
index 585c0cd..2d81ce0
--- a/str/st3060.py
+++ b/str/st3060.py
@@ -182,11 +182,9 @@ class st3060(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %44s %33s %44s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-161s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         old_grp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -253,13 +251,10 @@ class st3060(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-68s %90s %5s" % \
-            ("Stock Movement Report as at %s for Period "\
-            "%s to %s" % (self.sysdtd, self.sdatd, self.edatd),
-            "Page", self.pgnum))
+        self.fpdf.drawText("Stock Movement Report as at %s for Period "\
+            "%s to %s" % (self.sysdtd, self.sdatd, self.edatd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-5s %3s      %-8s %s  %s" % \
             ("Group", self.groupd, "Location", self.loc, self.locd))
diff --git a/str/st3070.py b/str/st3070.py
old mode 100755
new mode 100644
index d272b91..13dd393
--- a/str/st3070.py
+++ b/str/st3070.py
@@ -50,8 +50,6 @@ class st3070(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.maxlines = 20
         return True
 
@@ -167,13 +165,10 @@ class st3070(object):
     def printSetup(self, recs):
         self.p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.rtyp == "D":
-            self.head = ("%03u %-30s %43s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-85s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %65s %10s" % (self.opts["conum"],
-                self.opts["conam"], self.sysdttm, self.__class__.__name__))
+            self.head = "%03u %-107s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
 
     def doDetail(self, recs):
@@ -247,7 +242,6 @@ class st3070(object):
         self.p.closeProgress()
 
     def printHeader(self):
-        self.pgnum += 1
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
         self.fpdf.drawText(self.head)
@@ -256,18 +250,10 @@ class st3070(object):
             txt = "%-39s %3s %-5s %-10s" % \
                 ("Outstanding Orders Report for Location", self.locd, "as at",
                     self.sysdtd)
-            if self.rtyp == "D":
-                txt = "%s %22s %5s" % (txt, "Page", self.pgnum)
-            else:
-                txt = "%s %44s %5s" % (txt, "Page", self.pgnum)
         else:
             txt = "%-27s %3s %-5s %-10s" % \
                 ("Orders Report for Location", self.locd, "as at",
                     self.sysdtd)
-            if self.rtyp == "D":
-                txt = "%s %34s %5s" % (txt, "Page", self.pgnum)
-            else:
-                txt = "%s %56s %5s" % (txt, "Page", self.pgnum)
         self.fpdf.drawText(txt)
         self.fpdf.drawText()
         if self.rtyp == "D":
diff --git a/str/st3080.py b/str/st3080.py
old mode 100755
new mode 100644
index 66ec13d..ae3e4d8
--- a/str/st3080.py
+++ b/str/st3080.py
@@ -56,8 +56,6 @@ class st3080(object):
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i) %6s" % (t[0],
             t[1], t[2], t[3], t[4], self.__class__.__name__)
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
         self.colsh = ["Grp", "Product-Code", "Description", "U.O.I",
             "Qty-Balance", "Val-Balance"]
         self.forms = [("UA", 3), ("NA", 20), ("NA", 30), ("NA", 10),
@@ -188,7 +186,8 @@ class st3080(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = ["%03u %-30s %s" % (self.opts["conum"],
+            self.opts["conam"], self.sysdttm)]
         self.expheads.append("Stock On Hand Report as at %s" % self.date.disp)
         self.expcolsh = [self.colsh]
         self.expforms = self.forms
@@ -211,12 +210,10 @@ class st3080(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %5s %46s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm))
+        self.head = "%03u %-83s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.stot = 0
         old_grp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -277,11 +274,10 @@ class st3080(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-26s %-10s %43s %5s" % \
-            ("Stock On Hand Report as at", self.date.disp, "Page", self.pgnum))
+        self.fpdf.drawText("%-26s %-10s" % \
+            ("Stock On Hand Report as at", self.date.disp))
         self.fpdf.drawText()
         self.fpdf.drawText("%-5s %3s      %-8s %s  %s" % ("Group", self.groupd,
             "Location", self.loc, self.locd))
diff --git a/str/st3090.py b/str/st3090.py
old mode 100755
new mode 100644
index 14f47b9..eb35378
--- a/str/st3090.py
+++ b/str/st3090.py
@@ -54,8 +54,6 @@ class st3090(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -173,11 +171,9 @@ class st3090(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %7s %33s %7s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-87s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         lstgrp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -233,11 +229,10 @@ class st3090(object):
     def pageHeading(self, grp, cod, desc):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-30s %-10s %43s %5s" % ("Stock Account "\
-            "Statements as at", self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-30s %-10s" % ("Stock Account "\
+            "Statements as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-21s%-7s%-3s%-9s%-7s%-1s" % \
             ("(Options: Start Date-", self.df.t_disp[0][0][0], "",
diff --git a/str/st3100.py b/str/st3100.py
old mode 100755
new mode 100644
diff --git a/str/st3110.py b/str/st3110.py
old mode 100755
new mode 100644
index 61e5087..e694d29
--- a/str/st3110.py
+++ b/str/st3110.py
@@ -51,8 +51,6 @@ class st3110(object):
         self.locs = strctl["cts_locs"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/str/st3120.py b/str/st3120.py
old mode 100755
new mode 100644
index 26a220c..2000f90
--- a/str/st3120.py
+++ b/str/st3120.py
@@ -52,8 +52,7 @@ class st3120(object):
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
         self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
             t[1], t[2], t[3], t[4])
-        self.head = ("%03u %-30s %s" % (self.opts["conum"],
-            self.opts["conam"], "%s"))
+        self.head = "%03u %-30s" % (self.opts["conum"], self.opts["conam"])
         self.colsh = ["Grp", "Product-Code", "Description", "U.O.I",
             "Qty-Balance", "Qty-OnOrder", "Qty-BkOrder", "Qty-ToOrder"]
         self.forms = [("UA", 3), ("NA", 20), ("NA", 30), ("NA", 10),
@@ -146,7 +145,7 @@ class st3120(object):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         expnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"])
-        self.expheads = [self.head % self.sysdttm]
+        self.expheads = [self.head + " %s" % self.sysdttm]
         self.expheads.append("Stock to Order Report as at %s" % self.sysdtd)
         self.expheads.append("(Options: Report Date %s)" % self.repdtd)
         self.expheads.append("Location %s  %s" % (self.loc, self.locd))
@@ -177,16 +176,14 @@ class st3120(object):
             chrs -= 2
         else:
             chrs -= 1
-        pad = chrs - 35 - len(self.sysdttm)
-        self.head1 = self.head % (" " * pad + self.sysdttm)
-        self.head2 = "Stock to Order Report as at %s%s" % (self.sysdtd, "%s%s")
-        pad = chrs - len(self.head2) + 4 - 11          # %s%s and ' Page     1'
-        self.head2 = self.head2 % (" " * pad, " Page %5s")
+        self.head1 = self.head
+        self.head2 = "Stock to Order Report as at %s" % self.sysdtd
+        pad = chrs - len(self.head2)
+        self.head2 = self.head2 + (" " * pad)
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head2)
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -250,12 +247,11 @@ class st3120(object):
         return (grp, code, desc, uoi, cbal, obal, bbal, tbal)
 
     def pageHeading(self):
-        self.pgnum += 1
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
         self.fpdf.drawText(self.head1)
         self.fpdf.drawText()
-        self.fpdf.drawText(self.head2 % self.pgnum)
+        self.fpdf.drawText(self.head2)
         self.fpdf.drawText()
         self.fpdf.drawText("%-22s%-10s%-1s" % \
             ("(Options: Report Date-", self.df.t_disp[0][0][0], ")"))
@@ -266,7 +262,7 @@ class st3120(object):
         self.fpdf.drawText("%-3s %-20s %-30s %-10s %11s  %11s  %11s  %11s" % \
             ("Grp", "Product-Code", "Description", "U.O.I", "Qty-Balance",
             "Qty-OnOrder", "Qty-BkOrder", "Qty-ToOrder"))
-        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head1)))
+        self.fpdf.drawText("%s" % (self.fpdf.suc * len(self.head2)))
         self.fpdf.setFont()
         self.pglin = 10
 
diff --git a/str/st4010.py b/str/st4010.py
old mode 100755
new mode 100644
index 1aa0d4b..c76edbc
--- a/str/st4010.py
+++ b/str/st4010.py
@@ -42,9 +42,9 @@ class st4010(object):
 
     def setVariables(self):
         self.sql = Sql(self.opts["mf"].dbm, ["ctlvmf", "drschn", "drsmst",
-            "genmst", "strgrp", "strloc", "strmf1", "strmf2", "strprc",
-            "strgmu", "strcmu", "strrcp", "strtrn", "struoi"],
-                prog=self.__class__.__name__)
+            "genmst", "strgrp", "strloc", "strmf1", "strmf2", "strgmu",
+            "strcmu", "strrcp", "strtrn", "struoi"],
+            prog=self.__class__.__name__)
         if self.sql.error:
             return
         gc = GetCtl(self.opts["mf"])
@@ -61,8 +61,6 @@ class st4010(object):
             self.locs = 1
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         self.per_from = 0
         self.per_to = 0
         return True
diff --git a/str/st5010.py b/str/st5010.py
old mode 100755
new mode 100644
index ef0e5af..c7283d9
--- a/str/st5010.py
+++ b/str/st5010.py
@@ -50,8 +50,6 @@ class st5010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -185,12 +183,10 @@ class st5010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %3s %45s %2s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-90s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         count = 0
         old_grp = ""
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -233,11 +229,10 @@ class st5010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-23s %-10s %41s %5s" % \
-            ("Stock Take Report as at", self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-23s %-10s" % \
+            ("Stock Take Report as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-5s %3s      %-8s %s  %s" % \
             ("Group", self.groupd, "Location", self.loc, self.locd))
diff --git a/str/st5020.py b/str/st5020.py
old mode 100755
new mode 100644
diff --git a/str/st5030.py b/str/st5030.py
old mode 100755
new mode 100644
index fcd6d60..6076e22
--- a/str/st5030.py
+++ b/str/st5030.py
@@ -49,8 +49,6 @@ class st5030(object):
         self.fromad = strctl["cts_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -103,8 +101,7 @@ class st5030(object):
     def printReport(self, recs):
         data = []
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %31s %33s %31s %6s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-135s" % (self.opts["conum"], self.opts["conam"])
         for num, dat in enumerate(recs):
             p.displayProgress(num)
             if p.quit:
diff --git a/str/st5040.py b/str/st5040.py
old mode 100755
new mode 100644
diff --git a/str/st6010.py b/str/st6010.py
old mode 100755
new mode 100644
diff --git a/str/st6020.py b/str/st6020.py
old mode 100755
new mode 100644
diff --git a/str/st6030.py b/str/st6030.py
old mode 100755
new mode 100644
diff --git a/str/st6040.py b/str/st6040.py
old mode 100755
new mode 100644
diff --git a/str/stc110.py b/str/stc110.py
old mode 100755
new mode 100644
diff --git a/str/stc210.py b/str/stc210.py
old mode 100755
new mode 100644
diff --git a/str/stc220.py b/str/stc220.py
old mode 100755
new mode 100644
index 71f4625..dd3d724
--- a/str/stc220.py
+++ b/str/stc220.py
@@ -24,22 +24,14 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import RepPrt, TartanDialog
 
 class stc220(object):
     def __init__(self, **opts):
         self.opts = opts
-        self.setVariables()
         self.mainProcess()
         self.opts["mf"].startLoop()
 
-    def setVariables(self):
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
-
     def mainProcess(self):
         fld = ()
         tnd = ((self.doEnd,"Y"), )
diff --git a/str/stc310.py b/str/stc310.py
old mode 100755
new mode 100644
diff --git a/str/stc320.py b/str/stc320.py
old mode 100755
new mode 100644
index 9c92e64..072119e
--- a/str/stc320.py
+++ b/str/stc320.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog
 
 class stc320(object):
@@ -44,10 +43,6 @@ class stc320(object):
         if not strctl:
             return
         self.glint = strctl["cts_glint"]
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/str/stc410.py b/str/stc410.py
old mode 100755
new mode 100644
diff --git a/str/stc420.py b/str/stc420.py
old mode 100755
new mode 100644
index 98bef7d..8654553
--- a/str/stc420.py
+++ b/str/stc420.py
@@ -24,22 +24,14 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import RepPrt, TartanDialog
 
 class stc420(object):
     def __init__(self, **opts):
         self.opts = opts
-        self.setVariables()
         self.mainProcess()
         self.opts["mf"].startLoop()
 
-    def setVariables(self):
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
-
     def mainProcess(self):
         fld = ()
         tnd = ((self.doEnd,"Y"), )
diff --git a/tab/tb1010.py b/tab/tb1010.py
old mode 100755
new mode 100644
diff --git a/tab/tb1020.py b/tab/tb1020.py
old mode 100755
new mode 100644
index 0029a82..3e5129d
--- a/tab/tb1020.py
+++ b/tab/tb1020.py
@@ -72,6 +72,7 @@ class tb1020(object):
                 self.dbm.commitDbase()
             self.doFinal()
             if self.dbm.dbase == "SQLite":
+                self.dbm.commitDbase()
                 self.dbm.cu.execute("PRAGMA JOURNAL_MODE=DELETE")
                 self.dbm.cu.execute("PRAGMA SYNCHRONOUS=FULL")
 
@@ -141,8 +142,6 @@ class tb1020(object):
             "memsta": ["mls_date", "mls_seq"],
             "memtrn": ["mlt_capdt", "mlt_seq"],
             "memtrs": ["mst_trdt", "mst_seq"],
-            "postrn": ["pst_capdt", "pst_seq"],
-            "posrcp": ["prp_seq"],
             "rcaowt": ["rot_capdt", "rot_seq"],
             "rcatnt": ["rtu_capdt", "rtu_seq"],
             "rtltrn": ["rtt_capdt", "rtt_seq"],
@@ -157,6 +156,7 @@ class tb1020(object):
             self.lmt = 5000
         elif self.dbm.dbase == "SQLite":
             self.lmt = 500
+            self.dbm.commitDbase()
             self.dbm.cu.execute("PRAGMA JOURNAL_MODE=OFF")
             self.dbm.cu.execute("PRAGMA SYNCHRONOUS=OFF")
         else:
@@ -306,7 +306,7 @@ class tb1020(object):
     def doNewTable(self):
         sql = Sql(self.dbm, self.table, error=False,
             prog=self.__class__.__name__)
-        if sql.error or self.table == "ctllog":
+        if sql.error:
             data = None
         else:
             # Read Existing Table
@@ -496,11 +496,18 @@ class tb1020(object):
             self.opts["mf"].updateStatus("")
             if self.opts["bar"]:
                 pb.closeProgress()
-        # Fix Stores Markup
+        # Fix ctlmst and Stores Markup
         tabs = ["ctlmst", "strctl", "strgrp", "strgmu", "strcmu"]
         sql = Sql(self.dbm, tabs)
         coys = sql.getRec("ctlmst", cols=["ctm_cono"])
         for coy in coys:
+            mods = sql.getRec("ctlmst", cols=["ctm_modules"],
+                where=[("ctm_cono", "=", coy[0])], limit=1)
+            newm = ""
+            for x in range(0, len(mods[0]), 2):
+                if mods[0][x:x+2] != "PS":
+                    newm += mods[0][x:x+2]
+            sql.updRec("ctlmst", cols=["ctm_modules"], data=[newm])
             sctl = sql.getRec("strctl", cols=["cts_plevs", "cts_automu"],
                 where=[("cts_cono", "=", coy[0])], limit=1)
             if sctl:
@@ -663,29 +670,30 @@ class tb1020(object):
             self.opts["mf"].updateStatus("Creating New Indexes for %s" % table)
         for key in keys:
             nam = "%s_key%s" % (table, str(key[2]))
-            if not self.doCheckIndex(table, nam):
-                idx = ""
-                skip = False
-                for k in key[4:]:
-                    if k:
-                        if self.dbm.dbase == "SQLite":
-                            if self.checkBlob(table, k):
-                                skip = True
-                                break
-                        if idx:
-                            idx = "%s,%s" % (idx, k)
-                        else:
-                            idx = k
-                if skip:
-                    continue
+            idx = ""
+            skip = False
+            for k in key[4:]:
+                if k:
+                    if self.dbm.dbase == "SQLite":
+                        if self.checkBlob(table, k):
+                            skip = True
+                            break
+                    if idx:
+                        idx = "%s,%s" % (idx, k)
+                    else:
+                        idx = k
+            if skip:
+                continue
+            chk = self.doCheckIndex(table, nam)
+            if chk != idx:
+                if chk:
+                    self.sql.sqlRec("Drop index %s" % nam)
                 if key[3] == "N":
                     sql = "Create index"
                 else:
                     sql = "Create unique index"
-                try:
-                    self.sql.sqlRec("%s %s on %s (%s)" % (sql, nam, table, idx))
-                except:
-                    pass
+                sql = "%s %s on %s (%s)" % (sql, nam, table, idx)
+                self.sql.sqlRec(sql)
 
     def doDropIndex(self, tab):
         old = self.sql.getRec("ftable", where=[("ft_tabl", "=", tab)],
@@ -695,14 +703,16 @@ class tb1020(object):
             if self.doCheckIndex(tab, nam):
                 self.sql.sqlRec("Drop index %s" % nam)
 
-    def doCheckIndex(self, table, index):
+    def doCheckIndex(self, table, name):
         if self.dbm.dbase == "PgSQL":
-            sel = "Select * from pg_indexes where schemaname='public' "\
-                "and tablename='%s' and indexname='%s'" % (table, index)
+            sel = "Select indexdef from pg_indexes where schemaname='public' "\
+                "and tablename='%s' and indexname='%s'" % (table, name)
         else:
-            sel = "Select * from sqlite_master where type='index' "\
-                "and tbl_name='%s' and name='%s'" % (table, index)
-        return self.sql.sqlRec(sel, limit=1)
+            sel = "Select sql from sqlite_master where type='index' "\
+                "and tbl_name='%s' and name='%s'" % (table, name)
+        dat = self.sql.sqlRec(sel, limit=1)
+        if dat:
+            return dat[0].split("(")[1].split(")")[0].replace(" ", "")
 
     def checkBlob(self, table, key):
         cols = tabdic[table]["fld"]
diff --git a/tab/tb1030.py b/tab/tb1030.py
old mode 100755
new mode 100644
diff --git a/tab/tb1040.py b/tab/tb1040.py
old mode 100755
new mode 100644
diff --git a/tab/tb3010.py b/tab/tb3010.py
old mode 100755
new mode 100644
index 7e5b062..0af53cb
--- a/tab/tb3010.py
+++ b/tab/tb3010.py
@@ -43,10 +43,7 @@ class tb3010(object):
             return
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
-        self.head = ("%-24s %64s %5s %6s" % \
-            ("Tartan Systems", self.sysdttm, "", self.__class__.__name__))
+        self.head = "Tartan Systems"
         return True
 
     def mainProcess(self):
@@ -101,7 +98,7 @@ class tb3010(object):
                 "ft_desc"], where=whr, order="ft_tabl")
         if not tabs:
             return
-        self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
+        self.fpdf = MyFpdf(name=self.__class__.__name__, head=80)
         self.pgnum = 0
         p = ProgressBar(self.opts["mf"].body, mxs=len(tabs), esc=True)
         for num, tab in enumerate(tabs):
diff --git a/tarchg.py b/tarchg.py
old mode 100755
new mode 100644
index 5198522..41ca825
--- a/tarchg.py
+++ b/tarchg.py
@@ -11,7 +11,7 @@ NB:
 You can only upgrade to this version if your current version is 5.4 or later.
 If you have an older version than 5.4 please contact me for assistance.
 
-ver_5.12
+ver_5.12 2020-12-14
 ========
 Tartan Systems Upgrade (Lockdown)
 ---------------------------------
@@ -43,7 +43,7 @@ to download it and set the path to the executable in Tartan Preferences.
 You can only upgrade to this version if your current version is 5.4 or later.
 If you have an older version than 5.4 please contact me for assistance.
 
-ver_5.11
+ver_5.11 2020-03-25
 ========
 Tartan Systems Upgrade
 ----------------------
@@ -62,7 +62,7 @@ NB:
 You can only upgrade to this version if your current version is 5.4 or later.
 If you have an older version than 5.4 please contact me for assistance.
 
-ver_5.10
+ver_5.10 2020-03-07
 ========
 Tartan Systems Upgrade
 ----------------------
@@ -86,7 +86,7 @@ NNB:
 As Python version 2 has now been deprecated this will be the last Tartan
 version supporting Python 2. All future upgrades will be for Python 3.
 
-ver_5.9
+ver_5.9 2020-01-03
 =======
 Tartan Systems Upgrade
 ----------------------
@@ -101,7 +101,7 @@ NB:
 You can only upgrade to this version if your current version is 5.4 or later.
 If you have an older version than 5.4 please contact me for assistance.
 
-ver_5.8
+ver_5.8 2019-12-12
 =======
 Tartan Systems Upgrade
 ----------------------
@@ -117,7 +117,7 @@ NB:
 You can only upgrade to this version if your current version is 5.0 or later.
 If you have an older version than 5.0 please contact me for assistance.
 
-ver_5.7
+ver_5.7 2019-09-05
 =======
 Tartan Systems Upgrade
 ----------------------
@@ -129,7 +129,7 @@ NB:
 You can only upgrade to this version if your current version is 5.0 or later.
 If you have an older version than 5.0 please contact me for assistance.
 
-ver_5.6
+ver_5.6 2019-08-23
 =======
 Tartan Systems Upgrade
 ----------------------
@@ -146,7 +146,7 @@ NB:
 You can only upgrade to this version if your current version is 5.0 or later.
 If you have an older version than 5.0 please contact me for assistance.
 
-ver_5.5
+ver_5.5 2020-12-16
 =======
 Tartan Systems Upgrade
 ----------------------
@@ -161,7 +161,7 @@ NB:
 You can only upgrade to this version if your current version is 5.0 or later.
 If you have an older version than 5.0 please contact me for assistance.
 
-ver_5.4.8
+ver_5.4.8 2019-06-04
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -184,7 +184,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.4.7
+ver_5.4.7 2019-04-18
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -197,7 +197,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.4.6
+ver_5.4.6 2019-04-07
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -212,7 +212,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.4.5
+ver_5.4.5 2019-02-24
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -225,7 +225,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.4.4
+ver_5.4.4 2019-01-23
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -237,7 +237,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.4.2
+ver_5.4.2 2019-01-22
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -277,7 +277,7 @@ This will probably be the last release of Tartan using Python 2.
 
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.4.1
+ver_5.4.1 2019-01-15
 =========
 Tartan Systems Upgrade
 ----------------------
@@ -317,7 +317,7 @@ This will probably be the last release of Tartan using Python 2.
 
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.13
+ver_5.3.13 2018-09-03
 ==========
 1) Fixed an error in general ledger data capture where the last row in the page
     was freezing.
@@ -326,7 +326,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.12
+ver_5.3.12 2018-08-19
 ==========
 1) Added the facility to add notes to the bowls competition format report.
 2) Changed the method automatic ageing is done in creditors and debtors.
@@ -339,7 +339,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.11
+ver_5.3.11 2018-07-13
 ==========
 1) Added the facility to print crs/drs age analysis strictly according to
    the financial period of the transactions (Curdt).
@@ -350,7 +350,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.10
+ver_5.3.10 2018-06-18
 ==========
 1) Fixed a bank statement qif import error.
 2) Added disallowed companies on the user's record.
@@ -360,7 +360,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.9
+ver_5.3.9 2018-06-01
 =========
 1) Improved the V.A.T. Statement report and spreadsheet.
 2) Updated and improved the creditor's and debtor's toolbox transaction
@@ -374,7 +374,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.8
+ver_5.3.8 2018-05-01
 =========
 1) Fixed a problem when exporting a V.A.T. Statement to xls.
 2) Some other minor bug fixes and improvements.
@@ -383,7 +383,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.7
+ver_5.3.7 2018-04-11
 =========
 1) Fixed a V.A.T. problem with Sales Orders produced before April 2018 but only Supplied and Invoiced in April 2018.
 2) Some other minor bug fixes and improvements.
@@ -392,7 +392,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.6
+ver_5.3.6 2018-04-08
 =========
 1) V.A.T. Records - Changed the V.A.T. Report to show percentages.
 2) Some other minor bug fixes and improvements.
@@ -401,7 +401,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.5
+ver_5.3.5 2018-04-05
 =========
 1) V.A.T. Records - Improved the maintenance module.
 2) Rentals - Fixed a bug in the month-end routine.
@@ -414,7 +414,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.4
+ver_5.3.4 2018-03-29
 =========
 1) Updated the personal tax records as per the 2018 budget.
 2) Some minor bug fixes and improvements.
@@ -435,7 +435,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.3
+ver_5.3.3 2018-02-21
 =========
 1) Added a module to the stores toolbox to mark items, with zero balances and without any movements for the past number months, as redundant. The number of months defaults to 24 but can be changed.
 2) Altered all stores modules to ignore redundant items.
@@ -445,7 +445,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.2
+ver_5.3.2 2017-09-11
 =========
 1) Fixed an error in general ledger postings to subsiduary ledgers.
 2) Fixed an error in general ledger manual journal entries import routine.
@@ -456,7 +456,7 @@ NB:
 This is a very important update if you are using the general ledger.
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.3.1
+ver_5.3.1 2017-08-24
 =========
 1) Added the facility for each system to have its own return email address
    e.g. Debtor's could have its own email address and so could Creditors etc.
@@ -474,7 +474,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.2.8
+ver_5.2.8 2017-02-25
 =========
 1) Added Orders tag to creditor's interrogation to display outstanding orders.
 2) Included the pycrypto module to enable the password manager utility.
@@ -491,7 +491,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.2.7
+ver_5.2.7 2017-01-12
 =========
 1) General Ledger - Added the facility in the toolbox to delete unwanted
    imported bank statement records by date.
@@ -503,7 +503,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.2.6
+ver_5.2.6 2016-11-07
 =========
 1) Loans System - Fixed a bug in the loans rate change module.
 2) Stores System - Changed the purchase order module to print cancelled orders.
@@ -515,7 +515,7 @@ NB:
 --
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.2.5
+ver_5.2.5 2016-09-03
 =========
 1) Sales Invoicing - Added the facility to convert a Quotation into a Sales
    Order.
@@ -542,7 +542,7 @@ If you require some modifications to Tartan which you think would be beneficial
 please let me know and if feasible I will try and incorporate them with the next
  elease.
 
-ver_5.2.4
+ver_5.2.4 2016-07-10
 =========
 1) Higlight budgets, with a gray background, when running financial statements
    by month and using combination of actuals and budgets.
@@ -555,7 +555,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.2.3
+ver_5.2.3 2016-06-22
 =========
 1) Added extra tag to debtor's interrogation to display outstanding quotations
    and orders. Double-clicking on the document will display the actual document.
@@ -563,7 +563,7 @@ ver_5.2.3
    Bowling Clubs system.
 3) Fixed a bug in the general ledger manual journal module.
 
-ver_5.2.2
+ver_5.2.2 2016-06-22
 =========
 1) Added a major facility to allocate to subsiduary ledgers when capturing
    general ledger journals.
@@ -577,7 +577,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.2.1
+ver_5.2.1 2016-03-01
 =========
 1) Fixed a bug preventing creation of a new database.
 
@@ -585,7 +585,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.1.4
+ver_5.1.4 2016-02-21
 =========
 1) Fixed creditor's data capture module (Loans).
 2) Fixed debtor's statement module (Range).
@@ -598,7 +598,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.1.3
+ver_5.1.3 2015-12-09
 =========
 1) Fixed a problem in the creditor's data capture module.
 2) Updated the reference manual.
@@ -608,7 +608,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.1.2
+ver_5.1.2 2015-10-21
 =========
 1) Added stores module to Delete outstanding purchase orders.
 2) Minor bug fixes.
@@ -617,7 +617,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.1.1
+ver_5.1.1 2015-10-12
 =========
 1) Minor changes to the loans system.
 
@@ -625,7 +625,7 @@ Notes:
 ------
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.18
+ver_5.0.18 2015-10-03
 ==========
 Hi
 
@@ -638,7 +638,7 @@ I apologise for any inconvenience.
 
 Regards
 
-ver_5.0.17
+ver_5.0.17 2015-06-24
 ==========
 1) Fixed an error with the G/L Financial Report Stream option.
 2) Some minor bug fixes.
@@ -650,7 +650,7 @@ You can only upgrade to this version if your current version is 4.1.10 or later.
 Also please note that to enable VAT reports there must be a VAT Number in the
 Company Record.
 
-ver_5.0.16
+ver_5.0.16 2015-06-19
 ==========
 1) Fixed an error with XLS exports.
 2) Some minor bug fixes and changes required for upgrade to python 3.
@@ -659,7 +659,7 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.15
+ver_5.0.15 2015-06-17
 ==========
 1) Increased transactions to support up to 999 million as per g/l.
 2) Added file imports for G/L account number changes.
@@ -671,7 +671,7 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.14
+ver_5.0.14 2015-05-19
 ==========
 1) The manual has some further updates.
 2) Fixed an error in G/L data capture module.
@@ -683,7 +683,7 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.13
+ver_5.0.13 2015-04-28
 ==========
 1) The manual has some further updates.
 2) Included works orders in sales invoicing system.
@@ -694,7 +694,7 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.12
+ver_5.0.12 2015-04-11
 ==========
 1) Packaged pared down version of bowls system excluding all financial systems.
 2) The manual has some further updates.
@@ -704,7 +704,7 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.11
+ver_5.0.11 2015-04-07
 ==========
 1) Added the facility to produce and email invoices with debtor's recurring
    charges.
@@ -717,7 +717,7 @@ Note:
 -----
 You can only upgrade to this version if your current version is 4.1.10 or later.
 
-ver_5.0.10
+ver_5.0.10 2015-04-01
 ==========
 1) Included the 2016 P.A.Y.E. rates.
 2) Enhanced the staff loans system.
diff --git a/tartan.ico b/tartan.ico
old mode 100755
new mode 100644
diff --git a/tartanFunctions.py b/tartanFunctions.py
old mode 100755
new mode 100644
index af02095..204f218
--- a/tartanFunctions.py
+++ b/tartanFunctions.py
@@ -32,6 +32,93 @@ def importTkinter():
     except:
         return None, None
 
+def unbindAllWidgets(widget):
+    binds = []
+    for bind in widget.winfo_toplevel().bind():
+        if "<Key-Alt_L>" in bind:
+            binds.append((bind, widget.winfo_toplevel().bind(bind)))
+            widget.winfo_toplevel().unbind(bind)
+    return binds
+
+def getManager(widget):
+    # Window Manager
+    try:
+        children = widget.winfo_children()
+        if not children:
+            mgr = "pack"
+        else:
+            mgr = ""
+            for c in children:
+                if c.winfo_manager():
+                    mgr = c.winfo_manager()
+                    break
+    except:
+        mgr = "pack"
+    return mgr
+
+def placeWindow(window, parent=None, place="C", size=None, expose=False):
+    # Window Placement
+    window.update_idletasks()
+    if window.winfo_class().lower() == "tk":
+        parent = None
+    if parent:
+        if parent.winfo_class() != "Toplevel":
+            parent = parent.winfo_toplevel()
+        parent.update_idletasks()
+    if size:
+        ww, wh = size
+    else:
+        ww = window.winfo_reqwidth()
+        wh = window.winfo_reqheight()
+    if parent:
+        wx = int(parent.winfo_x() + (parent.winfo_width() / 2) - (ww / 2))
+        wy = int(parent.winfo_y() + (parent.winfo_height() / 2) - (wh / 2))
+    else:
+        if place == "L":
+            wx = 0
+        elif place == "R":
+            wx = window.winfo_screenwidth() - ww
+        elif place in ("C", "M"):
+            wx = int((window.winfo_screenwidth() - ww) / 2)
+        if place == "M":
+            wy = int((window.winfo_screenheight() - wh) / 2)
+        else:
+            wy = 0
+    window.geometry("%dx%d+%d+%d" % (ww, wh, wx, wy))
+    if expose and window.state() == "withdrawn":
+        window.deiconify()
+    window.update_idletasks()
+
+def cutpasteMenu(event):
+    # Cut, copy and paste menu
+    from TartanClasses import tk, tkfont
+    wid = event.widget
+    font = tkfont.Font(font=("Arial", 10))
+    wid.menu = tk.Menu(wid, tearoff=False, takefocus=0, font=font)
+    image = getImage("Cut", (20, 20))
+    wid.menu.add_command(label="Cut", image=image, compound="left",
+        accelerator="Ctl-X", font=font)
+    wid.menu.i1 = image
+    image = getImage("Copy", (20, 20))
+    wid.menu.add_command(label="Copy", image=image, compound="left",
+        accelerator="Ctl-C", font=font)
+    wid.menu.i2 = image
+    image = getImage("Paste", (20, 20))
+    wid.menu.add_command(label="Paste", image=image, compound="left",
+        accelerator="Ctl-V", font=font)
+    wid.menu.i3 = image
+    wid.menu.add_separator()
+    wid.menu.add_command(label="Select all")
+    wid.menu.entryconfigure("Cut", command=lambda:
+        wid.focus_force() or wid.event_generate("<<Cut>>"))
+    wid.menu.entryconfigure("Copy", command=lambda:
+        wid.focus_force() or wid.event_generate("<<Copy>>"))
+    wid.menu.entryconfigure("Paste", command=lambda:
+        wid.focus_force() or wid.event_generate("<<Paste>>"))
+    wid.menu.entryconfigure("Select all", command=wid.select_all)
+    wid.menu.tk_popup(event.x_root + 40, event.y_root + 10, entry="0")
+    return "break"
+
 def getPrgPath():
     import os, sys
     prgdir = os.path.realpath(sys.path[0])
@@ -102,7 +189,7 @@ def getFontSize(tk=None, width=None, height=None, font=10):
             if rh <= height:
                 break
             font -= 1
-    return width, height, font
+    return width, height, font - 1
 
 def loadRcFile(rcfile=None, default=False):
     """
@@ -301,7 +388,7 @@ def showException(scrn, path, mess, maxTB=None, xits=None, dbm=None):
     dbm   = The database class
     """
     import getpass, os, platform, sys, time, traceback
-    from TartanClasses import ScrollText, Sql
+    from TartanClasses import ScrollText
 
     def doSaveExc():
         t = time.localtime()
@@ -329,14 +416,11 @@ def showException(scrn, path, mess, maxTB=None, xits=None, dbm=None):
             else:
                 opened = False
             try:
-                tab = ["ctlmst", "ctlsys", "verupd"]
-                sql = Sql(dbm, tables=tab, prog=__name__)
-                if sql.error:
-                    raise Exception
-                smtp = sql.getRec(tables=tab, cols=["ctm_name", "sys_msvr",
-                    "sys_mprt", "sys_msec", "sys_maut", "sys_mnam", "sys_mpwd",
-                    "ctm_email", "ver_version"], where=[("ctm_cono", "=", 1)],
-                    limit=1)
+                dbm.cu.execute("Select ctm_name, sys_msvr, sys_mprt, "\
+                    "sys_msec, sys_maut, sys_mnam, sys_mpwd, ctm_email, "\
+                    "ver_version from ctlmst, ctlsys, verupd where "\
+                    "ctm_cono = 1")
+                smtp = dbm.cu.fetchone()
                 if not smtp or not smtp[1]:
                     raise Exception
                 if sendMail(smtp[1:7], smtp[7], ["errors@tartan.co.za"],
@@ -509,7 +593,7 @@ def doPrinter(mf=None, conum=None, pdfnam=None, splash=True, header=None, repprt
      attach = A list of attachments
      skip   = Skip mail errors
      """
-    import os, subprocess, sys, time
+    import os, subprocess, time
     from TartanClasses import Dbase, ViewPDF, SplashScreen, Sql
 
     # Email Document
@@ -578,6 +662,8 @@ def doPrinter(mf=None, conum=None, pdfnam=None, splash=True, header=None, repprt
                     att = [pdfnam] + copyList(attach)
                 ok = sendMail(smtp[0:6], fromad, toad, subj, mess, attach=att,
                     wrkdir=mf.rcdic["wrkdir"])
+                if splash:
+                    sp.closeSplash()
                 if not ok:
                     if skip:
                         ok = "SKIPPED"
@@ -592,9 +678,9 @@ def doPrinter(mf=None, conum=None, pdfnam=None, splash=True, header=None, repprt
                             ok = "FAILED"
                 else:
                     ok = "OK"
-                if splash:
-                    sp.closeSplash()
-        except:
+        except Exception as err:
+            showException(mf.window.focus_displayof(), mf.rcdic["wrkdir"],
+                "E-Mail Error\n\n%s" % err)
             if not ok:
                 ok = "UNKNOWN"
         # Try and Log the email status into table emllog
@@ -611,12 +697,14 @@ def doPrinter(mf=None, conum=None, pdfnam=None, splash=True, header=None, repprt
             pass
         if repeml[4].lower() == "n":
             return
-    if repprt and (repprt[1].lower() == "x" or repprt[2] == "export"):
+    if repprt is None:
+        return
+    elif repprt[1].lower() == "x" or repprt[2] == "export":
         return
-    if repprt and repprt[2] and repprt[2].lower() == "none":
+    elif repprt[2] and repprt[2].lower() == "none":
         return
     try:
-        if repprt and (repprt[1].lower() == "v" or repprt[2] == "view"):
+        if repprt[1].lower() == "v" or repprt[2] == "view":
             # View Document
             chk = pdfnam.split(".")[-1]
             if chk == "svg":
@@ -630,20 +718,9 @@ def doPrinter(mf=None, conum=None, pdfnam=None, splash=True, header=None, repprt
             sp = SplashScreen(mf.window.focus_displayof(),
                 "Printing the Report\n\nPlease Wait....")
         if repprt[2] == "Default":
-            if sys.platform == "win32":
-                import win32print
-                prt = win32print.GetDefaultPrinter()
-            else:
-                proc = subprocess.Popen("lpstat -d", shell=True, bufsize=0,
-                    stdin=subprocess.PIPE, stdout=subprocess.PIPE,
-                    stderr=subprocess.PIPE, close_fds=True)
-                prt = proc.stdout.readline()
-                if type(prt) == bytes:
-                    prt = prt.decode("utf-8")
-                prt = prt.strip().split(":")
-                if len(prt) != 2:
-                    raise Exception("No Default Printer")
-                prt = prt[1].strip()
+            prt = getPrinters(donly=True)
+            if not prt:
+                raise Exception("No Default Printer")
         else:
             prt = repprt[2]
         prn = mf.rcdic["prn"]
@@ -781,8 +858,9 @@ def sendMail(server, ex, to, subj, mess="", attach=None, embed=None, check=False
             smtp.quit()
             return True
     except Exception as chk:
-        showException(err, wrkdir, "Mail Server (%s %s) "\
-            "Invalid or Unavailable\n\n%s" % (host, port, chk))
+        if not check:
+            showException(err, wrkdir, "Mail Server (%s %s) "\
+                "Invalid or Unavailable\n\n%s" % (host, port, chk))
         return
     if type(to) == str:
         to = [to]
@@ -1039,55 +1117,64 @@ def getUnderline(widget=None, blist=None, text=None):
                 break
     return text, pos
 
-def getPrinters(wrkdir="."):
+def getPrinters(wrkdir=".", donly=False):
     """
-    Function to return all avalaible printers.
+    Function to return avalaible printers.
+        donly = True, only return the default printer
+        donly = False, return all printers
     """
     import subprocess, sys
     data = []
+    dflt = None
     try:
-        # Get the default printer
         if sys.platform == "win32":
             import win32print
+            # Get the default printer
             dflt = win32print.GetDefaultPrinter()
+            if not donly:
+                if dflt:
+                    data.append(dflt)
+                from win32print import EnumPrinters
+                lst = EnumPrinters(2)
+                for l in lst:
+                    if l[2].strip() not in data:
+                        data.append(l[2].strip())
         else:
+            # Get the default printer
             proc = subprocess.Popen("lpstat -d", shell=True, bufsize=0,
                 stdin=subprocess.PIPE, stdout=subprocess.PIPE,
                 stderr=subprocess.PIPE, close_fds=True)
             prt = proc.stdout.readline()
             if type(prt) == bytes:
                 prt = prt.decode("utf-8")
-            dflt = prt.strip().split(":")[1]
-        if dflt:
-            data.append(dflt)
-    except:
-        pass
-    try:
-        if sys.platform == "win32":
-            from win32print import EnumPrinters
-            lst = EnumPrinters(2)
-            for l in lst:
-                if l[2].strip() not in data:
-                    data.append(l[2].strip())
-        else:
-            import subprocess
-            proc = subprocess.Popen("lpstat -a", shell=True, bufsize=0,
-                stdin=subprocess.PIPE, stdout=subprocess.PIPE,
-                stderr=subprocess.PIPE, close_fds=True)
-            lst = proc.stdout.readlines()
-            for l in lst:
-                if type(l) == bytes:
-                    l = l.decode("utf-8")
-                l = l.rstrip().replace('"', "").replace("'", "")
-                if l.count("accepting requests"):
-                    p = l.split()
-                    if p[0].strip() not in data:
-                        data.append(p[0].strip())
-    except:
-        showException(None, wrkdir, "Get Printer Error")
-    if not data:
-        return ["None"]
-    return data
+            dflt = prt.strip().split(":")
+            if len(dflt) != 2:
+                raise Exception("No Default Printer")
+            dflt = dflt[1].strip()
+            if not donly:
+                if dflt:
+                    data.append(dflt)
+                proc = subprocess.Popen("lpstat -a", shell=True, bufsize=0,
+                    stdin=subprocess.PIPE, stdout=subprocess.PIPE,
+                    stderr=subprocess.PIPE, close_fds=True)
+                lst = proc.stdout.readlines()
+                for l in lst:
+                    if type(l) == bytes:
+                        l = l.decode("utf-8")
+                    l = l.rstrip().replace('"', "").replace("'", "")
+                    if l.count("accepting requests"):
+                        p = l.split()
+                        if p[0].strip() not in data:
+                            data.append(p[0].strip())
+    except Exception as err:
+        data = []
+        dflt = None
+        showException(None, wrkdir, "Get Printer Error\n\n%s" % err)
+    if donly:
+        return dflt
+    elif data:
+        return data
+    return ["None"]
 
 def removeFunctions(nam, dec=0):
     """removes all aggregate details from a column name
@@ -1422,7 +1509,7 @@ def runModule(mod, **popt):
         exe = getattr(com, mod)
         exe(**popt)
     except Exception as err:
-        return err
+        print("Exception", err)
 
 def doChkCatChg(mf, cono, memno, nxtdt):
     from TartanClasses import Sql
@@ -1486,341 +1573,6 @@ def doChkCatChg(mf, cono, memno, nxtdt):
         or_s = rec[sql.memctc_col.index("mcc_or_s")]
     return ret
 
-def doWriteExport(**args):
-    """
-    Write an Export file using the following arguments:
-        xtype  - C for csv and X for xls or a tuple of both
-        name   - The output file name without an extension
-        heads  - A list of the Report headings. A heading can be a tuple as:
-                    (Text, Column width, Font Size)
-        colsh  - A list of lists of Column headings comprising:
-                    Text
-                    Start Col (Default is current col)
-                    End Col   (Default is current col)
-                or
-                    Text
-                    Alignment
-        forms  - A list of column format details comprising:
-                    Format per CCD
-                    Size   per CCD
-                    Clickable (True or False) - Default is False (ScrollGrid)
-                    Negative colour (ScrollGrid)
-                    Ignore for ULINE[D/S] and TOTAL - Default is False
-        datas  - The column data comprising:
-                    Type of data:
-                        "PAGE"   - A new page/sheet
-                            ["PAGE", (heading, colsh, forms)]
-                        "HEAD"   - A heading in column 0 only
-                        "BODY"   - A body line of columns of data
-                        "BLANK"  - A blank line - skip
-                        "ULINED" - A double underline - skip
-                        "ULINES" - A sigle underline - skip
-                        "TOTAL"  - A total line of columns of data
-                    List of values
-        rcdic  - The tartanrc dictionary
-        view   - Whether to view the report
-        wait   - Whether to wait for the viewer to exit.
-    """
-    import os, sys
-
-    def viewFile(exe, cmd, name, wait):
-        if not cmd:
-            try:
-                if sys.platform == "win32":
-                    os.startfile(name)
-                else:
-                    import subprocess
-                    if wait:
-                        subprocess.call(["xdg-open", name])
-                    else:
-                        subprocess.Popen(["xdg-open", name])
-            except Exception as err:
-                showError(None, err, "No Valid Export Application")
-            return
-        try:
-            import subprocess
-            if wait:
-                subprocess.call(cmd + [name])
-            else:
-                subprocess.Popen(cmd + [name])
-        except Exception as err:
-            showError(None, err, "The Application"\
-                "\n\n%s\n\nIs Not Found or Not Accessible" % exe)
-            return
-
-    if "view" not in args:
-        view = True
-    else:
-        view = args["view"]
-    if view:
-        if args["rcdic"] and args["rcdic"]["exp"]:
-            exe, cmd = parsePrg(args["rcdic"]["exp"])
-            if not os.path.isfile(exe):
-                exe = cmd = None
-        else:
-            exe = cmd = None
-    if "wait" not in args:
-        wait = False
-    else:
-        wait = args["wait"]
-    if type(args["xtype"]) == str:
-        args["xtype"] = [args["xtype"]]
-    types = []
-    for t in args["xtype"]:
-        types.append(t.upper())
-
-    if "C" in types:
-        head = ""
-        name = args["name"] + ".csv"
-        flenam = open(name, "w")
-        for valc in args["colsh"][-1]:
-            if type(valc) in (list, tuple):
-                text = valc[0]
-            else:
-                text = valc
-            if head:
-                head = '%s,"%s"' % (head, text)
-            else:
-                head = '"%s"' % text
-        if head:
-            flenam.write(head + "\n")
-        for valx in args["datas"]:
-            if valx[0] != "BODY":
-                continue
-            if not valx[1] or len(valx[1]) != len(args["forms"]):
-                # Blank line or invalid line length
-                continue
-            line = ""
-            for colc, valc in enumerate(valx[1]):
-                if type(valc) in (list, tuple):
-                    valc = valc[0]
-                if args["forms"][colc][0][0].lower() == "d" or \
-                   args["forms"][colc][0][1].lower() in ("d", "i", "l"):
-                    if line:
-                        line = "%s,%s" % (line, valc)
-                    else:
-                        line = "%s" % valc
-                elif line:
-                    line = '%s,"%s"' % (line, valc)
-                else:
-                    line = '"%s"' % valc
-            flenam.write(line + "\n")
-        # Save the csv file
-        flenam.close()
-        if view and "X" not in types:
-            # View the csv file
-            viewFile(exe, cmd, name, wait)
-        if "X" not in types:
-            return
-
-    styles = {}
-
-    def getStyle(fmt, num=None):
-        if not num:
-            idx = fmt
-        else:
-            idx = fmt + num
-        if idx not in styles:
-            if num:
-                styles[idx] = ezxf(fmt, num_format_str=num)
-            else:
-                styles[idx] = ezxf(fmt)
-        return styles[idx]
-
-    def createSheet(fmt, page):
-        if type(page) == str:
-            sheet = book.add_sheet(page)
-        else:
-            sheet = book.add_sheet("Page %s" % page)
-        # Main headings
-        rowx = 0
-        blank = False
-        for num, valx in enumerate(args["heads"]):
-            if type(valx) in (list, tuple):
-                cols = len(args["colsh"][-1]) - 1
-                hgt, siz = valx[1:]
-                hxf = "font: name arial, height %s, bold on" % siz
-                hxf = getStyle(hxf + "; align: horz centre, vert centre")
-            else:
-                hxf = getStyle(fmt + ", bold on")
-                cols = 0
-            if valx and blank:
-                # Add a blank line
-                blank = False
-                if cols:
-                    sheet.write_merge(rowx, rowx, 0, cols, "", hxf)
-                else:
-                    sheet.write(rowx, 0, "", hxf)
-                rowx += 1
-            if cols:
-                sheet.write_merge(rowx, rowx, 0, cols, valx[0], hxf)
-                sheet.row(num).height = hgt
-            else:
-                sheet.write(rowx, 0, valx, hxf)
-            rowx += 1
-            blank = bool(valx)
-        if blank:
-            rowx += 1
-        # Column headings
-        for colx, valx in enumerate(args["colsh"]):
-            nc = 0
-            for cx, vx in enumerate(valx):
-                # hxf = fmt + ", bold on; pattern: pattern solid"
-                # hxf = hxf + "; pattern: fore_colour gray25"
-                # hxf = hxf + "; borders: top thin"
-                # hxf = hxf + "; borders: left thin"
-                # hxf = hxf + "; borders: right thin"
-                # hxf = hxf + "; borders: bottom thin"
-                hxf = fmt + ", bold on"
-                if type(vx) in (list, tuple) and len(vx) > 1:
-                    if len(vx) == 2:
-                        hxf = getStyle(hxf + "; align: horz %s" % vx[1])
-                    else:
-                        hxf = getStyle(hxf + "; align: horz centre")
-                elif args["forms"][cx][0] in alpha:
-                    hxf = getStyle(hxf + "; align: horz left")
-                else:
-                    hxf = getStyle(hxf + "; align: horz right")
-                if type(vx) in (list, tuple):
-                    if len(vx) == 3:
-                        sheet.write_merge(rowx, rowx, vx[1], vx[2],
-                            vx[0].strip(), hxf)
-                        nc = vx[2]
-                    else:
-                        sheet.write(rowx, nc, vx[0].strip(), hxf)
-                else:
-                    sheet.write(rowx, nc, vx.strip(), hxf)
-                nc += 1
-                sheet.col(cx).width = int(args["forms"][cx][1]) * 300
-            if colx != len(args["colsh"]) - 1:
-                rowx += 1
-        # Freeze the headings
-        sheet.set_panes_frozen(True)        # frozen headings not split panes
-        sheet.set_horz_split_pos(rowx + 1)  # freeze after last row
-        sheet.set_remove_splits(True)       # if unfreezes don't leave split
-        return sheet, rowx
-
-    if "X" in types:
-        import datetime
-        import xlwt
-        ezxf = xlwt.easyxf
-
-        # Variables and Formats
-        fmt = "font: name arial"
-        alpha = ("HA", "LA", "La", "NA", "Na", "TX", "UA", "Ua")
-        xf_map = {
-            "D1": "yyyy-mm-dd",
-            "d1": "yyyy-mm-dd",
-            "D2": "yyyy-mm",
-            "d2": "yyyy-mm",
-            "UI": "########0",
-            "UL": "#0",
-            "CI": "#,##0",
-            "SI": "#0",
-            "SL": "#0",
-            "US": "#0",
-            "CD": "#,##0.00",
-            "SD": "#0.00",
-            "UD": "#0.00"}
-        for an in alpha:
-            xf_map[an] = "@"
-        # Create the Workbook and Worksheet
-        style = xlwt.XFStyle()
-        font = xlwt.Formatting.Font()
-        font.name = "Arial"
-        style.font = font
-        book = xlwt.Workbook(encoding="utf8")
-        book.add_style(style)
-        page = 1
-        if args["datas"][0][0] != "PAGE":
-            sheet, rowx = createSheet(fmt, page)
-            page += 1
-        # Generate the body
-        for num, row in enumerate(args["datas"]):
-            if row[0] == "PAGE":
-                args["heads"] = row[1][0]
-                args["colsh"] = row[1][1]
-                if len(row[1]) > 2:
-                    args["forms"] = row[1][2]
-                if len(row[1]) == 4:
-                    pg = row[1][3]
-                else:
-                    pg = page
-                sheet, rowx = createSheet(fmt, pg)
-                page += 1
-                continue
-            if row[0] in ("ULINES", "ULINED"):
-                continue
-            rowx += 1
-            if row[0] == "BLANK":
-                sheet.write(rowx, 0, "", getStyle(fmt))
-                continue
-            chk = num + 1
-            if chk != len(args["datas"]):
-                if args["datas"][chk][0] == "ULINES":
-                    unl = "s"
-                elif args["datas"][chk][0] == "ULINED":
-                    unl = "d"
-                else:
-                    unl = False
-            else:
-                unl = False
-            for colx, valx in enumerate(row[1]):
-                if type(valx) in (list, tuple):
-                    valx, bord = valx
-                else:
-                    bord = None
-                if row[0] in ("HEAD", "TOTAL"):
-                    hxf = fmt + ", bold on"
-                else:
-                    hxf = fmt
-                if type(valx) == str:
-                    hxf = hxf + "; align: horz left"
-                    if bord:
-                        # if bord == "TLRB":
-                        #     hxf = hxf + "; pattern: pattern solid"
-                        #     hxf = hxf + "; pattern: fore_colour gray25"
-                        if "T" in bord:
-                            hxf = hxf + "; borders: top thin"
-                        if "L" in bord:
-                            hxf = hxf + "; borders: left thin"
-                        if "R" in bord:
-                            hxf = hxf + "; borders: right thin"
-                        if "B" in bord:
-                            hxf = hxf + "; borders: bottom thin"
-                    sheet.write(rowx, colx, valx, getStyle(hxf))
-                    continue
-                if len(args["forms"][colx]) == 5:
-                    if row[0] == "TOTAL" or not valx:
-                        sheet.write(rowx, colx, "",
-                            getStyle(hxf + "; align: horz left"))
-                        continue
-                elif valx and args["forms"][colx][0].lower() == "d1":
-                    # D1 Date conversion
-                    valx = datetime.datetime(int(valx / 10000),
-                        int(valx / 100) % 100, valx % 100)
-                elif valx and args["forms"][colx][0].lower() == "d2":
-                    # D2 Date conversion
-                    valx = datetime.datetime(int(valx / 100), valx % 100, 1)
-                elif args["forms"][colx][0] not in alpha and unl:
-                    # Underlines
-                    if unl == "s":
-                        hxf = hxf + "; borders: bottom thin"
-                    else:
-                        hxf = hxf + "; borders: bottom double"
-                if args["forms"][colx][0][0].lower() == "d" and not valx:
-                    sheet.write(rowx, colx, valx,
-                        getStyle(hxf, num=xf_map["UI"]))
-                else:
-                    sheet.write(rowx, colx, valx,
-                        getStyle(hxf, num=xf_map[args["forms"][colx][0]]))
-        # Save the spreadsheet
-        name = args["name"] + ".xls"
-        book.save(args["name"] + ".xls")
-        # View the spreadsheet
-        if view:
-            viewFile(exe, cmd, name, wait)
-
 def ftpDownload(server, srce, name=None, word=None, dest=None, close=False, check=False):
     import ftplib
     if not name:
@@ -1874,10 +1626,13 @@ def doDrawTable(fpdf, rr, ppad=1, spad=1, cw=None, ld=None, font=True):
                                 (10, 1.5, .9, ("Row1","Row2","Row3","Row4")),
                                 (10, 1.5),
                                 (50, 1.5),
-                                (10, 1.5)), 4))}
+                                (10, 1.5), 4)))}
 
-                  Note: You can add True after the text to draw a
-                          centred string.
+                  Notes:
+                    You can add True or False after the text to draw a
+                        centred string.
+                    You can add True or False after the alignment to
+                        draw the string if bold format.
 
         ppad    - Y padding for drawString.
         spad    - Space padding for repeats.
@@ -1890,6 +1645,14 @@ def doDrawTable(fpdf, rr, ppad=1, spad=1, cw=None, ld=None, font=True):
     cols = []
     rows = []
     rest = []
+    if type(font) in (list, tuple):
+        dflt = list(font)
+    elif ppad == 1:
+        dflt = ["helvetica", "B", 10]
+    else:
+        dflt = ["helvetica", "B", 12]
+    if font:
+        fpdf.setFont(dflt[0], dflt[1], dflt[2], default=True)
     for row in rr["rows"]:
         if type(row[2]) in (list, tuple):
             # Mutiple columns
@@ -1951,21 +1714,21 @@ def doDrawTable(fpdf, rr, ppad=1, spad=1, cw=None, ld=None, font=True):
             fill = 0
         for x in r[0]:                      # x
             for y in r[1]:                  # y
-                if font:
-                    if ppad == 1:
-                        fpdf.setFont("helvetica", "B", 10)
-                    else:
-                        fpdf.setFont("helvetica", "B", 12)
-                if len(r) == 7 and r[6]:
+                if len(r) > 6 and r[6]:
                     align = "C"
                 else:
                     align = ""
+                if len(r) > 7 and r[7]:
+                    style = dflt[:]
+                else:
+                    style = [dflt[0], "", dflt[2]]
                 xx = round(x * cw, 2)
                 yy = round(y * ld, 2)
                 if len(r) > 5:
                     txt = r[5]
                     fpdf.drawText(x=xx, y=yy, w=r[2] * cw, h=r[3] * ld,
-                        align=align, border="TLRB", fill=fill, txt=txt)
+                        align=align, border="TLRB", fill=fill, txt=txt,
+                        font=style)
                 else:
                     if fill:
                         style = "DF"
@@ -2438,7 +2201,7 @@ def getSell(sql, cono, group, code, loc=None, lvl=1, recp=False, ind=None):
     prc = sql.getRec("strprc", cols=["stp_price"], where=[("stp_cono",
         "=", cono), ("stp_group", "=", group), ("stp_code", "=", code),
         ("stp_loc", "=", loc), ("stp_level", "=", lvl)], limit=1)
-    if prc and prc[0]:
+    if prc:
         # Price Level
         return prc[0]
     elif ind == "P":
@@ -2660,23 +2423,6 @@ def getColors(style, scheme):
             ("#000000", "#ffffff"))
     else:
         # Defaults
-        lout = {}
-
-        def doprint(e, lnum):
-            for x in e:
-                lnum += 1
-                lout[lnum] = [x[0]]
-                opt = list(style.element_options(x[0]))
-                opt.sort()
-                for y in opt:
-                    lout[lnum].append(
-                        (y[1:], style.lookup(x[0], y[1:])))
-                if type(x[1]) == dict:
-                    for key in list(x[1].keys()):
-                        if key == "children":
-                            doprint(x[1][key], lnum)
-                        else:
-                            lout[lnum].append((key, x[1][key]))
         widgets = {
             "label": {
                 "label": {
@@ -2702,21 +2448,8 @@ def getColors(style, scheme):
                                 if n[0] in widgets[widget][typ][m]:
                                     widgets[widget][typ][m][n[0]] = n[1]
                     continue
-                lout = {}
-                doprint(style.layout(wid), 0)
-                keys = list(lout.keys())
-                keys.sort()
-                for key in keys:
-                    opts = lout[key]
-                    if opts[0].split(".")[-1] == typ:
-                        newo = opts[1:]
-                        newo.sort()
-                        for opt in newo:
-                            if opt[0] in widgets[widget][typ]:
-                                c = opt[1]
-                                if c == "black":
-                                    c = "#000000"
-                                widgets[widget][typ][opt[0]] = c
+                for clr in widgets[widget][typ]:
+                    widgets[widget][typ][clr] = style.lookup(wid, clr)
         color = [
             [widgets["label"]["label"]["foreground"],
             widgets["label"]["label"]["background"]],
@@ -2726,6 +2459,12 @@ def getColors(style, scheme):
             widgets["button"]["map"]["background"]["active"]],
             [widgets["button"]["label"]["foreground"],
             widgets["button"]["map"]["background"]["disabled"]]]
+    if color[3] == color[1]:
+        color[3][0] = "#ffffff"
+    if not color[2][1]:
+        color[2] = color[1][:]
+    if not color[3][1]:
+        color[3] = ["#ffffff", color[1][1]]
     return color
 
 def chkMod(mod):
@@ -2880,35 +2619,401 @@ def printPDF(prt, fle, cpy=1):
         import io, fitz, win32con, win32gui, win32print, win32ui
         from PIL import Image, ImageWin
         hdl = win32print.OpenPrinter(prt)
-        fd = fitz.open(fle)
-        rect = fd[0].MediaBox
-        siz = [int(rect[2]), int(rect[3])]
-        mat = fitz.Matrix(4.16667, 4.16667)
-        clip = fitz.Rect(0, 0, siz[0], siz[1])
-        dst = (0, 0, int(rect[2] * 20), int(rect[3] * -20))
         dev = win32print.GetPrinter(hdl, 2)["pDevMode"]
-        if siz[0] > siz[1]:
-            dev.Orientation = 2
-        hdc = win32gui.CreateDC("WINSPOOL", prt, dev)
-        dcf = win32ui.CreateDCFromHandle(hdc)
-        dcf.SetMapMode(win32con.MM_TWIPS)
-        dcf.StartDoc(fle)
-        for _ in range(cpy):
-            for pge in fd:
+        dev.PaperSize = 9
+        fd = fitz.open(fle)
+        for pge in fd:
+            # Fitz
+            rect = pge.MediaBox
+            siz = [int(rect[2]), int(rect[3])]
+            mat = fitz.Matrix(4.16667, 4.16667)
+            clp = fitz.Rect(0, 0, siz[0], siz[1])
+            dst = (0, 0, int(rect[2] * 20), int(rect[3] * -20))
+            lst = pge.getDisplayList()
+            pix = lst.getPixmap(matrix=mat, clip=clp, alpha=False)
+            buf = io.BytesIO()
+            buf.write(pix.getImageData(output="ppm"))
+            # Win32
+            img = Image.open(buf)
+            dib = ImageWin.Dib(img)
+            if siz[0] < siz[1]:
+                dev.Orientation = 1
+            else:
+                dev.Orientation = 2
+            hdc = win32gui.CreateDC("WINSPOOL", prt, dev)
+            dcf = win32ui.CreateDCFromHandle(hdc)
+            dcf.SetMapMode(win32con.MM_TWIPS)
+            for _ in range(cpy):
+                dcf.StartDoc(fle)
                 dcf.StartPage()
-                dlist = pge.getDisplayList()
-                pix = dlist.getPixmap(matrix=mat, clip=clip, alpha=False)
-                buf = io.BytesIO()
-                buf.write(pix.getImageData(output="ppm"))
-                img = Image.open(buf)
-                dib = ImageWin.Dib(img)
                 dib.draw(hdc, dst)
                 dcf.EndPage()
-        dcf.EndDoc()
-        del dcf
+                dcf.EndDoc()
+            del dcf
+        win32print.ClosePrinter(hdl)
     else:
         import subprocess
         subprocess.Popen(["/usr/bin/lp", "-d%s" % prt, "-n%s" % cpy, fle],
             stdout=subprocess.PIPE)
+
+def doWriteExport(**args):
+    """
+    Write an Export file using the following arguments:
+        xtype  - C for csv and X for xlsx or a tuple of both
+        name   - The output file name without an extension
+        heads  - A list of the Report headings. A heading can be a tuple as:
+                    (Text, Column width, Font Size)
+        colsh  - A list of lists of Column headings comprising:
+                    Text
+                    Start Col (Default is current col)
+                    End Col   (Default is current col)
+                or
+                    Text
+                    Alignment
+        forms  - A list of column format details comprising:
+                    Format per CCD
+                    Size   per CCD
+                    Clickable (True or False) - Default is False (ScrollGrid)
+                    Negative colour (ScrollGrid)
+                    Ignore for ULINE[D/S] and TOTAL - Default is False
+        datas  - The column data comprising:
+                    Type of data:
+                        "PAGE"   - A new page/sheet
+                            ["PAGE", (heading, colsh, forms, name)]
+                        "HEAD"   - A heading in column 0 only
+                        "BODY"   - A body line of columns of data
+                        "BLANK"  - A blank line - skip
+                        "ULINED" - A double underline - skip
+                        "ULINES" - A sigle underline - skip
+                        "TOTAL"  - A total line of columns of data
+                    List of values
+        rcdic  - The tartanrc dictionary
+        view   - Whether to view the report
+        wait   - Whether to wait for the viewer to exit.
+    """
+    import os, sys
+
+    def viewFile(exe, cmd, name, wait):
+        if not cmd:
+            try:
+                if sys.platform == "win32":
+                    os.startfile(name)
+                else:
+                    import subprocess
+                    if wait:
+                        subprocess.call(["xdg-open", name])
+                    else:
+                        subprocess.Popen(["xdg-open", name])
+            except Exception as err:
+                showError(None, "Execution Error",
+                    "No Valid Export Application.\n\n%s" % err)
+            return
+        try:
+            import subprocess
+            if wait:
+                subprocess.call(cmd + [name])
+            else:
+                subprocess.Popen(cmd + [name])
+        except Exception as err:
+            showError(None, err, "The Application"\
+                "\n\n%s\n\nIs Not Found or Not Accessible" % exe)
+            return
+
+    if "view" not in args:
+        view = True
+    else:
+        view = args["view"]
+    if view:
+        if args["rcdic"] and args["rcdic"]["exp"]:
+            exe, cmd = parsePrg(args["rcdic"]["exp"])
+            if not os.path.isfile(exe):
+                exe = cmd = None
+        else:
+            exe = cmd = None
+    if "wait" not in args:
+        wait = False
+    else:
+        wait = args["wait"]
+    if type(args["xtype"]) == str:
+        args["xtype"] = [args["xtype"]]
+    types = []
+    for t in args["xtype"]:
+        types.append(t.upper())
+
+    if "C" in types:
+        head = ""
+        name = args["name"] + ".csv"
+        flenam = open(name, "w")
+        for valc in args["colsh"][-1]:
+            if type(valc) in (list, tuple):
+                text = valc[0]
+            else:
+                text = valc
+            if head:
+                head = '%s,"%s"' % (head, text)
+            else:
+                head = '"%s"' % text
+        if head:
+            flenam.write(head + "\n")
+        for valx in args["datas"]:
+            if valx[0] != "BODY":
+                continue
+            if not valx[1] or len(valx[1]) != len(args["forms"]):
+                # Blank line or invalid line length
+                continue
+            line = ""
+            for colc, valc in enumerate(valx[1]):
+                if type(valc) in (list, tuple):
+                    valc = valc[0]
+                if args["forms"][colc][0][0].lower() == "d" or \
+                   args["forms"][colc][0][1].lower() in ("d", "i", "l"):
+                    if line:
+                        line = "%s,%s" % (line, valc)
+                    else:
+                        line = "%s" % valc
+                elif line:
+                    line = '%s,"%s"' % (line, valc)
+                else:
+                    line = '"%s"' % valc
+            flenam.write(line + "\n")
+        # Save the csv file
+        flenam.close()
+        if view and "X" not in types:
+            # View the csv file
+            viewFile(exe, cmd, name, wait)
+        if "X" not in types:
+            return
+
+    def getLetter(col):
+        string = ""
+        while col > 0:
+            col, remainder = divmod(col - 1, 26)
+            string = chr(65 + remainder) + string
+        return string
+
+    def cellWrite(sheet, row, col, val, fmt):
+        if type(row) in (list, tuple):
+            ccl = getLetter(col[0])
+            ccc = "%s%s" % (ccl, row[0])
+            sheet.merge_cells(start_row=row[0], start_column=col[0],
+                end_row=row[1], end_column=col[1])
+            sheet.cell(column=col[0], row=row[0], value=val)
+        else:
+            ccl = getLetter(col)
+            ccc = "%s%s" % (ccl, row)
+            sheet.cell(column=col, row=row, value=val)
+        for key in fmt:
+            if key == "ccd":
+                if fmt[key][0] in xf_map:
+                    sheet[ccc].number_format = xf_map[fmt[key][0]]
+            elif key == "font":
+                sheet[ccc].font = Font(name=fmt[key])
+            elif key == "bold":
+                sheet[ccc].font = Font(bold=fmt[key])
+            elif key == "align":
+                if type(fmt[key]) is str:
+                    h, v = fmt[key], "center"
+                else:
+                    h, v = fmt[key]
+                sheet[ccc].alignment = Alignment(horizontal=h, vertical=v)
+            elif key == "border":
+                stl = Side(border_style=fmt[key][1], color="000000")
+                if fmt[key][0] == "T":
+                    sheet[ccc].border = Border(top=stl)
+                elif fmt[key][0] == "L":
+                    sheet[ccc].border = Border(left=stl)
+                elif fmt[key][0] == "R":
+                    sheet[ccc].border = Border(right=stl)
+                elif fmt[key][0] == "B":
+                    sheet[ccc].border = Border(bottom=stl)
+                elif fmt[key][0] == "LRB":
+                    sheet[ccc].border = Border(left=stl, right=stl, bottom=stl)
+                elif fmt[key][0] == "TLRB":
+                    sheet[ccc].border = Border(top=stl, left=stl, right=stl,
+                        bottom=stl)
+
+    def createSheet(fmt, page, text=None):
+        if text is None:
+            text = "Page %s" % page
+        sheet = book.create_sheet(title=text)
+        # Main headings
+        rowx = 0
+        blank = False
+        for num, valx in enumerate(args["heads"]):
+            if type(valx) in (list, tuple):
+                cols = len(args["colsh"][-1])
+                hgt, siz = valx[1:]
+                hxf = {"font": ["Ariel", siz, True]}
+                hxf["align"] = ["center", "center"]
+            else:
+                hxf = {"font": "Ariel"}
+                hxf["bold"] = True
+                hxf["align"] = ["left", "center"]
+                cols = 0
+            if valx and blank:
+                # Add a blank line
+                if cols:
+                    cellWrite(sheet, [rowx+1, rowx+1], [1, cols], "", hxf)
+                else:
+                    cellWrite(sheet, rowx+1, 1, "", hxf)
+                blank = False
+                rowx += 1
+            if cols:
+                cellWrite(sheet, [rowx+1, rowx+1], [1, cols], valx[0], hxf)
+                sheet.row_dimensions[num+1].height = (hgt / 20)
+            else:
+                cellWrite(sheet, rowx+1, 1, valx, hxf)
+            rowx += 1
+            blank = bool(valx)
+        if blank:
+            rowx += 1
+        # Column headings
+        for colx, valx in enumerate(args["colsh"]):
+            nc = 0
+            for cx, vx in enumerate(valx):
+                fff = args["forms"][cx]
+                hxf = dict(fmt)
+                hxf["bold"] = True
+                if type(vx) in (list, tuple) and len(vx) > 1:
+                    if len(vx) == 2:
+                        hxf["align"] = vx[1]
+                    else:
+                        hxf["align"] = "center"
+                elif fff[0] in alpha:
+                    hxf["align"] = "left"
+                elif fff[0][0] in ("D", "d"):
+                    hxf["align"] = "center"
+                else:
+                    hxf["align"] = "right"
+                if type(vx) in (list, tuple):
+                    if len(vx) == 3:
+                        cellWrite(sheet, [rowx+1, rowx+1], [vx[1]+1, vx[2]+1],
+                            vx[0], hxf)
+                        nc = vx[2]
+                    else:
+                        cellWrite(sheet, rowx+1, nc+1, vx[0], hxf)
+                else:
+                    cellWrite(sheet, rowx+1, nc+1, vx, hxf)
+                nc += 1
+                if colx == len(args["colsh"]) - 1:
+                    ccl = getLetter(nc)
+                    sheet.column_dimensions[ccl].width = (int(fff[1]) + 2)
+            if colx != len(args["colsh"]) - 1:
+                rowx += 1
+        # Freeze the headings
+        sheet.freeze_panes = "A%s" % (rowx + 2)
+        return sheet, rowx
+
+    if "X" in types:
+        import datetime
+        from openpyxl import Workbook
+        from openpyxl.styles import Border, Side, Font, Alignment
+        from TartanClasses import tkfont
+
+        # Variables and Formats
+        fnt = tkfont.nametofont("TkTextFont")
+        fmt = {"font": fnt.configure()["family"]}
+        alpha = ("HA", "LA", "La", "NA", "Na", "TX", "UA", "Ua")
+        cash = ("CD", "CI", "SD", "SI")
+        xf_map = {
+            "D1": "yyyy-mm-dd",
+            "d1": "yyyy-mm-dd",
+            "D2": "yyyy-mm",
+            "d2": "yyyy-mm",
+            "UI": "########0",
+            "UL": "#0",
+            "CI": "#,##0",
+            "SI": "#0",
+            "SL": "#0",
+            "US": "#0",
+            "CD": "#,##0.00",
+            "SD": "#0.00",
+            "UD": "#0.00"}
+        for an in alpha:
+            xf_map[an] = "@"
+        # Create the workbook and worksheet
+        book = Workbook()
+        del book["Sheet"]
+        page = 1
+        if args["datas"][0][0] != "PAGE":
+            sheet, rowx = createSheet(fmt, page)
+            page += 1
+        # Generate the body
+        for num, row in enumerate(args["datas"]):
+            if row[0] == "PAGE":
+                args["heads"] = row[1][0]
+                args["colsh"] = row[1][1]
+                if len(row[1]) > 2:
+                    args["forms"] = row[1][2]
+                if len(row[1]) == 4:
+                    pg = row[1][3]
+                else:
+                    pg = page
+                if len(row[1]) == 4:
+                    sheet, rowx = createSheet(fmt, pg, row[1][3])
+                else:
+                    sheet, rowx = createSheet(fmt, pg)
+                page += 1
+                continue
+            if row[0] in ("ULINES", "ULINED"):
+                continue
+            rowx += 1
+            if row[0] == "BLANK":
+                cellWrite(sheet, rowx+1, 1, "", fmt)
+                continue
+            # Check if next line is an underline
+            unl = False
+            chk = num + 1
+            if chk != len(args["datas"]):
+                if args["datas"][chk][0] == "ULINES":
+                    unl = "s"
+                elif args["datas"][chk][0] == "ULINED":
+                    unl = "d"
+            # Write columns
+            for colx, valx in enumerate(row[1]):
+                if type(valx) in (list, tuple):
+                    valx, bord = valx
+                else:
+                    bord = None
+                if row[0] == "BODY":
+                    if valx and args["forms"][colx][0].lower() == "d1":
+                        # D1 Date conversion
+                        valx = datetime.datetime.strptime(str(valx), "%Y%m%d")
+                    elif valx and args["forms"][colx][0].lower() == "d2":
+                        # D2 Date conversion
+                        valx = datetime.datetime.strptime(str(valx), "%Y%m")
+                # Format Font, Bold and/or Border
+                hxf = dict(fmt)
+                if row[0] in ("HEAD", "TOTAL"):
+                    hxf["bold"] = True
+                # Underline & Border
+                ccd = list(args["forms"][colx][:])
+                if ccd[0] in cash and type(valx) == str:
+                    ccd[0] = "NA"
+                if unl == "s" and ccd[0] in cash:
+                    hxf["border"] = ["B", "thin"]
+                elif unl == "d" and ccd[0] in cash:
+                    hxf["border"] = ["B", "double"]
+                elif bord:
+                    hxf["border"] = [bord, "thin"]
+                # CCD Format
+                if ccd[0] not in cash and not valx:
+                    ccd[0] = "NA"
+                    valx = ""
+                hxf["ccd"] = ccd
+                # Alignment
+                if ccd[0] in alpha:
+                    hxf["align"] = "left"
+                elif ccd[0][0] in ("D", "d"):
+                    hxf["align"] = "center"
+                else:
+                    hxf["align"] = "right"
+                cellWrite(sheet, rowx+1, colx+1, valx, hxf)
+        # Save the spreadsheet
+        name = args["name"] + ".xlsx"
+        book.save(filename=name)
+        # View the spreadsheet
+        if view:
+            viewFile(exe, cmd, name, wait)
 # END
 # vim:set ts=4 sw=4 sts=4 expandtab:
diff --git a/tartanImages.py b/tartanImages.py
old mode 100755
new mode 100644
index 4f2cba6..d14b57f
--- a/tartanImages.py
+++ b/tartanImages.py
@@ -156,6 +156,7 @@ images = {
     "last": "R0lGODlhMAAwAPffAAAAAAQEBAYGBgcHBwgICAkJCQ0NDQ4ODg8PDxAQEBERERISEhQUFBYWFhcXFxgYGBkZGRoaGhsbGx0dHR8fHyEhISIiIiMjIyQkJCUlJScnJygoKCkpKSoqKisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMzMzQ0NDU1NTY2Njc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdHR0hISElJSUpKSktLS0xMTE1NTU5OTk9PT1BQUFFRUVJSUlNTU1RUVFVVVVZWVldXV1hYWFlZWVpaWltbW1xcXF1dXV5eXl9fX2BgYGFhYWJiYmNjY2RkZGVlZWZmZmdnZ2hoaGlpaWpqamtra2xsbG1tbW5ubm9vb3BwcHFxcXJycnNzc3R0dHV1dXZ2dnd3d3h4eHl5eXp6ent7e3x8fH19fX5+fn9/f4CAgIGBgYKCgoODg4SEhIWFhYaGhoeHh4mJiYqKioyMjI+Pj5CQkJGRkZOTk5SUlJWVlZaWlpiYmJqampubm5ycnJ6enp+fn6CgoKGhoaOjo6SkpKWlpaampqenp6ioqKmpqa2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7q6ury8vL29vb6+vr+/v8DAwMHBwcPDw8TExMXFxcbGxsfHx8jIyMnJycrKyszMzM3Nzc7Ozs/Pz9DQ0NHR0dPT09TU1NXV1dbW1tfX19jY2Nra2tvb29zc3N3d3d7e3t/f3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAOAAIf8LSW1hZ2VNYWdpY2sOZ2FtbWE9MC40NTQ1NDUALAAAAAAwADAAAAj+AMEJHEiwIEE9evIoXIjQoMOHEAviuUPRTp2LGO1QvIMnokeIF+nMkQPnTZs2bNicfANHzhw6Fz/KBDdnThyTas6MCeOFy5YtXLyEGXNGTZs3cWrOfCgnDhw3asyA2VLlSRYwamqqAZPlSZUtYMyocQMnjpylBN+YTEOmSxUoZPxgAjWqlKm7pUZl8kMGSpUuZNIcfYMWnBs2asp4oeKEziZRqWDZyrWLFy9duWrFYnXKEx0nVLyUUcPGzdI2a9CIydJEDaVRrXIBI1bM2LFjxowRGxas1y1YqjCpaZJFDJo1bWSuSWPmSxUmgkCtykXsmDJlzJo5296M2bJkxYb+/coFK9UgJlW+mEmzxmOaNIqnRGlEytawZMuaPYsmbdo0av5JEw00zihjjDC+1NJKJFFMIdp7EKFxRltSQFFJKbocs4wz0EhDTTXXXIPNiCFaU8000RRYDDC5vLIJFFIAdgYaD5lBxmJJNFLKLskw0yE11mCTjTbcFGnkNtpgY8000DBzTDC6wCJJEqGRYYZDZYzxhRVHBEKKLsl8osw0QWazDTfdpKlmN0UieQ010TSDjDC6vELIEVZ8MUYZBo3BVRNmgHJLMs0wAkku2JzZjTeMfuOoo4yyuU021UjjDDLB5NLKGcSBMUZBYkwVhRGUtHJMM9EwooghnkzT6KP+sD7qTTdIWiNNM8cAU4snRkQBlhgEgeGFFUnAMQovPlKzyCGD/CEILrFG+w0ZYWBhxRZoRMNMMb3AIkcSVngBxkBfeJEFFERo0koyzkhjDSKE/MEHHnRMQo20j4pBRRE+/LAENc8kEwwuohABRRZefCGQF1tYoQQXovCCKoiFAMLHHXKgNscs+H4jRhM91HADEdfcyi0sXShxrRcCbZFFFETwoQoyz5CZTSB94CEHG2eUIUYYikwjbRdG1MDCCz1oUw00AtfyBxFRZLEFOFtocYUTPlzCSjDPUIONNn/sMUcbZvDkExdqxBItFkG0MMIJN2xTMjPD6BKKD05coYX+y1hMoUQSoLzSyzHSmNnHHW+gEcYW1laBRRZcJCL0o1TwYIIGH8jATTbUOGNML68kocQUj1sbxRFTjCLLLzRXw00cdKwxBlVRQAFjFVl00QbHjkZxwwcUZNACN9tU8wwyv8hCxRFRWIHFFW8V4UUptACTDDTWbNOCDVRWxcQSTDghhRVafEHGI0JDMUMGDFCQAq3WMA0MLWAU4dcVVjA2hBqm1BKMMtHIngpAcIEIPMACJIjBDoawBNJtwXxvgIURUCABAkjgBPCLhjKCUYs2DAE0VqjCFJoghDSYwhb/i8Y1tpGCD1TAAQYIwAAUIIEMiIAFNwjCEqpQBlcMwQT+EAAABExAq2toMBi2YIMQmjCFKlBBCiTsQv9SmL0WWuABBxBAARZQwxG0IIdLIIQ0vkGEE1TwghncYC2+sEQpUEE+TRhCFKhnPextYwUhwIAEGICABDSAAhsggQtwAIVVPKoIKaDAAtwHP/nRQgpDaEKDpBCFJhDBCKpj3TOqsQ0XlIADFZDAAx4wAQx8AAUxwEM0YIWEFmSghsMr3vGSZwQiSJKSUGhCEW5wCcEZwxnUyIYMUiCCDVygAhXIQAdIwANSRIsJMviAKTXHOc/1YhQ3KEIToBAFcEDBCUfYgR5YoYthMEMa17jBC1AwAg9woAMgIEEbniEtKNzgBCD+gJvcpEE3XfxhB0dwAhQE8s0k/MAKp/Df9arRAxvAYAUnKIEJchCKjlWhBy9IAdKUxjQOZuEHSRCoQJ7gBCUIQQedgEUvitEMaQyhBzeYAQxcAAd6dmwLRLiBDEZWsmZwCxU6EIISnPCEgTRhCUXQQRpUgYtgJOMZSiDCD3aAhFJ07FFdYEIQfDAEKABMYLhwgw6KsIQmEKQJTEACEHBgCZUWgxlRYMIR+OAMb1xVVmxSmra4BQocAAEJTDArQZaQhCHooAupqAUwjoEFMJhCG9tY1F1nVatb5aoWYtDBEJKwBIMsQQlG+AEN/BCbYPxBGNKohpnQ9CpZzYp4lLL+FKZyUQga/MAISuisQf5GhIY64hW6EAYyUEWNa0C2SGtiE/G08aY4zUkXlrBBD4gguod8FglD2IEPMgELXQTjGMx4RmqvYaZtmPe82bhGpZ7hJCjdbYFIyC1E/maEIOSgB494hWyKQagfVcMa1rgGgKtBDWlAoxngYZElepCDIBihuhGhbxB0YANAtKIWvQgGf5nhjGdAIxoghsYznMEM8PSmFoWwgQ4cDGGP0FcIPJhBFzgBC1xkeBjGQEYyrqOMZCDDGLzpBS5AEYYZ8EAID1bCUpKABCMMwQc3qIEaRAGLWuiiF78ARjC2DIxf9EIXtUBFG0TGVSMgIQmFYfKTEYgQBB7YoAZU6EPgZEGLWtiiFrSQxSj8YIUa2IAHQSDCEc5cGIEwuclsZnANZAAEJmgBDWjQAhOAIIMa3DfQZiZ0oQei5loOAQg+4IEOcoADHORABzzwARCGcMlBo3nTBkHCEY5ghCIQYQhCEEIQgpBrVhfBCLNGAqwjggRZz9oIyE72rAct7GHLpNjQjnazCxMQADs=",
     "ledger": "R0lGODlhMAAwAPcAACd5Kyh6LSl6LSp6Lip7Lyt7Lyx8MC18MS59MjOANzSANzaCOjeCOjiCOz6GQT6GQj+HQkCHQ0OJRkaLSUeLSUiLSkmMS1KRVFOSVVSSVlWTV1iVWluWXVyXXl2YX16YYGObZGSbZWacZmugbG2hbm+hb2+icHCicHCicXemd3ineHypfDVGqjZGqjZHqjdHqjdIqjdIqzhIqjhIqzlJqzpKqjpKqzxLrEdUqkxasU1bsk9cslBds1Fes1JftFZitF5nsVhktWRts2BruGhyunV+v4iwh4+0jpC0j5a4lZ68nJ+9naC9nqG+n6idqKmeqMCxq8Kyq8GxrMGyrMa4ssa4s8e5s8e5tKfBpKfCpajCpa/GrLbKs7fLtLjLtLzNuMHQvcHQvsHRvsLRvo6VyJ6jzcnVxczWx8zXyMrI1cbG2tLP2Nbc0djd09je09ne1Nne1dre1drf1d3g193g2N/i2uHi2+Hj3Ofi3+Pk3eXl39jX4dnX4dnY4drY4drZ4dvZ4dvZ4t7c4uDd4+fm4uTh5eji4Ojj4Onj4Ojj4enj4enk4enk4ujm4ujn4ujn4+nn4+jk5uvo5evo5+zo5+3p5+7q6O/q6O/r6O7q6e/q6e7r6e/r6fDr6vHr6vDs6fHs6fHt6fHs6/Pt7fXu7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAKUAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAACP4ASwkcSLCgwYMIEypcyLChw4cQI0qcSLGixYsYM2rcqNCSx48gQ34kKLJkSISTTKqsJLCSSpOTDL7wEQiTyU2Zcm7ymMmQFCmGMr0MiSmQjxcEYfDgY9NSJUWKKj01RJVq1E14oEDBs3PoR0x8eMAg+GJpU0VUqjBidAXKTylQrizilHVrV6+WwPJAOrAsU4+KqlxZe0XKlMNS5NLVylVkp04l9fIV6LdppbVSGUGFmmhRJayM734UAyZy2MmlKnu8zCjzZkYfQdsFyakTChO1iZ4maxawYMKGEyvyKLuxR05zlFiYgATNJZCSef+1hFYtW7dQqgy3VLwrJzkgDv4oYFCAwhfIHqP37e10kedKiw7J90y8rnFRSgxE2DKGAwARjny123rTsZZZIook0lp9oXnUiREBbEAIKVlI4AEdnKQ3IGXsBWYFcFNIoR2Ds1kiChYILJBEHY24AYckAu4l3VlVfMhWcCNyZ593d5yAAAIXHOGGKNBtmBp7T70X33wu6digR57ksUQHCRSggRno5WWkaiXlJFRsO3okyRttPKIHFxgIMAIkMaLG5UtfdmcJJ3R4IIEWo5DChAEVxJGhljIS2JRJ8BnimZyWNBICAB+cwUYKA2RghyYaBsrhdCYp0pZiYVrSSRcREPCABAc00ASllbrJXqabztWpR/NgrACBAyp4AWObM6okFCMKfvaqp5WQUEIlnuhm6ZEFQtXkVEwiChIYYZh2LJfVLeIbdpw+CdJj0qo6XWByAVZYiNmWiJd6l1rm3rLxJXLIob8OhS6yg3rlrFfzlvUHKJj06++//zo5G8AE+wvKH8fKoIMafezh8MMQOwzIIJF8gohWiIRCSSGC+BHxx32ooYMMBNFwQw47pKzyyir3EAQRZKQRRRRrlFHEED/0wPLOO+RwAw0l0zADDEQXbXTRL7zQQgtAOPGEEDGw4ELSR1cNwww0AG0RDTbggEMNWnPUkNBYi2322WinrfbabLft9ttoBwQAOw==",
     "left": "R0lGODlhMAAwAPcAAAAHcQAKdAAMeQIRfQMVggUahgMWiQYdiwgfigMbkQkijQcglQklkgwqlgYjnA0tmQ8xnBAzngoqpQktrA4zphE2ohI6phM+qQoxsxE8uxZCrRZFshpGsRdJtxpKtRdLuhpNuRhFuhxSvSJVvAs6wws9yQxBzhRGzhtMxx5VwA1F1Q1G2BRJ1BNN3RhN0xxR1CZawydbxSNb0y1kxy9lzTRryy9r3zt10zp11w5N4xZR4xJT6xdY7xhW6RJW8hVa8xpd9Rpe+Bdi/htl/h5p/x9h9iNk5jR27CFl+iVt/ilt/CZp8ix0/i14/idw+TJ1/Th3/zR7/jx8/kR/1kd97TeA/zyE/z6I/0qG20qI3lGM3keJ5lKP4Fub6EWD/0SM/06J/0eE+FaL9FOK/1mN/0eQ/0yV/02Z/1KU/16S/1Kb/1yd/1+W9G6V73qe722b9WKU/2SZ/22b/2KY9HGe/1ag/1uk/l+p/12l92Wk7GOr9W2r82Sm/26i/2Su/2yt/3Wh/3ul/3Sr/36q/3ir9Wax/2q0/224/3S09nW1/3y1/3S7/3u8/3uw9X3C/3fA/4Ki8Iap8o2t8YOr/4mv/5Gs8oq69oKz/4yx/4G+/YWz9pO1/5a5/5y8/5659KG//4TE/4rG/47K/4fJ/5TN/5nP/53T/5fQ/6XC/6vG/67I/7TM/7nP/7/O9aDS/7vR/8jX98LW/8ba/cvc/9Df/9Th/9zm/t7p/+Ts/unu/Ozy/vL2/vX5/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4AIf8LSW1hZ2VNYWdpY2sKZ2FtbWE9MC40NQAsAAAAADAAMAAACP4AfQkcSLBgQQEIEyI0yLChQ4YJAwgIQLFixIcYHUakKGCAgQQgCRCYyFFAxpO+EAYAIMABiRU7gBQhggRJkB0tTGAwAECiSZQNVRqYsEKJlziTOq16xWrVJ0pxwDDxQcLBxIVAB6oMgOEHE0Craunapausrly6cOGy9QpQFCEtCLD8CRQhAAMllMRhdatsLly3bNWqNYvW4FqBWcl54kMCyboTHfjwsgpXWcCzXq3azJnzq1mDVYERwoKAxJMkMQiRM2ssLlqsVMmenaq2qlS3Va1iJStWHCQtDpx+qBJDkkli086Kjao5qk/OUzl3/ikVK1aTmOgYMDwoAAdCJv713QX7+vVPnzp1St8Jlfrn6NG3Z0UHeMKgAQz4kEOrLOzN5q3CySq35FKLe+olqOB6qpBBBAZzGWRXCVbEYtksunXmFCu9dNiLLp9wIuKIJHLSySZPFJEAVgRNNIESqdyCSyy34TYbJxx62GEqlGzi449AYrIJIEn0YEB3KeX3Qxqz4DJLdM7hqKOHqFBi5ZWUYGIlJlxuQsUQE7DUYgASJBHjgdA915yUU/aSyySTWAlnnHBSQicmcAyx3QAEDSCACqzhssp6C67SppuV0DHnoozO+YQQjv00wAAJIIEKLbQs2AknrxyaCyRvBAKnonQEEgggpqJ66iRkDHHCpP4CETAACV6wQksqPorooyyegkrHr8DSAciwwAISbJEEFMCnSCqkEYssnGhp5ySzeOoGHMEGK0e22qaowAAE+FJAATuwtkogdMgRBxydtmlLG2OkAQcZcNQrr7xwyBuHHPz2C0UQEwwwbgEH8DBJLJvQW+8nh/YCiyeqNBcxKrXFh94k9WYMRxxQIJFBsuMqUAQlq9BBxsmqNNwLLyq3yQm9ZKQhLxSuhqzAAkhs8kkaJ9PBcstAe5gLHGOcHDPNLiCAgAIKMIAEJi+TAQYdQVfdIR1gFD2GF0wk4QLTTDegxCaDSJE1GbZYDXQuZIwxhhRdJ5HEC0wzwEADSwwySP4STUQhhRiwqN2wLm9AIUUTTCTORBMoNH33A0b0gUkUiDfhRBi5HOpJG264AYkkoIcOeiSRUOFEE6ijHsXqISjQgC8NLGBDHJxYsfrqTYiR+ZRvPuH36kc8IbwTxDtx+/FVVBGFBQ283rwManCCRhVWVF9FE23g0iYvgkSR/PfUWx++9VJY8YUVR0DQvC8PPOBBGZz0YcUV9NPfxBy7HJpIFVfM3z/9/gOgFbzwhTJ84Qs2eAAEBgKBCBxBEIoowxUOSEErdKEWbdqFJsxHwQ568IBoOGAMFDiQCjwgBmu4hBoKWIYWttAKcziULvhwQBfa8IZoUEMZwmCBBpawAv4cMMMfBKEGMxjxiGYowx500aZbFNEMZ0CiEaNoRD6oQQ00gEAFClKBCtjADoqwYg7VcIYrnqEMmmDilPZwhjLWoYxXJOMV7WBFM3CgAhYoiAX2uIU/KOIPdQikIANpBkRMiRdWHKQi1cAHQdjBDjTAI0MuYIER2CERf3ykJjVZh0Zob2WW2KQoH+mHRPzBDziwwAUuMElK3qAQimBEIu5Ay1rSsg56aEUsNIEHW/ryDn5QRCL8sAYPqNIhGtDABbZgiERkghGG8EMhCuEHaRYCD9i0AzWBSU1qStOZjDgEHkaQTIwk0wNbOAQjQAGKRRiiEO80hDznSc9pwlOdoeZoJx5qcIFyYmQDyczCIRwhClGEwhGLOIQhDsHQhjJ0oYdYBCgMCopH6AEGydQASjzAAQ3UQA+OCAUpSEFRhC7ipCddZyhEMVJRVDQL5OSAB7LiAQ9sYARdIOgpSHEKU5RipEAlRSlOQdSdggIRN9jABmqaFYF4QAQeAEENciqKnprCFVg1xVVdYYqdjmIPWIBBB6La1IJA1QMfmAEX8oCIUZBCq1o9hUv30IUbiGADIACBCMpqEBH4VQQf8OsMboAFLRgWCzWAAVQD61e+PuSvIsjrByZLWcg6FigiSIFmN7vZvTY1IAA7",
+    "menu": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABmJLR0QA/wD/AP+gvaeTAAABUUlEQVR4nO3aMUoDQRSA4RfxBClt1Do3EL2CtxAs7ews7OwsBW/hFYxHSB3SpMwVYpEIUWIR9i2+Hb+v3GIY8pjMLvwRAAAAAAAAAAADMOq6wOnZ5CNGcZGxmQZMF/PZVZcFjjpvwTB2XXZd4DhjFxERj2/3WUsN0sP1U8o63U8IqQykGAMpxkCKSbvUsy61isYn47h7uYmIiOfb11gtV9+eZfKWdaA+hrDLX1Yx3b/UzyfrjI20YjGfdfpNM07INGGNJowi3v96DwAAAAANkwHlkgEVIwOqQgbUKAMpxkCKMZBi0i71n75ymSHZl/v89ryvDCgtcvCWtXnLqhA5kEgGlKzCCZEBbcmAAAAAAHolA8olAypGBlSFDKhRBlKMgRRjIMX0kgHtS2WGmAUdYh0J3xAZa8iANmRAjZIBJatwQmRAWzIgAAAAAAAAAODf+AS5qGG5DzC6zwAAAABJRU5ErkJggg==",
     "message": "R0lGODlhMAAwAPYAACUlJVRUVFxcXG1tbXFxcQBSvwpbwxRhxRtmxxxmyR9oyyNryyluzS1xzjF0zy9y0TR10TZ40zx81EJ/10J/2EWB10aC2kuF2k+I3FOK3ViO3lyQ32KV3meY31eO4ViP4F2R4WOV42eY5Wyb5W+d6HGe5XGe6HSh53ul5XWh6Xyl64SEhI+Pj6CgoImt3I6w3ZGz34Sr5YCn7YOq7Yit7Yuw546y7JW24Zy65JS17Z227Je46pu764et8Iqu8Y6w8pS19Zi39Zu69J68+KG+56G97KG+86C++qTA56bB6qzF7LLK7rrP7rzR76XB86zG86/I96XB+6zG/bTL87rP8rPK/rnO/L3S9LzR+9LS0tra2sHS78zZ7dTa59Tf78LU88ra88TV+svb+tHe9dLf+tXh9Nzl9N7o89Th+dvl+d7p/eXl5eno5u3t7fXz7+Dn9uTq9evu9ePs++nu+e3w9Ozx+/T09Pj39fv59vP1+vb4/P39/QAAAAAAAAAAAAAAACH5BAEAAHwAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NAAsAAAAADAAMAAAB/6AfCyDhIWGh4iJinyMLHuPkJGSk5SVlCyMgntSVlhYYkBhM0BOQiQkIyIiIRsaGa8XFhQSEhEREAwMCwsKCAcHBsF7mI2bYXp1dVh7U05XUyMmJqmrIRquGRexFbS3Dg26CwgJwAbDmY5SWHNycmpocs9gTjIj1CIbrdnaFty1Dt/CJSB3oMC5YlKiQHmCBYqKJ09sTLkyQ1UIECCwabtQYYItCA8aNNiVAIEvYAaJaVJDRoxLl2FiXrny5cvMK0ym5FyyRImSJECRICFCBMeNozBewIDh4qAmS1Ah4Zk0FU/VPVazOnUUFerVO3rw6Llzx47ZsmbNxtnate0jsP5g7YxNS5cNW7eQ6pRpwrcJFzhVxcala6eNHbsqubaNV6NDNgsWLmTgEKPJGax20BI+fDeqHh4eMETG8OoVhtMYNCghmzmP4cJt2iBG1xXMCGwjeCzZwoXLliU8HL+KEQfPZtltOle6wkHDBhRK6lDdAydJiQ0eYsCx48as4TZxkieGikYExiKVruKhg+KDhxuaC7OJrVxSnRMXr0DKM4XHDh5M1AEHT0qUAQcKIYjgxR3dxeZgfZFMkSAPkJQxQwgYXvQfCBc1gQcXq+iQloP0jUeJHCmIYIMej4RxgggjkHDCCalIM0IKZ+ARRz0qbOcGieLRRskTIpAAxiNpzP5Igg1j0FHHFSeYkIIJNthhVRHSdPHjd27QAeEeesxgggrS7ZGElCmogdUjSkh5ghLG4bGFNFx06WBhX8qhQgpCPFJGCnsqgZVYeHwBaApgGHcHF3S68SNsQRYzCRoqqPDFI0sAOgNgWn2hwgwqlGGcHUugIEMXhUEa6VOSkFFpGo8IoUIPQOSBlR5hbfEpDXCURUcOKsjwhnd0fYlGDzPAqocQyBoRFq5WOTEDrXRwZwYNM+TwnXeGfUlGDz6ouawPPTxh1Vh4XOsDDUtwZ8cTPdAAxmZmsfUsJGn84AMajxjhww/OhiXWEz4A4cMYeNyxBbhG0PVaveONahYecv4YPMUjU/wABBBvZPWFxhtvtwUQOQAxRnx2VGsHWxKrZQQQQhQ3xsZBDBHGF1MEAUQQPD/xMsxmoFxsxHbkkdYdX+yMMNI867zxEEbwPITOQRiBcGYtp3VXfHfQccQQRxR3BxlHlD0EFG+QYQTYR0ghhpV2xCG30UajdRddZOExRtlHcGoHHG9sZ1UcbwSOtR1WPBFFGJkRdhcedVt5Rx5WRBGFFGlIDtZYeScsVhxhHHH5HOeGlcdUJhY9edGnI345J2nkcUdWcJE1hxhS6KBDEV2wwcYawK/hux2pQ3766QnnQYYUzHMSExnQtxQGFlUkpIghQgpculxWyRGGFfXVNy8+81VUYQULd0DVQiZPEWq6wNrn4T345ddfRRhkzEH8ylNNsgL77XOfWPRwOlzBLw95mIMCFZiHsOyBeJB4Fovw8D8AcgVa8COUVQZ1rzX1DxIs6E5asqIS9l1Qg89yXwpTGAmxPJAF1VKZHuxAAAAKaU3QupULbyUJF7IIV3lgQWzmxoYa2lBS0JoKBsH0wTXhMCtVEaLvZGPEI7LKh+kBE67AxMVHQIsFU9TCAKyYvSxy8YNXmaAXwcgGLQSAjDeMoCRY9AglzrGFLIhDFgQAxzjiJSos0AIf+9iI6xnSkIQEIAAWychGOvKRkFxkIhkRCAA7",
     "network": "R0lGODlhMAAwAPcAABYbKQ0ZOxYeMBwjNwcbSgkbRx0nQgkhXjY8UQAecgokYwsnbQwoawQldgwqcwUmeAwsfAYoexEvfw8wfxExfy0+bjxCWyxBeE1NXUlJUklQblpaZkNPc0lUeF5ecGRkbmJicnFxew0ugQ4wghU0ghw6hRw7iho3hyA+hiE+iSVCiypGjS1JjitEhjBMjyhGkC9LkTNOkjZRkzpUlT5Ylz1WmT5YmkJUiUFWnERbm0hdn0tjnnl5hH5+iWlwkkleoEddoE5koVFmo1VrpFlupldpqFptq1RnqFtxpl9yq2J1rGV6rGl9rmNypGZ4sGx9smN2sHB/tnJ/uWyAr36Eo26CsnKFtHiHt3aJtnmKt3aFuXyLunmFvn6Qun+MwnyHwYGBioqKk42NnoWFl5aWmo+PoJSUooOTvYiXv4mZv5adt6enp6iop6OjrrGxr7Kys76+vsDAv4KNw4WUwoqVxY2bwo2XyY+ZyJKexJOcy5Wixpimx5WjyZqlzJypyp2n0KKtzqOpw6Sxzr+/wKSs0qax0au11K+61q612LK81rS727m/3bG32rzE3bvF277E4MLCwc/PzdDPzMLK3sDG3tTU1MHG4cXL4snO5cvR5c7T6NDW5tPZ59LW6dXZ6trd7d7h7t/h8OHh4+Hk7+/v7vLy7+Pl8ebp8+rt9e/w9+/y+PPz9PP0+ff5/P7+/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAK8AIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAACP4AXwkcSLAgQQgTHExIOAGCwYcQIz6EoIKJn0ynVrFiBcpRnSElJIoUKQILJ1coU7ZKibJVoiENRsoUWBKVq1asUqFKhTNVqlM6N678JGSmyBeYUpnayMoUKFKgRpEaRXXUKVSjTKliteeE0YcyQKlCBQqV2VSeQHHipHYtKFOnRn06BfQQia8EX8w1xZduXE2bMmUCFTjTpLd9x6IC5BCviEdOEdPlNPeSo8uZHE1ydAmx2VChTDmJaRQCl1CfUoMOtQnUpFarNh/adPmQI05w46b+pMnrTAg4Hnn61Gl4KEeCktMWZIiUK+SCMLr2tMmT9U9PHsw0wQVTJ02aiv572kN+j6Hyk1xNOrQnEdtMmBYZauR90QkHIyMckfPpEiZNnlyyRx144FGHIATikcYhaaghSCNKndKJIIUg0scljRjRmEQQGEFHJ5YYAggghXRxxoln+HFiGmcAcuIcqaCkinXfYXKJIl+kIBIEEJyAxyOPXGFFF3hggUUWWXSRBpJZYLHHGVZ0okpLnoBnIyKEfHFEBBxCEAERWzyyRSFnJOLRFFN0gQWaaNaRhR6tmNIKTjVeYkkidnghhQgSjcDjED4iskgfSdShhyBITLGEEowqccYUerCCiimfeBJKJ3Y+wogRcsihgkQLQUCDCy4MwcQlRHBhBRI7DOHqEP5EDJFFEl2wogoolWrS3yOL/PFFDECIgN9DDDQEAQpDRJBDEIQkAiAoU+wg7bRdWEHDJamgVqUlnSxCSB52SKHhhgU5wKOXVjQAgQsxAGIJJu/tMAMNNOTQxRRV8CEIIHMYgoklj1iSB7hyxMAjRBCIYOwQKkQAAQyLWHJJJrgJIsMKLOyAph5IyCDDDDkAbIgi39oBBI8UQKTQuRBg4TALjEQ88SemhHJIDlYI4gkRM6wQRAwxEELyH4vkYYS6BxMrAgQkTBDBDjI4/AcjijxyyW6neHIGSo3gIMMQQeSQAyOE9EGIIQZLIIIEECmw9AU8SlAFBQ0oQfUij4Cnif4pWCiB0iI14ICDDjocQfYfdzyiwwQoeBnR0i9AIAEFFFjxAARPMMJI3uF1okIVhSTyxBFBDI6DHYT8AS4hOgxhhAgKREQCBCzw2JALSkSQgCJVfzcKGjhYMcQTRiShhBE/1BBF6uBCkUMeOPAZEY8sNH7uDkrsrsgimGxiiAtnuIAEE0okYQQUSvwARMl2xPBEHieMIJECPc5gOwQP7GCFIogo0r0LV9gBC5LguvIp4Qg5mMHAwgUBJtQAAsOKyAQoQAMVsAwCQ/DEIj6RCkpY4QwzmIEVcjAERumABS5AQQzysIXZnSFhIzEXC3JAgXOdIAiMOMVKWLEJISTwDP47yIEQvMYuF5RABg2hgRUcJpMRkCAHMqCAuWDgBEKAIiWiU4IO0pADHShBbCGUwexo90UREEAmB4DACqBIAhJ87Q+TYAVKACGEJyRBDzsQgrTERq8STMAFNjhDBBZgFAdIAGQ5WMEM3kcIRwSIDi4agh5g5So95oAGK5CBDboQObz0SAetKqEdCgEIJeiBUWgABCWi0IRKSosI+tNDDERQALy8ggQvEEIJr2CISVghCWg4AxOccIY04GFEA6rDiPTAhBWM4Iy2DIAKkaAEKxhCRWeA5BWucIgtbHMLZ6jDHLZAQBmYAJq2FEgLbJCEJ2wBDQmiRIEmUaACifMMVfBIgg1YEIB0FqQCOjCCFeigBz30gTeTwAQg9qCHY/ZBC0bQQQX8+RABzMAJfOjDITwxClasYhSi+IQlLJGJQkDhBgagaEQAwIEmzCEPfRgRIAgBiDzIQQkdGIBKZ4IADVAhEGrwQQcQsNN0kqEUkthAUf1pBleIQqlLhcgYyiCGMlBVDGNYBWxKQYpVuKIUHgiBGMZaVTMUVRQsQUkbKsHWtrI1DJFIaytAsNM3QCIOcYADHCARBkjo9a9wiEMIyIDXwsIBAzvtARgWy9gevGENbIBsZN3wgQ8olrFgQGxUB7KBHvDgs6DtQQY2S1qZBAQAOw==",
     "new": "R0lGODlhMAAwAPcAAKllN71tONdcBtpoFd5yHONmDeJsE+l0FeZ1G+h2Ged5G+l/G85rJdhwI998OeJ2I+V8Jel/JZhvXaRsSbRzSqJyW959QuuBH96BPuqDIu6NJe6MKe2SJ++ULO+cL/CfLPKWMfKeMfSpPfOkNpWEfamNft+ERtuGWdyKWeSEQuiLReOMVfWsRfa1Tt+SYNqTd+GaduajfemnfPjLVvrWX/nbVvrjXfzecv3jdfzsc/7uev7jfP3wdv7xeY6TnJKWn4KTr4+ZqZecpZGbq5ueooSVsY2ctqCgoNWdi9Sjh9amitm6qM+ustCqsNq/tv/1hP/1jP/7jP/+l///mZipxaSxx6ezzq65yrC7zrK70ra95LW76bq/6cK0yMe71Mm8073E57zB6dHFytnG29/Q3t7S0+HP3ePU0+DR3ezd3fHd2+/j3fPg28TN5cTM6dPI6MTQ5cnS59Xc59ne59Xb69rf6cfO8cvO9MfI/8zN/8zS8M/Q/9PW89Xb8dnf8NPU/9fY/9vc/9nT8ere6Nvh6t3k8N/g/+nm5erq7/Dm7fvy7ufn9efo9eTl/+fo/+zs/+/w/vT0//f5+/7+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAJQAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAACP4AKQkcKBCOwYMIEyo8SLChw4cF6RAiVKiixYp++miko6ejHTtt2lyBSNIhHEmTUqpcGSnSI0eNGgUK9CePHThXRpbceXKlz5QtX8oMBOiPnTh0cu4s2fOnz6AwZ/7REweSICw6l5pE6ZQl1KFUIznigwWL1q1dn7p0FJWqJLFkzZ4d2DStypaQYBriE2eSpEeN4s4tyNXu3bWB+04Sa+gP1qxL6xr26/JlH8WSIMnMk0WpVsmTF7u8LKd0nJBgtFipUuVz4dCiH/mBQ6W27dtUXMP2+sjnHzzA8WwpIiTy692RIK3MwzwP8OHFeR5HrrJmc+fQje/2yZVmze95uP4Q177dp/c3KBw0qSk+OtPpu70DekFDB4Q7f9qTLz/JjCBANFnwhBQaeJFfESXst90LHmiAxEwCEvjFH100AIIB0vHXSAZRROHBgwJOwcEXYzxwgxQs8PRIJLtJEpMJOUjhIRIhatAEBDhI8UQGPDHyyI8rtuRUZjE1QgYEMXpYwIAcIIDDFFBsAICKkCRX2Y9svcTWlkUemcMUUYQw4AhPRjlBZIjgFRQkKwKJJUxcotFAkgPqAOUGErhHEhyQvNXSn5Vd+WMiK2Rg6AUXaMCDFFM0CoUIByDwQAIHFEBSG1UCCmiVj7DpUgw2RCFjhx026igUUUCBKhQ7YPhQG/4s+iWJn5omVyUMNZCqq6lTSKHqr1Dg4Cpakcxq7Ky1RpIICoZCAIECGtjZK5SQEkCAAQYIsGdhKB2LLLJ/MiLuGRl8CUWdvoJQgQ8K+iWrsaKJ1pIa5YKpwYAe3ABlBxQs1QZ8KaHE4sDI0quDjBoY8MQUGyCgLxQdBJAhbANHosKiT3CQBAYDauAEBA/z+B5/kmjQIQdKRJJCx2Wo0cCJLUxcngwdZJBEnxwTeEYkYjCwwQAyl7fGIVypsLAGZ0xCBxAktMtfSjLMkAMEiCg9XtBPp6SICxgskVIdV4+ctV10hL3t2HaBrSdEoKG9EiFmsw2w23Cv/VDbbqdECFEQRDid9yR79y0dt90G7K7hhyN+uNqRFQEEEEVEHvnjkk9uOeWQO/445UbEffcQQYQexBCgi1666KiTnjrppQ8h+E5HxC777LTXbvvsP8ROUEAAOw==",
@@ -163,7 +164,7 @@ images = {
     "ok": "R0lGODlhMAAwAPUAAACTAACUAACVAACWAACYAACZAACaAACbAACcAACdAACfAACgAAChAACjAACkAACmAACnAACoAACqAACrAACsAACtAACuAACvAACxAACyAACzAAC1AAC2AAC4AAC5AAC7AAC8AAC9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAACIAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAABv5AkXBILBqPyKRyyWw6n9CodEqtWq/YrHbL7Xq/4LARIGYGBIJycsBmq42EuJzwHhbueHy9YOj7/QdqCIOEhQiCCYmKi2oKjo+QCk4LDFQLl5iZC04MnVOdoKGeTQ2lpVGmqalODq2uDk+vsq1OD7a3t024u7ZOEL/AwRBLwsVQEcjJyhFJy85SEtHS0xJH1NdUEhPb3N1F2t3hVhXk5eYVQxTn51gW7u/wFiIX8fFaF/j5+vv8XBj/AAMKDOglg8GDCBMaBKOhocOHEMVsmEixYsUyHDJq3JjxTYePIEPWEeGhpMmSI4V8WLkSRMohIGK6fDkkRAiaOHPq3MmzZwEQADs=",
     "open": "R0lGODlhMAAwAPcAABcaFBopGiQ0ITA8KhxeIytJLSRaKytcMjZTNChjLSNrKyRiKyVzLS1pMjFjNzJrNjVmOzdqPTtrPjhlPyx7NDlwPEBaOkJGOTlrQjpnQT1xQ0JtRFNhSENzSUp8TUZ0Rk56U1Z8XFt2UiyCNDKJOjSTPTmOQj6dQjyhRD6iSEaBSUKdRUScSUyeTFOGUlSDWluHV0+QUFmcVFmVVmabXkKiTEyiTUKhRkShUEqlVUyqVE2nWU+pW1OjU1KrXFypW1WnWVWxXViyX2KkXVuLY12EY1qWYmOKZ3SPZWyba2SUZ3GXZGuPcW6Zc2yTcnSUeVWtYVmvZVuzZF6yaV28ale4ZGSsYmmuZm2oa3Gqa2GyZmC4Z2K0bG6ybGS6a2m9bnG0bnyqe3Wnd2a2cWm3cme4cmq6dG69eXW2cnG+fHy8e3i5dm3Ac3TAfnDCdXa/gHbBgXvEhXnJhH/FiX/IiYyMjIWpiou0hYu3iYi1io66lJuznp22oKysrLS0tLy8vIHGi4PJjYDDhIbLkIvMlI/PmZLOmpnEm47Rl4/RmJTTnKLLnJzMo5vVo5zZpZ/aqJfWoaTTpqDWqKvUq6TbrKnarqDZp7fIuavdsq7Xtbfes7LbuKfJqqfgr63htLDht7Tku7jmv7zmusPnvLvnwb3qw8jIyMzazs/d0tra2tPT08PsxcTsysnvzsLnyNbsxdflzc7xz9P0z9z8z9f4ysvv0c7z0c/61NL10dT70tv90dT12dn33db53Nn73uH/0Nz84ebs5uD+5fP08/////X49QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAMYAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAACP4AjQkcSLCgwYMIBfr5k7Chw4R+TKkqRqxixYcYHfZRZbGjRVMZQxI0RdGjSVUiM/pJZbJlxWEpD9YxZWqYy5sWjXXAEHOgH5w4h+0p4iRTr54Dgba8dKQII2DAfAFDKrCk0lNPQtixBVWYMKhUjbHEGcxOiCabbu2Cyhaqq4xhFukieMllMT4hihxi1cqWrV27evWC6ssXK4dJ8KzSpesXrSR3RsEyeakICDugSrHiW8svYGC8QBtGeOQNJ8aoG/9a/criKScZiEDyBIpUKc2t+v4FzIvXrtEGO+DJlTr16l+vymLQIEYRJEedOtG+rbmW9Vq8AR82+GAS8eKqZ/7dkeDASCBEiBI5f/5Iem3c1j373V7wQKlc+Bl/X+TBgIoucQQi4CDoKeKcI49Qggkm7+HW12alFKREHqvcgh9xucwihgENAMEGG27AEQcggARCoHqKOOIIJZRI90lttvFF3UAYMGLhLvjhkossPEIgBRVeBMlGG3EUWWIghKCoIiWVeOLJiw2+N1AEjdxiZSy42CILLTpu4IMUUmwhZBpEAkIHkoQYcqAklSxIW4NQDlQEEVbegqUtWNJCiwc5BCFFFWGakcagcZxJoJqNNPKIJAoyCCMpToJCkAF++YVlLDzK4gILPgQhhBBSeCFoGm8EOAghhBioqCSTLPjJJv6gxCqdJwTVeIstfbWCJY9EmKCDDkF4ugUZZ5AaRx6AnKomI48s2iYmT4LiCZOdEEQEEZXWIostsPCIBQm/AhuEFmQIWuocyaZpSKKLKvjsgglWQsikt/pVC6Y8hkHBDTX8Ou4YAANchhlmFFtqsowwy2SblbA770Ad6FEpLvjKcgcDKdSwAw87QOFxFFNMEXAZA5/RRhtwwCFHgIQgYgggcshBRkEY1ItnpocokMINKfTMAw8eQxEFyCMXfMYZcLyxMh2CxKEGFVRAUdAEk9iSZaayTKIAClyj0PMOOxgB9MdTcDHy0We8kbIcbaixRRU+GPQCLnRjPYoBJ3TdM/4OOYA9ttAhizxGyUe3rcYaawTBg0EHhJILLljbQkDXXKeAw+Vgbxz00CF7MTgbZoDRBRhgoKGFDnI7cYssO+64y+R6W345Dink0HfHZIesxRBaaHHF6KTXcNABq8gCOS34LYBC3il4PTvtttv+Mw8+/OADED/8MIQVVlzhfRYwHAQDERdimEDXJ/QsO9+Wp9AC3znYYEMP9Gev/RBZIHFBQgdo8h1jDaCc8543uxvcYAUItEEL5Ee/ISCBAxjxgC7+F0DK1YCAPTuBBldwAgSuoAUyoIEIAhCSCEQiNQ8Q4A1mV4MMnqAENygBB1cgAxgMoCcTSA0G8ta1FTZveXUa7CACWzADC4SlA3dATQcESDmeBZGGHwBAWAZygFEwxgUlYCLlTtADFwhgigaRAGOMQAIt3sAGM0AAGBECAjHoAgsjUKEMNrBGhzhAE2GIY/NyoAIS1vEhEEjCCGoQgwL8MSQJSIAEDsnIRjrykZCMpCSpEhAAOw==",
     "paste": "R0lGODlhMAAwAPcAAAAAAAgGAAwMDAwJAhYSBh4aCxgVDBQUExgYFhsbGSMdDCghCyQgEikmGyUlJS0rIy0tLTAuJDQxJzQzLD06Lzo3LDMzMjo5NTs7OkQ5GkM7IUE+M0A/Oz9AP0xAGltMHl1OIEVCNkNCPEhFOE1JPFFOP1dSPmFTJWZaK2haK3ZpPXRmN0JCQkhHQUpJRUxMS1NPQ1BPTFVRQ1NRTF1ZS1lWSFxbVV5eW1RUUGBcS2BfWWFeU31uQGViUmplVG1oVmRiXGlmW21pWnJtWnZxXXl0XmlnYGtqYmxsbGJiYHx2Yn55ZHVza3h1aHNxZHNzcnp5dn19e4R4TYJ9ZoV/aJeGTpiHT5uKUqOUWoaBa4yGbpGIZ5iPb46IcoKCfZOMdJqUea+eZaCWc6GafrKlcsGyf4SEhIiHhoiIhomJiZKSjZiWj5WVlZ2dlZycnKSdgaSfiaaghaqjhq6miq+ojKeiirqvhrKqjbyxiKimlrWvkruzlKampaurq7Syo7Ozqri4r7Ozsrq6sbe3uL29vcK3jMa6j8C3l8m9kcW9nMe8kMnBnszAlczEosfDqcnEqs/IrdDHpNLKptjOptTMq8HAvsnHuNbPstfQtNrTtt3WuN/ZuuLbvMTExMjHxsrKx8zMy9DPzdDQztTU09zc3Ofgwevmze3r2efl1PHv3PPx3uTk5Ofn6Ozs7PXz4fn35v/+7/n45vX19f39/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAALQAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAACP4AaQkcSJAggIMIDxZcyLChQ4IHHFjAwKIDBgcJBDzcuDChx4MOkLgh1KkTnycsDnz0yHEgAgsXMMSUeaEDhAQs3JBi1apVKDY3bkrEQDTmhQkPDrQEMEGNIEGAogJ6uubGEU+sQA0KxCcNkhc4ouTxExWqnzhFHgDgCOACIFixVMl15SqVJSZQRrEKlMaMmTRPbBzJYwlVKlV0TUXS0mDtRgAYAMUyxakyp02Q4PRgMmqVmydPorAxg6OGFz2PMG0qVUoSGR4MHD+EDCiVpkiSch8Ck6XJGlKeo5hh08dNEhlCtLzZk6iRpEJXUCiQ7bAtoFOUEmk/NOaHkz+kWv6t6hSI5KdAZmy4qDFlzJ1DiexYOVGAekPaqjAtWrTnTRYhXnzSCiukgNIJKKB8MggbSIgQQg9ZuBfffPWx5ZYqnOS2hxJCqPHHIJ0QMshWgfTRBx9sPPECBi78AMYejRRCoX0M4ZehJHcMAYQafKiBxo9ppBHFkFE8AYQLIpTgIozQ0UdjR5Glksl+d2gxRBA2zICkCy20IMKXXx71YBYvTugkW1Fm0gh/dWjhAwkkjBDCnCGM4CCdI9CQxRt3NIfHjBYKosomuUnSyB1fLFHEEksowegUjzK6RBdyHOIcJYYA+liUhBa6yB1vjDEGGF9kMUURRKSq6qRiyHHHHf5gSJEBAU8WRJtt++2XyB68zsFFET6UQEEEDzwAwQMRRDDBBjLkkIMJGiwQwEoduSVlrvs1oq0eWfzQQ5YuhCtuuC/oEIQRQNggAwsiuPDCCyxgYIFSBkWGIW6FSjIJJTnu4AUfg3jiSUkDFwxKKAh+YjCC5JkBAXXW2abtxI3gJkcONvBBiiyzdOzxxyCH3EogGEAc2SmQ8KqHyryCIQMQlXAc8sw0z0JIyfVelzKvPLc8gg6fzCLeKqsAx5PMs8gyICscs3L0LJ2wYDIgqmiibSRYOyfJGCHM4IksoAhyIh8mdtJKx7KQ8kkfhAxISCCebNwJzgNZV3UkFU8sCf4lYEzgQieyiDKIiSf2YTba45XX09uerGJzB1OfcknPPXchQQudCO000as8jfbSSQ/YCseEQG6QW9hRzvMXF3gtC4HANQ0c0Z4rzZPHc09d9dVYY711DUGIwkofffHhdCBu8KF8IKCsIkvanpTHSsedmF73yWpOnGsjcdAghPDEm8FH532wkQfZgXxCStKkRN829VLnfIojr94xx/100NEFCUCA8jopsZtF0TrXubN9zmm4i9/1ruMIPdyBDnOw3xz0xz9QJG1znevY0Dg3Og2yonOy8IQCBYIfTDTCEdraTyQWIYcaHGEUrdCKifjQtlYQgmzL64TzWuGJE5lNhP4QQ1321rSmRURiDC/zXygGd6JK9MQkOEzfDjtxorZFLXKP0EP+7ne/O2RBAn8T2oBop0HOEa2DQiNj6bCoBy1ycYJTcAAGKiFAADqvjrRjmsxsZ8BZVIJuJEwTxSYWCTBcrhPDK94qRsYG5fEBbs6DnuI6VgnrkdBaQyxixcCwgRdgJXzj2wsb3GAiuK1PFuNhmwErGTn65Q+CE6xSCHDwNdg5DpWzK6DH+Ig7S9LCOvN7ICwjWCUSBMGCPeFgxz5oRjQObXTVC6IfTGHCQVZMDjQ4gigCNzjlObEVlZjhIxuntB7ywYlANMgE8lCKSTACEfA0hDwNIQYTHFMWoa0okfJqeMMoxk1pVKShLK6ozjhMohBhwIJCr2AFK1RhBRmgATKZmcHXmfFpSjsj1Eb4ywcogQtSUEEKUEDSE4DgAxlQAAzoWLOWfmyNBTkAshiwAAUooAA4xSkBBoCBPvTRpTQbGSDrthKPQMAMgyAJwUoSok4I7BNOhWrBShIILzysJbY6gAU60IGKeBUDFmGBWMdKVha4IF4QoBdWbVXUthZ1rXCNq1znGteAAAA7",
-    "pdfimg": "R0lGODlhQABPAPcAACwsLC0tLS4uLi8vLzExMTMzMzQ0NDU1NTY2Njg4ODk5OT8/P0FBQUZGRkdHR0xMTFBQUGFhYWVlZWhoaGxsbG5ubm9vb3JycnV1dXd3d3h4eHl5eXx8fP8hFf8gFv8hFv8gF/8hF/8iFv8iF/8jGP8kGf8pHv8qH/8rIP4rIf4sIv4tI/4uJP4vJf4wJf4xJv4xJ/4yKP4zKf40Kv41K/42LP44Lv45L/46MP49M/4+NP5AN/1BOP1DOf1EOv1EO/1FPP1GPf1IP/1JQP1LQv1LQ/1NRP1ORf1RSP1UTPxXTvxYUPxZUfxaUvxbU/xcVPxdVfxeVvxeV/xfWPxjW/xlXvxnYPxoYfxqYvxrY/trZPtsZftwaftybPtzbPt0bft2b/t4cft4cvt5c/t6dPt7dft8dvt9d/t+d/t/efuAevqBe/qCfPqDffqEfoGBgYKCgouLi5OTk5eXl5iYmKCgoKOjo6SkpKWlpaampqenp6ioqKqqqq2tra6urrCwsLGxsbKysrOzs7S0tLW1tbq6ur6+vvqFgPqGgPqHgfqIgvqJg/qKhPqLhfqLhvqOifqPivqSjPqSjfqTjvqUj/qVkPmXkvmZlPmcl/memvmfm/mgnPmhnfminvmjn/mloPmlofmmovmno/mopPmppfirp/mrp/isqfivq/iwrPixrfiyr/i0sfi1svi2s/i5tvi8ufi9uvi/vPi/vffBvvfCv8PDw8XFxcnJycrKysvLy8zMzM7Ozs/Pz9HR0dLS0tTU1NfX19vb29zc3N/f3/fEwffFwvfFw/fHxffOzPfS0ffT0vbV0/bX1fbY1vba2fbb2vbc2/bf3uDg4OTk5OXl5erq6uvr6+zs7O7u7u/v7/bh4Pbj4vbl5Pbm5vbn5vbo5/bp6Pbq6fXr6vXr6/Xt7fXv7/Dw8PPz8/Xy8fXy8vXz8/X09PX19QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAO4AIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAAEAATwAACP4A3QkUCOKDwYMIEypcyPCghw8DI0qcKLBDw4sYMxoUQbGjQIQulFwZSbKkyZMoUzKJcTCEx4kWP7wYla6dzZs4c+rcydMmu2JIDr6MaPAFs55IkypV90Xo0IIfSCmdSjUnuzBOPRp0UbOq16nszmSlaLDJ17NKw46VaNAK2rdI1awdaPAK3Ls7E811VxevX5yL5vb9S7jR2sGE/0oaizix30lZGzvGW8mp5LffvjTZlLjyhw58P9j122VMKxiUEosxGHo0Xh/l2omhsY6wOBMIXd/dYdPNh2WJg4a4jLaIzdXFEk/J/RcIu3ZPPtBSztyvE2nsXHw4Snj5Qd1w0f6savaBBDnq3/+yUlPqQw/H3omfFefDywcu8Kv7pYLiA6f86f0FikHOACjfWWV8gMNk8Yn2lzkvfFDDOAY66BcqH5SQBhoVgveWEh80sU4SrqB3YFXLjPDBJ+1A08M23ekHlxkfnBCOTa1EUZtfDXr41TgrfNAFTocw8lePeGViEDI4qQOFKs/IEkokbIBRxiOqeEMVknCxA8QHQ9zEDSuIHFECD2RIYkossazSiA4mOPJcUly+9YpBnRjThg9BhCFKM9AQsYg5OYEDwwejKFUnWksYNMMTmsCIEzlg3GAJODgJ8YEXisrolTd6ffAIpj0h44QJWXhSi28fgNJpgP6fKqKDQU7MmRQzlEzxww5LJPrqiTqlcwkQmKTxgQrQTJbToknBcgQk5cxCgn/KLuspT+mgUYU07XRjwwdS2FptO8zuxI4WkDzHznI5aDnuTeXqFIojN63xAQvJvItTvDlpEU076/iWwjH67nutTp1gwYkRH/igTMEGw9oTO6NsAUYq6kAcMbAaI8Vvx79aCPJXH4/cU8km74RyytZKzDKdB/fUBx547FFINTfpQbMgvOQUyB1AA+2HVyvjtAAASANQAB82FZA0AA/kchMETwPQANEx83S0Lr3UIQABxLTjNC6GbACAAcHYRPUfu7T9C9YuJ3U0NTZJAMAdYgNwjv5NbwBQgdoAvI1W0TfNbVMGAMyR997tCKM0Nu1QLfhZhNtkeDYOAEDI4jcZAIAvkQMwiC++AENy1jsdjQEFDECtDec2NQCALaEnncDpcSN1NAAIOKDBNE3rfVMCgYceRx115IE7x0YDQHdOTjNODQAEXBP65MuLPJXh0AvfDh0ARAA49nAzX7jzOkWPDiAHBHDL+G9V3g73ODmtgNMD2DF18YOjrhMHFrCGTi5gAQtkQA7DwAkcJpDA/uXuZSrzHwRt0iC3TDApUkCIWS6IlKCIoChd4aBOzJECg0DFFCLciSZYE5oYFCiFN1FGkCDiDqjE4BQ74qA6QtECFn7kICMykEJKhkjEIhIRChEyiAck8kGNOPGJGtFKE6FIRShyJCIBAQA7",
+    "pdfimg": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABPCAYAAABbP8MLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH4goeDxg6ImUu8gAACUxJREFUeNrtnH1wVNUZh59z793NEkK+MJsEAmwSJEoqTRkxksqIosYIaINSRhBRQEzxo4pIEBWdwrDtSGKhjrRqjIIjAuLIx5A4kKgMER2rJhSkOIEiFCwJmIR87tc9/eNmNwnYEo1sdrP8/rr35ObsfZ99z3vOee97V3CO5ND4FBQeQMgcwAZEEVhqQ3ICwR6EWCeOnCrrSWfCZzgoJMf9AcSTgJlgkaAEhUdEdc3hnwzAMN66EbjTByQqCj3tSogZGFgGN9SjHDqIqPu+sxl1KHKSOFzzyU8DkBy3DMQzADI6Glf+Uty3TQZVC8xvXUqUyi8wF9hRKr/0tjYi5G3iSO2eHwVA2hJsCP2fQJiMjqbtrc1IW0pwuL/Hg/kPT6Nt3uBtaUERk8XhU+Xd7UIBOQ8IA3Atfi54jAdQVZzP23FPm+FtCUeX22RK/E3dB2BEe2RUFO6cSQSdhMD5zDLc99zfAUHKLd2FoADJAPrIqwJ3zHcHQv6z50LYLpPjJ3cHgDHPD4gkqCUEzsVLcc+a620JA7lRDovLuRAAXwd9Qc4nn8Y17yHvqQVFvC9t8XdcGEAfkuvRhbjyHvGemhFyoxxmzQ0ZAACuhxfgmv/7DggKG2SKdUrIAABwzX8M1+P53lMTko0yxTojZAAAuObk4Vqw2LdyQPKmTLbeEzIAAFyzH8S1cEkHBCiWydabewWAONuA+bnFhD0wE23Tev9BuO+BzhA0kEUyPS7C7wBML6wAkxn3jPswrXoBU/ErfoXgnub1fjGEFuVRvwNQ9n2Jc+ESPOMn4MmeiPbma6Dr/oOwIB8sFu+28g7/DwG3x3cDMiICcboW5ei//LeT7h+BfsVI791c7ncAsn9EB4ympvYkR51/7yEy2nsU5v9ZwOkAKQ0A/z7m29f3lvzvAdZ4RG2NkdXZX2W0XRYXQgBSh6P8owpx/FtEQwMoCtKa0GsA/J4A8FyThfr3z8DRBoBuS4bw8NDxAP2aa1H2fIT6aYVxflVGr64Se2UWkMOS0Uq3GwB+dXVoAQDw3HgLtLQYx5ljQw+A8vV+wxsSByGHDAsxAE4n6o4txrHbDS3NoQVA/WgXor4eVBVPzmTMfykILQDaO+vap8OxOBcuQfn6AOrH5aEBQDlyGPXzzwwAE28HRcFhL8RUsAJxurbvA9A2vGXsA/r1w3PTrUYgHDQY14KnMD+7yK/bYv8DaGlG3bLZiH23TkZGDOiYFsdPQE8biWnNqr67FNa2vY9oajQATL37/ETFIwsIe2gO6q5S9Ct/gXLiOOK7k4jTNVBfb/yvyYwceBl66nD0MWORUVFBAkBKtPVrjZXfFSPRR3Usf8X3Z1CqvkLZ9xWioZ6wJx5GHzIMfex1yIREZOJgZPoo4+LmZpRDX2MusCNqa3DNzsP1u0d79FTLLwDUit0o1d8Y3/7d96JUfoFavhP14zJQVPTRV6P/cjSO3KmgmQh7LA8ZFYVr5mwwd63W8Uy4BffM2VhyxmN6+c/IIUNxT84NbABap8SnafVK9CtG4pmQjaPo7R/MBbS9sQHzC8vpd9t4XPfOwZM7Fdnp4a0cEImMT0DU16F8/ikEKgDR0ID25quon33SPs6fwD393i7G/KDCw3E+twJlXyWmlwoxr16J58ab8Vx7HfowG+ruD1EOHTSG1OgxgRcDREMD2trX0HZsRRw30l6erHHGU9sfMV71URk4XlmLOHoE7cNdqLs+QDtxHOF248nMwvObu3rk/j8/AI8bbf06tHffwT1tBp4bbkZbW4TsH4HzeftPDlbSloLr/nlw/7zAXQeoe/dguecuREsLbe9sQaaOQHur2HD9J59GDhpMIEr7Ob5188oViO++w7Hqb0bSs74O81OPg67jGXcD7junEajqmQdIifmpJ5AxA3G8+DLSGm+0LVmIOPUfZNIQnH98MaCrT3rkAdrW94zx2VGSgqnAjrq7HDkg0vCIqCgCWT3yAKViN+7cqe0hW8f04p8wvfEqMrw/jjXFRqltgKtHHqBnZmEutOPJ/DXau+tR9u9DTx2Os3ANeupwgkE9AuCe8lswm1H2fIx+ZTquOXlGwlNVCRb1bBYQwliI9HAxElIpsUsALgG4BOASgEsA+tRmqJNKS0tpazOe+6uqSmxsLOnp6URHR/uu2bp1K3p7+jsyMpLBgweTlpZ2Xl9lZWWcPXv2B3Il4WRnZwcmgNWrV3PmzJkubWFhYeTn5zNx4kQAVq5cicPh6HKNzWZj6dKlpKen+9pef/11qqurz/uMQYMGBS4Ar4qLi9E0jaqqKgoLC7Hb7YwZMwar1eq7pqioiObmZnbu3Mm2bduYP38+69atY+jQoV36Wr58OUlJSb5zs9kcuEPAq8TERGJiYhgxYgQVFRXs3buXiooKcnM7VoxpaWmYTCYyMzOxWCxs2rSJNWvWYLfbu/SVkpJCampq8AbB2NhYABobG//nNdOnTwegoqKC1tbW4A2C58rhcFBZWQlwnmufO64tFgttbW2cOHGC4cM7dpLHjh1DttcVqqpKcnJy4ANYtWoVra2tHDhwgNraWmw2G1lZWRf0lJMnT54X+Rcv9tX6ExERQVlZWeADKCkpITw8nJiYGCZNmkReXt4Fg5fX8KhzMkizZs0iLi7uogTAiwagtLSUmJiYbl9fV1dHU1MTJpOJxMTELn/Lzs4O7iDYHW3fbpTMZWRkEO7noslefVVU13XKy8spKipCCMHcuXODeyn8Y5STk4PT6cThcKCqKosWLSIjIyO4AYwbN47Gxsb/G6yuv/56PO3l8RaLhaSkJHJycs4b+6NHjyYhIeGiDwkhk60SwJM9EUfBSyGxAwybPwd1dzlAy6V8gO+ofbUVEupkqwI0GIv1syFjv2hsaD+gTgGOAigH94PH3fetdzoR3xxq9wSOKkhRAiDq69E+2NHn7dfefxfhK9AWO4QcGp+CKg8CZhkTS9vb7/V6CftFC3iHqwmbMcVbr9iCW79cEcdOHUGKAgBR9z2W6VNQS7b3StnqRZPHg7ZlM2Ez7/IVayLkMnH89EnvL0mpJFvfA273BcrYgejpo3r1haafRc1NKPurjBJ9n3Gs52jNDAGy82+JqaRYVyB5HDD10RDgQGLnaM0yAboxEZw7RaZcNgKpPIjgViTJQL8gN7oVqEZQgkf8VXx7qsuLyv8F27lGiMakctQAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTgtMTAtMzBUMTU6MjQ6NTgrMDA6MDBfbxLQAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE4LTEwLTMwVDE1OjI0OjU4KzAwOjAwLjKqbAAAAABJRU5ErkJggg==",
     "populate": "R0lGODlhMAAwAPAAADe1xAAAACH5BAEAAAEAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAAAquMj6nL7Q+jnLTai7M2gPYdAOJIfkwpWuianuvExmbCQvK9yM3N57HL09F+imCvSDzgQkFkkllTHodR6IsqRCyf2mWXWPVxrderw8sRoiTZNHhMNn/L7TiJXXKH7fcHfYzmlMc3Irgn9XfYhLWm18gY1hZIOBhY52j0OKeJmVkoJofo2QfK2WlkEyqKime6epk6CHSo0hILgpuru8vb6/sLHCw8TFxsfIycUAAAOw==",
     "postgresql": "R0lGODlhMAAQAPYAABATFhIWGRUaHh4eHhwgIyEoLi0tLSQtNCYwNy0xNCcxOS41OzM0NDM3Ojw8PDI6QTlGUEVFRUxMTExXX1RUVFtbW0RWY1JfaFdnc1htfmRkZGxsbHR0dHt7e097n2N1hG15g2h9jX5/gFJ+oXaEj1uEpmSLq2iPrXONomuRr3eTqm+UsXGVsneZtXiatXyduIODg4yMjJOTk5ycnIiXooKYqZKgrIOiu4imvpCktJuptJOrv5+tuaSkpKqqqqivtbW1tbW6vbu8vI2pwZOuxJaxxp2zxZu1yaS2xae4xq66xaW7zqy9y7K7w7q9wKm/0b3BxLbAybvEy6zB0rPG1brG0L7K1LfJ2LzN28LCwsHGy8XIysvLzMTO1szP0cPS3tTU1Nvc3MbV4MnX4srY49zl7OTk5OHp7+zs7OTr8O/z9/T09PP2+fb5+v7+/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAAIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAEAAAB/6AboJra21uhGtqhIKMjY6PkIaQaF5QUFxCFRQbP0FbZo4+WZCOZ0M3ZW1YOC9PbGVLjG1ZSEREVDYBFgUgOyQwYG1CQGGbbVw+W2BhWWFoPkJrRy1FU1cmV2IrR1gmjGZNODc4TygCGQgXFgoPFT0NFDEMEj4RGg4VIgYyFf0xTyWmlGHxRJCYE09OMAKj5MaNI1RqBDgA4UMCFDkYcLCXRUOMCjDczJCwYYOPARsqMAhz5QSOEyZuUCGzTaGgMA1vIMHCgwCKIToShKBhYMZIDR45bDADgyQHIAM6dOBABMuUFEc8TBvxgkqJMmzcoGly6sgRFA9UDJmCYUEDGP5CItDrMIOLhAoOJMCAsYYDBQk9ppxYgWUNERYpSqSYUmKFmENQiDw8gsOIQyZMdPRY4yZMmEPHKmjQu6gNGDCC0pxhdKaMGtds1DDiYvnIkyJLHBIRowV1IzRozPQQ0QMNqeODvoUbIuULE4c4xEAR4tuNGQoUOkhys50RZ+6Cts/iIKkNFCRMhFRZdWOIlShQPt+sAERCFhlPgQCZkWXGlh4d9AAGB8N0IIMZWXTQz3ZoZCEEFEE4cQoRToABCiNh4LOBVFlQIIMG9lQwgwMdSCCCBECQWEFKQHzU3SBmSHGKEU48EgaKaHQADAVZ2BNBBz4wsIFHFYBhwJAwUEywxQwVvBieF6cgUd03HRgXBgcazNCGDEDIkMUaMWwQgxAcrNGDBhyA0UNJIhzHUBJQGPfId9zR2Z2ckhQyiJ6krOEFF3IiJ+igggQCADs=",
     "preferences": "R0lGODlhMAAwAPcAAAwMCw8QDxISEhsbGzAfADUjADsnAB8gICMkIycoJigpJywsKzAxLzM0Mzc4Njg6NzU3ODc5Ojs8O0IrAE4xAFM2AGA8AFRAAFlBA2xNAGtEAHRMAH1PAENEQ0dJRUhKR0dISUtMS1JTU1ZYWl1dXV1eYGJjY2ZoamxsbGVoZXN0dHx8fJZkAJ9oAKJoAKxvAK5wALV0ALp2ALF5ALt7AL2EAMyFAM2LANOPAM+bAMWWBdSWANqTANOdANyeANWTDeCdANSkAN6kANeoANyrAN6wAN2lE+OiAOGsAPKtAP2qAuS1Aeu2AOW6AOm8AfS7AP64AOGsG/a1HezDAe/KAPPBA/zDAfDLAPTMCfPSAPzVAPbaAPrfAPXQCvjeFffcGfzjAf7qDP7rGvfdJ/vdJfffNv3rKfvmOP3rNsOiXsS0c/DRQPTaT/jgRfzpSP3rRffiUfvoWfjlb/rpZvjldYSEhIeIhouLi4+Qj5CQj5SUlJial5ubm6ChnqOjo6eopqeoqaysrLK0r7S0tLy8vMq4gr/AvvTchvHWkPnprfrts8TExMjJx8zMzM/Qz9DQzs/Q0dPT09jY19zc3ODg39/f4N/h4ePk5Ojo5+fo6Ozs7O/w7/P09Pr6+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAJ4AIf8LSW1hZ2VNYWdpY2sNZ2FtbWE9MC40NTQ1NQAsAAAAADAAMAAACP4APQkcSLCgwYMIEypcyNCgn4YQIwrcY8jRpEuTKDVSmEnTRokJ/TiidCkTJk0dOSG81KmTJkkgD+J5VFKTpk2cMBFacbAOJ5eZLOmJWXAQpZM4CdURkSAhoU1BIQ0qQVQgCkgnOf1cAYChJEtSIamo6qmOJEw4W5po2AHQIEaWOPGpyucsTq0ST5hYdInTIqJvL20avOlhxAYjFsXNBPIEIUJnNWG65ChmiEh9NUms8xgzpc+T9qAY2MfPaIUSJGWO2GfQo4yYJkmSNGiPCkONBt0RwTBCpZKbxi408YfRJUMqRkh69GiRHz2UCPUR3juTdU4nFtYZpOdEJEESAv41YrToD59HgezwhhhB06VKnNYm/DMJBQlBkeyEaGRokB8/g/BBHXs2TbIJVT1BsskiDUCnxwGG/NFHHnr4ocICMbX3kiYjGGRHJJt0IkkCJjgiWiB62LGCCigcUFUDmWwiSSbrCXTHjJlIogcKEKjABx4ronBCCQKQ5UkEmXASSSUhCITHJJCEIIEhfOyBRx0qqECCBF0ZOVAHfUUiyQg3MgJCBw0EuAIKHXTppUEdTMIJJGIF0gGaFa4QwJsLNQCJkouYAMICdQBSB58NoSDInISgoIKhAyC60B+CmFBHJ5EMUkcdA6QhqVOTrBDBAidgCsgdhSDyw6cGLRJqB/4SHMAACiKqocghUfDA6kCMRIKCBxIs0AAfJoiQyBhesCHFESywmkIjjZgArAILBNgBBktkAYYVSiwhxKdXMTLCtAkAEggKFdwghBNWQGHFFUv0gKgKkSwiArAJILCHpgK5cIMPSTyhBRdXTEGFEzoYucIkhoTwwQMJDGAHIXYQxAINOyBxBRhgcMGFG0bEUFUdkwzSAb4DqEBIHgdtUEMRVHCMxhpI7CAySHlcYqcHDyAgAAmE7JGQATVkC8YcdDjRhM0S8VGJHxI87LMIhECt0AY9TLFxHHJgQUUOMkDkxyV8SBBCzwJIQEggNSZEgxBLUMHFG3J0QUUQYS8UyP0leTzggQMIAJDmINkxxMHbTQhBBRpxYJFFD3kjNMglfTDwd+ALCLJTRBvQoLQQU5gBBxZbDBF5QYtowsgkgURwAAAH/LHIHSBp4HniU4jRBulD0GAQeXWAoEIgfAwwAB+LCB2TBTRMkbgTYpRBOhE3FHTJUALdJsIdjPRBVgUzNOEE3GGM4fgRNgzkRyMkEDQIII0YRhYFMyzhBBJLhPHFFEnMMBDy2BMIIRoBCD5N4AVFuN8UuFAFHxRlEAP5g3QwxKcCwIAITWDCE3yQgYKYqxGEGIQg9MCATxHgBTvgwQ0wcJBADKIPfNBDA3bliRY0KyEmWIF8aMhDLwUEADs=",
diff --git a/tartanWork.py b/tartanWork.py
old mode 100755
new mode 100644
index 54dfe71..5060723
--- a/tartanWork.py
+++ b/tartanWork.py
@@ -38,27 +38,25 @@ allsys = {
     "DRS": ["Debtors Ledger", "DR", "Y", 3],
     "STR": ["Stores Ledger", "ST", "Y", 4],
     "INV": ["Sales Invoicing", "SI", "Y", 5],
-    "POS": ["Point of Sale", "PS", "Y", 6],
-    "ASS": ["Asset Register", "AR", "Y", 7],
-    "BKM": ["Bookings Manager", "BK", "Y", 8],
-    "LON": ["Loans Ledger", "LN", "Y", 9],
-    "MEM": ["Members Ledger", "ML", "Y", 10],
-    "RCA": ["Rentals Ledger (Extended)", "RC", "Y", 11],
-    "RTL": ["Rentals Ledger (Basic)", "RT", "Y", 12],
-    "WAG": ["Salaries and Wages", "WG", "Y", 13],
-    "SLN": ["Staff Loans", "SL", "Y", 14],
-    "BWL": ["Bowling Clubs", "BC", "Y", 15],
-    "BKS": ["Book Clubs", "BS", "Y", 16],
-    "SCP": ["Sectional Competitions", "SC", "Y", 17],
-    "CSH": ["Cash Analysis", "CS", "Y", 18],
+    "ASS": ["Asset Register", "AR", "Y", 6],
+    "BKM": ["Bookings Manager", "BK", "Y", 7],
+    "LON": ["Loans Ledger", "LN", "Y", 8],
+    "MEM": ["Members Ledger", "ML", "Y", 9],
+    "RCA": ["Rentals Ledger (Extended)", "RC", "Y", 10],
+    "RTL": ["Rentals Ledger (Basic)", "RT", "Y", 11],
+    "WAG": ["Salaries and Wages", "WG", "Y", 12],
+    "SLN": ["Staff Loans", "SL", "Y", 13],
+    "BWL": ["Bowling Clubs", "BC", "Y", 14],
+    "BKS": ["Book Clubs", "BS", "Y", 15],
+    "SCP": ["Sectional Competitions", "SC", "Y", 16],
+    "CSH": ["Cash Analysis", "CS", "Y", 17],
     "TEL": ["Telehone Directory", "TD", "N", 99]}
 pkgs = {
     "ar": "ass", "bk": "bkm", "bs": "bks", "bc": "bwl", "cr": "crs",
-    "cs": "csh", "dr": "drs", "gl": "gen", "ib": "ibt", "ln": "lon",
-    "ml": "mem", "ms": "mst", "ps": "pos", "rc": "rca", "rt": "rtl",
-    "sc": "scp", "si": "sls", "st": "str", "tb": "tab", "bm": "uty",
-    "fc": "uty", "pm": "uty", "rp": "uty", "ss": "uty", "td": "uty",
-    "tp": "uty", "sl": "wag", "wg": "wag"}
+    "cs": "csh", "dr": "drs", "gl": "gen", "ln": "lon", "ml": "mem",
+    "ms": "mst", "rc": "rca", "rt": "rtl", "sc": "scp", "si": "sls",
+    "st": "str", "tb": "tab", "bm": "uty", "fc": "uty", "pm": "uty",
+    "rp": "uty", "td": "uty", "tp": "uty", "sl": "wag", "wg": "wag"}
 #---------------------
 # Month Names and Days
 #---------------------
@@ -205,12 +203,12 @@ stdtpl = [
     "comp_cards",
     "member_cards",
     "payslip",
-    "purchase_order",
-    "remittance_advice",
-    "sales_document",
     "pos_invoice",
     "pos_slip_6",
     "pos_slip_8",
+    "purchase_order",
+    "remittance_advice",
+    "sales_document",
     "statement_loan",
     "statement_member",
     "statement_normal",
@@ -274,19 +272,6 @@ tptrtp = {
             "total_value": [["", "SD", 13.2, "Total Document Value"], []],
             "terms": [["", "NA", 30, "Terms and Conditions (All Lines)"], []]
             }},
-    "J": {
-        "tables": {
-            "POS": ["drsmst", "posmst", "postrn"]},
-        "codes": {
-            "account_details": [["", "RW", 30, "Account Name & Address"], []],
-            "total_card": [["", "SD", 13.2, "Total Credit Card Charged"], []],
-            "total_cash": [["", "SD", 13.2, "Total Cash Paid"], []],
-            "total_cred": [["", "SD", 13.2, "Total On Credit"], []],
-            "total_discount": [["", "SD", 13.2, "Total Discount Value"], []],
-            "total_tax": [["", "SD", 13.2, "Total Tax"], []],
-            "total_value": [["", "SD", 13.2, "Total Document Value"], []],
-            "total_vouchers": [["", "SD", 13.2, "Total Vouchers Value"], []]
-            }},
     "M": {
         "tables": {
             "MEM": ["memctc", "memmst"]},
@@ -633,7 +618,17 @@ payeRates = {
             [321600, 67144, 31],
             [205900, 37062, 26],
             [0, 0, 18]],
-        "allow": [14958, 8199, 2736, 0]}}
+        "allow": [14958, 8199, 2736, 0]},
+    "2022": {
+        "rates": [
+            [1656600, 587593, 45],
+            [782200, 229089, 41],
+            [613600, 163355, 39],
+            [467500, 110739, 36],
+            [337800, 70532, 31],
+            [216200, 38916, 26],
+            [0, 0, 18]],
+        "allow": [15714, 8613, 2871, 0]}}
 siteRates = {
     "2004": 60000,
     "2005": 60000,
@@ -652,7 +647,8 @@ siteRates = {
     "2018": 0,
     "2019": 0,
     "2020": 0,
-    "2021": 0}
+    "2021": 0,
+    "2022": 0}
 uifRates = {
     "2004": [1.00, 1.00],
     "2005": [1.00, 1.00],
@@ -671,7 +667,8 @@ uifRates = {
     "2018": [1.00, 1.00],
     "2019": [1.00, 1.00],
     "2020": [1.00, 1.00],
-    "2021": [1.00, 1.00]}
+    "2021": [1.00, 1.00],
+    "2022": [1.00, 1.00]}
 sdlRates = {
     "2004": [0.00, 1.00],
     "2005": [0.00, 1.00],
@@ -690,7 +687,8 @@ sdlRates = {
     "2018": [0.00, 1.00],
     "2019": [0.00, 1.00],
     "2020": [0.00, 1.00],
-    "2021": [0.00, 1.00]}
+    "2021": [0.00, 1.00],
+    "2022": [0.00, 1.00]}
 # Labels
 labels = {
     "L7159": {
@@ -971,2965 +969,2862 @@ countries = {
     "ZW": ("ZWE", "Zimbabwe")}
 # Standard Table Details
 tabdic = {
-    'assctl': {
-        'fld': [
-            [0, 'cta_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cta_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'cta_rordp', 'UA', 1.0, 'Receiver Dep', 'R'],
-            [3, 'cta_lastp', 'D2', 7.0, 'Last Dep Period', 'Last-DP'],
-            [4, 'cta_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [5, 'cta_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Assets Control', 1, 'U', 'cta_cono']]},
-    'assdep': {
-        'fld': [
-            [0, 'asd_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'asd_code', 'Na', 3.0, 'Code', 'Cod'],
-            [2, 'asd_desc', 'TX', 40.0, 'Description', 'Description'],
-            [3, 'asd_typec', 'UA', 1.0, 'Type (D/S)', 'T'],
-            [4, 'asd_typer', 'UA', 1.0, 'Type (D/S)', 'T'],
-            [5, 'asd_rate1c', 'UD', 6.2, 'Rate 1 Coy', 'Rate1C'],
-            [6, 'asd_rate1r', 'UD', 6.2, 'Rate 1 RoR', 'Rate1R'],
-            [7, 'asd_rate2c', 'UD', 6.2, 'Rate 2 Coy', 'Rate2C'],
-            [8, 'asd_rate2r', 'UD', 6.2, 'Rate 2 RoR', 'Rate2R'],
-            [9, 'asd_rate3c', 'UD', 6.2, 'Rate 3 Coy', 'Rate3C'],
-            [10, 'asd_rate3r', 'UD', 6.2, 'Rate 3 RoR', 'Rate3R'],
-            [11, 'asd_rate4c', 'UD', 6.2, 'Rate 4 Coy', 'Rate4C'],
-            [12, 'asd_rate4r', 'UD', 6.2, 'Rate 4 RoR', 'Rate4R'],
-            [13, 'asd_rate5c', 'UD', 6.2, 'Rate 5 Coy', 'Rate5C'],
-            [14, 'asd_rate5r', 'UD', 6.2, 'Rate 5 RoR', 'Rate5R'],
-            [15, 'asd_rate6c', 'UD', 6.2, 'Rate 6 Coy', 'Rate6C'],
-            [16, 'asd_rate6r', 'UD', 6.2, 'Rate 6 RoR', 'Rate6R'],
-            [17, 'asd_rate7c', 'UD', 6.2, 'Rate 7 Coy', 'Rate7C'],
-            [18, 'asd_rate7r', 'UD', 6.2, 'Rate 7 RoR', 'Rate7R'],
-            [19, 'asd_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Asset Depreciation Codes', 1, 'U', 'asd_cono', 'asd_code']]},
-    'assgrp': {
-        'fld': [
-            [0, 'asg_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'asg_group', 'UA', 3.0, 'Asset Group', 'Grp'],
-            [2, 'asg_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'asg_depcod', 'Na', 3.0, 'Depreciation Code', 'DPC'],
-            [4, 'asg_assacc', 'UI', 7.0, 'Asset Account', 'Ass-Acc'],
-            [5, 'asg_depacc', 'UI', 7.0, 'Accum Account', 'Dep-Acc'],
-            [6, 'asg_expacc', 'UI', 7.0, 'Expense Account', 'Exp-Acc'],
-            [7, 'asg_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Asset Groups', 1, 'U', 'asg_cono', 'asg_group']]},
-    'assmst': {
-        'fld': [
-            [0, 'asm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'asm_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'asm_code', 'Na', 7.0, 'Code Number', 'Cod-Num'],
-            [3, 'asm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [4, 'asm_depcod', 'Na', 3.0, 'Depreciation Code', 'DPC'],
-            [5, 'asm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Asset Masterfile', 1, 'U', 'asm_cono', 'asm_group', 'asm_code']]},
-    'asstrn': {
-        'fld': [
-            [0, 'ast_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ast_group', 'UA', 3.0, 'Asset Group', 'Grp'],
-            [2, 'ast_code', 'Na', 7.0, 'Asset Code', 'Cod-Num'],
-            [3, 'ast_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [4, 'ast_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [5, 'ast_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [6, 'ast_date', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [7, 'ast_mtyp', 'UI', 1.0, 'Movement Type', 'M'],
-            [8, 'ast_amt1', 'SD', 13.2, 'Transaction Amount 1', 'Trn-Amount'],
-            [9, 'ast_amt2', 'SD', 13.2, 'Transaction Amount 2', 'Trn-Amount'],
-            [10, 'ast_vat', 'SD', 13.2, 'VAT Amount', 'VAT-Amount'],
-            [11, 'ast_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [12, 'ast_desc', 'NA', 30.0, 'Description', 'Description'],
-            [13, 'ast_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [14, 'ast_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [15, 'ast_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [16, 'ast_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [17, 'ast_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [18, 'ast_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Asset Transactions', 1, 'U', 'ast_seq'],
-            ['', 2, 'N', 'ast_cono', 'ast_type', 'ast_batch', 'ast_batind'],
-            ['', 3, 'N', 'ast_cono', 'ast_group', 'ast_code', 'ast_type',
-                'ast_refno']]},
-    'bkmcon': {
-        'fld': [
-            [0, 'bkc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'bkc_ccode', 'UA', 7.0, 'Code', 'Code'],
-            [2, 'bkc_title', 'TX', 6.0, 'Title', 'Title'],
-            [3, 'bkc_sname', 'TX', 30.0, 'Surname', 'Surname'],
-            [4, 'bkc_names', 'TX', 30.0, 'Names', 'Names'],
-            [5, 'bkc_addr1', 'TX', 30.0, 'Address Line 1', 'Address-Line-1'],
-            [6, 'bkc_addr2', 'TX', 30.0, 'Address Line 2', 'Address-Line-2'],
-            [7, 'bkc_addr3', 'TX', 30.0, 'Address Line 3', 'Address-Line-3'],
-            [8, 'bkc_pcode', 'TX', 4.0, 'Postal Code', 'P-Code'],
-            [9, 'bkc_telno', 'TX', 20.0, 'Telephone Number', 'Telephone'],
-            [10, 'bkc_faxno', 'TX', 20.0, 'Fax Number', 'Fax'],
-            [11, 'bkc_celno', 'TX', 20.0, 'Mobile Number', 'Mobile'],
-            [12, 'bkc_email', 'TX', 50.0, 'Email Address', 'Email'],
-            [13, 'bkc_vatno', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [14, 'bkc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Booking Contact', 1, 'U', 'bkc_cono', 'bkc_ccode']]},
-    'bkmctl': {
-        'fld': [
-            [0, 'cbk_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cbk_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'cbk_bkgtpl', 'NA', 20.0, 'Booking Template',
-                'Booking-Template'],
-            [3, 'cbk_invtpl', 'NA', 20.0, 'Invoice Template',
-                'Invoice-Template'],
-            [4, 'cbk_statpl', 'NA', 20.0, 'Statement Template',
-                'Statement-Template'],
-            [5, 'cbk_terms', 'TX', 50.0, 'Terms and Conditions',
-                'Terms-and-Conditions'],
-            [6, 'cbk_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [7, 'cbk_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bookings Control', 1, 'U', 'cbk_cono']]},
-    'bkmlet': {
-        'fld': [
-            [0, 'bkl_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'bkl_code', 'UA', 1.0, 'Letter Code', 'C'],
-            [2, 'bkl_body', 'TX', 80.0, 'Letter Body', 'Letter-Body'],
-            [3, 'bkl_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Booking Letters', 1, 'U', 'bkl_cono', 'bkl_code']]},
-    'bkmmst': {
-        'fld': [
-            [0, 'bkm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'bkm_number', 'UI', 7.0, 'Booking Number', 'Number'],
-            [2, 'bkm_btype', 'UA', 1.0, 'Booking Type', 'B'],
-            [3, 'bkm_group', 'TX', 30.0, 'Group Name', 'Group'],
-            [4, 'bkm_guests', 'UI', 3.0, 'Number of Guests', 'Qty'],
-            [5, 'bkm_arrive', 'D1', 10.0, 'Arrival Date', 'Arrive-Dt'],
-            [6, 'bkm_depart', 'D1', 10.0, 'Departure Date', 'Depart-Dt'],
-            [7, 'bkm_units', 'TX', 50.0, 'Booked Units', 'Units'],
-            [8, 'bkm_value', 'UD', 10.2, 'Value', 'Value'],
-            [9, 'bkm_stddep', 'UD', 10.2, 'Deposit I-Value', 'I-Dep-Val'],
-            [10, 'bkm_stddte', 'D1', 10.0, 'Deposit I-Date', 'I-Due-Date'],
-            [11, 'bkm_grpdep', 'UD', 10.2, 'Deposit G-Value', 'G-Dep-Val'],
-            [12, 'bkm_grpdte', 'D1', 10.0, 'Deposit G-Date', 'G-Due-Date'],
-            [13, 'bkm_remarks', 'TX', 50.0, 'Remarks', 'Remarks'],
-            [14, 'bkm_state', 'UA', 1.0, 'Booking Status', 'S'],
-            [15, 'bkm_ccode', 'UA', 7.0, 'Contact Code', 'Contact'],
-            [16, 'bkm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bookings Master', 1, 'U', 'bkm_cono', 'bkm_number']]},
-    'bkmrtm': {
-        'fld': [
-            [0, 'brm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'brm_type', 'UA', 1.0, 'Rate Type', 'T'],
-            [2, 'brm_code', 'UI', 3.0, 'Rate Code', 'Cod'],
-            [3, 'brm_desc', 'TX', 30.0, 'Description', 'Description'],
-            [4, 'brm_base', 'UA', 1.0, 'Rate Base (A/B/C)', 'B'],
-            [5, 'brm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bookings Rates Masterfile', 1, 'U', 'brm_cono', 'brm_type',
-                'brm_code']]},
-    'bkmrtr': {
-        'fld': [
-            [0, 'brr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'brr_type', 'UA', 1.0, 'Rate Type', 'T'],
-            [2, 'brr_code', 'UI', 3.0, 'Rate Code', 'Cod'],
-            [3, 'brr_date', 'd1', 10.0, 'Starting Date', 'Start-Date'],
-            [4, 'brr_rate', 'UD', 10.2, 'Rate Amount', 'Rte-Amount'],
-            [5, 'brr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bookings Rate Amounts', 1, 'U', 'brr_cono', 'brr_type',
-                'brr_code', 'brr_date']]},
-    'bkmrtt': {
-        'fld': [
-            [0, 'brt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'brt_number', 'UI', 7.0, 'Booking Number', 'Number'],
-            [2, 'brt_utype', 'UA', 1.0, 'Unit Type', 'T'],
-            [3, 'brt_ucode', 'UA', 6.0, 'Unit Code', 'U-Code'],
-            [4, 'brt_udesc', 'TX', 30.0, 'Unit Description',
-                'Unit-Description'],
-            [5, 'brt_uroom', 'UI', 3.0, 'Room Number', 'Num'],
-            [6, 'brt_rcode', 'UI', 3.0, 'Rate Code', 'Cod'],
-            [7, 'brt_rdesc', 'TX', 30.0, 'Rate Description',
-                'Rate-Description'],
-            [8, 'brt_rbase', 'UA', 1.0, 'Rate Base', 'B'],
-            [9, 'brt_nrate', 'UD', 10.2, 'Normal Rate', 'Normal-Rte'],
-            [10, 'brt_quant', 'UI', 3.0, 'Quantity', 'Qty'],
-            [11, 'brt_discp', 'UD', 6.2, 'Discount Percentage', 'Disc-%'],
-            [12, 'brt_arate', 'UD', 10.2, 'Applied Rate', 'Applied-Rt'],
-            [13, 'brt_bdays', 'UI', 3.0, 'Booked Days', 'Bkd'],
-            [14, 'brt_vrate', 'UD', 5.2, 'V.A.T. Rate', 'VAT-R'],
-            [15, 'brt_invno', 'UI', 9.0, 'Invoice Number', 'Invoice-N'],
-            [16, 'brt_invdt', 'd1', 10.0, 'Invoice Date', 'Invoice-Dt'],
-            [17, 'brt_crnno', 'UI', 9.0, 'C/Note Number', 'CrNote-N'],
-            [18, 'brt_crndt', 'd1', 10.0, 'C/Note Date', 'CrNote-Dt'],
-            [19, 'brt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [20, 'brt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [21, 'brt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [22, 'brt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Bookings Rate Transactions', 1, 'U', 'brt_seq']]},
-    'bkmtrn': {
-        'fld': [
-            [0, 'bkt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'bkt_number', 'UI', 7.0, 'Booking Number', 'Number'],
-            [2, 'bkt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'bkt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'bkt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [5, 'bkt_date', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [6, 'bkt_tramt', 'SD', 13.2, 'Transaction Amount', 'Trn-Amount'],
-            [7, 'bkt_taxamt', 'SD', 13.2, 'VAT Amount', 'VAT-Amount'],
-            [8, 'bkt_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [9, 'bkt_desc', 'TX', 30.0, 'Description', 'Description'],
-            [10, 'bkt_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [11, 'bkt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [12, 'bkt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [13, 'bkt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [14, 'bkt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [15, 'bkt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Bookings Transactions', 1, 'U', 'bkt_seq'],
-            ['', 2, 'N', 'bkt_cono', 'bkt_number']]},
-    'bkmunm': {
-        'fld': [
-            [0, 'bum_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'bum_btyp', 'UA', 1.0, 'Booking Type', 'T'],
-            [2, 'bum_code', 'UA', 6.0, 'Unit Code', 'U-Code'],
-            [3, 'bum_desc', 'TX', 30.0, 'Description', 'Description'],
-            [4, 'bum_room', 'UI', 3.0, 'Number of Rooms', 'Rms'],
-            [5, 'bum_maxg', 'UI', 3.0, 'Maximum Guests', 'Qty'],
-            [6, 'bum_dflt', 'UI', 3.0, 'Default Rate', 'Rte'],
-            [7, 'bum_vatc', 'UA', 1.0, 'Vat Code', 'V'],
-            [8, 'bum_slsa', 'UI', 7.0, 'Sales Account', 'Sls-Acc'],
-            [9, 'bum_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bookings Units Masterfile', 1, 'U', 'bum_cono', 'bum_btyp',
-                'bum_code']]},
-    'bksaut': {
-        'fld': [
-            [0, 'baf_code', 'UI', 4.0, "Author's Code", 'Auth'],
-            [1, 'baf_snam', 'TX', 20.0, "Author's Surname", 'Surname'],
-            [2, 'baf_fnam', 'TX', 20.0, "Author's Names", 'Names'],
-            [3, 'baf_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Book Authors', 1, 'U', 'baf_code', 'baf_snam', 'baf_fnam']]},
-    'bksmst': {
-        'fld': [
-            [0, 'bmf_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bmf_code', 'UI', 4.0, "Book's Code", 'Code'],
-            [2, 'bmf_titl', 'TX', 30.0, "Book's Title", 'Title'],
-            [3, 'bmf_auth', 'UI', 4.0, "Author's Code", 'Auth'],
-            [4, 'bmf_ownr', 'UI', 4.0, "Owner's Code", 'Ownr'],
-            [5, 'bmf_mnth', 'D2', 7.0, 'Month Received', 'Mth-Rec'],
-            [6, 'bmf_stat', 'UA', 1.0, 'Status', 'S'],
-            [7, 'bmf_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Books Masterfile', 1, 'U', 'bmf_cono', 'bmf_code']]},
-    'bksown': {
-        'fld': [
-            [0, 'bof_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bof_code', 'UI', 4.0, "Owner's Code", 'Code'],
-            [2, 'bof_snam', 'TX', 20.0, 'Surname', 'Surname'],
-            [3, 'bof_fnam', 'TX', 20.0, 'Names', 'Names'],
-            [4, 'bof_add1', 'TX', 20.0, 'Address Line 1', 'Address-Line-1'],
-            [5, 'bof_add2', 'TX', 20.0, 'Address Line 2', 'Address-Line-2'],
-            [6, 'bof_add3', 'TX', 20.0, 'Address Line 3', 'Address-Line-3'],
-            [7, 'bof_pcod', 'TX', 4.0, 'Postal Code', 'Code'],
-            [8, 'bof_home', 'TX', 20.0, 'Home Number', 'Home-Number'],
-            [9, 'bof_work', 'TX', 20.0, 'Work Number', 'Work-Number'],
-            [10, 'bof_cell', 'TX', 20.0, 'Cell Number', 'Cell-Number'],
-            [11, 'bof_mail', 'TX', 50.0, 'Email Address', 'Email-Address'],
-            [12, 'bof_stat', 'UA', 1.0, 'Membership Status', 'S'],
-            [13, 'bof_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Book Owners', 1, 'U', 'bof_cono', 'bof_code', 'bof_snam',
-                'bof_fnam']]},
-    'bwlclb': {
-        'fld': [
-            [0, 'bcc_code', 'UI', 3.0, 'Club Code', 'Cod'],
-            [1, 'bcc_name', 'NA', 30.0, 'Club Name', 'Name'],
-            [2, 'bcc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowling Clubs', 1, 'U', 'bcc_code']]},
-    'bwlcmp': {
-        'fld': [
-            [0, 'bcm_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bcm_code', 'UI', 3.0, 'Competition Code', 'CC'],
-            [2, 'bcm_name', 'NA', 30.0, 'Competition Name', 'Name'],
-            [3, 'bcm_date', 'D1', 10.0, 'Competition Date', 'Date'],
-            [4, 'bcm_type', 'UI', 2.0, 'Competition Type', 'CT'],
-            [5, 'bcm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Competition Masterfile', 1, 'U', 'bcm_cono', 'bcm_code']]},
-    'bwlctl': {
-        'fld': [
-            [0, 'ctb_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'ctb_mlint', 'UA', 1.0, 'M/L Integration', 'I'],
-            [2, 'ctb_samen', 'UA', 1.0, 'Same Numbers', 'S'],
-            [3, 'ctb_mscat', 'UI', 2.0, 'M/L Sports Category', 'SC'],
-            [4, 'ctb_mstart', 'UI', 6.0, 'Male Start', 'MStart'],
-            [5, 'ctb_fstart', 'UI', 6.0, 'Female Start', 'FStart'],
-            [6, 'ctb_nstart', 'UI', 6.0, 'Non-Members Start', 'NStart'],
-            [7, 'ctb_dbase', 'UA', 1.0, 'Draw Base (C/P/R)', 'B'],
-            [8, 'ctb_order', 'UA', 1.0, 'Rating Order (A/D)', 'O'],
-            [9, 'ctb_rep42', 'UA', 1.0, 'Replace Fours', 'R'],
-            [10, 'ctb_weeks', 'UI', 1.0, 'Weeks Between Games', 'MW'],
-            [11, 'ctb_ratem', 'UD', 5.2, 'Rate - Member', 'RateM'],
-            [12, 'ctb_ratev', 'UD', 5.2, 'Rate - Visitor', 'RateV'],
-            [13, 'ctb_greens', 'UA', 6.0, 'Greens', 'Greens'],
-            [14, 'ctb_drfmat', 'UA', 1.0, 'Draw Format', 'F'],
-            [15, 'ctb_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [16, 'ctb_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Control', 1, 'U', 'ctb_cono']]},
-    'bwldrm': {
-        'fld': [
-            [0, 'bdm_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bdm_date', 'D1', 10.0, 'Tabs In Date', 'Tab-Date'],
-            [2, 'bdm_time', 'UA', 1.0, 'Tabs In Time', 'T'],
-            [3, 'bdm_mixed', 'UA', 1.0, 'Mixed Gender', 'M'],
-            [4, 'bdm_rating', 'UA', 1.0, 'Mixed Rating', 'R'],
-            [5, 'bdm_dbase', 'UA', 1.0, 'Draw Base', 'B'],
-            [6, 'bdm_dtype', 'UA', 1.0, 'Draw Type', 'T'],
-            [7, 'bdm_dhist', 'UA', 1.0, 'History', 'H'],
-            [8, 'bdm_tsize', 'UI', 1.0, 'Team Size', 'S'],
-            [9, 'bdm_mrate', 'UD', 5.2, 'Member Rate', 'MEM'],
-            [10, 'bdm_vrate', 'UD', 5.2, 'Visitor Rate', 'VIS'],
-            [11, 'bdm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Tabs Draw - Master', 1, 'U', 'bdm_cono', 'bdm_date',
-                'bdm_time']]},
-    'bwldrt': {
-        'fld': [
-            [0, 'bdt_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bdt_tab', 'UI', 6.0, 'Tab Number', 'TAB'],
-            [2, 'bdt_date', 'D1', 10.0, 'Tabs In date', 'Tab-Date'],
-            [3, 'bdt_time', 'UA', 1.0, 'Tabs In Time', 'T'],
-            [4, 'bdt_rink', 'UA', 2.0, 'Rink', 'RK'],
-            [5, 'bdt_side', 'UA', 1.0, 'Side', 'S'],
-            [6, 'bdt_name', 'UA', 20.0, 'Name', 'Name'],
-            [7, 'bdt_pos', 'UI', 1.0, 'Tab Pos', 'P'],
-            [8, 'bdt_rate', 'UI', 2.0, 'Rating', 'RT'],
-            [9, 'bdt_team1', 'UI', 6.0, 'Team Member 1', 'TM1'],
-            [10, 'bdt_pos1', 'UI', 3.0, 'Member 1 Pos', 'P'],
-            [11, 'bdt_team2', 'UI', 6.0, 'Team member 2', 'TM2'],
-            [12, 'bdt_pos2', 'UI', 3.0, 'Member 2 Pos', 'P'],
-            [13, 'bdt_team3', 'UI', 6.0, 'Team Member 3', 'TM3'],
-            [14, 'bdt_pos3', 'UI', 3.0, 'Member 3 Pos', 'P'],
-            [15, 'bdt_flag', 'UA', 1.0, 'Flag (A/B/C/D)', 'F'],
-            [16, 'bdt_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Tabs Draw - Player', 1, 'U', 'bdt_cono', 'bdt_tab', 'bdt_date',
-                'bdt_time', 'bdt_rink']]},
-    'bwlent': {
-        'fld': [
-            [0, 'bce_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bce_ccod', 'UI', 3.0, 'Competition Code', 'CC'],
-            [2, 'bce_scod', 'UI', 6.0, 'Skip Code', 'S-Code'],
-            [3, 'bce_tcod', 'UA', 1.0, 'Team Code', 'T'],
-            [4, 'bce_paid', 'UA', 1.0, 'Paid Flag', 'P'],
-            [5, 'bce_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Entry Forms', 1, 'U', 'bce_cono', 'bce_ccod', 'bce_scod']]},
-    'bwlflf': {
-        'fld': [
-            [0, 'bff_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'bff_code', 'UI', 1.0, 'Format Code', 'F'],
-            [2, 'bff_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'bff_gender', 'UA', 1.0, 'Gender', 'G'],
-            [4, 'bff_assess', 'UA', 1.0, 'Assessments (Y/N)', 'A'],
-            [5, 'bff_forms', 'UI', 1.0, 'Forms (1/4)', 'F'],
-            [6, 'bff_self', 'UA', 1.0, 'Assess Self (Y/N)', 'O'],
-            [7, 'bff_rate', 'UI', 2.0, 'Rating Out Of', 'R'],
-            [8, 'bff_sets', 'UA', 1.0, 'Sets Format (Y/N)', 'S'],
-            [9, 'bff_logo', 'TX', 50.0, "Sponsor's Logo", "Sponsor's-Logo"],
-            [10, 'bff_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Format of League', 1, 'U', 'bff_cono', 'bff_code']]},
-    'bwlflm': {
-        'fld': [
-            [0, 'bfm_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bfm_fmat', 'UI', 1.0, 'Format Code', 'F'],
-            [2, 'bfm_type', 'UA', 1.0, 'Match Type', 'T'],
-            [3, 'bfm_date', 'D1', 10.0, 'Match Date', 'Match-Date'],
-            [4, 'bfm_round', 'UI', 2.0, 'Round Number', 'RD'],
-            [5, 'bfm_team', 'UI', 3.0, 'Side Code', 'SNO'],
-            [6, 'bfm_opps', 'UI', 3.0, 'Opposition Code', 'Opp'],
-            [7, 'bfm_venue', 'NA', 20.0, 'Venue', 'Venue'],
-            [8, 'bfm_mtime', 'UD', 5.2, 'Meeting Time', 'MTime'],
-            [9, 'bfm_mplace', 'NA', 20.0, 'Meeting Place', 'Meeting-Place'],
-            [10, 'bfm_captain', 'UI', 3.0, 'Captain Code', 'Cap'],
-            [11, 'bfm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Matches', 1, 'U', 'bfm_cono', 'bfm_fmat', 'bfm_type',
-                'bfm_date', 'bfm_round', 'bfm_team']]},
-    'bwlflo': {
-        'fld': [
-            [0, 'bfo_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bfo_fmat', 'UI', 1.0, 'Format Code', 'F'],
-            [2, 'bfo_code', 'UI', 3.0, 'Side Code', 'C'],
-            [3, 'bfo_club', 'UI', 3.0, 'Club Code', 'CCd'],
-            [4, 'bfo_desc', 'NA', 20.0, 'Side Name', 'Name'],
-            [5, 'bfo_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Oppositions', 1, 'U', 'bfo_cono', 'bfo_fmat', 'bfo_code']]},
-    'bwlfls': {
-        'fld': [
-            [0, 'bfs_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bfs_fmat', 'UI', 1.0, 'Format Code', 'F'],
-            [2, 'bfs_code', 'UI', 3.0, 'Side Code', 'C'],
-            [3, 'bfs_desc', 'NA', 20.0, 'Description', 'Description'],
-            [4, 'bfs_league', 'UA', 1.0, 'League (M/F)', 'L'],
-            [5, 'bfs_division', 'UA', 2.0, 'Division', 'D'],
-            [6, 'bfs_number', 'UI', 1.0, 'Number of Teams', 'N'],
-            [7, 'bfs_active', 'UA', 1.0, 'Active Flag', 'A'],
-            [8, 'bfs_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Sides', 1, 'U', 'bfs_cono', 'bfs_fmat', 'bfs_code']]},
-    'bwlflt': {
-        'fld': [
-            [0, 'bft_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bft_fmat', 'UI', 1.0, 'Format Code', 'F'],
-            [2, 'bft_type', 'UA', 1.0, 'Type Code', 'T'],
-            [3, 'bft_date', 'D1', 10.0, 'Match Date', 'Match-Date'],
-            [4, 'bft_team', 'UI', 3.0, 'Side Code', 'COD'],
-            [5, 'bft_skip', 'UI', 3.0, 'Skip Code', 'Skp'],
-            [6, 'bft_player', 'UI', 3.0, 'Player Code', 'Plr'],
-            [7, 'bft_position', 'UI', 1.0, 'Player Position', 'P'],
-            [8, 'bft_shotsf', 'UI', 2.0, 'Shots For', 'SF'],
-            [9, 'bft_shotsa', 'UI', 2.0, 'Shots Against', 'SA'],
-            [10, 'bft_points', 'UD', 3.1, 'Points', 'Pts'],
-            [11, 'bft_rating1', 'UD', 4.1, 'Skip Rating', 'Skip'],
-            [12, 'bft_rating2', 'UD', 4.1, 'Third Rating', '3rd'],
-            [13, 'bft_rating3', 'UD', 4.1, 'Second Rating', '2nd'],
-            [14, 'bft_rating4', 'UD', 4.1, 'Lead Rating', 'Lead'],
-            [15, 'bft_remarks', 'TX', 50.0, 'Remarks', 'Remarks'],
-            [16, 'bft_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Teams', 1, 'U', 'bft_cono', 'bft_fmat', 'bft_type',
-                'bft_date', 'bft_team', 'bft_skip', 'bft_position']]},
-    'bwlgme': {
-        'fld': [
-            [0, 'bcg_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bcg_ccod', 'UI', 3.0, 'Competition Code', 'CC'],
-            [2, 'bcg_scod', 'UI', 6.0, 'Skip Code', 'S-Code'],
-            [3, 'bcg_game', 'UI', 2.0, 'Game Number', 'GN'],
-            [4, 'bcg_type', 'UA', 1.0, 'Game Type', 'T'],
-            [5, 'bcg_date', 'd1', 10.0, 'Game Date', 'Date'],
-            [6, 'bcg_ocod', 'UI', 6.0, 'Opposition Code', 'O-Code'],
-            [7, 'bcg_rink', 'UA', 2.0, 'Rink Code', 'RK'],
-            [8, 'bcg_group', 'UI', 1.0, 'Group', 'G'],
-            [9, 'bcg_sfor', 'UI', 2.0, 'Shots For', 'SF'],
-            [10, 'bcg_sagt', 'UI', 2.0, 'Shots Against', 'SA'],
-            [11, 'bcg_points', 'UD', 5.1, 'Points', 'Pnts'],
-            [12, 'bcg_a_sfor', 'UI', 2.0, 'Shots For', 'SF'],
-            [13, 'bcg_a_sagt', 'UI', 2.0, 'Shots Against', 'SA'],
-            [14, 'bcg_a_points', 'UD', 5.1, 'Points', 'Pnts'],
-            [15, 'bcg_aflag', 'UA', 1.0, 'Abandoned Flag', 'F'],
-            [16, 'bcg_seed', 'UI', 2.0, 'Seed Number', 'SN'],
-            [17, 'bcg_pair', 'UI', 2.0, 'Pair Number', 'PN'],
-            [18, 'bcg_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Games', 1, 'U', 'bcg_cono', 'bcg_ccod', 'bcg_scod',
-                'bcg_game']]},
-    'bwlnot': {
-        'fld': [
-            [0, 'bcn_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bcn_ccod', 'UI', 3.0, 'Competition Code', 'Cod'],
-            [2, 'bcn_note', 'TX', 50.0, 'Competition Notes',
-                'Competition-Notes'],
-            [3, 'bcn_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Competition Notes', 1, 'U', 'bcn_cono', 'bcn_ccod']]},
-    'bwlpts': {
-        'fld': [
-            [0, 'bcp_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bcp_code', 'UI', 2.0, 'Type Code', 'CD'],
-            [2, 'bcp_ptyp', 'UA', 1.0, 'Game Type (D/S)', 'T'],
-            [3, 'bcp_skins', 'UA', 1.0, 'Skins (Y/N)', 'S'],
-            [4, 'bcp_sends', 'UI', 2.0, 'Number of Ends per Skin', 'ES'],
-            [5, 'bcp_p_only', 'UA', 1.0, 'Points Only (Y/N)', 'P'],
-            [6, 'bcp_e_points', 'UI', 2.0, 'Points per End', 'PE'],
-            [7, 'bcp_s_points', 'UI', 2.0, 'Points per Skin', 'PS'],
-            [8, 'bcp_g_points', 'UI', 2.0, 'Points per Game', 'PG'],
-            [9, 'bcp_bonus', 'UA', 1.0, 'Bonus Points (Y/N)', 'B'],
-            [10, 'bcp_win_by', 'UI', 2.0, 'Win By More Than', 'WB'],
-            [11, 'bcp_lose_by', 'UI', 2.0, 'Lose by Less Than', 'LB'],
-            [12, 'bcp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Types of Points', 1, 'U', 'bcp_cono', 'bcp_code', 'bcp_ptyp']]},
-    'bwlrnd': {
-        'fld': [
-            [0, 'bcr_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bcr_ccod', 'UI', 3.0, 'Competiton Code', 'CCD'],
-            [2, 'bcr_rcod', 'UI', 2.0, 'Round Number', 'RN'],
-            [3, 'bcr_date', 'D1', 10.0, 'Round Date', 'Round-Date'],
-            [4, 'bcr_time', 'TM', 5.0, 'Round Time', 'Round-Time'],
-            [5, 'bcr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Knockout Round Dates', 1, 'U', 'bcr_cono', 'bcr_ccod',
-                'bcr_rcod']]},
-    'bwltab': {
-        'fld': [
-            [0, 'btb_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'btb_tab', 'UI', 6.0, 'Tab Number', 'Tab-No'],
-            [2, 'btb_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [3, 'btb_surname', 'UA', 20.0, 'Surname', 'Surname'],
-            [4, 'btb_names', 'UA', 20.0, 'Names', 'Names'],
-            [5, 'btb_gender', 'UA', 1.0, 'Gender', 'G'],
-            [6, 'btb_add1', 'TX', 20.0, 'Address Line 1', 'Address-Line-1'],
-            [7, 'btb_add2', 'TX', 20.0, 'Address Line 2', 'Address-Line-2'],
-            [8, 'btb_add3', 'TX', 20.0, 'Address Line 3', 'Address-Line-3'],
-            [9, 'btb_pcod', 'TX', 4.0, 'Postal Code', 'Code'],
-            [10, 'btb_home', 'TX', 20.0, 'Home Number', 'Home-Number'],
-            [11, 'btb_work', 'TX', 20.0, 'Work Number', 'Work-Number'],
-            [12, 'btb_cell', 'TX', 20.0, 'Cell Number', 'Cell-Number'],
-            [13, 'btb_mail', 'TX', 50.0, 'Email Address', 'Email-Address'],
-            [14, 'btb_pos1', 'UI', 1.0, 'Position - Primary', 'P'],
-            [15, 'btb_rate1', 'UI', 2.0, 'Rating - Primary', 'RP'],
-            [16, 'btb_pos2', 'UI', 1.0, 'Position - Mixed', 'M'],
-            [17, 'btb_rate2', 'UI', 2.0, 'Rating - Mixed', 'RM'],
-            [18, 'btb_bsano', 'UI', 6.0, 'Association Number', 'BA-Num'],
-            [19, 'btb_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Club Tabs', 1, 'U', 'btb_cono', 'btb_tab']]},
-    'bwltms': {
-        'fld': [
-            [0, 'btd_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'btd_ccod', 'UI', 3.0, 'Competition Code', 'CC'],
-            [2, 'btd_scod', 'UI', 6.0, 'Skip Code', 'S-Code'],
-            [3, 'btd_mem1', 'UI', 6.0, 'Mem1 Code', 'M1-Cod'],
-            [4, 'btd_mem2', 'UI', 6.0, 'Mem2 Code', 'M2-Cod'],
-            [5, 'btd_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Drawn Teams', 1, 'U', 'btd_cono', 'btd_ccod', 'btd_scod']]},
-    'bwltyp': {
-        'fld': [
-            [0, 'bct_cono', 'UI', 3.0, 'Club Number', 'Clb'],
-            [1, 'bct_code', 'UI', 2.0, 'Type Code', 'CD'],
-            [2, 'bct_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'bct_cfmat', 'UA', 1.0, 'Competition Format', 'F'],
-            [4, 'bct_tsize', 'UI', 1.0, 'Team Size', 'S'],
-            [5, 'bct_games', 'UI', 2.0, 'Number of Games', 'GM'],
-            [6, 'bct_ends', 'UI', 2.0, 'Number of Ends per Game', 'EG'],
-            [7, 'bct_groups', 'UA', 1.0, 'Group Games by Position', 'G'],
-            [8, 'bct_grgame', 'UI', 2.0, 'Group After Game', 'GG'],
-            [9, 'bct_adjust', 'UA', 1.0, 'Adjust Scores', 'A'],
-            [10, 'bct_expunge', 'TX', 10.0, 'Expunge Games', 'Expunge-Gm'],
-            [11, 'bct_percent', 'UI', 3.0, 'Retain Percentage', 'RP'],
-            [12, 'bct_drawn', 'UI', 2.0, 'Number of Drawn Games', 'DG'],
-            [13, 'bct_strict', 'UA', 1.0, 'Strict S v S', 'V'],
-            [14, 'bct_pdiff', 'UA', 1.0, 'Drawn Games Differ', 'D'],
-            [15, 'bct_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Types of Competitions', 1, 'U', 'bct_cono', 'bct_code']]},
-    'chglog': {
-        'fld': [
-            [0, 'chg_tab', 'NA', 6.0, 'Table Name', 'TabNam'],
-            [1, 'chg_act', 'UA', 1.0, 'Action Type', 'A'],
-            [2, 'chg_key', 'NA', 30.0, 'Record Key', 'Record-Key'],
-            [3, 'chg_col', 'NA', 20.0, 'Column Name', 'Column-Name'],
-            [4, 'chg_dte', 'TS', 14.0, 'Change Time', 'Date-Time-Chgd'],
-            [5, 'chg_usr', 'NA', 20.0, 'User Login', 'User-Login'],
-            [6, 'chg_old', 'TX', 50.0, 'Old Details', 'Old-Details'],
-            [7, 'chg_new', 'TX', 50.0, 'New Details', 'New-Details'],
-            [8, 'chg_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [9, 'chg_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Masterfile Changes', 1, 'U', 'chg_tab', 'chg_act', 'chg_key',
-                'chg_col', 'chg_seq'],
-            ['', 2, 'N', 'chg_dte', 'chg_usr']]},
-    'crsage': {
-        'fld': [
-            [0, 'cra_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cra_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'cra_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'cra_ref1', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'cra_curdt', 'D2', 7.0, 'Aged Date', 'Aged-Dt'],
-            [5, 'cra_atyp', 'UI', 2.0, 'Allocation Type', 'AT'],
-            [6, 'cra_aref', 'Na', 9.0, 'Allocation Number', 'Alloc-Ref'],
-            [7, 'cra_amnt', 'SD', 13.2, 'Allocation Amount', 'Alloc-Amnt'],
-            [8, 'cra_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [9, 'cra_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Creditors Ageing', 1, 'U', 'cra_seq'],
-            ['', 2, 'N', 'cra_cono', 'cra_acno', 'cra_type', 'cra_ref1'],
-            ['', 3, 'N', 'cra_cono', 'cra_acno', 'cra_type', 'cra_ref1',
-                'cra_curdt']]},
-    'crsctl': {
-        'fld': [
-            [0, 'ctc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctc_glint', 'UA', 1.0, 'G/L Integration', 'I'],
-            [2, 'ctc_glinp', 'UA', 1.0, 'G/L Input Method (E/I)', 'M'],
-            [3, 'ctc_bestac', 'NA', 4.0, 'Best Account Code', 'Best'],
-            [4, 'ctc_besttp', 'UI', 2.0, 'Best Account Type', 'BT'],
-            [5, 'ctc_bankac', 'UI', 7.0, 'G/L Bank Account', 'Bank-Ac'],
-            [6, 'ctc_tplnam', 'NA', 20.0, 'Remittance Template',
-                'Template-Name'],
-            [7, 'ctc_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [8, 'ctc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Creditors Control', 1, 'U', 'ctc_cono']]},
-    'crsmst': {
-        'fld': [
-            [0, 'crm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'crm_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'crm_name', 'NA', 30.0, 'Name', 'Name'],
-            [3, 'crm_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [4, 'crm_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [5, 'crm_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [6, 'crm_pcod', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [7, 'crm_tel', 'NA', 20.0, 'Telephone Number', 'Telephone Number'],
-            [8, 'crm_fax', 'NA', 20.0, 'Fax Number', 'Fax Number'],
-            [9, 'crm_mgr', 'NA', 30.0, 'Managers Name', 'Managers Name'],
-            [10, 'crm_mgr_email', 'TX', 50.0, 'Manager Email',
-                'Manager E-mail Address'],
-            [11, 'crm_acc', 'NA', 30.0, 'Accounts Contact',
-                'Accounts Contact Name'],
-            [12, 'crm_acc_email', 'TX', 50.0, 'Accounts E-mail',
-                'Accounts E-mail Address'],
-            [13, 'crm_ord', 'NA', 30.0, 'Orders Contact',
-                'Orders Contact Name'],
-            [14, 'crm_ord_email', 'TX', 50.0, 'Orders E-mail',
-                'Orders E-mail Address'],
-            [15, 'crm_opened', 'd1', 10.0, 'Date Account Opened', 'Date-Opend'],
-            [16, 'crm_vatno', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [17, 'crm_termsb', 'UA', 1.0, 'Terms Base', 'B'],
-            [18, 'crm_stday', 'UI', 2.0, 'Statement Day', 'St'],
-            [19, 'crm_terms', 'UI', 3.0, 'Terms', 'Trm'],
-            [20, 'crm_limit', 'UI', 7.0, 'Credit Limit', 'CrLimit'],
-            [21, 'crm_trdis', 'UD', 5.2, 'Trade Discount', 'T-Dis'],
-            [22, 'crm_pydis', 'UD', 5.2, 'Settlement Discount', 'S-Dis'],
-            [23, 'crm_pyind', 'UA', 1.0, 'Pay Indicator', 'P'],
-            [24, 'crm_bname', 'NA', 20.0, 'Bank Name', 'Bank-Name'],
-            [25, 'crm_bibt', 'UI', 8.0, 'Bank Branch', 'Bank-IBT'],
-            [26, 'crm_bacc', 'NA', 16.0, 'Bank Account', 'Bank-Account-Num'],
-            [27, 'crm_glac', 'UI', 7.0, 'G/L Account Number', 'GL-Acno'],
-            [28, 'crm_stat', 'UA', 1.0, 'Account Status', 'S'],
-            [29, 'crm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Creditors Masterfile', 1, 'U', 'crm_cono', 'crm_acno']]},
-    'crstrn': {
-        'fld': [
-            [0, 'crt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'crt_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'crt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'crt_ref1', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'crt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [5, 'crt_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [6, 'crt_ref2', 'Na', 9.0, 'Reference 2', 'Ref-Num-2'],
-            [7, 'crt_tramt', 'SD', 13.2, 'Transaction Amount', 'Trn-Amount'],
-            [8, 'crt_taxamt', 'SD', 13.2, 'Tax Amount', 'Tax-Amount'],
-            [9, 'crt_disper', 'UD', 5.2, 'Discount %', 'Dis-%'],
-            [10, 'crt_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [11, 'crt_paydt', 'd1', 10.0, 'Payment Date', 'Pay-Date'],
-            [12, 'crt_payind', 'UA', 1.0, 'Payment Indicator', 'P'],
-            [13, 'crt_payamt', 'SD', 13.2, 'Payment Amount', 'Pay-Amount'],
-            [14, 'crt_desc', 'NA', 30.0, 'Description', 'Description'],
-            [15, 'crt_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [16, 'crt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [17, 'crt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [18, 'crt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [19, 'crt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [20, 'crt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Creditors Transactions', 1, 'U', 'crt_seq'],
-            ['', 2, 'N', 'crt_cono', 'crt_type', 'crt_ref1'],
-            ['', 3, 'N', 'crt_cono', 'crt_type', 'crt_ref2'],
-            ['', 4, 'N', 'crt_cono', 'crt_acno', 'crt_ref2'],
-            ['', 5, 'U', 'crt_cono', 'crt_acno', 'crt_type', 'crt_ref1'],
-            ['', 6, 'N', 'crt_cono', 'crt_acno', 'crt_type', 'crt_ref2'],
-            ['', 7, 'N', 'crt_cono', 'crt_type', 'crt_batch', 'crt_batind'],
-            ['', 8, 'N', 'crt_cono', 'crt_acno', 'crt_paydt', 'crt_payind']]},
-    'cshana': {
-        'fld': [
-            [0, 'can_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'can_type', 'UA', 1.0, 'Type (P/T)', 'T'],
-            [2, 'can_date', 'D1', 10.0, 'Capture Date', 'Captd-Date'],
-            [3, 'can_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [4, 'can_code', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [5, 'can_desc', 'NA', 30.0, 'Description', 'Description'],
-            [6, 'can_vatcod', 'UA', 1.0, 'VAT Code', 'V'],
-            [7, 'can_incamt', 'SD', 13.2, 'Inclusive Amount', 'Inc-Amount'],
-            [8, 'can_vatamt', 'SD', 13.2, 'VAT Amount', 'VAT-Amount'],
-            [9, 'can_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [10, 'can_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Cash Analysis', 1, 'U', 'can_seq'],
-            ['', 2, 'N', 'can_cono', 'can_type', 'can_date']]},
-    'cshcnt': {
-        'fld': [
-            [0, 'cct_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cct_type', 'UA', 1.0, 'Type (P/T)', 'T'],
-            [2, 'cct_date', 'D1', 10.0, 'Captured Date', 'Captd-Date'],
-            [3, 'cct_cheq', 'SD', 13.2, 'Cheques', 'Cheques'],
-            [4, 'cct_r200', 'UI', 5.0, 'Quantity R200', 'Q-R200'],
-            [5, 'cct_r100', 'UI', 5.0, 'Quantity R100', 'Q-R100'],
-            [6, 'cct_r50', 'UI', 5.0, 'Quantity R50', 'Q-R050'],
-            [7, 'cct_r20', 'UI', 5.0, 'Quantity R20', 'Q-R020'],
-            [8, 'cct_r10', 'UI', 5.0, 'Quantity R10', 'Q-R010'],
-            [9, 'cct_r5', 'UI', 5.0, 'Quantity R5', 'Q-R005'],
-            [10, 'cct_r2', 'UI', 5.0, 'Quantity R2', 'Q-R002'],
-            [11, 'cct_r1', 'UI', 5.0, 'Quantity R1', 'Q-R001'],
-            [12, 'cct_c50', 'UI', 5.0, 'Quantity C50', 'Q-C050'],
-            [13, 'cct_c20', 'UI', 5.0, 'Quantity C20', 'Q-C020'],
-            [14, 'cct_c10', 'UI', 5.0, 'Quantity C10', 'Q-C010'],
-            [15, 'cct_c5', 'UI', 5.0, 'Quantity C5', 'Q-C005'],
-            [16, 'cct_c2', 'UI', 5.0, 'Quantity C2', 'Q-C002'],
-            [17, 'cct_c1', 'UI', 5.0, 'Quantity C1', 'Q-C001'],
-            [18, 'cct_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Cash Count', 1, 'U', 'cct_cono', 'cct_type', 'cct_date']]},
-    'ctlbat': {
-        'fld': [
-            [0, 'btm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'btm_styp', 'NA', 3.0, 'System Type', 'Sys'],
-            [2, 'btm_rtyp', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'btm_batno', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [4, 'btm_capdt', 'd1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [5, 'btm_curdt', 'd2', 7.0, 'Current Date', 'Cur-Date'],
-            [6, 'btm_trno', 'UI', 5.0, 'Number of Transactions', 'TrNum'],
-            [7, 'btm_trval', 'SD', 13.2, 'Batch Value', 'Batch-Value'],
-            [8, 'btm_batby', 'NA', 5.0, 'Batched By', 'Batby'],
-            [9, 'btm_indby', 'NA', 5.0, 'Captured By', 'Capby'],
-            [10, 'btm_multi', 'NA', 1.0, 'Multi Allocations', 'M'],
-            [11, 'btm_ctl', 'NA', 10.0, 'Control Account', 'Control-Ac'],
-            [12, 'btm_ind', 'NA', 1.0, 'Indicator', 'I'],
-            [13, 'btm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Data Capture Batches', 1, 'U', 'btm_cono', 'btm_styp', 'btm_rtyp',
-                'btm_batno']]},
-    'ctlctl': {
-        'fld': [
-            [0, 'ctl_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctl_code', 'NA', 10.0, 'Code', 'Code'],
-            [2, 'ctl_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'ctl_conacc', 'UI', 7.0, 'G/L Account', 'Acc-Num'],
-            [4, 'ctl_bankac', 'UA', 16.0, 'Bank Account', 'Bank-Accnt'],
-            [5, 'ctl_impfmt', 'UA', 1.0, 'Import Format', 'I'],
-            [6, 'ctl_dtefmt', 'UA', 1.0, 'Date Format', 'D'],
-            [7, 'ctl_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Control Accounts', 1, 'U', 'ctl_cono', 'ctl_code']]},
-    'ctldep': {
-        'fld': [
-            [0, 'dep_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'dep_code', 'UI', 3.0, 'Department Code', 'Dep'],
-            [2, 'dep_name', 'NA', 30.0, 'Department Name', 'Department-Name'],
-            [3, 'dep_dr_coy', 'UI', 3.0, 'Debit Company', 'Coy'],
-            [4, 'dep_dr_sal', 'UI', 7.0, 'Debit Sal Acc', 'Sal-Acc'],
-            [5, 'dep_dr_com', 'UI', 7.0, 'Debit Com Acc', 'Com-Acc'],
-            [6, 'dep_cr_coy', 'UI', 3.0, 'Credit Company', 'Coy'],
-            [7, 'dep_cr_sal', 'UI', 7.0, 'Credit Sal Acc', 'Sal-Acc'],
-            [8, 'dep_cr_com', 'UI', 7.0, 'Credit Com Acc', 'Com-Acc'],
-            [9, 'dep_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Department Records', 1, 'U', 'dep_cono', 'dep_code']]},
-    'ctllog': {
-        'fld': [
-            [0, 'clg_login', 'TX', 20.0, 'Login Name', 'Login-Name'],
-            [1, 'clg_user', 'TX', 20.0, 'User Name', 'User-Name'],
-            [2, 'clg_prog', 'NA', 6.0, 'Program Name', 'Program-Name'],
-            [3, 'clg_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [4, 'clg_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [5, 'clg_period', 'UI', 3.0, 'Financial Period', 'Per'],
-            [6, 'clg_start', 'TS', 14.0, 'Starting Time', 'Starting-Time'],
-            [7, 'clg_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Control Log File', 1, 'U', 'clg_login', 'clg_user', 'clg_prog',
-                'clg_start']]},
-    'ctlmes': {
-        'fld': [
-            [0, 'mss_system', 'UA', 3.0, 'System', 'Sys'],
-            [1, 'mss_message', 'UI', 3.0, 'Message Number', 'Mes'],
-            [2, 'mss_detail', 'NA', 150.0, 'Details', 'Details'],
-            [3, 'mss_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Messages', 1, 'U', 'mss_system', 'mss_message']]},
-    'ctlmst': {
-        'fld': [
-            [0, 'ctm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctm_name', 'NA', 30.0, 'Company Name', 'Name'],
-            [2, 'ctm_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [3, 'ctm_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [4, 'ctm_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [5, 'ctm_pcode', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [6, 'ctm_sadd1', 'NA', 30.0, 'Street Address Line 1',
-                'Street Address Line 1'],
-            [7, 'ctm_sadd2', 'NA', 30.0, 'Street Address Line 2',
-                'Street Address Line 2'],
-            [8, 'ctm_sadd3', 'NA', 30.0, 'Street Address Line 3',
-                'Street Address Line 3'],
-            [9, 'ctm_spcode', 'NA', 4.0, 'Street Postal Code', 'Street Pcod'],
-            [10, 'ctm_contact', 'NA', 30.0, 'Contact Person', 'Contact'],
-            [11, 'ctm_tel', 'NA', 15.0, 'Telephone Number', 'Telephone Number'],
-            [12, 'ctm_fax', 'NA', 15.0, 'Fax Number', 'Fax Number'],
-            [13, 'ctm_cell', 'NA', 15.0, 'Cell Number', 'Cell Number'],
-            [14, 'ctm_email', 'TX', 50.0, 'E-Mail Address', 'E-Mail Address'],
-            [15, 'ctm_regno', 'NA', 20.0, 'Registration Code',
-                'Registration-Code'],
-            [16, 'ctm_taxno', 'NA', 20.0, 'V.A.T. Number', 'VAT Number'],
-            [17, 'ctm_taxdf', 'UA', 1.0, 'V.A.T. Default', 'V'],
-            [18, 'ctm_b_name', 'NA', 30.0, 'Bank Name', 'B-Name'],
-            [19, 'ctm_b_branch', 'NA', 30.0, 'Bank Branch', 'B-Branch'],
-            [20, 'ctm_b_ibt', 'NA', 8.0, 'Bank IBT Number', 'B-Ibt'],
-            [21, 'ctm_b_acno', 'NA', 16.0, 'Bank Account Number', 'B-Accno'],
-            [22, 'ctm_modules', 'UA', 40.0, 'System Modules', 'System Modules'],
-            [23, 'ctm_logo', 'TX', 50.0, 'Company Logo Image', 'Logo Image'],
-            [24, 'ctm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Company Records', 1, 'U', 'ctm_cono']]},
-    'ctlnot': {
-        'fld': [
-            [0, 'not_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'not_sys', 'UA', 3.0, 'System', 'SYS'],
-            [2, 'not_key', 'NA', 30.0, 'Key', 'Key'],
-            [3, 'not_date', 'D1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [4, 'not_user', 'NA', 20.0, 'User Name', 'User'],
-            [5, 'not_desc', 'TX', 50.0, 'Details', 'Details'],
-            [6, 'not_aflag', 'UA', 1.0, 'Action Flag', 'F'],
-            [7, 'not_adate', 'd1', 10.0, 'Action Date', 'Action-Dte'],
-            [8, 'not_auser', 'NA', 20.0, 'Action User', 'Action-User'],
-            [9, 'not_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [10, 'not_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Notes', 1, 'U', 'not_cono', 'not_sys', 'not_key', 'not_seq'],
-            ['', 2, 'N', 'not_user', 'not_adate', 'not_aflag']]},
-    'ctlpwm': {
-        'fld': [
-            [0, 'mpw_usr', 'NA', 20.0, 'User Number', 'User'],
-            [1, 'mpw_coy', 'UI', 3.0, 'Company Number', 'Coy'],
-            [2, 'mpw_sys', 'NA', 2.0, 'System Code', 'Sy'],
-            [3, 'mpw_prg', 'NA', 4.0, 'Program', 'Prog'],
-            [4, 'mpw_pwd', 'HA', 30.0, 'Password', 'Password'],
-            [5, 'mpw_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Users Menu Passwords', 1, 'U', 'mpw_usr', 'mpw_coy', 'mpw_sys',
-                'mpw_prg']]},
-    'ctlpwr': {
-        'fld': [
-            [0, 'pwd_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'pwd_sys', 'UA', 3.0, 'System Type', 'Sys'],
-            [2, 'pwd_code', 'NA', 20.0, 'Access Code', 'Access Code'],
-            [3, 'pwd_desc', 'NA', 50.0, 'Description', 'Description'],
-            [4, 'pwd_pass', 'HA', 30.0, 'Password', 'Password'],
-            [5, 'pwd_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Routines Passwords', 1, 'U', 'pwd_cono', 'pwd_sys', 'pwd_code']]},
-    'ctlpwu': {
-        'fld': [
-            [0, 'usr_name', 'NA', 20.0, 'Login Name', 'Login-Name'],
-            [1, 'usr_fnam', 'NA', 30.0, 'Full Name', 'Full-Name'],
-            [2, 'usr_emadd', 'TX', 50.0, 'Email Address', 'Email-Address'],
-            [3, 'usr_celno', 'TX', 20.0, 'Mobile Number', 'Mobile'],
-            [4, 'usr_pwd', 'HA', 30.0, 'Password', 'Password'],
-            [5, 'usr_last', 'd1', 10.0, 'Last Change', 'Last-Chged'],
-            [6, 'usr_acoy', 'TX', 30.0, 'Allowed Companies',
-                'Allowed Companies'],
-            [7, 'usr_dcoy', 'TX', 30.0, 'DisAllowed Companies',
-                'DisAllowed Companies'],
-            [8, 'usr_lvl', 'UI', 1.0, 'Security Level', 'S']],
-        'idx': [
-            ['User Passwords', 1, 'U', 'usr_name']]},
-    'ctlrep': {
-        'fld': [
-            [0, 'rep_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rep_code', 'Na', 3.0, 'Rep Code', 'Cod'],
-            [2, 'rep_name', 'NA', 30.0, 'Name', 'Name'],
-            [3, 'rep_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Salesmans Records', 1, 'U', 'rep_cono', 'rep_code']]},
-    'ctlsys': {
-        'fld': [
-            [0, 'sys_years', 'UI', 2.0, 'Years to Keep History', 'YR'],
-            [1, 'sys_pwmust', 'UA', 1.0, 'Enforce the Use of Passwords', 'E'],
-            [2, 'sys_pwsize', 'UI', 2.0, 'Minimum Number of Characters', 'SZ'],
-            [3, 'sys_pwlife', 'UI', 3.0, 'Maximum Days of Password Life',
-                'MLD'],
-            [4, 'sys_budays', 'UI', 3.0, 'Days of Backup History', 'BUH'],
-            [5, 'sys_msvr', 'TX', 50.0, 'SMTP Server Name', 'SMTP-Server-Name'],
-            [6, 'sys_msec', 'UI', 1.0, 'SMTP Security', 'S'],
-            [7, 'sys_maut', 'UI', 1.0, 'SMTP Authentication', 'A'],
-            [8, 'sys_mprt', 'UI', 4.0, 'SMTP Port', 'Port'],
-            [9, 'sys_mnam', 'TX', 20.0, 'SMTP Login Name', 'SMTP-Login-Name'],
-            [10, 'sys_mpwd', 'TX', 20.0, 'SMTP Login Passwsord',
-                'SMTP-Password'],
-            [11, 'sys_ssvr', 'UA', 1.0, 'SMS Server', 'S'],
-            [12, 'sys_snam', 'TX', 20.0, 'SMS Login Name', 'SMS-Login-Name'],
-            [13, 'sys_spwd', 'TX', 20.0, 'SMS Password', 'SMS-Password'],
-            [14, 'sys_gl_dep', 'UA', 1.0, 'G/L Departments', 'D'],
-            [15, 'sys_gl_dig', 'UI', 1.0, 'Number of Digits', 'N']],
-        'idx': [
-            ['Sytem Control', 1, 'N', 'sys_years']]},
-    'ctlvmf': {
-        'fld': [
-            [0, 'vtm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'vtm_code', 'UA', 1.0, 'V.A.T. Code', 'C'],
-            [2, 'vtm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'vtm_cat', 'UA', 1.0, 'Category', 'C'],
-            [4, 'vtm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['VAT Masterfile', 1, 'U', 'vtm_cono', 'vtm_code']]},
-    'ctlvrf': {
-        'fld': [
-            [0, 'vtr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'vtr_code', 'UA', 1.0, 'V.A.T. Code', 'C'],
-            [2, 'vtr_date', 'd1', 10.0, 'Starting Date', 'Start-Date'],
-            [3, 'vtr_rate', 'UD', 6.2, 'V.A.T. Rate', 'V-Rate'],
-            [4, 'vtr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['VAT Rates', 1, 'U', 'vtr_cono', 'vtr_code', 'vtr_date']]},
-    'ctlvtf': {
-        'fld': [
-            [0, 'vtt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'vtt_code', 'UA', 1.0, 'V.A.T. Code', 'C'],
-            [2, 'vtt_vtyp', 'UA', 1.0, 'V.A.T. Category', 'C'],
-            [3, 'vtt_curdt', 'D2', 7.0, 'Current Date', 'Cur-Dat'],
-            [4, 'vtt_styp', 'UA', 1.0, 'System Type', 'S'],
-            [5, 'vtt_ttyp', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [6, 'vtt_batch', 'Na', 7.0, 'Batch Number', 'Bat-No'],
-            [7, 'vtt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [8, 'vtt_refdt', 'D1', 10.0, 'Reference Date', 'Refer-Date'],
-            [9, 'vtt_acno', 'Na', 7.0, 'Account Number', 'Acc-Num'],
-            [10, 'vtt_desc', 'NA', 30.0, 'Description', 'Description'],
-            [11, 'vtt_exc', 'SD', 13.2, 'Exclusive Value', 'Exc-Value'],
-            [12, 'vtt_tax', 'SD', 13.2, 'V.A.T. Value', 'VAT-Value'],
-            [13, 'vtt_paid', 'd1', 10.0, 'Payment Date', 'Paymt-Date'],
-            [14, 'vtt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [15, 'vtt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [16, 'vtt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [17, 'vtt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['VAT Transactions', 1, 'U', 'vtt_seq'],
-            ['', 2, 'N', 'vtt_cono', 'vtt_code']]},
-    'ctlynd': {
-        'fld': [
-            [0, 'cye_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cye_period', 'UI', 3.0, 'Period Number', 'Per'],
-            [2, 'cye_start', 'D1', 10.0, 'Starting Date', 'Start-Date'],
-            [3, 'cye_end', 'D1', 10.0, 'Ending Date', 'End-Date'],
-            [4, 'cye_last', 'd1', 10.0, 'Last Run Date', 'Last-Date'],
-            [5, 'cye_final', 'UA', 1.0, 'Finalised', 'F'],
-            [6, 'cye_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Financial Periods', 1, 'U', 'cye_cono', 'cye_period']]},
-    'drsact': {
-        'fld': [
-            [0, 'dac_code', 'UA', 3.0, 'Activity Code', 'Cod'],
-            [1, 'dac_desc', 'NA', 30.0, 'Description', 'Description'],
-            [2, 'dac_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Business Activity Codes', 1, 'U', 'dac_code']]},
-    'drsage': {
-        'fld': [
-            [0, 'dra_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'dra_chain', 'UI', 3.0, 'Chain Number', 'Chn'],
-            [2, 'dra_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [3, 'dra_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [4, 'dra_ref1', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [5, 'dra_curdt', 'D2', 7.0, 'Aged Date', 'Aged-Dt'],
-            [6, 'dra_atyp', 'UI', 2.0, 'Allocation Type', 'AT'],
-            [7, 'dra_aref', 'Na', 9.0, 'Allocation Number', 'Alloc-Ref'],
-            [8, 'dra_amnt', 'SD', 13.2, 'Allocation Amount', 'Alloc-Amnt'],
-            [9, 'dra_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [10, 'dra_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Debtors Ageing', 1, 'U', 'dra_seq'],
-            ['', 2, 'N', 'dra_cono', 'dra_chain', 'dra_acno', 'dra_type',
-                'dra_ref1', 'dra_curdt']]},
-    'drschn': {
-        'fld': [
-            [0, 'chm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'chm_chain', 'UI', 3.0, 'Chain Number', 'Chn'],
-            [2, 'chm_name', 'NA', 30.0, 'Name', 'Name'],
-            [3, 'chm_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [4, 'chm_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [5, 'chm_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [6, 'chm_pcod', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [7, 'chm_tel', 'NA', 20.0, 'Telephone Number', 'Telephone Number'],
-            [8, 'chm_fax', 'NA', 20.0, 'Fax Number', 'Fax Number'],
-            [9, 'chm_email', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [10, 'chm_contact', 'NA', 30.0, 'Contact Name', 'Contact'],
-            [11, 'chm_vatind', 'UA', 1.0, 'Vat Indicator', 'V'],
-            [12, 'chm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Debtors Chains', 1, 'U', 'chm_cono', 'chm_chain']]},
-    'drsctl': {
-        'fld': [
-            [0, 'ctd_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctd_glint', 'UA', 1.0, 'G/L Integration', 'I'],
-            [2, 'ctd_glinp', 'UA', 1.0, 'G/L Input Method (E/I)', 'M'],
-            [3, 'ctd_chain', 'UA', 1.0, 'Chain Stores', 'C'],
-            [4, 'ctd_tplnam', 'NA', 20.0, 'Statement Template',
-                'Template-Name'],
-            [5, 'ctd_ageing', 'UA', 1.0, 'Statement Ageing', 'A'],
-            [6, 'ctd_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [7, 'ctd_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Debtors Control', 1, 'U', 'ctd_cono']]},
-    'drsdel': {
-        'fld': [
-            [0, 'del_code', 'Na', 7.0, 'Address Code', 'Del-Cod'],
-            [1, 'del_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [2, 'del_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [3, 'del_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [4, 'del_add4', 'NA', 30.0, 'Address Line 4', 'Address Line 4'],
-            [5, 'del_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Debtors Delivery Addresses', 1, 'U', 'del_code']]},
-    'drsmst': {
-        'fld': [
-            [0, 'drm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'drm_chain', 'UI', 3.0, 'Chain Store', 'Chn'],
-            [2, 'drm_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [3, 'drm_name', 'NA', 30.0, 'Name', 'Name'],
-            [4, 'drm_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [5, 'drm_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [6, 'drm_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [7, 'drm_pcod', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [8, 'drm_tel', 'NA', 20.0, 'Telephone Number', 'Telephone Number'],
-            [9, 'drm_fax', 'NA', 20.0, 'Fax Number', 'Fax Number'],
-            [10, 'drm_mgr', 'NA', 30.0, 'Managers Name', 'Managers Name'],
-            [11, 'drm_mgr_email', 'TX', 50.0, 'Manager Email',
-                'Manager E-mail Address'],
-            [12, 'drm_acc', 'NA', 30.0, 'Accounts Contact',
-                'Accounts Contact Name'],
-            [13, 'drm_acc_email', 'TX', 50.0, 'Accounts E-mail',
-                'Accounts E-mail Address'],
-            [14, 'drm_sls', 'NA', 30.0, 'Sales Contact', 'Sales Contact Name'],
-            [15, 'drm_sls_email', 'TX', 50.0, 'Sales E-mail',
-                'Sales E-mail Address'],
-            [16, 'drm_opened', 'd1', 10.0, 'Date Opened', 'Date-Opend'],
-            [17, 'drm_registered', 'd1', 10.0, 'Date Registered',
-                'Date-Regst'],
-            [18, 'drm_vatno', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [19, 'drm_delivery', 'Na', 7.0, 'Delivery Address', 'Del-Add'],
-            [20, 'drm_rep', 'Na', 3.0, 'Rep Code', 'Rep'],
-            [21, 'drm_bus_activity', 'UA', 3.0, 'Business Activity', 'BsA'],
-            [22, 'drm_bus_type', 'UA', 3.0, 'Business Type', 'BsT'],
-            [23, 'drm_plev', 'UI', 1.0, 'Price Level', 'P'],
-            [24, 'drm_dis_per', 'UD', 5.2, 'Discount Percentage', 'Dis-%'],
-            [25, 'drm_int_per', 'UD', 5.2, 'Interest Percentage', 'Int-%'],
-            [26, 'drm_rfterms', 'UI', 3.0, 'Referral Terms', 'RfT'],
-            [27, 'drm_rjterms', 'UI', 3.0, 'Rejected Terms', 'RjT'],
-            [28, 'drm_limit', 'UI', 5.0, 'Credit Limit', 'CrLimit'],
-            [29, 'drm_stop', 'UA', 1.0, 'Stop Indicator', 'S'],
-            [30, 'drm_invmes', 'UI', 3.0, 'Invoice Message', 'IMs'],
-            [31, 'drm_stames', 'UI', 3.0, 'Statement Message', 'SMs'],
-            [32, 'drm_rating', 'UA', 1.0, 'Credit Rating', 'R'],
-            [33, 'drm_stat', 'UA', 1.0, 'Account Status', 'S'],
-            [34, 'drm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Debtors Masterfile', 1, 'U', 'drm_cono', 'drm_chain',
-                'drm_acno']]},
-    'drsrcm': {
-        'fld': [
-            [0, 'dcm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'dcm_num', 'UI', 3.0, 'Number', 'Jnl-Num'],
-            [2, 'dcm_desc', 'NA', 30.0, 'Details', 'Description'],
-            [3, 'dcm_freq', 'UA', 1.0, 'Frequency', 'F'],
-            [4, 'dcm_day', 'UI', 2.0, 'Day of the Month', 'DM'],
-            [5, 'dcm_vat', 'UA', 1.0, 'VAT Code', 'V'],
-            [6, 'dcm_glac', 'UI', 7.0, 'G/L Account', 'GL-Acno'],
-            [7, 'dcm_last', 'd2', 7.0, 'Period Last Raised', 'Lst-Rsd'],
-            [8, 'dcm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Debtors Standard Charges', 1, 'U', 'dcm_cono', 'dcm_num']]},
-    'drsrct': {
-        'fld': [
-            [0, 'dct_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'dct_num', 'UI', 3.0, 'Number', 'Jnl-Num'],
-            [2, 'dct_seq', 'UI', 3.0, 'Sequence', 'seq'],
-            [3, 'dct_chain', 'UI', 3.0, 'Chain Store', 'Chn'],
-            [4, 'dct_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [5, 'dct_detail', 'TX', 30.0, 'Charge Details', 'Charge-Details'],
-            [6, 'dct_amnt', 'SD', 13.2, 'Amount', 'Amount'],
-            [7, 'dct_start', 'd2', 7.0, 'Starting Period', 'Start'],
-            [8, 'dct_end', 'd2', 7.0, 'Ending Period', 'Ending'],
-            [9, 'dct_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Debtors Standard Charges Trans', 1, 'U', 'dct_cono', 'dct_num',
-                'dct_seq']]},
-    'drstrn': {
-        'fld': [
-            [0, 'drt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'drt_chain', 'UI', 3.0, 'Chain Number', 'Chn'],
-            [2, 'drt_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [3, 'drt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [4, 'drt_ref1', 'Na', 9.0, 'Reference 1', 'Reference'],
-            [5, 'drt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [6, 'drt_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [7, 'drt_ref2', 'Na', 9.0, 'Reference 2', 'Ref-Num-2'],
-            [8, 'drt_tramt', 'SD', 13.2, 'Transaction Amount', 'Trn-Amount'],
-            [9, 'drt_taxamt', 'SD', 13.2, 'Tax Amount', 'Tax-Amount'],
-            [10, 'drt_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [11, 'drt_desc', 'NA', 30.0, 'Description', 'Description'],
-            [12, 'drt_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [13, 'drt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [14, 'drt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [15, 'drt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [16, 'drt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [17, 'drt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Debtors Transactions', 1, 'U', 'drt_seq'],
-            ['', 2, 'U', 'drt_cono', 'drt_chain', 'drt_acno', 'drt_type',
-                'drt_ref1'],
-            ['', 3, 'N', 'drt_cono', 'drt_chain', 'drt_acno', 'drt_curdt'],
-            ['', 4, 'N', 'drt_cono', 'drt_type', 'drt_batch', 'drt_batind']]},
-    'drstyp': {
-        'fld': [
-            [0, 'dtp_code', 'UA', 3.0, 'Business Type Code', 'Cod'],
-            [1, 'dtp_desc', 'NA', 30.0, 'Description', 'Description'],
-            [2, 'dtp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Business Type Codes', 1, 'U', 'dtp_code']]},
-    'emllog': {
-        'fld': [
-            [0, 'eml_frm', 'TX', 50.0, 'Sender', 'Sender'],
-            [1, 'eml_too', 'TX', 50.0, 'Recipients', 'Recipients'],
-            [2, 'eml_sub', 'TX', 50.0, 'Subject', 'Subject'],
-            [3, 'eml_dtt', 'NA', 16.0, 'Date and Time', 'Date and Time'],
-            [4, 'eml_sta', 'NA', 10.0, 'Status', 'Status'],
-            [5, 'eml_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Email Log', 1, 'N', 'eml_frm']]},
-    'ffield': {
-        'fld': [
-            [0, 'ff_tabl', 'NA', 6.0, 'Table Name', 'TabNam'],
-            [1, 'ff_seq', 'UI', 3.0, 'Field Seq', 'Seq'],
-            [2, 'ff_name', 'NA', 20.0, 'Field Name', 'Field-Name'],
-            [3, 'ff_type', 'NA', 2.0, 'Field Type', 'Tp'],
-            [4, 'ff_size', 'UD', 6.2, 'Field Size', 'F-Size'],
-            [5, 'ff_desc', 'NA', 30.0, 'Field Description',
-                'Field-Description'],
-            [6, 'ff_head', 'NA', 30.0, 'Field Heading', 'Field-Heading']],
-        'idx': [
-            ['Field Names', 1, 'U', 'ff_tabl', 'ff_seq'],
-            ['', 2, 'U', 'ff_name']]},
-    'frelat': {
-        'fld': [
-            [0, 'rel_tab1', 'NA', 6.0, 'Table Name', 'Tabl-1'],
-            [1, 'rel_col1', 'NA', 20.0, 'Column Name', 'Column-Name-1'],
-            [2, 'rel_tab2', 'NA', 6.0, 'Table Name', 'Tabl-2'],
-            [3, 'rel_col2', 'NA', 20.0, 'Column Name', 'Column-Name-2']],
-        'idx': [
-            ['Table Relationships', 1, 'U', 'rel_tab1', 'rel_col1', 'rel_tab2',
-                'rel_col2']]},
-    'ftable': {
-        'fld': [
-            [0, 'ft_tabl', 'NA', 6.0, 'Table Name', 'TabNam'],
-            [1, 'ft_desc', 'NA', 30.0, 'Description', 'Description'],
-            [2, 'ft_seq', 'UI', 1.0, 'Key Sequence', 'S'],
-            [3, 'ft_type', 'NA', 1.0, 'Key Type', 'T'],
-            [4, 'ft_key0', 'NA', 20.0, 'First Key', '1st-Key'],
-            [5, 'ft_key1', 'NA', 20.0, 'Second Key', '2nd-Key'],
-            [6, 'ft_key2', 'NA', 20.0, 'Third Key', '3rd-Key'],
-            [7, 'ft_key3', 'NA', 20.0, 'Fourth Key', '4th-Key'],
-            [8, 'ft_key4', 'NA', 20.0, 'Fifth Key', '5th-Key'],
-            [9, 'ft_key5', 'NA', 20.0, 'Sixth Key', '6th-Key'],
-            [10, 'ft_key6', 'NA', 20.0, 'Seventh Key', '7th-Key'],
-            [11, 'ft_key7', 'NA', 20.0, 'Eighth Key', '8th-Key'],
-            [12, 'ft_key8', 'NA', 20.0, 'Ninth Key', '9th-Key'],
-            [13, 'ft_key9', 'NA', 20.0, 'Tenth Key', '10th-Key']],
-        'idx': [
-            ['Table Names', 1, 'U', 'ft_tabl', 'ft_seq']]},
-    'genbal': {
-        'fld': [
-            [0, 'glo_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'glo_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'glo_trdt', 'D1', 10.0, 'Year Start Date', 'Start-Date'],
-            [3, 'glo_cyr', 'SD', 13.2, 'Opening Balance - Amount', 'Op-Amount'],
-            [4, 'glo_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Opening Bals', 1, 'U', 'glo_cono', 'glo_acno',
-                'glo_trdt'],
-            ['', 2, 'N', 'glo_acno'],
-            ['', 3, 'N', 'glo_cono', 'glo_acno']]},
-    'genbud': {
-        'fld': [
-            [0, 'glb_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'glb_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'glb_curdt', 'D2', 7.0, 'Period', 'Period'],
-            [3, 'glb_tramt', 'SI', 10.0, 'Value', 'Value'],
-            [4, 'glb_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Budgets', 1, 'U', 'glb_cono', 'glb_acno',
-                'glb_curdt'],
-            ['', 2, 'N', 'glb_acno', 'glb_curdt']]},
-    'gendtm': {
-        'fld': [
-            [0, 'gdm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'gdm_code', 'Na', 2.0, 'Detail Code', 'Cd'],
-            [2, 'gdm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'gdm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Detail Records', 1, 'U', 'gdm_cono', 'gdm_code']]},
-    'gendtt': {
-        'fld': [
-            [0, 'gdt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'gdt_code', 'Na', 2.0, 'Detail Code', 'Cd'],
-            [2, 'gdt_curdt', 'D2', 7.0, 'Current Date', 'Cur-Date'],
-            [3, 'gdt_value', 'SD', 13.2, 'Value or Amount', 'Value'],
-            [4, 'gdt_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Detail Trans', 1, 'U', 'gdt_cono', 'gdt_code',
-                'gdt_curdt']]},
-    'genint': {
-        'fld': [
-            [0, 'cti_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cti_inco', 'UI', 3.0, 'Company Number', 'Coy'],
-            [2, 'cti_acno', 'UI', 7.0, 'Intercompany A/C', 'Acc-Num'],
-            [3, 'cti_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Inter-Company', 1, 'U', 'cti_cono', 'cti_inco']]},
-    'genjlm': {
-        'fld': [
-            [0, 'gjm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'gjm_num', 'Na', 9.0, 'Number', 'Jnl-Num'],
-            [2, 'gjm_desc', 'NA', 30.0, 'Details', 'Description'],
-            [3, 'gjm_freq', 'UA', 1.0, 'Frequency', 'F'],
-            [4, 'gjm_start', 'd2', 7.0, 'Starting Period', 'Start'],
-            [5, 'gjm_end', 'd2', 7.0, 'Ending Period', 'Ending'],
-            [6, 'gjm_last', 'd2', 7.0, 'Period Last Raised', 'Lst-Rsd'],
-            [7, 'gjm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Journals', 1, 'U', 'gjm_cono', 'gjm_num']]},
-    'genjlt': {
-        'fld': [
-            [0, 'gjt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'gjt_num', 'Na', 9.0, 'Number', 'Jnl-Num'],
-            [2, 'gjt_seq', 'UI', 3.0, 'Sequence', 'seq'],
-            [3, 'gjt_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [4, 'gjt_vatc', 'UA', 1.0, 'V.A.T. Indicator', 'V'],
-            [5, 'gjt_amnt', 'SD', 13.2, 'Amount', 'Amount'],
-            [6, 'gjt_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Journal Trans', 1, 'U', 'gjt_cono', 'gjt_num',
-                'gjt_seq']]},
-    'genmst': {
-        'fld': [
-            [0, 'glm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'glm_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'glm_type', 'UA', 1.0, 'Account Type', 'T'],
-            [3, 'glm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [4, 'glm_ind', 'UA', 1.0, 'Direct Postings', 'P'],
-            [5, 'glm_vat', 'UA', 1.0, 'VAT Code', 'V'],
-            [6, 'glm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Masterfile', 1, 'U', 'glm_cono', 'glm_acno'],
-            ['', 2, 'N', 'glm_acno']]},
-    'genrcc': {
-        'fld': [
-            [0, 'grc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'grc_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'grc_memo', 'UI', 5.0, 'Memo Code', 'Memo Code'],
-            [3, 'grc_desc1', 'NA', 50.0, 'Memo Description 1',
-                'Memo Description 1'],
-            [4, 'grc_desc2', 'NA', 50.0, 'Memo Description 2',
-                'Memo Description 2'],
-            [5, 'grc_desc3', 'NA', 50.0, 'Memo Description 3',
-                'Memo Description 3'],
-            [6, 'grc_rtn', 'UA', 1.0, 'Transaction Type', 'T'],
-            [7, 'grc_acoy', 'UI', 3.0, 'Alloc Company Number', 'All'],
-            [8, 'grc_aacc', 'UI', 7.0, 'Alloc Account Number', 'All-Acc'],
-            [9, 'grc_acrs', 'NA', 7.0, 'Creditor Account', 'Crs-Acc'],
-            [10, 'grc_achn', 'UI', 3.0, 'Chain Store', 'Chn'],
-            [11, 'grc_adrs', 'NA', 7.0, 'Debtor Account', 'Drs-Acc'],
-            [12, 'grc_aage', 'UA', 1.0, 'Ageing Code', 'A'],
-            [13, 'grc_vat', 'UA', 1.0, 'VAT Code', 'V'],
-            [14, 'grc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bank Recon Control', 1, 'U', 'grc_cono', 'grc_acno',
-                'grc_memo']]},
-    'genrct': {
-        'fld': [
-            [0, 'grt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'grt_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'grt_date', 'D1', 10.0, 'Date', 'Date'],
-            [3, 'grt_memo', 'TX', 50.0, 'Memo Details', 'Memo Details'],
-            [4, 'grt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [5, 'grt_payee', 'TX', 50.0, 'Payee', 'Payee'],
-            [6, 'grt_amount', 'SD', 13.2, 'Amount', 'Amount'],
-            [7, 'grt_flag', 'UA', 1.0, 'Allocated Flag', 'A'],
-            [8, 'grt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [9, 'grt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Bank Recon Trans', 1, 'U', 'grt_seq'],
-            ['', 2, 'U', 'grt_cono', 'grt_acno', 'grt_date', 'grt_memo',
-                'grt_refno', 'grt_payee', 'grt_amount'],
-            ['', 3, 'N', 'grt_cono', 'grt_acno', 'grt_date', 'grt_flag']]},
-    'genrpc': {
-        'fld': [
-            [0, 'glc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'glc_cusno', 'UI', 2.0, 'Custom Number', 'CN'],
-            [2, 'glc_head1', 'TX', 50.0, 'Heading 1', 'Heading 1'],
-            [3, 'glc_head2', 'TX', 50.0, 'Heading 2', 'Heading 2'],
-            [4, 'glc_head3', 'TX', 50.0, 'Heading 3', 'Heading 3'],
-            [5, 'glc_head4', 'TX', 50.0, 'Heading 4', 'Heading 4'],
-            [6, 'glc_col1_nam', 'TX', 11.0, 'Column 1 Name', 'Col-01-Name'],
-            [7, 'glc_col1_tit', 'TX', 20.0, 'Column 1 Title', 'Column 1 Title'],
-            [8, 'glc_col2_nam', 'TX', 11.0, 'Column 2 Name', 'Col-02-Name'],
-            [9, 'glc_col2_tit', 'TX', 20.0, 'Column 2 Title', 'Column 2 Title'],
-            [10, 'glc_col3_nam', 'TX', 11.0, 'Column 3 Name', 'Col-03-Name'],
-            [11, 'glc_col3_tit', 'TX', 20.0, 'Column 3', 'Column 3 Title'],
-            [12, 'glc_col4_nam', 'TX', 11.0, 'Column 4 Name', 'Col-04-Name'],
-            [13, 'glc_col4_tit', 'TX', 20.0, 'Column 4 Title',
-                'Column 4 Title'],
-            [14, 'glc_col5_nam', 'TX', 11.0, 'Column 5 Name', 'Col-05-Name'],
-            [15, 'glc_col5_tit', 'TX', 20.0, 'Column 5 Title',
-                'Column 5 Title'],
-            [16, 'glc_col6_nam', 'TX', 11.0, 'Column 6 Name', 'Col-06-Name'],
-            [17, 'glc_col6_tit', 'TX', 20.0, 'Column 6 Title',
-                'Column 6 Title'],
-            [18, 'glc_col7_nam', 'TX', 11.0, 'Column 7 Name', 'Col-07-Name'],
-            [19, 'glc_col7_tit', 'TX', 20.0, 'Column 7 Title',
-                'Column 7 Title'],
-            [20, 'glc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Custom Reports', 1, 'U', 'glc_cono',
-                'glc_cusno']]},
-    'genrpt': {
-        'fld': [
-            [0, 'glr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'glr_repno', 'UI', 3.0, 'Report Number', 'No'],
-            [2, 'glr_seq', 'UD', 7.2, 'Sequence', 'Seq-Num'],
-            [3, 'glr_type', 'UA', 1.0, 'Type', 'T'],
-            [4, 'glr_desc', 'NA', 30.0, 'Description', 'Description'],
-            [5, 'glr_high', 'UA', 1.0, 'Highlight (y/n)', 'H'],
-            [6, 'glr_ffeed', 'UA', 1.0, 'Form Feed (y/n)', 'F'],
-            [7, 'glr_ignore', 'UA', 1.0, 'Ignore Account Type (y/n)', 'I'],
-            [8, 'glr_from', 'UI', 7.0, 'From Account', 'From-Ac'],
-            [9, 'glr_to', 'UI', 7.0, 'To Account', '  To-Ac'],
-            [10, 'glr_obal', 'UA', 1.0, 'Include Opening Balance (y/n)', 'B'],
-            [11, 'glr_accum', 'UA', 1.0, 'Accumulate Month Values (y/n)', 'A'],
-            [12, 'glr_print', 'UA', 1.0, 'Print Values (y/n/+/-)', 'P'],
-            [13, 'glr_norm', 'UA', 1.0, 'Normal Sign (+/-)', 'S'],
-            [14, 'glr_acbal', 'UA', 1.0, 'Add/Sub/Ignore Balance (a/s/i)', 'A'],
-            [15, 'glr_store', 'UA', 1.0, 'Store Balances (y/n)', 'S'],
-            [16, 'glr_snum1', 'UI', 2.0, 'Storage Number 1', 'N1'],
-            [17, 'glr_snum2', 'UI', 2.0, 'Storage Number 2', 'N2'],
-            [18, 'glr_snum3', 'UI', 2.0, 'Storage Number 3', 'N3'],
-            [19, 'glr_acstr', 'UA', 1.0, 'Add/Sub/Ignore Storage (a/s/i)', 'A'],
-            [20, 'glr_group', 'UI', 3.0, 'Group Number', 'Grp'],
-            [21, 'glr_total', 'UI', 1.0, 'Total Level', 'T'],
-            [22, 'glr_clear', 'UA', 1.0, 'Clear Total Level(s)', 'C'],
-            [23, 'glr_strper', 'UD', 6.2, 'Percentage of Stored Amount',
-                '%-tage'],
-            [24, 'glr_uline', 'UA', 1.0, 'Underline (b/d/s)', 'U'],
-            [25, 'glr_cbase', 'UA', 1.0, 'Calculation Base (p/a/s)', 'B'],
-            [26, 'glr_ctype', 'UA', 1.0, 'Calculation Type (+ - * /)', 'C'],
-            [27, 'glr_camnt', 'SD', 13.2, 'Percent or Amount', 'Amount'],
-            [28, 'glr_label', 'NA', 10.0, 'Chart Lable', 'Label'],
-            [29, 'glr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Reports', 1, 'U', 'glr_cono', 'glr_repno',
-                'glr_seq'],
-            ['', 2, 'N', 'glr_cono', 'glr_repno']]},
-    'genstr': {
-        'fld': [
-            [0, 'gls_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'gls_strm', 'UI', 3.0, 'Stream Number', 'Str'],
-            [2, 'gls_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'gls_seq', 'UI', 3.0, 'Sequence Number', 'Seq'],
-            [4, 'gls_typ', 'UA', 1.0, 'Report Type (S/L/M/C)', 'T'],
-            [5, 'gls_cno', 'UI', 2.0, 'Custom Number', 'CN'],
-            [6, 'gls_con', 'UA', 1.0, 'Consolidate (Y/N)', 'Y'],
-            [7, 'gls_rep', 'UI', 3.0, 'Report Number', 'Num'],
-            [8, 'gls_gen', 'UA', 1.0, 'General report (Y/N)', 'G'],
-            [9, 'gls_val', 'UA', 1.0, 'Contents (V/B/C/D)', 'C'],
-            [10, 'gls_det', 'Na', 2.0, 'Detail Code', 'DC'],
-            [11, 'gls_var', 'UA', 1.0, 'Variance (B/P/N)', 'V'],
-            [12, 'gls_zer', 'UA', 1.0, 'Include Zeros (Y/N)', 'Z'],
-            [13, 'gls_opt', 'UA', 1.0, 'Print Options (Y/N)', 'O'],
-            [14, 'gls_num', 'UA', 1.0, 'Print Numbers (Y/N)', 'N'],
-            [15, 'gls_prnt', 'TX', 50.0, 'Printer Name', 'Printer-Name'],
-            [16, 'gls_mail', 'TX', 50.0, 'Email Address', 'Email-Address'],
-            [17, 'gls_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['General Ledger Stream Records', 1, 'U', 'gls_cono', 'gls_strm',
-                'gls_seq']]},
-    'gentrn': {
-        'fld': [
-            [0, 'glt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'glt_acno', 'UI', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'glt_curdt', 'D2', 7.0, 'Current Period', 'Curr-Dt'],
-            [3, 'glt_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [4, 'glt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [5, 'glt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [6, 'glt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [7, 'glt_tramt', 'SD', 13.2, 'Transaction Value', 'Trans-Amount'],
-            [8, 'glt_taxamt', 'SD', 13.2, 'Tax Value', 'Tax-Amount'],
-            [9, 'glt_desc', 'NA', 30.0, 'Description', 'Description'],
-            [10, 'glt_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [11, 'glt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [12, 'glt_recon', 'UI', 7.0, 'Bank Date', 'Bank-Dt'],
-            [13, 'glt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [14, 'glt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [15, 'glt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [16, 'glt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['General Ledger Transactions', 1, 'U', 'glt_seq'],
-            ['', 2, 'N', 'glt_cono', 'glt_acno', 'glt_recon', 'glt_refno',
-                'glt_tramt'],
-            ['', 3, 'N', 'glt_cono', 'glt_acno', 'glt_recon', 'glt_trdt',
-                'glt_tramt'],
-            ['', 4, 'N', 'glt_cono', 'glt_type', 'glt_batch', 'glt_batind'],
-            ['', 5, 'N', 'glt_cono', 'glt_acno', 'glt_recon', 'glt_tramt'],
-            ['', 6, 'N', 'glt_cono', 'glt_acno', 'glt_curdt'],
-            ['', 7, 'N', 'glt_cono', 'glt_curdt'],
-            ['', 8, 'N', 'glt_acno', 'glt_curdt']]},
-    'ldraws': {
-        'fld': [
-            [0, 'lod_type', 'UA', 1.0, 'Game Type', 'T'],
-            [1, 'lod_draw', 'UI', 5.0, 'Draw Number', 'D-Num'],
-            [2, 'lod_date', 'D1', 10.0, 'Draw Date', 'Draw--Date'],
-            [3, 'lod_num1', 'UI', 2.0, 'Number 1', 'N1'],
-            [4, 'lod_num2', 'UI', 2.0, 'Number 2', 'N2'],
-            [5, 'lod_num3', 'UI', 2.0, 'Number 3', 'N3'],
-            [6, 'lod_num4', 'UI', 2.0, 'Number 4', 'N4'],
-            [7, 'lod_num5', 'UI', 2.0, 'Number 5', 'N5'],
-            [8, 'lod_num6', 'UI', 2.0, 'Number 6', 'N6'],
-            [9, 'lod_bbal', 'UI', 2.0, 'Bonus Ball', 'BB']],
-        'idx': [
-            ['Lotto Draws', 1, 'U', 'lod_type', 'lod_date']]},
-    'lentry': {
-        'fld': [
-            [0, 'loe_type', 'UA', 1.0, 'Game Type', 'T'],
-            [1, 'loe_date', 'D1', 10.0, 'Draw Date', 'Draw--Date'],
-            [2, 'loe_num1', 'UI', 2.0, 'Number 1', 'N1'],
-            [3, 'loe_num2', 'UI', 2.0, 'Number 2', 'N2'],
-            [4, 'loe_num3', 'UI', 2.0, 'Number 3', 'N3'],
-            [5, 'loe_num4', 'UI', 2.0, 'Number 4', 'N4'],
-            [6, 'loe_num5', 'UI', 2.0, 'Number 5', 'N5'],
-            [7, 'loe_num6', 'UI', 2.0, 'Number 6', 'N6'],
-            [8, 'loe_dtyp', 'UA', 1.0, 'Draw Type', 'T'],
-            [9, 'loe_draw', 'UI', 5.0, 'Draw Number', 'D-Num'],
-            [10, 'loe_ddiv', 'UI', 1.0, 'Division', 'D'],
-            [11, 'loe_dval', 'UD', 12.2, 'Winnings Amount', 'Winnings-Amt']],
-        'idx': [
-            ['Lotto Entries', 1, 'N', 'loe_type', 'loe_date']]},
-    'lfixed': {
-        'fld': [
-            [0, 'lof_type', 'UA', 1.0, 'Game Type', 'T'],
-            [1, 'lof_seq', 'UI', 2.0, 'Sequence', 'Sq'],
-            [2, 'lof_num1', 'UI', 2.0, 'Number 1', 'N1'],
-            [3, 'lof_num2', 'UI', 2.0, 'Number 2', 'N2'],
-            [4, 'lof_num3', 'UI', 2.0, 'Number 3', 'N3'],
-            [5, 'lof_num4', 'UI', 2.0, 'Number 4', 'N4'],
-            [6, 'lof_num5', 'UI', 2.0, 'Number 5', 'N5'],
-            [7, 'lof_num6', 'UI', 2.0, 'Number 6', 'N6']],
-        'idx': [
-            ['Lotto Fixed Draws', 1, 'U', 'lof_type', 'lof_seq']]},
-    'lonctl': {
-        'fld': [
-            [0, 'cln_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cln_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'cln_ityp', 'UA', 1.0, 'Interest Method', 'M'],
-            [3, 'cln_capb', 'UA', 1.0, 'Capitalization Base', 'B'],
-            [4, 'cln_capf', 'UA', 1.0, 'Capitalization Freq', 'F'],
-            [5, 'cln_drte', 'UD', 6.2, 'Debit Rate', 'DRte-%'],
-            [6, 'cln_crte', 'UD', 6.2, 'Credit Rate', 'CRte-%'],
-            [7, 'cln_last', 'D1', 10.0, 'Last Interest Date', 'Last-IntDt'],
-            [8, 'cln_tplnam', 'NA', 20.0, 'Statement Template',
-                'Template-Name'],
-            [9, 'cln_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [10, 'cln_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Loans Control', 1, 'U', 'cln_cono']]},
-    'lonmf1': {
-        'fld': [
-            [0, 'lm1_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'lm1_acno', 'UA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'lm1_name', 'TX', 30.0, 'Name', 'Name'],
-            [3, 'lm1_addr1', 'TX', 30.0, 'Address Line 1', 'Address-Line-1'],
-            [4, 'lm1_addr2', 'TX', 30.0, 'Address Line 2', 'Address-Line-2'],
-            [5, 'lm1_addr3', 'TX', 30.0, 'Address Line 3', 'Address-Line-3'],
-            [6, 'lm1_pcode', 'TX', 4.0, 'Postal Code', 'P-Code'],
-            [7, 'lm1_telno', 'TX', 20.0, 'Telephone Number', 'Telephone'],
-            [8, 'lm1_faxno', 'TX', 20.0, 'Fax Number', 'Fax'],
-            [9, 'lm1_celno', 'TX', 20.0, 'Mobile Number', 'Mobile'],
-            [10, 'lm1_email', 'TX', 50.0, 'Email Address', 'Email'],
-            [11, 'lm1_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Loans Masterfile', 1, 'U', 'lm1_cono', 'lm1_acno']]},
-    'lonmf2': {
-        'fld': [
-            [0, 'lm2_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'lm2_acno', 'UA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'lm2_loan', 'UI', 2.0, 'Loan Number', 'Ln'],
-            [3, 'lm2_desc', 'NA', 30.0, 'Description', 'Description'],
-            [4, 'lm2_start', 'D1', 10.0, 'Starting Date', 'Start-Date'],
-            [5, 'lm2_pmths', 'UI', 3.0, 'Period in Months', 'Mth'],
-            [6, 'lm2_repay', 'UD', 12.2, 'Repayment Amount', 'Repayment'],
-            [7, 'lm2_lcap', 'd1', 10.0, 'Last Capitalise', 'Last-Captl'],
-            [8, 'lm2_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Staff Loans Masterfile', 1, 'U', 'lm2_cono', 'lm2_acno',
-                'lm2_loan']]},
-    'lonrte': {
-        'fld': [
-            [0, 'lrt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'lrt_acno', 'UA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'lrt_loan', 'UI', 2.0, 'Loan', 'Ln'],
-            [3, 'lrt_start', 'd1', 10.0, 'Start Date', 'Start-Date'],
-            [4, 'lrt_drte', 'UD', 6.2, 'Debit Rate', 'DRte-%'],
-            [5, 'lrt_crte', 'UD', 6.2, 'Credit Rate', 'CRte-%'],
-            [6, 'lrt_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Loans Rates', 1, 'U', 'lrt_cono', 'lrt_acno', 'lrt_loan',
-                'lrt_start']]},
-    'lontrn': {
-        'fld': [
-            [0, 'lnt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'lnt_acno', 'UA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'lnt_loan', 'UI', 2.0, 'Loan Number', 'Ln'],
-            [3, 'lnt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [4, 'lnt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [5, 'lnt_trdt', 'D1', 10.0, 'Transaction Date', 'Date'],
-            [6, 'lnt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [7, 'lnt_tramt', 'SD', 13.2, 'Transaction Amount', 'Trn-Amount'],
-            [8, 'lnt_curdt', 'D2', 7.0, 'Current Date', 'Cur-Date'],
-            [9, 'lnt_desc', 'TX', 30.0, 'Description', 'Description'],
-            [10, 'lnt_batind', 'NA', 1.0, 'Batch Indicator', 'B'],
-            [11, 'lnt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [12, 'lnt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [13, 'lnt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [14, 'lnt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Staff Loans Transactions', 1, 'U', 'lnt_seq'],
-            ['', 2, 'N', 'lnt_cono', 'lnt_type', 'lnt_batch', 'lnt_batind'],
-            ['', 3, 'N', 'lnt_cono', 'lnt_acno', 'lnt_loan', 'lnt_type',
-                'lnt_refno']]},
-    'lprize': {
-        'fld': [
-            [0, 'lop_type', 'UA', 1.0, 'Game Type', 'T'],
-            [1, 'lop_draw', 'UI', 5.0, 'Draw Number', 'D-Num'],
-            [2, 'lop_date', 'D1', 10.0, 'Draw Date', 'Draw--Date'],
-            [3, 'lop_div1', 'UD', 12.2, 'Division 1', 'Division-1'],
-            [4, 'lop_div2', 'UD', 12.2, 'Division 2', 'Division-2'],
-            [5, 'lop_div3', 'UD', 12.2, 'Division 3', 'Division-3'],
-            [6, 'lop_div4', 'UD', 12.2, 'Division 4', 'Division-4'],
-            [7, 'lop_div5', 'UD', 12.2, 'Division 5', 'Division-5'],
-            [8, 'lop_div6', 'UD', 12.2, 'Division 6', 'Division-6'],
-            [9, 'lop_div7', 'UD', 12.2, 'Division 7', 'Division-7'],
-            [10, 'lop_div8', 'UD', 12.2, 'Division 8', 'Division-8'],
-            [11, 'lop_div9', 'UD', 12.2, 'Division 9', 'Division-9']],
-        'idx': [
-            ['Lotto Prizes', 1, 'U', 'lop_type', 'lop_date']]},
-    'ltrans': {
-        'fld': [
-            [0, 'lot_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [1, 'lot_refno', 'Na', 7.0, 'Reference Number', 'Ref-Num'],
-            [2, 'lot_tramt', 'SD', 13.2, 'Transaction Amount', 'Trans-Amount'],
-            [3, 'lot_desc', 'TX', 30.0, 'Description', 'Description'],
-            [4, 'lot_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Lotto Transactions', 1, 'U', 'lot_seq']]},
-    'memadd': {
-        'fld': [
-            [0, 'mla_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mla_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mla_type', 'UA', 1.0, 'Address Type', 'T'],
-            [3, 'mla_add1', 'TX', 30.0, 'Address Line 1', 'Address-Line-1'],
-            [4, 'mla_add2', 'TX', 30.0, 'Address Line 2', 'Address-Line-2'],
-            [5, 'mla_add3', 'TX', 30.0, 'Address Line 3', 'Address-Line-3'],
-            [6, 'mla_city', 'TX', 30.0, 'Address City', 'Address-City'],
-            [7, 'mla_code', 'TX', 4.0, 'Postal Code', 'PCode'],
-            [8, 'mla_region', 'TX', 30.0, 'Address Region', 'Address-Region'],
-            [9, 'mla_country', 'TX', 30.0, 'Address Country',
-                'Address-Country'],
-            [10, 'mla_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Membership Addresses', 1, 'U', 'mla_cono', 'mla_memno',
-                'mla_type']]},
-    'memage': {
-        'fld': [
-            [0, 'mta_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mta_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mta_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'mta_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'mta_curdt', 'D2', 7.0, 'Aged Date', 'Aged-Dt'],
-            [5, 'mta_atyp', 'UI', 2.0, 'Allocation Type', 'AT'],
-            [6, 'mta_aref', 'Na', 9.0, 'Allocation Number', 'Alloc-Ref'],
-            [7, 'mta_amnt', 'SD', 11.2, 'Allocation Amount', 'Alloc-Amnt'],
-            [8, 'mta_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [9, 'mta_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Members Ageing', 1, 'U', 'mta_seq'],
-            ['', 2, 'N', 'mta_cono', 'mta_memno', 'mta_type', 'mta_refno',
-                'mta_curdt']]},
-    'memcat': {
-        'fld': [
-            [0, 'mlc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mlc_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mlc_type', 'UA', 1.0, 'Category Type', 'T'],
-            [3, 'mlc_code', 'UI', 2.0, 'Category Code', 'SC'],
-            [4, 'mlc_note', 'TX', 20.0, 'Notes', 'Notes'],
-            [5, 'mlc_start', 'D1', 10.0, 'Start Date', 'Start-Date'],
-            [6, 'mlc_end', 'd1', 10.0, 'End Date', 'End-Date'],
-            [7, 'mlc_last', 'd1', 10.0, 'Last Raised', 'Last-Date'],
-            [8, 'mlc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Membership Categories', 1, 'U', 'mlc_cono', 'mlc_memno',
-                'mlc_type', 'mlc_code']]},
-    'memctc': {
-        'fld': [
-            [0, 'mcc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mcc_type', 'UA', 1.0, 'Type', 'T'],
-            [2, 'mcc_code', 'UI', 2.0, 'Code', 'Cd'],
-            [3, 'mcc_desc', 'TX', 30.0, 'Description', 'Description'],
-            [4, 'mcc_rgrp', 'UA', 2.0, 'Report Group', 'RG'],
-            [5, 'mcc_freq', 'UA', 1.0, 'Frequency', 'F'],
-            [6, 'mcc_age_l', 'UI', 2.0, 'Age Limit', 'AG'],
-            [7, 'mcc_and_s', 'UI', 2.0, 'And Service', 'AL'],
-            [8, 'mcc_or_s', 'UI', 2.0, 'Or Service', 'OL'],
-            [9, 'mcc_ncode', 'UI', 2.0, 'Next Code', 'NC'],
-            [10, 'mcc_glac', 'UI', 7.0, 'G/L Account Number', 'GL-AcNo'],
-            [11, 'mcc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Member Categories', 1, 'U', 'mcc_cono', 'mcc_type', 'mcc_code']]},
-    'memctk': {
-        'fld': [
-            [0, 'mck_code', 'UI', 2.0, 'Code', 'Cd'],
-            [1, 'mck_type', 'UA', 1.0, 'Type', 'T'],
-            [2, 'mck_desc', 'TX', 50.0, 'Description', 'Description'],
-            [3, 'mck_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Method of Contact Codes', 1, 'U', 'mck_code']]},
-    'memctl': {
-        'fld': [
-            [0, 'mcm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mcm_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'mcm_ldays', 'UI', 2.0, 'Days Limit', 'DL'],
-            [3, 'mcm_lme', 'd1', 10.0, 'Last Month End', 'LME-Date'],
-            [4, 'mcm_photo', 'TX', 50.0, 'Photo Directory', 'Photo-Directory'],
-            [5, 'mcm_logo', 'TX', 50.0, 'Club Logo', 'Club Logo'],
-            [6, 'mcm_cftpl', 'NA', 20.0, 'Card Template - Front',
-                'Member-Card-Front'],
-            [7, 'mcm_cbtpl', 'NA', 20.0, 'Card Template - Back',
-                'Member-Card-Back'],
-            [8, 'mcm_sttpl', 'NA', 20.0, 'Statement Template',
-                'Statement-Template'],
-            [9, 'mcm_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [10, 'mcm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Members Control', 1, 'U', 'mcm_cono']]},
-    'memcto': {
-        'fld': [
-            [0, 'mco_code', 'UI', 3.0, 'Occupation Code', 'OC'],
-            [1, 'mco_desc', 'TX', 40.0, 'Description', 'Description'],
-            [2, 'mco_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Occupation Records', 1, 'U', 'mco_code']]},
-    'memctp': {
-        'fld': [
-            [0, 'mcp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mcp_type', 'UA', 1.0, 'Type', 'T'],
-            [2, 'mcp_code', 'UI', 2.0, 'Code', 'Cd'],
-            [3, 'mcp_date', 'D1', 10.0, 'Effective Date', 'Effect-Dte'],
-            [4, 'mcp_penalty', 'UD', 5.2, 'Penalty Rate', 'P-Rte'],
-            [5, 'mcp_prorata', 'UA', 1.0, 'Pro-Rata', 'P'],
-            [6, 'mcp_rate_01', 'UD', 8.2, 'Month 1', 'Month-01'],
-            [7, 'mcp_rate_02', 'UD', 8.2, 'Month 2', 'Month-02'],
-            [8, 'mcp_rate_03', 'UD', 8.2, 'Month 3', 'Month-03'],
-            [9, 'mcp_rate_04', 'UD', 8.2, 'Month 4', 'Month-04'],
-            [10, 'mcp_rate_05', 'UD', 8.2, 'Month 5', 'Month-05'],
-            [11, 'mcp_rate_06', 'UD', 8.2, 'Month 6', 'Month-06'],
-            [12, 'mcp_rate_07', 'UD', 8.2, 'Month 7', 'Month-07'],
-            [13, 'mcp_rate_08', 'UD', 8.2, 'Month 8', 'Month-08'],
-            [14, 'mcp_rate_09', 'UD', 8.2, 'Month 9', 'Month-09'],
-            [15, 'mcp_rate_10', 'UD', 8.2, 'Month 10', 'Month-10'],
-            [16, 'mcp_rate_11', 'UD', 8.2, 'Month 11', 'Month-11'],
-            [17, 'mcp_rate_12', 'UD', 8.2, 'Month 12', 'Month-12'],
-            [18, 'mcp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Member Prices', 1, 'U', 'mcp_cono', 'mcp_type', 'mcp_code',
-                'mcp_date']]},
-    'memkon': {
-        'fld': [
-            [0, 'mlk_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mlk_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mlk_code', 'UI', 2.0, 'Contact Code', 'CC'],
-            [3, 'mlk_detail', 'TX', 20.0, 'Contact Details', 'Contact Details'],
-            [4, 'mlk_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Membership Contacts', 1, 'U', 'mlk_cono', 'mlk_memno', 'mlk_code',
-                'mlk_detail']]},
-    'memlnk': {
-        'fld': [
-            [0, 'mll_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mll_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mll_lnkno', 'UI', 6.0, 'Linked Member', 'Member'],
-            [3, 'mll_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Membership Links', 1, 'U', 'mll_cono', 'mll_memno',
-                'mll_lnkno']]},
-    'memmst': {
-        'fld': [
-            [0, 'mlm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mlm_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mlm_title', 'NA', 6.0, 'Title', 'Title'],
-            [3, 'mlm_initial', 'UA', 5.0, 'Initials', 'Inl'],
-            [4, 'mlm_surname', 'TX', 30.0, 'Surname', 'Surname'],
-            [5, 'mlm_names', 'TX', 30.0, 'Names', 'Names'],
-            [6, 'mlm_gender', 'UA', 1.0, 'Gender Code', 'G'],
-            [7, 'mlm_nation', 'UA', 2.0, 'Nationality', 'NA'],
-            [8, 'mlm_dob', 'd1', 10.0, 'Date of Birth', 'Birth-Date'],
-            [9, 'mlm_idnum', 'NA', 13.0, 'Identity Number', 'ID-Number'],
-            [10, 'mlm_occup', 'UI', 3.0, 'Occupation', 'OC'],
-            [11, 'mlm_proposer', 'UI', 6.0, 'Proposer', 'Propos'],
-            [12, 'mlm_seconder', 'UI', 6.0, 'Seconder', 'Second'],
-            [13, 'mlm_entry', 'D1', 10.0, 'Entry Date', 'Entry-Date'],
-            [14, 'mlm_payplan', 'UA', 1.0, 'Payment Plan', 'P'],
-            [15, 'mlm_oldno', 'UI', 6.0, 'Old Membership Number', 'Old-No'],
-            [16, 'mlm_state', 'UA', 1.0, 'Current Status', 'S'],
-            [17, 'mlm_sdate', 'D1', 10.0, 'Status Date', 'Status-Dte'],
-            [18, 'mlm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Membership Masterfile', 1, 'U', 'mlm_cono', 'mlm_memno']]},
-    'memsta': {
-        'fld': [
-            [0, 'mls_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mls_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mls_status', 'UA', 1.0, 'Status Code', 'S'],
-            [3, 'mls_date', 'D1', 10.0, 'Status Date', 'Status-Dte'],
-            [4, 'mls_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [5, 'mls_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [6, 'mls_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [7, 'mls_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Membership Status', 1, 'U', 'mls_seq'],
-            ['', 2, 'N', 'mls_cono', 'mls_memno', 'mls_status']]},
-    'memtrn': {
-        'fld': [
-            [0, 'mlt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mlt_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mlt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'mlt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'mlt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [5, 'mlt_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [6, 'mlt_tramt', 'SD', 13.2, 'Transaction Amount', 'Trn-Amount'],
-            [7, 'mlt_taxamt', 'SD', 13.2, 'Tax Amount', 'Tax-Amount'],
-            [8, 'mlt_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [9, 'mlt_ctyp', 'UA', 1.0, 'Category Type', 'T'],
-            [10, 'mlt_ccod', 'UI', 2.0, 'Category Code', 'Cd'],
-            [11, 'mlt_desc', 'TX', 30.0, 'Description', 'Description'],
-            [12, 'mlt_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [13, 'mlt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [14, 'mlt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [15, 'mlt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [16, 'mlt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [17, 'mlt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Members Transactions', 1, 'U', 'mlt_seq'],
-            ['', 2, 'U', 'mlt_cono', 'mlt_memno', 'mlt_type', 'mlt_refno'],
-            ['', 3, 'N', 'mlt_cono', 'mlt_type', 'mlt_batch', 'mlt_batind']]},
-    'memtrs': {
-        'fld': [
-            [0, 'mst_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'mst_memno', 'UI', 6.0, 'Membership Number', 'Mem-No'],
-            [2, 'mst_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'mst_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'mst_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [5, 'mst_tramt', 'SD', 11.2, 'Transaction Amount', 'Trn-Amount'],
-            [6, 'mst_ctyp', 'UA', 1.0, 'Category Type', 'T'],
-            [7, 'mst_ccod', 'UI', 2.0, 'Category Code', 'Cd'],
-            [8, 'mst_desc', 'TX', 30.0, 'Description', 'Description'],
-            [9, 'mst_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [10, 'mst_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Members Sportsman Transactions', 1, 'U', 'mst_seq'],
-            ['', 2, 'U', 'mst_cono', 'mst_memno', 'mst_type', 'mst_refno'],
-            ['', 3, 'N', 'mst_cono', 'mst_type']]},
-    'poscnt': {
-        'fld': [
-            [0, 'psc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'psc_host', 'TX', 15.0, 'Terminal Name', 'Terminal-Name'],
-            [2, 'psc_user', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [3, 'psc_date', 'D1', 10.0, 'Captured Date', 'Captd-Date'],
-            [4, 'psc_float', 'SD', 13.2, 'Float', 'Float'],
-            [5, 'psc_vou', 'SD', 13.2, 'Vouchers', 'Vouchers'],
-            [6, 'psc_ccc', 'SD', 13.2, 'Credit Cards', 'C/Cards'],
-            [7, 'psc_r200', 'UI', 5.0, 'Quantity R200', 'Q-R200'],
-            [8, 'psc_r100', 'UI', 5.0, 'Quantity R100', 'Q-R100'],
-            [9, 'psc_r50', 'UI', 5.0, 'Quantity R50', 'Q-R050'],
-            [10, 'psc_r20', 'UI', 5.0, 'Quantity R20', 'Q-R020'],
-            [11, 'psc_r10', 'UI', 5.0, 'Quantity R10', 'Q-R010'],
-            [12, 'psc_r5', 'UI', 5.0, 'Quantity R5', 'Q-R005'],
-            [13, 'psc_r2', 'UI', 5.0, 'Quantity R2', 'Q-R002'],
-            [14, 'psc_r1', 'UI', 5.0, 'Quantity R1', 'Q-R001'],
-            [15, 'psc_c50', 'UI', 5.0, 'Quantity C50', 'Q-C050'],
-            [16, 'psc_c20', 'UI', 5.0, 'Quantity C20', 'Q-C020'],
-            [17, 'psc_c10', 'UI', 5.0, 'Quantity C10', 'Q-C010'],
-            [18, 'psc_c5', 'UI', 5.0, 'Quantity C5', 'Q-C005'],
-            [19, 'psc_c2', 'UI', 5.0, 'Quantity C2', 'Q-C002'],
-            [20, 'psc_c1', 'UI', 5.0, 'Quantity C1', 'Q-C001'],
-            [21, 'psc_rec', 'd1', 10.0, 'Reconciliation Date', 'Recon-Date'],
-            [22, 'psc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Cash Count', 1, 'U', 'psc_cono', 'psc_host', 'psc_user',
-                'psc_date']]},
-    'posdev': {
-        'fld': [
-            [0, 'psd_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'psd_host', 'TX', 15.0, 'Terminal Name', 'Terminal-Name'],
-            [2, 'psd_lcod', 'UA', 1.0, 'Location Code', 'L'],
-            [3, 'psd_ldes', 'TX', 30.0, 'Description', 'Description'],
-            [4, 'psd_fscn', 'UA', 1.0, 'Full Screen', 'F'],
-            [5, 'psd_pdoc', 'UA', 1.0, 'Print Document', 'P'],
-            [6, 'psd_dtyp', 'UA', 1.0, 'Document Type', 'T'],
-            [7, 'psd_prnt', 'TX', 30.0, 'Printer Name', 'Printer-Name'],
-            [8, 'psd_pwid', 'UI', 1.0, 'Paper Width (cm)', 'Width'],
-            [9, 'psd_pc1', 'Na', 3.0, 'Cut Paper Code 1', 'CP1'],
-            [10, 'psd_pc2', 'Na', 3.0, 'Cut Paper Code 2', 'CP2'],
-            [11, 'psd_pc3', 'Na', 3.0, 'Cut Paper Code 3', 'CP3'],
-            [12, 'psd_pc4', 'Na', 3.0, 'Cut Paper Code 4', 'CP4'],
-            [13, 'psd_pc5', 'Na', 3.0, 'Cut Paper Code 5', 'CP5'],
-            [14, 'psd_od1', 'Na', 3.0, 'Open Draw Code 1', 'OD1'],
-            [15, 'psd_od2', 'Na', 3.0, 'Open Draw Code 2', 'OD2'],
-            [16, 'psd_od3', 'Na', 3.0, 'Open Draw Code 3', 'OD3'],
-            [17, 'psd_od4', 'Na', 3.0, 'Open Draw Code 4', 'OD4'],
-            [18, 'psd_od5', 'Na', 3.0, 'Open Draw Code 5', 'OD5'],
-            [19, 'psd_tplnam', 'NA', 20.0, 'Template Name', 'Template-Name'],
-            [20, 'psd_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Point of Sale Terminals', 1, 'U', 'psd_cono', 'psd_host']]},
-    'posmst': {
-        'fld': [
-            [0, 'psm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'psm_host', 'TX', 15.0, 'Terminal Name', 'Terminal-Name'],
-            [2, 'psm_docno', 'Na', 9.0, 'Document Number', 'Doc-Num'],
-            [3, 'psm_date', 'D1', 10.0, 'Document Date', 'Doc-Num'],
-            [4, 'psm_chain', 'UI', 3.0, 'Chain Store', 'Chn'],
-            [5, 'psm_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [6, 'psm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Point of Sale Master', 1, 'U', 'psm_cono', 'psm_host',
-                'psm_docno']]},
-    'posrcp': {
-        'fld': [
-            [0, 'prp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'prp_host', 'TX', 15.0, 'Terminal Name', 'Terminal-Name'],
-            [2, 'prp_docno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [3, 'prp_rowno', 'UI', 3.0, 'Document Row', 'Row'],
-            [4, 'prp_rgroup', 'UA', 3.0, 'Product Group', 'Grp'],
-            [5, 'prp_rcode', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [6, 'prp_rqty', 'SD', 11.2, 'Quantity', 'Quantity'],
-            [7, 'prp_cost', 'SD', 11.2, 'Cost Price', 'Cost-Price'],
-            [8, 'prp_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [9, 'prp_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Sales Recipe Transactions', 1, 'U', 'prp_seq'],
-            ['', 2, 'N', 'prp_cono', 'prp_host', 'prp_docno', 'prp_rowno']]},
-    'postrn': {
-        'fld': [
-            [0, 'pst_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'pst_host', 'TX', 15.0, 'Terminal Name', 'Terminal-Name'],
-            [2, 'pst_dtype', 'UA', 1.0, 'Document Type', 'D'],
-            [3, 'pst_docno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'pst_rowno', 'UI', 3.0, 'Document Row', 'Row'],
-            [5, 'pst_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [6, 'pst_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [7, 'pst_loc', 'UA', 1.0, 'Location', 'L'],
-            [8, 'pst_desc', 'NA', 30.0, 'Description', 'Description'],
-            [9, 'pst_qty', 'SD', 11.2, 'Quantity', 'T'],
-            [10, 'pst_prc', 'SD', 11.2, 'Price', 'Price'],
-            [11, 'pst_excl', 'SD', 11.2, 'Exclusive Amount', 'T'],
-            [12, 'pst_incl', 'SD', 11.2, 'Inclusive Amount', 'T'],
-            [13, 'pst_disp', 'UD', 6.2, 'Discount', 'Disc-%'],
-            [14, 'pst_vcod', 'UA', 1.0, 'VAT Code', 'V'],
-            [15, 'pst_vrte', 'UD', 6.2, 'VAT rate', ' VAT-%'],
-            [16, 'pst_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [17, 'pst_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [18, 'pst_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [19, 'pst_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Point of Sale Transaction', 1, 'U', 'pst_seq'],
-            ['', 2, 'U', 'pst_cono', 'pst_host', 'pst_dtype', 'pst_docno',
-                'pst_rowno']]},
-    'rcacon': {
-        'fld': [
-            [0, 'rcc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rcc_owner', 'NA', 7.0, 'Owner Code', 'Own-Cod'],
-            [2, 'rcc_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [3, 'rcc_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [4, 'rcc_cnum', 'UI', 3.0, 'Contract Number', 'Seq'],
-            [5, 'rcc_payind', 'UA', 1.0, 'Payment Frequency', 'F'],
-            [6, 'rcc_start', 'D1', 10.0, 'Commencement Date', 'Start-Date'],
-            [7, 'rcc_period', 'UI', 3.0, 'Number of Periods', 'Per'],
-            [8, 'rcc_rtlamt', 'UD', 12.2, 'Rental Amount', 'Rent-Amount'],
-            [9, 'rcc_deposit', 'UD', 12.2, 'Deposit Amount', 'Depo-Amount'],
-            [10, 'rcc_wamt', 'UD', 12.2, 'Water Amount', 'Watr-Amount'],
-            [11, 'rcc_wtyp', 'UI', 12.2, 'Water Type', 'W'],
-            [12, 'rcc_eamt', 'UD', 12.2, 'Electricity Amount', 'Elec-Amount'],
-            [13, 'rcc_etyp', 'UI', 12.2, 'Electricity Type', 'E'],
-            [14, 'rcc_status', 'UA', 1.0, 'Status Flag', 'S'],
-            [15, 'rcc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Contract', 1, 'U', 'rcc_cono', 'rcc_owner', 'rcc_code',
-                'rcc_acno', 'rcc_cnum']]},
-    'rcactl': {
-        'fld': [
-            [0, 'cte_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cte_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'cte_glbnk', 'UI', 7.0, 'G/L Bank Account', 'Bank-Ac'],
-            [3, 'cte_lme', 'd1', 10.0, 'Last Month End', 'LME-Date'],
-            [4, 'cte_tplown', 'NA', 20.0, 'Owner Template', 'Owner-Template'],
-            [5, 'cte_tpltnt', 'NA', 20.0, 'Tenant Template', 'Tenant-Template'],
-            [6, 'cte_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [7, 'cte_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Control', 1, 'U', 'cte_cono']]},
-    'rcaint': {
-        'fld': [
-            [0, 'rci_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rci_date', 'D1', 10.0, 'Date of Change', 'Date-Chg'],
-            [2, 'rci_prime', 'UD', 5.2, 'Prime Rate', 'Prime'],
-            [3, 'rci_bankr', 'UD', 5.2, 'Bank Rate', 'BankR'],
-            [4, 'rci_admin', 'UD', 5.2, 'Admin Rate', 'Admin'],
-            [5, 'rci_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Interest', 1, 'U', 'rci_cono', 'rci_date']]},
-    'rcaowm': {
-        'fld': [
-            [0, 'rom_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rom_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [2, 'rom_name', 'NA', 30.0, 'Name', 'Name'],
-            [3, 'rom_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [4, 'rom_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [5, 'rom_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [6, 'rom_pcod', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [7, 'rom_home', 'NA', 20.0, 'Home Number', 'Home Number'],
-            [8, 'rom_office', 'NA', 20.0, 'Office Number', 'Office Number'],
-            [9, 'rom_mobile', 'NA', 20.0, 'Mobile Number', 'Mobile Number'],
-            [10, 'rom_fax', 'NA', 20.0, 'Fax Number', 'Fax Number'],
-            [11, 'rom_email', 'TX', 50.0, 'E-mail Address', 'E-mail Address'],
-            [12, 'rom_vatno', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [13, 'rom_vatdf', 'UA', 1.0, 'VAT Default', 'V'],
-            [14, 'rom_bname', 'NA', 20.0, 'Bank Name', 'Bank-Name'],
-            [15, 'rom_bibt', 'UI', 8.0, 'Bank Branch', 'Bank-IBT'],
-            [16, 'rom_bacno', 'NA', 16.0, 'Bank Account', 'Bank-Account-Num'],
-            [17, 'rom_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Owner Masterfile', 1, 'U', 'rom_cono', 'rom_acno']]},
-    'rcaowt': {
-        'fld': [
-            [0, 'rot_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rot_acno', 'NA', 7.0, 'Account Number', 'Own-Num'],
-            [2, 'rot_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [3, 'rot_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [4, 'rot_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [5, 'rot_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [6, 'rot_tramt', 'SD', 11.2, 'Transaction Amount', 'Trn-Amount'],
-            [7, 'rot_taxamt', 'SD', 11.2, 'Tax Amount', 'Tax-Amount'],
-            [8, 'rot_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [9, 'rot_desc', 'NA', 30.0, 'Description', 'Description'],
-            [10, 'rot_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [11, 'rot_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [12, 'rot_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [13, 'rot_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [14, 'rot_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [15, 'rot_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Rental Owner Transaction', 1, 'U', 'rot_seq'],
-            ['', 2, 'N', 'rot_cono', 'rot_acno', 'rot_type', 'rot_refno']]},
-    'rcaprm': {
-        'fld': [
-            [0, 'rcp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rcp_owner', 'NA', 7.0, 'Owners Code', 'Own-Cod'],
-            [2, 'rcp_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [3, 'rcp_desc', 'NA', 30.0, 'Description', 'Description'],
-            [4, 'rcp_addr1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [5, 'rcp_addr2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [6, 'rcp_addr3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [7, 'rcp_pcode', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [8, 'rcp_crate', 'UD', 6.2, 'Commission Rate', 'C-Rate'],
-            [9, 'rcp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Premises', 1, 'U', 'rcp_cono', 'rcp_owner', 'rcp_code']]},
-    'rcatnm': {
-        'fld': [
-            [0, 'rtn_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rtn_owner', 'NA', 7.0, 'Owner Code', 'Own-Cod'],
-            [2, 'rtn_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [3, 'rtn_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [4, 'rtn_name', 'NA', 30.0, 'Name of Tenant', 'Name-of-Tenant'],
-            [5, 'rtn_addr1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [6, 'rtn_addr2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [7, 'rtn_addr3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [8, 'rtn_pcode', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [9, 'rtn_telno', 'NA', 20.0, 'Telephone Number',
-                'Telephone Number'],
-            [10, 'rtn_email', 'TX', 50.0, 'E-mail Address', 'E-mail Address'],
-            [11, 'rtn_vatnum', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [12, 'rtn_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Tenant Masterfile', 1, 'U', 'rtn_cono', 'rtn_owner',
-                'rtn_code', 'rtn_acno']]},
-    'rcatnt': {
-        'fld': [
-            [0, 'rtu_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rtu_owner', 'NA', 7.0, 'Owner Code', 'Own-Cod'],
-            [2, 'rtu_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [3, 'rtu_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [4, 'rtu_cnum', 'UI', 3.0, 'Contract Number', 'Seq'],
-            [5, 'rtu_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [6, 'rtu_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [7, 'rtu_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [8, 'rtu_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [9, 'rtu_mtyp', 'UI', 1.0, 'Movement Type', 'M'],
-            [10, 'rtu_tramt', 'SD', 11.2, 'Transaction Amount', 'Trn-Amount'],
-            [11, 'rtu_taxamt', 'SD', 11.2, 'Tax Amount', 'Tax-Amount'],
-            [12, 'rtu_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [13, 'rtu_desc', 'NA', 30.0, 'Description', 'Description'],
-            [14, 'rtu_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [15, 'rtu_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [16, 'rtu_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [17, 'rtu_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [18, 'rtu_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [19, 'rtu_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Rental Tenant Transactions', 1, 'U', 'rtu_seq'],
-            ['', 2, 'N', 'rtu_cono', 'rtu_owner', 'rtu_code', 'rtu_acno',
-                'rtu_cnum', 'rtu_type', 'rtu_refno']]},
-    'rptcol': {
-        'fld': [
-            [0, 'rpc_rnam', 'NA', 10.0, 'Report Name', 'Report-Nam'],
-            [1, 'rpc_seq', 'UI', 2.0, 'Sequence', 'Sq'],
-            [2, 'rpc_typ', 'NA', 1.0, 'Column Type (C/E)', 'T'],
-            [3, 'rpc_label', 'NA', 20.0, 'Column Label', 'Column-Label'],
-            [4, 'rpc_detail', 'NA', 100.0, 'Column or Expression',
-                'Column-or-Expression'],
-            [5, 'rpc_type', 'NA', 2.0, 'Display Type', 'Tp'],
-            [6, 'rpc_size', 'UD', 6.1, 'Display Size', 'D-Size'],
-            [7, 'rpc_head', 'NA', 50.0, 'Display Heading', 'Display-Heading'],
-            [8, 'rpc_group', 'NA', 1.0, 'Group (y/n)', 'G'],
-            [9, 'rpc_stot', 'NA', 1.0, 'Sub Total (y/n)', 'S'],
-            [10, 'rpc_stot_na', 'NA', 30.0, 'Sub-Total Narration', 'Narration'],
-            [11, 'rpc_stot_pg', 'NA', 1.0, 'New Page After Sub-Total (y/n)',
-                'P'],
-            [12, 'rpc_gtot', 'NA', 1.0, 'Grand Total (y/n)', 'G'],
-            [13, 'rpc_disp', 'NA', 1.0, 'Display Column (y/n)', 'D'],
-            [14, 'rpc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Colums', 1, 'U', 'rpc_rnam', 'rpc_seq']]},
-    'rptexc': {
-        'fld': [
-            [0, 'rpx_rnam', 'NA', 10.0, 'Report Name', 'Name'],
-            [1, 'rpx_seq', 'UI', 2.0, 'Sequence', 'Sq'],
-            [2, 'rpx_exc', 'TX', 100.0, 'Exception', 'Exception'],
-            [3, 'rpx_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Exception File', 1, 'U', 'rpx_rnam', 'rpx_seq']]},
-    'rptjon': {
-        'fld': [
-            [0, 'rpj_rnam', 'NA', 10.0, 'Report Name', 'Name'],
-            [1, 'rpj_seq', 'UI', 2.0, 'Sequence', 'Sq'],
-            [2, 'rpj_typ', 'UA', 1.0, 'Join Type', 'T'],
-            [3, 'rpj_tab', 'NA', 6.0, 'Join Table', 'Table'],
-            [4, 'rpj_col', 'NA', 100.0, 'Join Columns', 'Columns'],
-            [5, 'rpj_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Exception File', 1, 'U', 'rpj_rnam', 'rpj_seq']]},
-    'rptmst': {
-        'fld': [
-            [0, 'rpm_rnam', 'NA', 10.0, 'Report Name', 'Name'],
-            [1, 'rpm_desc', 'NA', 30.0, 'Report Description', 'Description'],
-            [2, 'rpm_head_1', 'NA', 50.0, 'Report Heading 1', 'Heading 1'],
-            [3, 'rpm_head_2', 'NA', 50.0, 'Report Heading 2', 'Heading 2'],
-            [4, 'rpm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Masterfile', 1, 'U', 'rpm_rnam']]},
-    'rptord': {
-        'fld': [
-            [0, 'rpo_rnam', 'NA', 10.0, 'Report Name', 'Name'],
-            [1, 'rpo_seq', 'UI', 2.0, 'Sequence', 'Sq'],
-            [2, 'rpo_column', 'NA', 20.0, 'Column Name', 'Name'],
-            [3, 'rpo_type', 'NA', 1.0, 'Ascending or Descending', 'O'],
-            [4, 'rpo_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Order Records', 1, 'U', 'rpo_rnam', 'rpo_seq']]},
-    'rptstm': {
-        'fld': [
-            [0, 'rsm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rsm_rgrp', 'NA', 30.0, 'Report Group-Name',
-                'Report-Group-Name'],
-            [2, 'rsm_emad', 'TX', 50.0, 'Email Address', 'Email-Addres'],
-            [3, 'rsm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Stream Masterfile', 1, 'U', 'rsm_cono', 'rsm_rgrp']]},
-    'rptstr': {
-        'fld': [
-            [0, 'rsr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rsr_rgrp', 'NA', 30.0, 'Report Group Name',
-                'Report-Group-Name'],
-            [2, 'rsr_rcod', 'NA', 6.0, 'Report Code', 'Report'],
-            [3, 'rsr_work', 'TX', 50.0, 'Report Work', 'Report-Work'],
-            [4, 'rsr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Stream Reports', 1, 'U', 'rsr_cono', 'rsr_rgrp',
-                'rsr_rcod']]},
-    'rpttab': {
-        'fld': [
-            [0, 'rpt_rnam', 'NA', 10.0, 'Report Name', 'Name'],
-            [1, 'rpt_tabl', 'NA', 20.0, 'Report Table', 'Table'],
-            [2, 'rpt_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Tables', 1, 'U', 'rpt_rnam', 'rpt_tabl']]},
-    'rptvar': {
-        'fld': [
-            [0, 'rpv_rnam', 'NA', 10.0, 'Report Name', 'Rep-Name'],
-            [1, 'rpv_seq', 'UI', 2.0, 'Sequence', 'Sq'],
-            [2, 'rpv_var', 'NA', 30.0, 'Variable', 'Description'],
-            [3, 'rpv_type', 'NA', 2.0, 'Variable Type', 'Tp'],
-            [4, 'rpv_size', 'UD', 6.1, 'Variable Size', 'F-Size'],
-            [5, 'rpv_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Report Variable Records', 1, 'U', 'rpv_rnam', 'rpv_seq']]},
-    'rtlcon': {
-        'fld': [
-            [0, 'rtc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rtc_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [2, 'rtc_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [3, 'rtc_cnum', 'UI', 3.0, 'Contract Number', 'Seq'],
-            [4, 'rtc_payind', 'UA', 1.0, 'Payment Frequency', 'F'],
-            [5, 'rtc_start', 'D1', 10.0, 'Commencement Date', 'Start-Date'],
-            [6, 'rtc_period', 'UI', 3.0, 'Number of Periods', 'Per'],
-            [7, 'rtc_rtlamt', 'UD', 12.2, 'Rental Amount', 'Rent-Amount'],
-            [8, 'rtc_status', 'UA', 1.0, 'Status Flag', 'S'],
-            [9, 'rtc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Contract', 1, 'U', 'rtc_cono', 'rtc_code', 'rtc_acno',
-                'rtc_cnum']]},
-    'rtlctl': {
-        'fld': [
-            [0, 'ctr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctr_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'ctr_lme', 'd1', 10.0, 'Last Month End', 'LME-Date'],
-            [3, 'ctr_tplnam', 'NA', 20.0, 'Statement Template',
-                'Template-Name'],
-            [4, 'ctr_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [5, 'ctr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Control', 1, 'U', 'ctr_cono']]},
-    'rtlmst': {
-        'fld': [
-            [0, 'rtm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rtm_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [2, 'rtm_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [3, 'rtm_name', 'NA', 30.0, 'Name of Tenant', 'Name-of-Tenant'],
-            [4, 'rtm_addr1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [5, 'rtm_addr2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [6, 'rtm_addr3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [7, 'rtm_pcode', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [8, 'rtm_telno', 'NA', 20.0, 'Telephone Number',
-                'Telephone Number'],
-            [9, 'rtm_email', 'NA', 50.0, 'E-mail Address', 'E-mail Address'],
-            [10, 'rtm_vatind', 'UA', 1.0, 'VAT Indicator', 'V'],
-            [11, 'rtm_vatnum', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [12, 'rtm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental Masterfile', 1, 'U', 'rtm_cono', 'rtm_code', 'rtm_acno']]},
-    'rtlprm': {
-        'fld': [
-            [0, 'rtp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rtp_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [2, 'rtp_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'rtp_addr1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [4, 'rtp_addr2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [5, 'rtp_addr3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [6, 'rtp_pcode', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [7, 'rtp_rtlacc', 'UI', 7.0, 'G/L Rental Account', 'Rtl-Acc'],
-            [8, 'rtp_incacc', 'UI', 7.0, 'G/L Income Account', 'Inc-Acc'],
-            [9, 'rtp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Rental System Premises', 1, 'U', 'rtp_cono', 'rtp_code']]},
-    'rtltrn': {
-        'fld': [
-            [0, 'rtt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'rtt_code', 'NA', 7.0, 'Premises Code', 'Pr-Code'],
-            [2, 'rtt_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [3, 'rtt_cnum', 'UI', 3.0, 'Contract Number', 'Seq'],
-            [4, 'rtt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [5, 'rtt_refno', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [6, 'rtt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [7, 'rtt_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [8, 'rtt_tramt', 'SD', 11.2, 'Transaction Amount', 'Trn-Amount'],
-            [9, 'rtt_taxamt', 'SD', 11.2, 'Tax Amount', 'Tax-Amount'],
-            [10, 'rtt_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [11, 'rtt_desc', 'NA', 30.0, 'Description', 'Description'],
-            [12, 'rtt_taxind', 'UA', 1.0, 'Tax Indicator', 'V'],
-            [13, 'rtt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [14, 'rtt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [15, 'rtt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [16, 'rtt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [17, 'rtt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Rental Transactions', 1, 'U', 'rtt_seq'],
-            ['', 2, 'N', 'rtt_cono', 'rtt_type', 'rtt_batch', 'rtt_batind'],
-            ['', 3, 'N', 'rtt_cono', 'rtt_code', 'rtt_acno', 'rtt_cnum',
-                'rtt_type', 'rtt_refno']]},
-    'scpclb': {
-        'fld': [
-            [0, 'scc_club', 'UI', 3.0, 'Club Code', 'Cod'],
-            [1, 'scc_name', 'NA', 30.0, 'Club Name', 'Name'],
-            [2, 'scc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowling Clubs', 1, 'U', 'scc_club']]},
-    'scpcmp': {
-        'fld': [
-            [0, 'scp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'scp_ccod', 'UI', 3.0, 'Competition Code', 'CCD'],
-            [2, 'scp_name', 'TX', 50.0, 'Competition Name', 'Name'],
-            [3, 'scp_tsex', 'UA', 1.0, 'Team Gender', 'G'],
-            [4, 'scp_tsiz', 'UI', 1.0, 'Team Size', 'S'],
-            [5, 'scp_fmat', 'UA', 1.0, 'Format', 'F'],
-            [6, 'scp_logo', 'TX', 50.0, "Sponsor's Logo", "Sponsor's-Logo"],
-            [7, 'scp_nsec', 'UI', 2.0, 'Number of Sections', 'NS'],
-            [8, 'scp_nent', 'UI', 2.0, 'Entries per Section', 'ES'],
-            [9, 'scp_subs', 'UA', 1.0, 'Sub-Sections', 'S'],
-            [10, 'scp_qual', 'UA', 1.0, 'Section Qualifiers', 'Q'],
-            [11, 'scp_clup', 'UA', 1.0, 'Closed-Up', 'C'],
-            [12, 'scp_mrnds', 'UI', 2.0, 'Number of M Rounds', 'MR'],
-            [13, 'scp_prnds', 'UI', 2.0, 'Number of P Rounds', 'PR'],
-            [14, 'scp_state', 'UI', 1.0, 'Status', 'X'],
-            [15, 'scp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Bowls Competition Masterfile', 1, 'U', 'scp_cono', 'scp_ccod']]},
-    'scpent': {
-        'fld': [
-            [0, 'sce_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'sce_ccod', 'UI', 3.0, 'Competition Code', 'CCD'],
-            [2, 'sce_scod', 'UI', 6.0, "Skip's Code", 'S-Code'],
-            [3, 'sce_pcod', 'UI', 6.0, "Lead's Code", 'L-Code'],
-            [4, 'sce_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Entry Forms', 1, 'U', 'sce_cono', 'sce_ccod', 'sce_scod']]},
-    'scpgme': {
-        'fld': [
-            [0, 'scg_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'scg_ccod', 'UI', 3.0, 'Competition Code', 'CCD'],
-            [2, 'scg_ctyp', 'UA', 1.0, 'Competition Type', 'T'],
-            [3, 'scg_snum', 'UI', 2.0, 'Section Number', 'SN'],
-            [4, 'scg_subs', 'UA', 1.0, 'Sub-Section', 'S'],
-            [5, 'scg_rnum', 'UI', 2.0, 'Round Number', 'RN'],
-            [6, 'scg_ktyp', 'UA', 1.0, 'Key Type', 'K'],
-            [7, 'scg_scod', 'UI', 6.0, 'Skip Code', 'S-Code'],
-            [8, 'scg_ocod', 'UI', 6.0, 'Opposition Code', 'O-Code'],
-            [9, 'scg_rink', 'UA', 2.0, 'Rink Code', 'RK'],
-            [10, 'scg_sfor', 'UI', 2.0, 'Shots For', 'SF'],
-            [11, 'scg_sagt', 'UI', 2.0, 'Shots Against', 'SA'],
-            [12, 'scg_pnts', 'UD', 3.1, 'Points', 'Pnts'],
-            [13, 'scg_group', 'UI', 1.0, 'Group', 'G'],
-            [14, 'scg_seed', 'UI', 2.0, 'Seed Number', 'SN'],
-            [15, 'scg_pair', 'UI', 2.0, 'Pair Number', 'PN'],
-            [16, 'scg_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Competition Game', 1, 'U', 'scg_cono', 'scg_ccod', 'scg_ctyp',
-                'scg_snum', 'scg_subs', 'scg_rnum', 'scg_ktyp', 'scg_scod']]},
-    'scpmem': {
-        'fld': [
-            [0, 'scm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'scm_scod', 'UI', 6.0, "Member's Code", 'M-Code'],
-            [2, 'scm_surname', 'UA', 30.0, 'Surname', 'Surname'],
-            [3, 'scm_names', 'UA', 30.0, 'Names', 'Names'],
-            [4, 'scm_gender', 'UA', 1.0, 'Gender Code', 'G'],
-            [5, 'scm_club', 'UI', 3.0, 'Club Code', 'CCd'],
-            [6, 'scm_email', 'TX', 20.0, 'Email Address', 'Email-Address'],
-            [7, 'scm_phone', 'TX', 20.0, 'Phone Number', 'Phone-Number'],
-            [8, 'scm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Competition Skips', 1, 'U', 'scm_cono', 'scm_scod']]},
-    'scprnd': {
-        'fld': [
-            [0, 'scr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'scr_ccod', 'UI', 3.0, 'Competiton Code', 'CCD'],
-            [2, 'scr_rnum', 'UI', 2.0, 'Round Number', 'RN'],
-            [3, 'scr_date', 'D1', 10.0, 'Round Date', 'Round-Date'],
-            [4, 'scr_time', 'UI', 4.0, 'Starting Time', 'STime'],
-            [5, 'scr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Competition Round Records', 1, 'U', 'scr_cono', 'scr_ccod',
-                'scr_rnum']]},
-    'scpsec': {
-        'fld': [
-            [0, 'scs_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'scs_ccod', 'UI', 3.0, 'Competiton Code', 'CCD'],
-            [2, 'scs_snum', 'UI', 2.0, 'Section Number', 'SN'],
-            [3, 'scs_rnum', 'UI', 2.0, 'Round Number', 'RN'],
-            [4, 'scs_club', 'UI', 3.0, 'Club Code', 'Cod'],
-            [5, 'scs_name', 'NA', 30.0, 'Club Name', 'Club-Name'],
-            [6, 'scs_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Competiton Section Records', 1, 'U', 'scs_cono', 'scs_ccod',
-                'scs_snum', 'scs_rnum']]},
-    'slsctl': {
-        'fld': [
-            [0, 'ctv_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctv_delnos', 'UA', 1.0, 'Delivery Notes', 'D'],
-            [2, 'ctv_delval', 'UA', 1.0, 'Print Values', 'V'],
-            [3, 'ctv_tplnam', 'NA', 20.0, 'Document Template', 'Template-Name'],
-            [4, 'ctv_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [5, 'ctv_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Sales Invoicing Control', 1, 'U', 'ctv_cono']]},
-    'slsiv1': {
-        'fld': [
-            [0, 'si1_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'si1_rtn', 'UA', 1.0, 'Document Type', 'T'],
-            [2, 'si1_docno', 'UI', 9.0, 'Document Number', 'Doc-Num'],
-            [3, 'si1_mode', 'UA', 1.0, 'Payment Method', 'M'],
-            [4, 'si1_level', 'UI', 1.0, 'Price Level', 'L'],
-            [5, 'si1_chain', 'UI', 3.0, 'Chain Number', 'Chn'],
-            [6, 'si1_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [7, 'si1_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [8, 'si1_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [9, 'si1_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [10, 'si1_add4', 'NA', 30.0, 'Address Line 4', 'Address Line 4'],
-            [11, 'si1_date', 'D1', 10.0, 'Date', 'Doc-Date'],
-            [12, 'si1_our_ord', 'Na', 9.0, 'Our Order Number', 'Ord-Num'],
-            [13, 'si1_cus_ord', 'Na', 14.0, 'Customer Order Number',
-                'Cust-Ord-Num'],
-            [14, 'si1_jobno', 'Na', 7.0, 'Job Number', 'Job-Num'],
-            [15, 'si1_contact', 'NA', 30.0, 'Contact', 'Contact'],
-            [16, 'si1_vatno', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [17, 'si1_rep', 'Na', 3.0, 'Rep Number', 'Rep'],
-            [18, 'si1_inex', 'UA', 1.0, 'In/Exclusive Prices', 'V'],
-            [19, 'si1_mess', 'TX', 150.0, 'Message', 'Message'],
-            [20, 'si1_invno', 'Na', 9.0, 'Invoice Number', 'Inv-Num'],
-            [21, 'si1_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [22, 'si1_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [23, 'si1_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Sales Invoice Masterfile', 1, 'U', 'si1_cono', 'si1_rtn',
-                'si1_docno']]},
-    'slsiv2': {
-        'fld': [
-            [0, 'si2_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'si2_rtn', 'NA', 1.0, 'Document Type', 'T'],
-            [2, 'si2_docno', 'UI', 9.0, 'Document Number', 'Doc-Num'],
-            [3, 'si2_seq', 'UI', 3.0, 'Sequence', 'Seq'],
-            [4, 'si2_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [5, 'si2_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [6, 'si2_loc', 'UA', 1.0, 'Location', 'L'],
-            [7, 'si2_uoi', 'NA', 10.0, 'Unit Of Issue', 'U.O.I.'],
-            [8, 'si2_desc', 'TX', 30.0, 'Description', 'Description'],
-            [9, 'si2_disc_per', 'UD', 6.2, 'Discount Percentage', 'Disc-%'],
-            [10, 'si2_qty', 'SD', 11.2, 'Quantity', 'Quantity'],
-            [11, 'si2_price', 'UD', 10.2, 'Unit Price', 'Unit-Price'],
-            [12, 'si2_vat_code', 'UA', 1.0, 'VAT Code', 'V'],
-            [13, 'si2_vat_rate', 'UD', 6.2, 'VAT Rate', 'Rate'],
-            [14, 'si2_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [15, 'si2_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [16, 'si2_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Sales Invoice Transactions', 1, 'U', 'si2_cono', 'si2_rtn',
-                'si2_docno', 'si2_seq']]},
-    'slsiv3': {
-        'fld': [
-            [0, 'si3_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'si3_rtn', 'NA', 1.0, 'Document Type', 'T'],
-            [2, 'si3_docno', 'UI', 9.0, 'Document Number', 'Doc-Num'],
-            [3, 'si3_seq', 'UI', 3.0, 'Invoice Line', 'Seq'],
-            [4, 'si3_rgroup', 'UA', 3.0, 'Product Group', 'Grp'],
-            [5, 'si3_rcode', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [6, 'si3_rqty', 'UD', 11.2, 'Quantity', 'Quantity'],
-            [7, 'si3_cost', 'SD', 11.2, 'Cost Price', 'Cost-Price'],
-            [8, 'si3_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [9, 'si3_seqnum', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Sales Recipe Transactions', 1, 'U', 'si3_seqnum'],
-            ['', 2, 'N', 'si3_cono', 'si3_rtn', 'si3_docno', 'si3_seq']]},
-    'strcmu': {
-        'fld': [
-            [0, 'smc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'smc_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'smc_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'smc_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'smc_level', 'UI', 1.0, 'Price Level', 'P'],
-            [5, 'smc_markup', 'UD', 6.2, 'Percentage Markup', '%-Tage'],
-            [6, 'smc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Code Price Markups', 1, 'U', 'smc_cono', 'smc_group',
-                'smc_code', 'smc_loc', 'smc_level']]},
+    "assctl": {
+        "fld": [
+            [0, "cta_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cta_glint", "UA", 1.0, "Integration", "I"],
+            [2, "cta_rordp", "UA", 1.0, "Receiver Dep", "R"],
+            [3, "cta_lastp", "D2", 7.0, "Last Dep Period", "Last-DP"],
+            [4, "cta_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [5, "cta_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Assets Control", 1, "U", "cta_cono"]]},
+    "assdep": {
+        "fld": [
+            [0, "asd_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "asd_code", "Na", 3.0, "Code", "Cod"],
+            [2, "asd_desc", "TX", 40.0, "Description", "Description"],
+            [3, "asd_typec", "UA", 1.0, "Type (D/S)", "T"],
+            [4, "asd_typer", "UA", 1.0, "Type (D/S)", "T"],
+            [5, "asd_rate1c", "UD", 6.2, "Rate 1 Coy", "Rate1C"],
+            [6, "asd_rate1r", "UD", 6.2, "Rate 1 RoR", "Rate1R"],
+            [7, "asd_rate2c", "UD", 6.2, "Rate 2 Coy", "Rate2C"],
+            [8, "asd_rate2r", "UD", 6.2, "Rate 2 RoR", "Rate2R"],
+            [9, "asd_rate3c", "UD", 6.2, "Rate 3 Coy", "Rate3C"],
+            [10, "asd_rate3r", "UD", 6.2, "Rate 3 RoR", "Rate3R"],
+            [11, "asd_rate4c", "UD", 6.2, "Rate 4 Coy", "Rate4C"],
+            [12, "asd_rate4r", "UD", 6.2, "Rate 4 RoR", "Rate4R"],
+            [13, "asd_rate5c", "UD", 6.2, "Rate 5 Coy", "Rate5C"],
+            [14, "asd_rate5r", "UD", 6.2, "Rate 5 RoR", "Rate5R"],
+            [15, "asd_rate6c", "UD", 6.2, "Rate 6 Coy", "Rate6C"],
+            [16, "asd_rate6r", "UD", 6.2, "Rate 6 RoR", "Rate6R"],
+            [17, "asd_rate7c", "UD", 6.2, "Rate 7 Coy", "Rate7C"],
+            [18, "asd_rate7r", "UD", 6.2, "Rate 7 RoR", "Rate7R"],
+            [19, "asd_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Asset Depreciation Codes", 1, "U", "asd_cono", "asd_code"]]},
+    "assgrp": {
+        "fld": [
+            [0, "asg_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "asg_group", "UA", 3.0, "Asset Group", "Grp"],
+            [2, "asg_desc", "NA", 30.0, "Description", "Description"],
+            [3, "asg_depcod", "Na", 3.0, "Depreciation Code", "DPC"],
+            [4, "asg_assacc", "UI", 7.0, "Asset Account", "Ass-Acc"],
+            [5, "asg_depacc", "UI", 7.0, "Accum Account", "Dep-Acc"],
+            [6, "asg_expacc", "UI", 7.0, "Expense Account", "Exp-Acc"],
+            [7, "asg_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Asset Groups", 1, "U", "asg_cono", "asg_group"]]},
+    "assmst": {
+        "fld": [
+            [0, "asm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "asm_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "asm_code", "Na", 7.0, "Code Number", "Cod-Num"],
+            [3, "asm_desc", "NA", 30.0, "Description", "Description"],
+            [4, "asm_depcod", "Na", 3.0, "Depreciation Code", "DPC"],
+            [5, "asm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Asset Masterfile", 1, "U", "asm_cono", "asm_group", "asm_code"]]},
+    "asstrn": {
+        "fld": [
+            [0, "ast_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ast_group", "UA", 3.0, "Asset Group", "Grp"],
+            [2, "ast_code", "Na", 7.0, "Asset Code", "Cod-Num"],
+            [3, "ast_type", "UI", 2.0, "Transaction Type", "TT"],
+            [4, "ast_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [5, "ast_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [6, "ast_date", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [7, "ast_mtyp", "UI", 1.0, "Movement Type", "M"],
+            [8, "ast_amt1", "SD", 13.2, "Transaction Amount 1", "Trn-Amount"],
+            [9, "ast_amt2", "SD", 13.2, "Transaction Amount 2", "Trn-Amount"],
+            [10, "ast_vat", "SD", 13.2, "VAT Amount", "VAT-Amount"],
+            [11, "ast_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [12, "ast_desc", "NA", 30.0, "Description", "Description"],
+            [13, "ast_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [14, "ast_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [15, "ast_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [16, "ast_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [17, "ast_xflag", "UA", 1.0, "Export Flag", "X"],
+            [18, "ast_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Asset Transactions", 1, "U", "ast_seq"],
+            ["", 2, "N", "ast_cono", "ast_type", "ast_batch", "ast_batind"],
+            ["", 3, "N", "ast_cono", "ast_group", "ast_code", "ast_type",
+                "ast_refno"]]},
+    "bkmcon": {
+        "fld": [
+            [0, "bkc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "bkc_ccode", "UA", 7.0, "Code", "Code"],
+            [2, "bkc_title", "TX", 6.0, "Title", "Title"],
+            [3, "bkc_sname", "TX", 30.0, "Surname", "Surname"],
+            [4, "bkc_names", "TX", 30.0, "Names", "Names"],
+            [5, "bkc_addr1", "TX", 30.0, "Address Line 1", "Address-Line-1"],
+            [6, "bkc_addr2", "TX", 30.0, "Address Line 2", "Address-Line-2"],
+            [7, "bkc_addr3", "TX", 30.0, "Address Line 3", "Address-Line-3"],
+            [8, "bkc_pcode", "TX", 4.0, "Postal Code", "P-Code"],
+            [9, "bkc_telno", "TX", 20.0, "Telephone Number", "Telephone"],
+            [10, "bkc_faxno", "TX", 20.0, "Fax Number", "Fax"],
+            [11, "bkc_celno", "TX", 20.0, "Mobile Number", "Mobile"],
+            [12, "bkc_email", "TX", 50.0, "Email Address", "Email"],
+            [13, "bkc_vatno", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [14, "bkc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Booking Contact", 1, "U", "bkc_cono", "bkc_ccode"]]},
+    "bkmctl": {
+        "fld": [
+            [0, "cbk_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cbk_glint", "UA", 1.0, "Integration", "I"],
+            [2, "cbk_bkgtpl", "NA", 20.0, "Booking Template",
+                "Booking-Template"],
+            [3, "cbk_invtpl", "NA", 20.0, "Invoice Template",
+                "Invoice-Template"],
+            [4, "cbk_statpl", "NA", 20.0, "Statement Template",
+                "Statement-Template"],
+            [5, "cbk_terms", "TX", 50.0, "Terms and Conditions",
+                "Terms-and-Conditions"],
+            [6, "cbk_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [7, "cbk_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bookings Control", 1, "U", "cbk_cono"]]},
+    "bkmlet": {
+        "fld": [
+            [0, "bkl_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "bkl_code", "UA", 1.0, "Letter Code", "C"],
+            [2, "bkl_body", "TX", 80.0, "Letter Body", "Letter-Body"],
+            [3, "bkl_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Booking Letters", 1, "U", "bkl_cono", "bkl_code"]]},
+    "bkmmst": {
+        "fld": [
+            [0, "bkm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "bkm_number", "UI", 7.0, "Booking Number", "Number"],
+            [2, "bkm_btype", "UA", 1.0, "Booking Type", "B"],
+            [3, "bkm_group", "TX", 30.0, "Group Name", "Group"],
+            [4, "bkm_guests", "UI", 3.0, "Number of Guests", "Qty"],
+            [5, "bkm_arrive", "D1", 10.0, "Arrival Date", "Arrive-Dt"],
+            [6, "bkm_depart", "D1", 10.0, "Departure Date", "Depart-Dt"],
+            [7, "bkm_units", "TX", 50.0, "Booked Units", "Units"],
+            [8, "bkm_value", "UD", 10.2, "Value", "Value"],
+            [9, "bkm_stddep", "UD", 10.2, "Deposit I-Value", "I-Dep-Val"],
+            [10, "bkm_stddte", "D1", 10.0, "Deposit I-Date", "I-Due-Date"],
+            [11, "bkm_grpdep", "UD", 10.2, "Deposit G-Value", "G-Dep-Val"],
+            [12, "bkm_grpdte", "D1", 10.0, "Deposit G-Date", "G-Due-Date"],
+            [13, "bkm_remarks", "TX", 50.0, "Remarks", "Remarks"],
+            [14, "bkm_state", "UA", 1.0, "Booking Status", "S"],
+            [15, "bkm_ccode", "UA", 7.0, "Contact Code", "Contact"],
+            [16, "bkm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bookings Master", 1, "U", "bkm_cono", "bkm_number"]]},
+    "bkmrtm": {
+        "fld": [
+            [0, "brm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "brm_type", "UA", 1.0, "Rate Type", "T"],
+            [2, "brm_code", "UI", 3.0, "Rate Code", "Cod"],
+            [3, "brm_desc", "TX", 30.0, "Description", "Description"],
+            [4, "brm_base", "UA", 1.0, "Rate Base (A/B/C)", "B"],
+            [5, "brm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bookings Rates Masterfile", 1, "U", "brm_cono", "brm_type",
+                "brm_code"]]},
+    "bkmrtr": {
+        "fld": [
+            [0, "brr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "brr_type", "UA", 1.0, "Rate Type", "T"],
+            [2, "brr_code", "UI", 3.0, "Rate Code", "Cod"],
+            [3, "brr_date", "d1", 10.0, "Starting Date", "Start-Date"],
+            [4, "brr_rate", "UD", 10.2, "Rate Amount", "Rte-Amount"],
+            [5, "brr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bookings Rate Amounts", 1, "U", "brr_cono", "brr_type",
+                "brr_code", "brr_date"]]},
+    "bkmrtt": {
+        "fld": [
+            [0, "brt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "brt_number", "UI", 7.0, "Booking Number", "Number"],
+            [2, "brt_utype", "UA", 1.0, "Unit Type", "T"],
+            [3, "brt_ucode", "UA", 6.0, "Unit Code", "U-Code"],
+            [4, "brt_udesc", "TX", 30.0, "Unit Description",
+                "Unit-Description"],
+            [5, "brt_uroom", "UI", 3.0, "Room Number", "Num"],
+            [6, "brt_rcode", "UI", 3.0, "Rate Code", "Cod"],
+            [7, "brt_rdesc", "TX", 30.0, "Rate Description",
+                "Rate-Description"],
+            [8, "brt_rbase", "UA", 1.0, "Rate Base", "B"],
+            [9, "brt_nrate", "UD", 10.2, "Normal Rate", "Normal-Rte"],
+            [10, "brt_quant", "UI", 3.0, "Quantity", "Qty"],
+            [11, "brt_discp", "UD", 6.2, "Discount Percentage", "Disc-%"],
+            [12, "brt_arate", "UD", 10.2, "Applied Rate", "Applied-Rt"],
+            [13, "brt_bdays", "UI", 3.0, "Booked Days", "Bkd"],
+            [14, "brt_vrate", "UD", 5.2, "V.A.T. Rate", "VAT-R"],
+            [15, "brt_invno", "UI", 9.0, "Invoice Number", "Invoice-N"],
+            [16, "brt_invdt", "d1", 10.0, "Invoice Date", "Invoice-Dt"],
+            [17, "brt_crnno", "UI", 9.0, "C/Note Number", "CrNote-N"],
+            [18, "brt_crndt", "d1", 10.0, "C/Note Date", "CrNote-Dt"],
+            [19, "brt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [20, "brt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [21, "brt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [22, "brt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Bookings Rate Transactions", 1, "U", "brt_seq"]]},
+    "bkmtrn": {
+        "fld": [
+            [0, "bkt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "bkt_number", "UI", 7.0, "Booking Number", "Number"],
+            [2, "bkt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "bkt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "bkt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [5, "bkt_date", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [6, "bkt_tramt", "SD", 13.2, "Transaction Amount", "Trn-Amount"],
+            [7, "bkt_taxamt", "SD", 13.2, "VAT Amount", "VAT-Amount"],
+            [8, "bkt_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [9, "bkt_desc", "TX", 30.0, "Description", "Description"],
+            [10, "bkt_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [11, "bkt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [12, "bkt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [13, "bkt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [14, "bkt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [15, "bkt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Bookings Transactions", 1, "U", "bkt_seq"],
+            ["", 2, "N", "bkt_cono", "bkt_number"]]},
+    "bkmunm": {
+        "fld": [
+            [0, "bum_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "bum_btyp", "UA", 1.0, "Booking Type", "T"],
+            [2, "bum_code", "UA", 6.0, "Unit Code", "U-Code"],
+            [3, "bum_desc", "TX", 30.0, "Description", "Description"],
+            [4, "bum_room", "UI", 3.0, "Number of Rooms", "Rms"],
+            [5, "bum_maxg", "UI", 3.0, "Maximum Guests", "Qty"],
+            [6, "bum_dflt", "UI", 3.0, "Default Rate", "Rte"],
+            [7, "bum_vatc", "UA", 1.0, "Vat Code", "V"],
+            [8, "bum_slsa", "UI", 7.0, "Sales Account", "Sls-Acc"],
+            [9, "bum_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bookings Units Masterfile", 1, "U", "bum_cono", "bum_btyp",
+                "bum_code"]]},
+    "bksaut": {
+        "fld": [
+            [0, "baf_code", "UI", 4.0, "Author's Code", "Auth"],
+            [1, "baf_snam", "TX", 20.0, "Author's Surname", "Surname"],
+            [2, "baf_fnam", "TX", 20.0, "Author's Names", "Names"],
+            [3, "baf_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Book Authors", 1, "U", "baf_code", "baf_snam", "baf_fnam"]]},
+    "bksmst": {
+        "fld": [
+            [0, "bmf_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bmf_code", "UI", 4.0, "Book's Code", "Code"],
+            [2, "bmf_titl", "TX", 30.0, "Book's Title", "Title"],
+            [3, "bmf_auth", "UI", 4.0, "Author's Code", "Auth"],
+            [4, "bmf_ownr", "UI", 4.0, "Owner's Code", "Ownr"],
+            [5, "bmf_mnth", "D2", 7.0, "Month Received", "Mth-Rec"],
+            [6, "bmf_stat", "UA", 1.0, "Status", "S"],
+            [7, "bmf_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Books Masterfile", 1, "U", "bmf_cono", "bmf_code"]]},
+    "bksown": {
+        "fld": [
+            [0, "bof_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bof_code", "UI", 4.0, "Owner's Code", "Code"],
+            [2, "bof_snam", "TX", 20.0, "Surname", "Surname"],
+            [3, "bof_fnam", "TX", 20.0, "Names", "Names"],
+            [4, "bof_add1", "TX", 20.0, "Address Line 1", "Address-Line-1"],
+            [5, "bof_add2", "TX", 20.0, "Address Line 2", "Address-Line-2"],
+            [6, "bof_add3", "TX", 20.0, "Address Line 3", "Address-Line-3"],
+            [7, "bof_pcod", "TX", 4.0, "Postal Code", "Code"],
+            [8, "bof_home", "TX", 20.0, "Home Number", "Home-Number"],
+            [9, "bof_work", "TX", 20.0, "Work Number", "Work-Number"],
+            [10, "bof_cell", "TX", 20.0, "Cell Number", "Cell-Number"],
+            [11, "bof_mail", "TX", 50.0, "Email Address", "Email-Address"],
+            [12, "bof_stat", "UA", 1.0, "Membership Status", "S"],
+            [13, "bof_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Book Owners", 1, "U", "bof_cono", "bof_code", "bof_snam",
+                "bof_fnam"]]},
+    "bwlclb": {
+        "fld": [
+            [0, "bcc_code", "UI", 3.0, "Club Code", "Cod"],
+            [1, "bcc_name", "NA", 30.0, "Club Name", "Name"],
+            [2, "bcc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowling Clubs", 1, "U", "bcc_code"]]},
+    "bwlcmp": {
+        "fld": [
+            [0, "bcm_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bcm_code", "UI", 3.0, "Competition Code", "CC"],
+            [2, "bcm_name", "NA", 30.0, "Competition Name", "Name"],
+            [3, "bcm_date", "D1", 10.0, "Competition Date", "Date"],
+            [4, "bcm_type", "UI", 2.0, "Competition Type", "CT"],
+            [5, "bcm_poff", "UI", 3.0, "Sectional Playoff", "POC"],
+            [6, "bcm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Competition Masterfile", 1, "U", "bcm_cono", "bcm_code"]]},
+    "bwlctl": {
+        "fld": [
+            [0, "ctb_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "ctb_mlint", "UA", 1.0, "M/L Integration", "I"],
+            [2, "ctb_samen", "UA", 1.0, "Same Numbers", "S"],
+            [3, "ctb_mscat", "UI", 2.0, "M/L Sports Category", "SC"],
+            [4, "ctb_mstart", "UI", 6.0, "Male Start", "MStart"],
+            [5, "ctb_fstart", "UI", 6.0, "Female Start", "FStart"],
+            [6, "ctb_nstart", "UI", 6.0, "Non-Members Start", "NStart"],
+            [7, "ctb_dbase", "UA", 1.0, "Draw Base (C/P/R)", "B"],
+            [8, "ctb_order", "UA", 1.0, "Rating Order (A/D)", "O"],
+            [9, "ctb_rep42", "UA", 1.0, "Replace Fours", "R"],
+            [10, "ctb_weeks", "UI", 1.0, "Weeks Between Games", "MW"],
+            [11, "ctb_ratem", "UD", 5.2, "Rate - Member", "RateM"],
+            [12, "ctb_ratev", "UD", 5.2, "Rate - Visitor", "RateV"],
+            [13, "ctb_greens", "UA", 6.0, "Greens", "Greens"],
+            [14, "ctb_drfmat", "UA", 1.0, "Draw Format", "F"],
+            [15, "ctb_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [16, "ctb_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Control", 1, "U", "ctb_cono"]]},
+    "bwldrm": {
+        "fld": [
+            [0, "bdm_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bdm_date", "D1", 10.0, "Tabs In Date", "Tab-Date"],
+            [2, "bdm_time", "UA", 1.0, "Tabs In Time", "T"],
+            [3, "bdm_mixed", "UA", 1.0, "Mixed Gender", "M"],
+            [4, "bdm_rating", "UA", 1.0, "Mixed Rating", "R"],
+            [5, "bdm_dbase", "UA", 1.0, "Draw Base", "B"],
+            [6, "bdm_dtype", "UA", 1.0, "Draw Type", "T"],
+            [7, "bdm_dhist", "UA", 1.0, "History", "H"],
+            [8, "bdm_tsize", "UI", 1.0, "Team Size", "S"],
+            [9, "bdm_mrate", "UD", 5.2, "Member Rate", "MEM"],
+            [10, "bdm_vrate", "UD", 5.2, "Visitor Rate", "VIS"],
+            [11, "bdm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Tabs Draw - Master", 1, "U", "bdm_cono", "bdm_date",
+                "bdm_time"]]},
+    "bwldrt": {
+        "fld": [
+            [0, "bdt_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bdt_tab", "UI", 6.0, "Tab Number", "TAB"],
+            [2, "bdt_date", "D1", 10.0, "Tabs In date", "Tab-Date"],
+            [3, "bdt_time", "UA", 1.0, "Tabs In Time", "T"],
+            [4, "bdt_rink", "UA", 2.0, "Rink", "RK"],
+            [5, "bdt_side", "UA", 1.0, "Side", "S"],
+            [6, "bdt_name", "UA", 20.0, "Name", "Name"],
+            [7, "bdt_pos", "UI", 1.0, "Tab Pos", "P"],
+            [8, "bdt_rate", "UI", 2.0, "Rating", "RT"],
+            [9, "bdt_team1", "UI", 6.0, "Team Member 1", "TM1"],
+            [10, "bdt_pos1", "UI", 3.0, "Member 1 Pos", "P"],
+            [11, "bdt_team2", "UI", 6.0, "Team member 2", "TM2"],
+            [12, "bdt_pos2", "UI", 3.0, "Member 2 Pos", "P"],
+            [13, "bdt_team3", "UI", 6.0, "Team Member 3", "TM3"],
+            [14, "bdt_pos3", "UI", 3.0, "Member 3 Pos", "P"],
+            [15, "bdt_flag", "UA", 1.0, "Flag (A/B/C/D)", "F"],
+            [16, "bdt_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Tabs Draw - Player", 1, "U", "bdt_cono", "bdt_tab", "bdt_date",
+                "bdt_time", "bdt_rink"]]},
+    "bwlent": {
+        "fld": [
+            [0, "bce_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bce_ccod", "UI", 3.0, "Competition Code", "CC"],
+            [2, "bce_scod", "UI", 6.0, "Skip Code", "S-Code"],
+            [3, "bce_tcod", "UA", 1.0, "Team Code", "T"],
+            [4, "bce_paid", "UA", 1.0, "Paid Flag", "P"],
+            [5, "bce_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Entry Forms", 1, "U", "bce_cono", "bce_ccod", "bce_scod"]]},
+    "bwlflf": {
+        "fld": [
+            [0, "bff_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "bff_code", "UI", 1.0, "Format Code", "F"],
+            [2, "bff_desc", "NA", 30.0, "Description", "Description"],
+            [3, "bff_gender", "UA", 1.0, "Gender", "G"],
+            [4, "bff_assess", "UA", 1.0, "Assessments (Y/N)", "A"],
+            [5, "bff_forms", "UI", 1.0, "Forms (1/4)", "F"],
+            [6, "bff_self", "UA", 1.0, "Assess Self (Y/N)", "O"],
+            [7, "bff_rate", "UI", 2.0, "Rating Out Of", "R"],
+            [8, "bff_sets", "UA", 1.0, "Sets Format (Y/N)", "S"],
+            [9, "bff_logo", "TX", 50.0, "Sponsor's Logo", "Sponsor's-Logo"],
+            [10, "bff_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Format of League", 1, "U", "bff_cono", "bff_code"]]},
+    "bwlflm": {
+        "fld": [
+            [0, "bfm_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bfm_fmat", "UI", 1.0, "Format Code", "F"],
+            [2, "bfm_type", "UA", 1.0, "Match Type", "T"],
+            [3, "bfm_date", "D1", 10.0, "Match Date", "Match-Date"],
+            [4, "bfm_round", "UI", 2.0, "Round Number", "RD"],
+            [5, "bfm_team", "UI", 3.0, "Side Code", "SNO"],
+            [6, "bfm_opps", "UI", 3.0, "Opposition Code", "Opp"],
+            [7, "bfm_venue", "NA", 20.0, "Venue", "Venue"],
+            [8, "bfm_mtime", "UD", 5.2, "Meeting Time", "MTime"],
+            [9, "bfm_mplace", "NA", 20.0, "Meeting Place", "Meeting-Place"],
+            [10, "bfm_captain", "UI", 3.0, "Captain Code", "Cap"],
+            [11, "bfm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Matches", 1, "U", "bfm_cono", "bfm_fmat", "bfm_type",
+                "bfm_date", "bfm_round", "bfm_team"]]},
+    "bwlflo": {
+        "fld": [
+            [0, "bfo_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bfo_fmat", "UI", 1.0, "Format Code", "F"],
+            [2, "bfo_code", "UI", 3.0, "Side Code", "C"],
+            [3, "bfo_club", "UI", 3.0, "Club Code", "CCd"],
+            [4, "bfo_desc", "NA", 20.0, "Side Name", "Name"],
+            [5, "bfo_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Oppositions", 1, "U", "bfo_cono", "bfo_fmat", "bfo_code"]]},
+    "bwlfls": {
+        "fld": [
+            [0, "bfs_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bfs_fmat", "UI", 1.0, "Format Code", "F"],
+            [2, "bfs_code", "UI", 3.0, "Side Code", "C"],
+            [3, "bfs_desc", "NA", 20.0, "Description", "Description"],
+            [4, "bfs_league", "UA", 1.0, "League (M/F)", "L"],
+            [5, "bfs_division", "UA", 2.0, "Division", "D"],
+            [6, "bfs_number", "UI", 1.0, "Number of Teams", "N"],
+            [7, "bfs_active", "UA", 1.0, "Active Flag", "A"],
+            [8, "bfs_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Sides", 1, "U", "bfs_cono", "bfs_fmat", "bfs_code"]]},
+    "bwlflt": {
+        "fld": [
+            [0, "bft_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bft_fmat", "UI", 1.0, "Format Code", "F"],
+            [2, "bft_type", "UA", 1.0, "Type Code", "T"],
+            [3, "bft_date", "D1", 10.0, "Match Date", "Match-Date"],
+            [4, "bft_team", "UI", 3.0, "Side Code", "COD"],
+            [5, "bft_skip", "UI", 3.0, "Skip Code", "Skp"],
+            [6, "bft_player", "UI", 3.0, "Player Code", "Plr"],
+            [7, "bft_position", "UI", 1.0, "Player Position", "P"],
+            [8, "bft_shotsf", "UI", 2.0, "Shots For", "SF"],
+            [9, "bft_shotsa", "UI", 2.0, "Shots Against", "SA"],
+            [10, "bft_points", "UD", 3.1, "Points", "Pts"],
+            [11, "bft_rating1", "UD", 4.1, "Skip Rating", "Skip"],
+            [12, "bft_rating2", "UD", 4.1, "Third Rating", "3rd"],
+            [13, "bft_rating3", "UD", 4.1, "Second Rating", "2nd"],
+            [14, "bft_rating4", "UD", 4.1, "Lead Rating", "Lead"],
+            [15, "bft_remarks", "TX", 50.0, "Remarks", "Remarks"],
+            [16, "bft_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Teams", 1, "U", "bft_cono", "bft_fmat", "bft_type",
+                "bft_date", "bft_team", "bft_skip", "bft_position"]]},
+    "bwlgme": {
+        "fld": [
+            [0, "bcg_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bcg_ccod", "UI", 3.0, "Competition Code", "CC"],
+            [2, "bcg_scod", "UI", 6.0, "Skip Code", "S-Code"],
+            [3, "bcg_game", "UI", 2.0, "Game Number", "GN"],
+            [4, "bcg_type", "UA", 1.0, "Game Type", "T"],
+            [5, "bcg_date", "d1", 10.0, "Game Date", "Date"],
+            [6, "bcg_ocod", "UI", 6.0, "Opposition Code", "O-Code"],
+            [7, "bcg_rink", "UA", 2.0, "Rink Code", "RK"],
+            [8, "bcg_group", "UI", 1.0, "Group", "G"],
+            [9, "bcg_sfor", "UI", 2.0, "Shots For", "SF"],
+            [10, "bcg_sagt", "UI", 2.0, "Shots Against", "SA"],
+            [11, "bcg_points", "UD", 5.1, "Points", "Pnts"],
+            [12, "bcg_a_sfor", "UI", 2.0, "Shots For", "SF"],
+            [13, "bcg_a_sagt", "UI", 2.0, "Shots Against", "SA"],
+            [14, "bcg_a_points", "UD", 5.1, "Points", "Pnts"],
+            [15, "bcg_aflag", "UA", 1.0, "Abandoned Flag", "F"],
+            [16, "bcg_seed", "UI", 2.0, "Seed Number", "SN"],
+            [17, "bcg_pair", "UI", 2.0, "Pair Number", "PN"],
+            [18, "bcg_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Games", 1, "U", "bcg_cono", "bcg_ccod", "bcg_scod",
+                "bcg_game"]]},
+    "bwlnot": {
+        "fld": [
+            [0, "bcn_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bcn_ccod", "UI", 3.0, "Competition Code", "Cod"],
+            [2, "bcn_note", "TX", 50.0, "Competition Notes",
+                "Competition-Notes"],
+            [3, "bcn_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Competition Notes", 1, "U", "bcn_cono", "bcn_ccod"]]},
+    "bwlpts": {
+        "fld": [
+            [0, "bcp_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bcp_code", "UI", 2.0, "Type Code", "CD"],
+            [2, "bcp_ptyp", "UA", 1.0, "Game Type (D/S)", "T"],
+            [3, "bcp_skins", "UA", 1.0, "Skins (Y/N)", "S"],
+            [4, "bcp_sends", "UI", 2.0, "Number of Ends per Skin", "ES"],
+            [5, "bcp_p_only", "UA", 1.0, "Points Only (Y/N)", "P"],
+            [6, "bcp_e_points", "UI", 2.0, "Points per End", "PE"],
+            [7, "bcp_s_points", "UI", 2.0, "Points per Skin", "PS"],
+            [8, "bcp_g_points", "UI", 2.0, "Points per Game", "PG"],
+            [9, "bcp_bonus", "UA", 1.0, "Bonus Points (Y/N)", "B"],
+            [10, "bcp_win_by", "UI", 2.0, "Win By More Than", "WB"],
+            [11, "bcp_lose_by", "UI", 2.0, "Lose by Less Than", "LB"],
+            [12, "bcp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Types of Points", 1, "U", "bcp_cono", "bcp_code", "bcp_ptyp"]]},
+    "bwlrnd": {
+        "fld": [
+            [0, "bcr_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bcr_ccod", "UI", 3.0, "Competiton Code", "CCD"],
+            [2, "bcr_rcod", "UI", 2.0, "Round Number", "RN"],
+            [3, "bcr_date", "D1", 10.0, "Round Date", "Round-Date"],
+            [4, "bcr_time", "TM", 5.0, "Round Time", "Round-Time"],
+            [5, "bcr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Knockout Round Dates", 1, "U", "bcr_cono", "bcr_ccod",
+                "bcr_rcod"]]},
+    "bwltab": {
+        "fld": [
+            [0, "btb_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "btb_tab", "UI", 6.0, "Tab Number", "Tab-No"],
+            [2, "btb_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [3, "btb_surname", "UA", 20.0, "Surname", "Surname"],
+            [4, "btb_names", "UA", 20.0, "Names", "Names"],
+            [5, "btb_gender", "UA", 1.0, "Gender", "G"],
+            [6, "btb_add1", "TX", 20.0, "Address Line 1", "Address-Line-1"],
+            [7, "btb_add2", "TX", 20.0, "Address Line 2", "Address-Line-2"],
+            [8, "btb_add3", "TX", 20.0, "Address Line 3", "Address-Line-3"],
+            [9, "btb_pcod", "TX", 4.0, "Postal Code", "Code"],
+            [10, "btb_home", "TX", 20.0, "Home Number", "Home-Number"],
+            [11, "btb_work", "TX", 20.0, "Work Number", "Work-Number"],
+            [12, "btb_cell", "TX", 20.0, "Cell Number", "Cell-Number"],
+            [13, "btb_mail", "TX", 50.0, "Email Address", "Email-Address"],
+            [14, "btb_pos1", "UI", 1.0, "Position - Primary", "P"],
+            [15, "btb_rate1", "UI", 2.0, "Rating - Primary", "RP"],
+            [16, "btb_pos2", "UI", 1.0, "Position - Mixed", "M"],
+            [17, "btb_rate2", "UI", 2.0, "Rating - Mixed", "RM"],
+            [18, "btb_bsano", "UI", 6.0, "Association Number", "BA-Num"],
+            [19, "btb_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowls Club Tabs", 1, "U", "btb_cono", "btb_tab"]]},
+    "bwltms": {
+        "fld": [
+            [0, "btd_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "btd_ccod", "UI", 3.0, "Competition Code", "CC"],
+            [2, "btd_scod", "UI", 6.0, "Skip Code", "S-Code"],
+            [3, "btd_mem1", "UI", 6.0, "Mem1 Code", "M1-Cod"],
+            [4, "btd_mem2", "UI", 6.0, "Mem2 Code", "M2-Cod"],
+            [5, "btd_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Drawn Teams", 1, "U", "btd_cono", "btd_ccod", "btd_scod"]]},
+    "bwltyp": {
+        "fld": [
+            [0, "bct_cono", "UI", 3.0, "Club Number", "Clb"],
+            [1, "bct_code", "UI", 2.0, "Type Code", "CD"],
+            [2, "bct_desc", "NA", 30.0, "Description", "Description"],
+            [3, "bct_cfmat", "UA", 1.0, "Competition Format", "F"],
+            [4, "bct_tsize", "UI", 1.0, "Team Size", "S"],
+            [5, "bct_games", "UI", 2.0, "Number of Games", "GM"],
+            [6, "bct_ends", "UI", 2.0, "Number of Ends per Game", "EG"],
+            [7, "bct_groups", "UA", 1.0, "Group Games by Position", "G"],
+            [8, "bct_grgame", "UI", 2.0, "Group After Game", "GG"],
+            [9, "bct_adjust", "UA", 1.0, "Adjust Scores", "A"],
+            [10, "bct_expunge", "TX", 10.0, "Expunge Games", "Expunge-Gm"],
+            [11, "bct_percent", "UI", 3.0, "Retain Percentage", "RP"],
+            [12, "bct_drawn", "UI", 2.0, "Number of Drawn Games", "DG"],
+            [13, "bct_strict", "UA", 1.0, "Strict S v S", "V"],
+            [14, "bct_pdiff", "UA", 1.0, "Drawn Games Differ", "D"],
+            [15, "bct_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Types of Competitions", 1, "U", "bct_cono", "bct_code"]]},
+    "chglog": {
+        "fld": [
+            [0, "chg_tab", "NA", 6.0, "Table Name", "TabNam"],
+            [1, "chg_act", "UA", 1.0, "Action Type", "A"],
+            [2, "chg_key", "NA", 30.0, "Record Key", "Record-Key"],
+            [3, "chg_col", "NA", 20.0, "Column Name", "Column-Name"],
+            [4, "chg_dte", "TS", 19.0, "Date & Time Changed",
+                "Date-&-Time-Changed"],
+            [5, "chg_usr", "NA", 20.0, "User Login", "User-Login"],
+            [6, "chg_old", "TX", 50.0, "Old Details", "Old-Details"],
+            [7, "chg_new", "TX", 50.0, "New Details", "New-Details"],
+            [8, "chg_xflag", "UA", 1.0, "Export Flag", "X"],
+            [9, "chg_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Masterfile Changes", 1, "U", "chg_tab", "chg_act", "chg_key",
+                "chg_col", "chg_seq"],
+            ["", 2, "N", "chg_dte", "chg_usr"]]},
+    "crsage": {
+        "fld": [
+            [0, "cra_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cra_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [2, "cra_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "cra_ref1", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "cra_curdt", "D2", 7.0, "Aged Date", "Aged-Dt"],
+            [5, "cra_atyp", "UI", 2.0, "Allocation Type", "AT"],
+            [6, "cra_aref", "Na", 9.0, "Allocation Number", "Alloc-Ref"],
+            [7, "cra_amnt", "SD", 13.2, "Allocation Amount", "Alloc-Amnt"],
+            [8, "cra_xflag", "UA", 1.0, "Export Flag", "X"],
+            [9, "cra_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Creditors Ageing", 1, "U", "cra_seq"],
+            ["", 2, "N", "cra_cono", "cra_acno", "cra_type", "cra_ref1"],
+            ["", 3, "N", "cra_cono", "cra_acno", "cra_type", "cra_ref1",
+                "cra_curdt"]]},
+    "crsctl": {
+        "fld": [
+            [0, "ctc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctc_glint", "UA", 1.0, "G/L Integration", "I"],
+            [2, "ctc_glinp", "UA", 1.0, "G/L Input Method (E/I)", "M"],
+            [3, "ctc_bestac", "NA", 4.0, "Best Account Code", "Best"],
+            [4, "ctc_besttp", "UI", 2.0, "Best Account Type", "BT"],
+            [5, "ctc_bankac", "UI", 7.0, "G/L Bank Account", "Bank-Ac"],
+            [6, "ctc_tplnam", "NA", 20.0, "Remittance Template",
+                "Template-Name"],
+            [7, "ctc_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [8, "ctc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Creditors Control", 1, "U", "ctc_cono"]]},
+    "crsmst": {
+        "fld": [
+            [0, "crm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "crm_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [2, "crm_name", "NA", 30.0, "Name", "Name"],
+            [3, "crm_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [4, "crm_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [5, "crm_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [6, "crm_pcod", "NA", 4.0, "Postal Code", "Pcod"],
+            [7, "crm_tel", "NA", 20.0, "Telephone Number", "Telephone Number"],
+            [8, "crm_fax", "NA", 20.0, "Fax Number", "Fax Number"],
+            [9, "crm_mgr", "NA", 30.0, "Managers Name", "Managers Name"],
+            [10, "crm_mgr_email", "TX", 50.0, "Manager Email",
+                "Manager E-mail Address"],
+            [11, "crm_acc", "NA", 30.0, "Accounts Contact",
+                "Accounts Contact Name"],
+            [12, "crm_acc_email", "TX", 50.0, "Accounts E-mail",
+                "Accounts E-mail Address"],
+            [13, "crm_ord", "NA", 30.0, "Orders Contact",
+                "Orders Contact Name"],
+            [14, "crm_ord_email", "TX", 50.0, "Orders E-mail",
+                "Orders E-mail Address"],
+            [15, "crm_opened", "d1", 10.0, "Date Account Opened", "Date-Opend"],
+            [16, "crm_vatno", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [17, "crm_termsb", "UA", 1.0, "Terms Base", "B"],
+            [18, "crm_stday", "UI", 2.0, "Statement Day", "St"],
+            [19, "crm_terms", "UI", 3.0, "Terms", "Trm"],
+            [20, "crm_limit", "UI", 7.0, "Credit Limit", "CrLimit"],
+            [21, "crm_trdis", "UD", 5.2, "Trade Discount", "T-Dis"],
+            [22, "crm_pydis", "UD", 5.2, "Settlement Discount", "S-Dis"],
+            [23, "crm_pyind", "UA", 1.0, "Pay Indicator", "P"],
+            [24, "crm_bname", "NA", 20.0, "Bank Name", "Bank-Name"],
+            [25, "crm_bibt", "UI", 8.0, "Bank Branch", "Bank-IBT"],
+            [26, "crm_bacc", "NA", 16.0, "Bank Account", "Bank-Account-Num"],
+            [27, "crm_glac", "UI", 7.0, "G/L Account Number", "GL-Acno"],
+            [28, "crm_stat", "UA", 1.0, "Account Status", "S"],
+            [29, "crm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Creditors Masterfile", 1, "U", "crm_cono", "crm_acno"]]},
+    "crstrn": {
+        "fld": [
+            [0, "crt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "crt_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [2, "crt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "crt_ref1", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "crt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [5, "crt_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [6, "crt_ref2", "Na", 9.0, "Reference 2", "Ref-Num-2"],
+            [7, "crt_tramt", "SD", 13.2, "Transaction Amount", "Trn-Amount"],
+            [8, "crt_taxamt", "SD", 13.2, "Tax Amount", "Tax-Amount"],
+            [9, "crt_disper", "UD", 5.2, "Discount %", "Dis-%"],
+            [10, "crt_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [11, "crt_paydt", "d1", 10.0, "Payment Date", "Pay-Date"],
+            [12, "crt_payind", "UA", 1.0, "Payment Indicator", "P"],
+            [13, "crt_payamt", "SD", 13.2, "Payment Amount", "Pay-Amount"],
+            [14, "crt_desc", "NA", 30.0, "Description", "Description"],
+            [15, "crt_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [16, "crt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [17, "crt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [18, "crt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [19, "crt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [20, "crt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Creditors Transactions", 1, "U", "crt_seq"],
+            ["", 2, "N", "crt_cono", "crt_type", "crt_ref1"],
+            ["", 3, "N", "crt_cono", "crt_type", "crt_ref2"],
+            ["", 4, "N", "crt_cono", "crt_acno", "crt_ref2"],
+            ["", 5, "U", "crt_cono", "crt_acno", "crt_type", "crt_ref1"],
+            ["", 6, "N", "crt_cono", "crt_acno", "crt_type", "crt_ref2"],
+            ["", 7, "N", "crt_cono", "crt_type", "crt_batch", "crt_batind"],
+            ["", 8, "N", "crt_cono", "crt_acno", "crt_paydt", "crt_payind"]]},
+    "cshana": {
+        "fld": [
+            [0, "can_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "can_type", "UA", 1.0, "Type (P/T)", "T"],
+            [2, "can_date", "D1", 10.0, "Capture Date", "Captd-Date"],
+            [3, "can_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [4, "can_code", "UI", 7.0, "Account Number", "Acc-Num"],
+            [5, "can_desc", "NA", 30.0, "Description", "Description"],
+            [6, "can_vatcod", "UA", 1.0, "VAT Code", "V"],
+            [7, "can_incamt", "SD", 13.2, "Inclusive Amount", "Inc-Amount"],
+            [8, "can_vatamt", "SD", 13.2, "VAT Amount", "VAT-Amount"],
+            [9, "can_xflag", "UA", 1.0, "Export Flag", "X"],
+            [10, "can_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Cash Analysis", 1, "U", "can_seq"],
+            ["", 2, "N", "can_cono", "can_type", "can_date"]]},
+    "cshcnt": {
+        "fld": [
+            [0, "cct_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cct_type", "UA", 1.0, "Type (P/T)", "T"],
+            [2, "cct_date", "D1", 10.0, "Captured Date", "Captd-Date"],
+            [3, "cct_cheq", "SD", 13.2, "Cheques", "Cheques"],
+            [4, "cct_r200", "UI", 5.0, "Quantity R200", "Q-R200"],
+            [5, "cct_r100", "UI", 5.0, "Quantity R100", "Q-R100"],
+            [6, "cct_r50", "UI", 5.0, "Quantity R50", "Q-R050"],
+            [7, "cct_r20", "UI", 5.0, "Quantity R20", "Q-R020"],
+            [8, "cct_r10", "UI", 5.0, "Quantity R10", "Q-R010"],
+            [9, "cct_r5", "UI", 5.0, "Quantity R5", "Q-R005"],
+            [10, "cct_r2", "UI", 5.0, "Quantity R2", "Q-R002"],
+            [11, "cct_r1", "UI", 5.0, "Quantity R1", "Q-R001"],
+            [12, "cct_c50", "UI", 5.0, "Quantity C50", "Q-C050"],
+            [13, "cct_c20", "UI", 5.0, "Quantity C20", "Q-C020"],
+            [14, "cct_c10", "UI", 5.0, "Quantity C10", "Q-C010"],
+            [15, "cct_c5", "UI", 5.0, "Quantity C5", "Q-C005"],
+            [16, "cct_c2", "UI", 5.0, "Quantity C2", "Q-C002"],
+            [17, "cct_c1", "UI", 5.0, "Quantity C1", "Q-C001"],
+            [18, "cct_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Cash Count", 1, "U", "cct_cono", "cct_type", "cct_date"]]},
+    "ctlbat": {
+        "fld": [
+            [0, "btm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "btm_styp", "NA", 3.0, "System Type", "Sys"],
+            [2, "btm_rtyp", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "btm_batno", "Na", 7.0, "Batch Number", "BatchNo"],
+            [4, "btm_capdt", "d1", 10.0, "Transaction Date", "Trans-Date"],
+            [5, "btm_curdt", "d2", 7.0, "Current Date", "Cur-Date"],
+            [6, "btm_trno", "UI", 5.0, "Number of Transactions", "TrNum"],
+            [7, "btm_trval", "SD", 13.2, "Batch Value", "Batch-Value"],
+            [8, "btm_batby", "NA", 5.0, "Batched By", "Batby"],
+            [9, "btm_indby", "NA", 5.0, "Captured By", "Capby"],
+            [10, "btm_multi", "NA", 1.0, "Multi Allocations", "M"],
+            [11, "btm_ctl", "NA", 10.0, "Control Account", "Control-Ac"],
+            [12, "btm_ind", "NA", 1.0, "Indicator", "I"],
+            [13, "btm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Data Capture Batches", 1, "U", "btm_cono", "btm_styp", "btm_rtyp",
+                "btm_batno"]]},
+    "ctlctl": {
+        "fld": [
+            [0, "ctl_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctl_code", "NA", 10.0, "Code", "Code"],
+            [2, "ctl_desc", "NA", 30.0, "Description", "Description"],
+            [3, "ctl_conacc", "UI", 7.0, "G/L Account", "Acc-Num"],
+            [4, "ctl_bankac", "UA", 16.0, "Bank Account", "Bank-Accnt"],
+            [5, "ctl_impfmt", "UA", 1.0, "Import Format", "I"],
+            [6, "ctl_dtefmt", "UA", 1.0, "Date Format", "D"],
+            [7, "ctl_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Control Accounts", 1, "U", "ctl_cono", "ctl_code"]]},
+    "ctldep": {
+        "fld": [
+            [0, "dep_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "dep_code", "UI", 3.0, "Department Code", "Dep"],
+            [2, "dep_name", "NA", 30.0, "Department Name", "Department-Name"],
+            [3, "dep_dr_coy", "UI", 3.0, "Debit Company", "Coy"],
+            [4, "dep_dr_sal", "UI", 7.0, "Debit Sal Acc", "Sal-Acc"],
+            [5, "dep_dr_com", "UI", 7.0, "Debit Com Acc", "Com-Acc"],
+            [6, "dep_cr_coy", "UI", 3.0, "Credit Company", "Coy"],
+            [7, "dep_cr_sal", "UI", 7.0, "Credit Sal Acc", "Sal-Acc"],
+            [8, "dep_cr_com", "UI", 7.0, "Credit Com Acc", "Com-Acc"],
+            [9, "dep_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Department Records", 1, "U", "dep_cono", "dep_code"]]},
+    "ctllog": {
+        "fld": [
+            [0, "clg_login", "TX", 20.0, "Login Name", "Login-Name"],
+            [1, "clg_user", "TX", 20.0, "User Name", "User-Name"],
+            [2, "clg_prog", "NA", 6.0, "Program Name", "Module"],
+            [3, "clg_type", "UI", 2.0, "Transaction Type", "TT"],
+            [4, "clg_cono", "UI", 3.0, "Company Number", "Coy"],
+            [5, "clg_period", "UI", 3.0, "Financial Period", "Per"],
+            [6, "clg_start", "TS", 19.0, "Starting Date&Time",
+                "Starting-Date&Time"],
+            [7, "clg_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Control Log File", 1, "U", "clg_login", "clg_user", "clg_prog",
+                "clg_start"]]},
+    "ctlmes": {
+        "fld": [
+            [0, "mss_system", "UA", 3.0, "System", "Sys"],
+            [1, "mss_message", "UI", 3.0, "Message Number", "Mes"],
+            [2, "mss_detail", "NA", 150.0, "Details", "Details"],
+            [3, "mss_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Messages", 1, "U", "mss_system", "mss_message"]]},
+    "ctlmst": {
+        "fld": [
+            [0, "ctm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctm_name", "NA", 30.0, "Company Name", "Name"],
+            [2, "ctm_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [3, "ctm_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [4, "ctm_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [5, "ctm_pcode", "NA", 4.0, "Postal Code", "Pcod"],
+            [6, "ctm_sadd1", "NA", 30.0, "Street Address Line 1",
+                "Street Address Line 1"],
+            [7, "ctm_sadd2", "NA", 30.0, "Street Address Line 2",
+                "Street Address Line 2"],
+            [8, "ctm_sadd3", "NA", 30.0, "Street Address Line 3",
+                "Street Address Line 3"],
+            [9, "ctm_spcode", "NA", 4.0, "Street Postal Code", "Street Pcod"],
+            [10, "ctm_contact", "NA", 30.0, "Contact Person", "Contact"],
+            [11, "ctm_tel", "NA", 15.0, "Telephone Number", "Telephone Number"],
+            [12, "ctm_fax", "NA", 15.0, "Fax Number", "Fax Number"],
+            [13, "ctm_cell", "NA", 15.0, "Cell Number", "Cell Number"],
+            [14, "ctm_email", "TX", 50.0, "E-Mail Address", "E-Mail Address"],
+            [15, "ctm_regno", "NA", 20.0, "Registration Code",
+                "Registration-Code"],
+            [16, "ctm_taxno", "NA", 20.0, "V.A.T. Number", "VAT Number"],
+            [17, "ctm_taxdf", "UA", 1.0, "V.A.T. Default", "V"],
+            [18, "ctm_b_name", "NA", 30.0, "Bank Name", "B-Name"],
+            [19, "ctm_b_branch", "NA", 30.0, "Bank Branch", "B-Branch"],
+            [20, "ctm_b_ibt", "NA", 8.0, "Bank IBT Number", "B-Ibt"],
+            [21, "ctm_b_acno", "NA", 16.0, "Bank Account Number", "B-Accno"],
+            [22, "ctm_modules", "UA", 40.0, "System Modules", "System Modules"],
+            [23, "ctm_logo", "TX", 50.0, "Company Logo Image", "Logo Image"],
+            [24, "ctm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Company Records", 1, "U", "ctm_cono"]]},
+    "ctlnot": {
+        "fld": [
+            [0, "not_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "not_sys", "UA", 3.0, "System", "SYS"],
+            [2, "not_key", "NA", 30.0, "Key", "Key"],
+            [3, "not_date", "D1", 10.0, "Capture Date", "Capture-Dt"],
+            [4, "not_user", "NA", 20.0, "User Name", "User"],
+            [5, "not_desc", "TX", 50.0, "Details", "Details"],
+            [6, "not_aflag", "UA", 1.0, "Action Flag", "F"],
+            [7, "not_adate", "d1", 10.0, "Action Date", "Action-Dte"],
+            [8, "not_auser", "NA", 20.0, "Action User", "Action-User"],
+            [9, "not_xflag", "UA", 1.0, "Export Flag", "X"],
+            [10, "not_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Notes", 1, "U", "not_cono", "not_sys", "not_key", "not_seq"],
+            ["", 2, "N", "not_user", "not_adate", "not_aflag"]]},
+    "ctlpwm": {
+        "fld": [
+            [0, "mpw_usr", "NA", 20.0, "User Number", "User"],
+            [1, "mpw_coy", "UI", 3.0, "Company Number", "Coy"],
+            [2, "mpw_sys", "NA", 2.0, "System Code", "Sy"],
+            [3, "mpw_prg", "NA", 4.0, "Program", "Prog"],
+            [4, "mpw_pwd", "HA", 30.0, "Password", "Password"],
+            [5, "mpw_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Users Menu Passwords", 1, "U", "mpw_usr", "mpw_coy", "mpw_sys",
+                "mpw_prg"]]},
+    "ctlpwr": {
+        "fld": [
+            [0, "pwd_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "pwd_sys", "UA", 3.0, "System Type", "Sys"],
+            [2, "pwd_code", "NA", 20.0, "Access Code", "Access Code"],
+            [3, "pwd_desc", "NA", 50.0, "Description", "Description"],
+            [4, "pwd_pass", "HA", 30.0, "Password", "Password"],
+            [5, "pwd_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Routines Passwords", 1, "U", "pwd_cono", "pwd_sys", "pwd_code"]]},
+    "ctlpwu": {
+        "fld": [
+            [0, "usr_name", "NA", 20.0, "Login Name", "Login-Name"],
+            [1, "usr_fnam", "NA", 30.0, "Full Name", "Full-Name"],
+            [2, "usr_emadd", "TX", 50.0, "Email Address", "Email-Address"],
+            [3, "usr_celno", "TX", 20.0, "Mobile Number", "Mobile"],
+            [4, "usr_pwd", "HA", 30.0, "Password", "Password"],
+            [5, "usr_last", "d1", 10.0, "Last Change", "Last-Chged"],
+            [6, "usr_acoy", "TX", 30.0, "Allowed Companies",
+                "Allowed Companies"],
+            [7, "usr_dcoy", "TX", 30.0, "DisAllowed Companies",
+                "DisAllowed Companies"],
+            [8, "usr_lvl", "UI", 1.0, "Security Level", "S"]],
+        "idx": [
+            ["User Passwords", 1, "U", "usr_name"]]},
+    "ctlrep": {
+        "fld": [
+            [0, "rep_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rep_code", "Na", 3.0, "Rep Code", "Cod"],
+            [2, "rep_name", "NA", 30.0, "Name", "Name"],
+            [3, "rep_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Salesmans Records", 1, "U", "rep_cono", "rep_code"]]},
+    "ctlsys": {
+        "fld": [
+            [0, "sys_years", "UI", 2.0, "Years to Keep History", "YR"],
+            [1, "sys_pwmust", "UA", 1.0, "Enforce the Use of Passwords", "E"],
+            [2, "sys_pwsize", "UI", 2.0, "Minimum Number of Characters", "SZ"],
+            [3, "sys_pwlife", "UI", 3.0, "Maximum Days of Password Life",
+                "MLD"],
+            [4, "sys_budays", "UI", 3.0, "Days of Backup History", "BUH"],
+            [5, "sys_msvr", "TX", 50.0, "SMTP Server Name", "SMTP-Server-Name"],
+            [6, "sys_msec", "UI", 1.0, "SMTP Security", "S"],
+            [7, "sys_maut", "UI", 1.0, "SMTP Authentication", "A"],
+            [8, "sys_mprt", "UI", 4.0, "SMTP Port", "Port"],
+            [9, "sys_mnam", "TX", 20.0, "SMTP Login Name", "SMTP-Login-Name"],
+            [10, "sys_mpwd", "TX", 20.0, "SMTP Login Passwsord",
+                "SMTP-Password"],
+            [11, "sys_ssvr", "UA", 1.0, "SMS Server", "S"],
+            [12, "sys_snam", "TX", 20.0, "SMS Login Name", "SMS-Login-Name"],
+            [13, "sys_spwd", "TX", 20.0, "SMS Password", "SMS-Password"],
+            [14, "sys_gl_dep", "UA", 1.0, "G/L Departments", "D"],
+            [15, "sys_gl_dig", "UI", 1.0, "Number of Digits", "N"]],
+        "idx": [
+            ["Sytem Control", 1, "N", "sys_years"]]},
+    "ctlvmf": {
+        "fld": [
+            [0, "vtm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "vtm_code", "UA", 1.0, "V.A.T. Code", "C"],
+            [2, "vtm_desc", "NA", 30.0, "Description", "Description"],
+            [3, "vtm_cat", "UA", 1.0, "Category", "C"],
+            [4, "vtm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["VAT Masterfile", 1, "U", "vtm_cono", "vtm_code"]]},
+    "ctlvrf": {
+        "fld": [
+            [0, "vtr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "vtr_code", "UA", 1.0, "V.A.T. Code", "C"],
+            [2, "vtr_date", "d1", 10.0, "Starting Date", "Start-Date"],
+            [3, "vtr_rate", "UD", 6.2, "V.A.T. Rate", "V-Rate"],
+            [4, "vtr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["VAT Rates", 1, "U", "vtr_cono", "vtr_code", "vtr_date"]]},
+    "ctlvtf": {
+        "fld": [
+            [0, "vtt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "vtt_code", "UA", 1.0, "V.A.T. Code", "C"],
+            [2, "vtt_vtyp", "UA", 1.0, "V.A.T. Category", "C"],
+            [3, "vtt_curdt", "D2", 7.0, "Current Date", "Cur-Dat"],
+            [4, "vtt_styp", "UA", 1.0, "System Type", "S"],
+            [5, "vtt_ttyp", "UI", 2.0, "Transaction Type", "TT"],
+            [6, "vtt_batch", "Na", 7.0, "Batch Number", "Bat-No"],
+            [7, "vtt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [8, "vtt_refdt", "D1", 10.0, "Reference Date", "Refer-Date"],
+            [9, "vtt_acno", "Na", 7.0, "Account Number", "Acc-Num"],
+            [10, "vtt_desc", "NA", 30.0, "Description", "Description"],
+            [11, "vtt_exc", "SD", 13.2, "Exclusive Value", "Exc-Value"],
+            [12, "vtt_tax", "SD", 13.2, "V.A.T. Value", "VAT-Value"],
+            [13, "vtt_paid", "d1", 10.0, "Payment Date", "Paymt-Date"],
+            [14, "vtt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [15, "vtt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [16, "vtt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [17, "vtt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["VAT Transactions", 1, "U", "vtt_seq"],
+            ["", 2, "N", "vtt_cono", "vtt_code"]]},
+    "ctlynd": {
+        "fld": [
+            [0, "cye_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cye_period", "UI", 3.0, "Period Number", "Per"],
+            [2, "cye_start", "D1", 10.0, "Starting Date", "Start-Date"],
+            [3, "cye_end", "D1", 10.0, "Ending Date", "End-Date"],
+            [4, "cye_last", "d1", 10.0, "Last Run Date", "Last-Date"],
+            [5, "cye_final", "UA", 1.0, "Finalised", "F"],
+            [6, "cye_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Financial Periods", 1, "U", "cye_cono", "cye_period"]]},
+    "drsact": {
+        "fld": [
+            [0, "dac_code", "UA", 3.0, "Activity Code", "Cod"],
+            [1, "dac_desc", "NA", 30.0, "Description", "Description"],
+            [2, "dac_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Business Activity Codes", 1, "U", "dac_code"]]},
+    "drsage": {
+        "fld": [
+            [0, "dra_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "dra_chain", "UI", 3.0, "Chain Number", "Chn"],
+            [2, "dra_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [3, "dra_type", "UI", 2.0, "Transaction Type", "TT"],
+            [4, "dra_ref1", "Na", 9.0, "Reference Number", "Reference"],
+            [5, "dra_curdt", "D2", 7.0, "Aged Date", "Aged-Dt"],
+            [6, "dra_atyp", "UI", 2.0, "Allocation Type", "AT"],
+            [7, "dra_aref", "Na", 9.0, "Allocation Number", "Alloc-Ref"],
+            [8, "dra_amnt", "SD", 13.2, "Allocation Amount", "Alloc-Amnt"],
+            [9, "dra_xflag", "UA", 1.0, "Export Flag", "X"],
+            [10, "dra_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Debtors Ageing", 1, "U", "dra_seq"],
+            ["", 2, "N", "dra_cono", "dra_chain", "dra_acno", "dra_type",
+                "dra_ref1", "dra_curdt"]]},
+    "drschn": {
+        "fld": [
+            [0, "chm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "chm_chain", "UI", 3.0, "Chain Number", "Chn"],
+            [2, "chm_name", "NA", 30.0, "Name", "Name"],
+            [3, "chm_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [4, "chm_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [5, "chm_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [6, "chm_pcod", "NA", 4.0, "Postal Code", "Pcod"],
+            [7, "chm_tel", "NA", 20.0, "Telephone Number", "Telephone Number"],
+            [8, "chm_fax", "NA", 20.0, "Fax Number", "Fax Number"],
+            [9, "chm_email", "TX", 50.0, "Email Address", "Email Address"],
+            [10, "chm_contact", "NA", 30.0, "Contact Name", "Contact"],
+            [11, "chm_vatind", "UA", 1.0, "Vat Indicator", "V"],
+            [12, "chm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Debtors Chains", 1, "U", "chm_cono", "chm_chain"]]},
+    "drsctl": {
+        "fld": [
+            [0, "ctd_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctd_glint", "UA", 1.0, "G/L Integration", "I"],
+            [2, "ctd_glinp", "UA", 1.0, "G/L Input Method (E/I)", "M"],
+            [3, "ctd_chain", "UA", 1.0, "Chain Stores", "C"],
+            [4, "ctd_tplnam", "NA", 20.0, "Statement Template",
+                "Template-Name"],
+            [5, "ctd_ageing", "UA", 1.0, "Statement Ageing", "A"],
+            [6, "ctd_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [7, "ctd_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Debtors Control", 1, "U", "ctd_cono"]]},
+    "drsdel": {
+        "fld": [
+            [0, "del_code", "Na", 7.0, "Address Code", "Del-Cod"],
+            [1, "del_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [2, "del_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [3, "del_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [4, "del_add4", "NA", 30.0, "Address Line 4", "Address Line 4"],
+            [5, "del_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Debtors Delivery Addresses", 1, "U", "del_code"]]},
+    "drsmst": {
+        "fld": [
+            [0, "drm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "drm_chain", "UI", 3.0, "Chain Store", "Chn"],
+            [2, "drm_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [3, "drm_name", "NA", 30.0, "Name", "Name"],
+            [4, "drm_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [5, "drm_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [6, "drm_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [7, "drm_pcod", "NA", 4.0, "Postal Code", "Pcod"],
+            [8, "drm_tel", "NA", 20.0, "Telephone Number", "Telephone Number"],
+            [9, "drm_fax", "NA", 20.0, "Fax Number", "Fax Number"],
+            [10, "drm_mgr", "NA", 30.0, "Managers Name", "Managers Name"],
+            [11, "drm_mgr_email", "TX", 50.0, "Manager Email",
+                "Manager E-mail Address"],
+            [12, "drm_acc", "NA", 30.0, "Accounts Contact",
+                "Accounts Contact Name"],
+            [13, "drm_acc_email", "TX", 50.0, "Accounts E-mail",
+                "Accounts E-mail Address"],
+            [14, "drm_sls", "NA", 30.0, "Sales Contact", "Sales Contact Name"],
+            [15, "drm_sls_email", "TX", 50.0, "Sales E-mail",
+                "Sales E-mail Address"],
+            [16, "drm_opened", "d1", 10.0, "Date Opened", "Date-Opend"],
+            [17, "drm_registered", "d1", 10.0, "Date Registered",
+                "Date-Regst"],
+            [18, "drm_vatno", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [19, "drm_delivery", "Na", 7.0, "Delivery Address", "Del-Add"],
+            [20, "drm_rep", "Na", 3.0, "Rep Code", "Rep"],
+            [21, "drm_bus_activity", "UA", 3.0, "Business Activity", "BsA"],
+            [22, "drm_bus_type", "UA", 3.0, "Business Type", "BsT"],
+            [23, "drm_plev", "UI", 1.0, "Price Level", "P"],
+            [24, "drm_dis_per", "UD", 5.2, "Discount Percentage", "Dis-%"],
+            [25, "drm_int_per", "UD", 5.2, "Interest Percentage", "Int-%"],
+            [26, "drm_rfterms", "UI", 3.0, "Referral Terms", "RfT"],
+            [27, "drm_rjterms", "UI", 3.0, "Rejected Terms", "RjT"],
+            [28, "drm_limit", "UI", 5.0, "Credit Limit", "CrLimit"],
+            [29, "drm_stop", "UA", 1.0, "Stop Indicator", "S"],
+            [30, "drm_invmes", "UI", 3.0, "Invoice Message", "IMs"],
+            [31, "drm_stames", "UI", 3.0, "Statement Message", "SMs"],
+            [32, "drm_rating", "UA", 1.0, "Credit Rating", "R"],
+            [33, "drm_stat", "UA", 1.0, "Account Status", "S"],
+            [34, "drm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Debtors Masterfile", 1, "U", "drm_cono", "drm_chain",
+                "drm_acno"]]},
+    "drsrcm": {
+        "fld": [
+            [0, "dcm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "dcm_num", "UI", 3.0, "Number", "Jnl-Num"],
+            [2, "dcm_desc", "NA", 30.0, "Details", "Description"],
+            [3, "dcm_freq", "UA", 1.0, "Frequency", "F"],
+            [4, "dcm_day", "UI", 2.0, "Day of the Month", "DM"],
+            [5, "dcm_vat", "UA", 1.0, "VAT Code", "V"],
+            [6, "dcm_glac", "UI", 7.0, "G/L Account", "GL-Acno"],
+            [7, "dcm_last", "d2", 7.0, "Period Last Raised", "Lst-Rsd"],
+            [8, "dcm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Debtors Standard Charges", 1, "U", "dcm_cono", "dcm_num"]]},
+    "drsrct": {
+        "fld": [
+            [0, "dct_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "dct_num", "UI", 3.0, "Number", "Jnl-Num"],
+            [2, "dct_seq", "UI", 3.0, "Sequence", "seq"],
+            [3, "dct_chain", "UI", 3.0, "Chain Store", "Chn"],
+            [4, "dct_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [5, "dct_detail", "TX", 30.0, "Charge Details", "Charge-Details"],
+            [6, "dct_amnt", "SD", 13.2, "Amount", "Amount"],
+            [7, "dct_start", "d2", 7.0, "Starting Period", "Start"],
+            [8, "dct_end", "d2", 7.0, "Ending Period", "Ending"],
+            [9, "dct_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Debtors Standard Charges Trans", 1, "U", "dct_cono", "dct_num",
+                "dct_seq"]]},
+    "drstrn": {
+        "fld": [
+            [0, "drt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "drt_chain", "UI", 3.0, "Chain Number", "Chn"],
+            [2, "drt_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [3, "drt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [4, "drt_ref1", "Na", 9.0, "Reference 1", "Reference"],
+            [5, "drt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [6, "drt_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [7, "drt_ref2", "Na", 9.0, "Reference 2", "Ref-Num-2"],
+            [8, "drt_tramt", "SD", 13.2, "Transaction Amount", "Trn-Amount"],
+            [9, "drt_taxamt", "SD", 13.2, "Tax Amount", "Tax-Amount"],
+            [10, "drt_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [11, "drt_desc", "NA", 30.0, "Description", "Description"],
+            [12, "drt_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [13, "drt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [14, "drt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [15, "drt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [16, "drt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [17, "drt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Debtors Transactions", 1, "U", "drt_seq"],
+            ["", 2, "U", "drt_cono", "drt_chain", "drt_acno", "drt_type",
+                "drt_ref1"],
+            ["", 3, "N", "drt_cono", "drt_chain", "drt_acno", "drt_curdt"],
+            ["", 4, "N", "drt_cono", "drt_type", "drt_batch", "drt_batind"]]},
+    "drstyp": {
+        "fld": [
+            [0, "dtp_code", "UA", 3.0, "Business Type Code", "Cod"],
+            [1, "dtp_desc", "NA", 30.0, "Description", "Description"],
+            [2, "dtp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Business Type Codes", 1, "U", "dtp_code"]]},
+    "emllog": {
+        "fld": [
+            [0, "eml_frm", "TX", 50.0, "Sender", "Sender"],
+            [1, "eml_too", "TX", 50.0, "Recipients", "Recipients"],
+            [2, "eml_sub", "TX", 50.0, "Subject", "Subject"],
+            [3, "eml_dtt", "NA", 16.0, "Date and Time", "Date and Time"],
+            [4, "eml_sta", "NA", 10.0, "Status", "Status"],
+            [5, "eml_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Email Log", 1, "N", "eml_frm"]]},
+    "ffield": {
+        "fld": [
+            [0, "ff_tabl", "NA", 6.0, "Table Name", "TabNam"],
+            [1, "ff_seq", "UI", 3.0, "Field Seq", "Seq"],
+            [2, "ff_name", "NA", 20.0, "Field Name", "Field-Name"],
+            [3, "ff_type", "NA", 2.0, "Field Type", "Tp"],
+            [4, "ff_size", "UD", 6.2, "Field Size", "F-Size"],
+            [5, "ff_desc", "NA", 30.0, "Field Description",
+                "Field-Description"],
+            [6, "ff_head", "NA", 30.0, "Field Heading", "Field-Heading"]],
+        "idx": [
+            ["Field Names", 1, "U", "ff_tabl", "ff_seq"],
+            ["", 2, "U", "ff_name"]]},
+    "frelat": {
+        "fld": [
+            [0, "rel_tab1", "NA", 6.0, "Table Name", "Tabl-1"],
+            [1, "rel_col1", "NA", 20.0, "Column Name", "Column-Name-1"],
+            [2, "rel_tab2", "NA", 6.0, "Table Name", "Tabl-2"],
+            [3, "rel_col2", "NA", 20.0, "Column Name", "Column-Name-2"]],
+        "idx": [
+            ["Table Relationships", 1, "U", "rel_tab1", "rel_col1", "rel_tab2",
+                "rel_col2"]]},
+    "ftable": {
+        "fld": [
+            [0, "ft_tabl", "NA", 6.0, "Table Name", "TabNam"],
+            [1, "ft_desc", "NA", 30.0, "Description", "Description"],
+            [2, "ft_seq", "UI", 1.0, "Key Sequence", "S"],
+            [3, "ft_type", "NA", 1.0, "Key Type", "T"],
+            [4, "ft_key0", "NA", 20.0, "First Key", "1st-Key"],
+            [5, "ft_key1", "NA", 20.0, "Second Key", "2nd-Key"],
+            [6, "ft_key2", "NA", 20.0, "Third Key", "3rd-Key"],
+            [7, "ft_key3", "NA", 20.0, "Fourth Key", "4th-Key"],
+            [8, "ft_key4", "NA", 20.0, "Fifth Key", "5th-Key"],
+            [9, "ft_key5", "NA", 20.0, "Sixth Key", "6th-Key"],
+            [10, "ft_key6", "NA", 20.0, "Seventh Key", "7th-Key"],
+            [11, "ft_key7", "NA", 20.0, "Eighth Key", "8th-Key"],
+            [12, "ft_key8", "NA", 20.0, "Ninth Key", "9th-Key"],
+            [13, "ft_key9", "NA", 20.0, "Tenth Key", "10th-Key"]],
+        "idx": [
+            ["Table Names", 1, "U", "ft_tabl", "ft_seq"]]},
+    "genbal": {
+        "fld": [
+            [0, "glo_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "glo_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [2, "glo_trdt", "D1", 10.0, "Year Start Date", "Start-Date"],
+            [3, "glo_cyr", "SD", 13.2, "Opening Balance - Amount", "Op-Amount"],
+            [4, "glo_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Opening Bals", 1, "U", "glo_cono", "glo_acno",
+                "glo_trdt"],
+            ["", 2, "N", "glo_acno"],
+            ["", 3, "N", "glo_cono", "glo_acno"]]},
+    "genbud": {
+        "fld": [
+            [0, "glb_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "glb_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [2, "glb_curdt", "D2", 7.0, "Period", "Period"],
+            [3, "glb_tramt", "SI", 10.0, "Value", "Value"],
+            [4, "glb_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Budgets", 1, "U", "glb_cono", "glb_acno",
+                "glb_curdt"],
+            ["", 2, "N", "glb_acno", "glb_curdt"]]},
+    "gendtm": {
+        "fld": [
+            [0, "gdm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "gdm_code", "Na", 2.0, "Detail Code", "Cd"],
+            [2, "gdm_desc", "NA", 30.0, "Description", "Description"],
+            [3, "gdm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Detail Records", 1, "U", "gdm_cono", "gdm_code"]]},
+    "gendtt": {
+        "fld": [
+            [0, "gdt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "gdt_code", "Na", 2.0, "Detail Code", "Cd"],
+            [2, "gdt_curdt", "D2", 7.0, "Current Date", "Cur-Date"],
+            [3, "gdt_value", "SD", 13.2, "Value or Amount", "Value"],
+            [4, "gdt_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Detail Trans", 1, "U", "gdt_cono", "gdt_code",
+                "gdt_curdt"]]},
+    "genint": {
+        "fld": [
+            [0, "cti_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cti_inco", "UI", 3.0, "Company Number", "Coy"],
+            [2, "cti_acno", "UI", 7.0, "Intercompany A/C", "Acc-Num"],
+            [3, "cti_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Inter-Company", 1, "U", "cti_cono", "cti_inco"]]},
+    "genjlm": {
+        "fld": [
+            [0, "gjm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "gjm_num", "Na", 9.0, "Number", "Jnl-Num"],
+            [2, "gjm_desc", "NA", 30.0, "Details", "Description"],
+            [3, "gjm_freq", "UA", 1.0, "Frequency", "F"],
+            [4, "gjm_start", "d2", 7.0, "Starting Period", "Start"],
+            [5, "gjm_end", "d2", 7.0, "Ending Period", "Ending"],
+            [6, "gjm_last", "d2", 7.0, "Period Last Raised", "Lst-Rsd"],
+            [7, "gjm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Journals", 1, "U", "gjm_cono", "gjm_num"]]},
+    "genjlt": {
+        "fld": [
+            [0, "gjt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "gjt_num", "Na", 9.0, "Number", "Jnl-Num"],
+            [2, "gjt_seq", "UI", 3.0, "Sequence", "seq"],
+            [3, "gjt_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [4, "gjt_vatc", "UA", 1.0, "V.A.T. Indicator", "V"],
+            [5, "gjt_amnt", "SD", 13.2, "Amount", "Amount"],
+            [6, "gjt_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Journal Trans", 1, "U", "gjt_cono", "gjt_num",
+                "gjt_seq"]]},
+    "genmst": {
+        "fld": [
+            [0, "glm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "glm_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [2, "glm_type", "UA", 1.0, "Account Type", "T"],
+            [3, "glm_desc", "NA", 30.0, "Description", "Description"],
+            [4, "glm_ind", "UA", 1.0, "Direct Postings", "P"],
+            [5, "glm_vat", "UA", 1.0, "VAT Code", "V"],
+            [6, "glm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Masterfile", 1, "U", "glm_cono", "glm_acno"],
+            ["", 2, "N", "glm_acno"]]},
+    "genrcc": {
+        "fld": [
+            [0, "grc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "grc_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [2, "grc_memo", "UI", 5.0, "Memo Code", "Memo Code"],
+            [3, "grc_desc1", "NA", 50.0, "Memo Description 1",
+                "Memo Description 1"],
+            [4, "grc_desc2", "NA", 50.0, "Memo Description 2",
+                "Memo Description 2"],
+            [5, "grc_desc3", "NA", 50.0, "Memo Description 3",
+                "Memo Description 3"],
+            [6, "grc_rtn", "UA", 1.0, "Transaction Type", "T"],
+            [7, "grc_acoy", "UI", 3.0, "Alloc Company Number", "All"],
+            [8, "grc_aacc", "UI", 7.0, "Alloc Account Number", "All-Acc"],
+            [9, "grc_acrs", "NA", 7.0, "Creditor Account", "Crs-Acc"],
+            [10, "grc_achn", "UI", 3.0, "Chain Store", "Chn"],
+            [11, "grc_adrs", "NA", 7.0, "Debtor Account", "Drs-Acc"],
+            [12, "grc_aage", "UA", 1.0, "Ageing Code", "A"],
+            [13, "grc_vat", "UA", 1.0, "VAT Code", "V"],
+            [14, "grc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bank Recon Control", 1, "U", "grc_cono", "grc_acno",
+                "grc_memo"]]},
+    "genrct": {
+        "fld": [
+            [0, "grt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "grt_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [2, "grt_date", "D1", 10.0, "Date", "Date"],
+            [3, "grt_memo", "TX", 50.0, "Memo Details", "Memo Details"],
+            [4, "grt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [5, "grt_payee", "TX", 50.0, "Payee", "Payee"],
+            [6, "grt_amount", "SD", 13.2, "Amount", "Amount"],
+            [7, "grt_flag", "UA", 1.0, "Allocated Flag", "A"],
+            [8, "grt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [9, "grt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Bank Recon Trans", 1, "U", "grt_seq"],
+            ["", 2, "U", "grt_cono", "grt_acno", "grt_date", "grt_memo",
+                "grt_refno", "grt_payee", "grt_amount"],
+            ["", 3, "N", "grt_cono", "grt_acno", "grt_date", "grt_flag"]]},
+    "genrpc": {
+        "fld": [
+            [0, "glc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "glc_cusno", "UI", 2.0, "Custom Number", "CN"],
+            [2, "glc_head1", "TX", 50.0, "Heading 1", "Heading 1"],
+            [3, "glc_head2", "TX", 50.0, "Heading 2", "Heading 2"],
+            [4, "glc_head3", "TX", 50.0, "Heading 3", "Heading 3"],
+            [5, "glc_head4", "TX", 50.0, "Heading 4", "Heading 4"],
+            [6, "glc_col1_nam", "TX", 11.0, "Column 1 Name", "Col-01-Name"],
+            [7, "glc_col1_tit", "TX", 20.0, "Column 1 Title", "Column 1 Title"],
+            [8, "glc_col2_nam", "TX", 11.0, "Column 2 Name", "Col-02-Name"],
+            [9, "glc_col2_tit", "TX", 20.0, "Column 2 Title", "Column 2 Title"],
+            [10, "glc_col3_nam", "TX", 11.0, "Column 3 Name", "Col-03-Name"],
+            [11, "glc_col3_tit", "TX", 20.0, "Column 3", "Column 3 Title"],
+            [12, "glc_col4_nam", "TX", 11.0, "Column 4 Name", "Col-04-Name"],
+            [13, "glc_col4_tit", "TX", 20.0, "Column 4 Title",
+                "Column 4 Title"],
+            [14, "glc_col5_nam", "TX", 11.0, "Column 5 Name", "Col-05-Name"],
+            [15, "glc_col5_tit", "TX", 20.0, "Column 5 Title",
+                "Column 5 Title"],
+            [16, "glc_col6_nam", "TX", 11.0, "Column 6 Name", "Col-06-Name"],
+            [17, "glc_col6_tit", "TX", 20.0, "Column 6 Title",
+                "Column 6 Title"],
+            [18, "glc_col7_nam", "TX", 11.0, "Column 7 Name", "Col-07-Name"],
+            [19, "glc_col7_tit", "TX", 20.0, "Column 7 Title",
+                "Column 7 Title"],
+            [20, "glc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Custom Reports", 1, "U", "glc_cono",
+                "glc_cusno"]]},
+    "genrpt": {
+        "fld": [
+            [0, "glr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "glr_repno", "UI", 3.0, "Report Number", "No"],
+            [2, "glr_seq", "UD", 7.2, "Sequence", "Seq-Num"],
+            [3, "glr_type", "UA", 1.0, "Type", "T"],
+            [4, "glr_desc", "NA", 30.0, "Description", "Description"],
+            [5, "glr_high", "UA", 1.0, "Highlight (y/n)", "H"],
+            [6, "glr_ffeed", "UA", 1.0, "Form Feed (y/n)", "F"],
+            [7, "glr_ignore", "UA", 1.0, "Ignore Account Type (y/n)", "I"],
+            [8, "glr_from", "UI", 7.0, "From Account", "From-Ac"],
+            [9, "glr_to", "UI", 7.0, "To Account", "  To-Ac"],
+            [10, "glr_obal", "UA", 1.0, "Include Opening Balance (y/n)", "B"],
+            [11, "glr_accum", "UA", 1.0, "Accumulate Month Values (y/n)", "A"],
+            [12, "glr_print", "UA", 1.0, "Print Values (y/n/+/-)", "P"],
+            [13, "glr_norm", "UA", 1.0, "Normal Sign (+/-)", "S"],
+            [14, "glr_acbal", "UA", 1.0, "Add/Sub/Ignore Balance (a/s/i)", "A"],
+            [15, "glr_store", "UA", 1.0, "Store Balances (y/n)", "S"],
+            [16, "glr_snum1", "UI", 2.0, "Storage Number 1", "N1"],
+            [17, "glr_snum2", "UI", 2.0, "Storage Number 2", "N2"],
+            [18, "glr_snum3", "UI", 2.0, "Storage Number 3", "N3"],
+            [19, "glr_acstr", "UA", 1.0, "Add/Sub/Ignore Storage (a/s/i)", "A"],
+            [20, "glr_group", "UI", 3.0, "Group Number", "Grp"],
+            [21, "glr_total", "UI", 1.0, "Total Level", "T"],
+            [22, "glr_clear", "UA", 1.0, "Clear Total Level(s)", "C"],
+            [23, "glr_strper", "UD", 6.2, "Percentage of Stored Amount",
+                "%-tage"],
+            [24, "glr_uline", "UA", 1.0, "Underline (b/d/s)", "U"],
+            [25, "glr_cbase", "UA", 1.0, "Calculation Base (p/a/s)", "B"],
+            [26, "glr_ctype", "UA", 1.0, "Calculation Type (+ - * /)", "C"],
+            [27, "glr_camnt", "SD", 13.2, "Percent or Amount", "Amount"],
+            [28, "glr_label", "NA", 10.0, "Chart Lable", "Label"],
+            [29, "glr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Reports", 1, "U", "glr_cono", "glr_repno",
+                "glr_seq"],
+            ["", 2, "N", "glr_cono", "glr_repno"]]},
+    "genstr": {
+        "fld": [
+            [0, "gls_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "gls_strm", "UI", 3.0, "Stream Number", "Str"],
+            [2, "gls_desc", "NA", 30.0, "Description", "Description"],
+            [3, "gls_seq", "UI", 3.0, "Sequence Number", "Seq"],
+            [4, "gls_typ", "UA", 1.0, "Report Type (S/L/M/C)", "T"],
+            [5, "gls_cno", "UI", 2.0, "Custom Number", "CN"],
+            [6, "gls_con", "UA", 1.0, "Consolidate (Y/N)", "Y"],
+            [7, "gls_rep", "UI", 3.0, "Report Number", "Num"],
+            [8, "gls_gen", "UA", 1.0, "General report (Y/N)", "G"],
+            [9, "gls_val", "UA", 1.0, "Contents (V/B/C/D)", "C"],
+            [10, "gls_det", "Na", 2.0, "Detail Code", "DC"],
+            [11, "gls_var", "UA", 1.0, "Variance (B/P/N)", "V"],
+            [12, "gls_zer", "UA", 1.0, "Include Zeros (Y/N)", "Z"],
+            [13, "gls_opt", "UA", 1.0, "Print Options (Y/N)", "O"],
+            [14, "gls_num", "UA", 1.0, "Print Numbers (Y/N)", "N"],
+            [15, "gls_prnt", "TX", 50.0, "Printer Name", "Printer-Name"],
+            [16, "gls_mail", "TX", 50.0, "Email Address", "Email-Address"],
+            [17, "gls_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["General Ledger Stream Records", 1, "U", "gls_cono", "gls_strm",
+                "gls_seq"]]},
+    "gentrn": {
+        "fld": [
+            [0, "glt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "glt_acno", "UI", 7.0, "Account Number", "Acc-Num"],
+            [2, "glt_curdt", "D2", 7.0, "Current Period", "Curr-Dt"],
+            [3, "glt_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [4, "glt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [5, "glt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [6, "glt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [7, "glt_tramt", "SD", 13.2, "Transaction Value", "Trans-Amount"],
+            [8, "glt_taxamt", "SD", 13.2, "Tax Value", "Tax-Amount"],
+            [9, "glt_desc", "NA", 30.0, "Description", "Description"],
+            [10, "glt_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [11, "glt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [12, "glt_recon", "UI", 7.0, "Bank Date", "Bank-Dt"],
+            [13, "glt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [14, "glt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [15, "glt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [16, "glt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["General Ledger Transactions", 1, "U", "glt_seq"],
+            ["", 2, "N", "glt_cono", "glt_acno", "glt_recon", "glt_refno",
+                "glt_tramt"],
+            ["", 3, "N", "glt_cono", "glt_acno", "glt_recon", "glt_trdt",
+                "glt_tramt"],
+            ["", 4, "N", "glt_cono", "glt_type", "glt_batch", "glt_batind"],
+            ["", 5, "N", "glt_cono", "glt_acno", "glt_recon", "glt_tramt"],
+            ["", 6, "N", "glt_cono", "glt_acno", "glt_curdt"],
+            ["", 7, "N", "glt_cono", "glt_curdt"],
+            ["", 8, "N", "glt_acno", "glt_curdt"]]},
+    "ldraws": {
+        "fld": [
+            [0, "lod_type", "UA", 1.0, "Game Type", "T"],
+            [1, "lod_draw", "UI", 5.0, "Draw Number", "D-Num"],
+            [2, "lod_date", "D1", 10.0, "Draw Date", "Draw--Date"],
+            [3, "lod_num1", "UI", 2.0, "Number 1", "N1"],
+            [4, "lod_num2", "UI", 2.0, "Number 2", "N2"],
+            [5, "lod_num3", "UI", 2.0, "Number 3", "N3"],
+            [6, "lod_num4", "UI", 2.0, "Number 4", "N4"],
+            [7, "lod_num5", "UI", 2.0, "Number 5", "N5"],
+            [8, "lod_num6", "UI", 2.0, "Number 6", "N6"],
+            [9, "lod_bbal", "UI", 2.0, "Bonus Ball", "BB"]],
+        "idx": [
+            ["Lotto Draws", 1, "U", "lod_type", "lod_date"]]},
+    "lentry": {
+        "fld": [
+            [0, "loe_type", "UA", 1.0, "Game Type", "T"],
+            [1, "loe_date", "D1", 10.0, "Draw Date", "Draw--Date"],
+            [2, "loe_num1", "UI", 2.0, "Number 1", "N1"],
+            [3, "loe_num2", "UI", 2.0, "Number 2", "N2"],
+            [4, "loe_num3", "UI", 2.0, "Number 3", "N3"],
+            [5, "loe_num4", "UI", 2.0, "Number 4", "N4"],
+            [6, "loe_num5", "UI", 2.0, "Number 5", "N5"],
+            [7, "loe_num6", "UI", 2.0, "Number 6", "N6"],
+            [8, "loe_dtyp", "UA", 1.0, "Draw Type", "T"],
+            [9, "loe_draw", "UI", 5.0, "Draw Number", "D-Num"],
+            [10, "loe_ddiv", "UI", 1.0, "Division", "D"],
+            [11, "loe_dval", "UD", 12.2, "Winnings Amount", "Winnings-Amt"]],
+        "idx": [
+            ["Lotto Entries", 1, "N", "loe_type", "loe_date"]]},
+    "lfixed": {
+        "fld": [
+            [0, "lof_type", "UA", 1.0, "Game Type", "T"],
+            [1, "lof_seq", "UI", 2.0, "Sequence", "Sq"],
+            [2, "lof_num1", "UI", 2.0, "Number 1", "N1"],
+            [3, "lof_num2", "UI", 2.0, "Number 2", "N2"],
+            [4, "lof_num3", "UI", 2.0, "Number 3", "N3"],
+            [5, "lof_num4", "UI", 2.0, "Number 4", "N4"],
+            [6, "lof_num5", "UI", 2.0, "Number 5", "N5"],
+            [7, "lof_num6", "UI", 2.0, "Number 6", "N6"]],
+        "idx": [
+            ["Lotto Fixed Draws", 1, "U", "lof_type", "lof_seq"]]},
+    "lonctl": {
+        "fld": [
+            [0, "cln_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cln_glint", "UA", 1.0, "Integration", "I"],
+            [2, "cln_ityp", "UA", 1.0, "Interest Method", "M"],
+            [3, "cln_capb", "UA", 1.0, "Capitalization Base", "B"],
+            [4, "cln_capf", "UA", 1.0, "Capitalization Freq", "F"],
+            [5, "cln_drte", "UD", 6.2, "Debit Rate", "DRte-%"],
+            [6, "cln_crte", "UD", 6.2, "Credit Rate", "CRte-%"],
+            [7, "cln_last", "D1", 10.0, "Last Interest Date", "Last-IntDt"],
+            [8, "cln_tplnam", "NA", 20.0, "Statement Template",
+                "Template-Name"],
+            [9, "cln_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [10, "cln_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Loans Control", 1, "U", "cln_cono"]]},
+    "lonmf1": {
+        "fld": [
+            [0, "lm1_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "lm1_acno", "UA", 7.0, "Account Number", "Acc-Num"],
+            [2, "lm1_name", "TX", 30.0, "Name", "Name"],
+            [3, "lm1_addr1", "TX", 30.0, "Address Line 1", "Address-Line-1"],
+            [4, "lm1_addr2", "TX", 30.0, "Address Line 2", "Address-Line-2"],
+            [5, "lm1_addr3", "TX", 30.0, "Address Line 3", "Address-Line-3"],
+            [6, "lm1_pcode", "TX", 4.0, "Postal Code", "P-Code"],
+            [7, "lm1_telno", "TX", 20.0, "Telephone Number", "Telephone"],
+            [8, "lm1_faxno", "TX", 20.0, "Fax Number", "Fax"],
+            [9, "lm1_celno", "TX", 20.0, "Mobile Number", "Mobile"],
+            [10, "lm1_email", "TX", 50.0, "Email Address", "Email"],
+            [11, "lm1_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Loans Masterfile", 1, "U", "lm1_cono", "lm1_acno"]]},
+    "lonmf2": {
+        "fld": [
+            [0, "lm2_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "lm2_acno", "UA", 7.0, "Account Number", "Acc-Num"],
+            [2, "lm2_loan", "UI", 2.0, "Loan Number", "Ln"],
+            [3, "lm2_desc", "NA", 30.0, "Description", "Description"],
+            [4, "lm2_start", "D1", 10.0, "Starting Date", "Start-Date"],
+            [5, "lm2_pmths", "UI", 3.0, "Period in Months", "Mth"],
+            [6, "lm2_repay", "UD", 12.2, "Repayment Amount", "Repayment"],
+            [7, "lm2_lcap", "d1", 10.0, "Last Capitalise", "Last-Captl"],
+            [8, "lm2_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Staff Loans Masterfile", 1, "U", "lm2_cono", "lm2_acno",
+                "lm2_loan"]]},
+    "lonrte": {
+        "fld": [
+            [0, "lrt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "lrt_acno", "UA", 7.0, "Account Number", "Acc-Num"],
+            [2, "lrt_loan", "UI", 2.0, "Loan", "Ln"],
+            [3, "lrt_start", "d1", 10.0, "Start Date", "Start-Date"],
+            [4, "lrt_drte", "UD", 6.2, "Debit Rate", "DRte-%"],
+            [5, "lrt_crte", "UD", 6.2, "Credit Rate", "CRte-%"],
+            [6, "lrt_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Loans Rates", 1, "U", "lrt_cono", "lrt_acno", "lrt_loan",
+                "lrt_start"]]},
+    "lontrn": {
+        "fld": [
+            [0, "lnt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "lnt_acno", "UA", 7.0, "Account Number", "Acc-Num"],
+            [2, "lnt_loan", "UI", 2.0, "Loan Number", "Ln"],
+            [3, "lnt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [4, "lnt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [5, "lnt_trdt", "D1", 10.0, "Transaction Date", "Date"],
+            [6, "lnt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [7, "lnt_tramt", "SD", 13.2, "Transaction Amount", "Trn-Amount"],
+            [8, "lnt_curdt", "D2", 7.0, "Current Date", "Cur-Date"],
+            [9, "lnt_desc", "TX", 30.0, "Description", "Description"],
+            [10, "lnt_batind", "NA", 1.0, "Batch Indicator", "B"],
+            [11, "lnt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [12, "lnt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [13, "lnt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [14, "lnt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Staff Loans Transactions", 1, "U", "lnt_seq"],
+            ["", 2, "N", "lnt_cono", "lnt_type", "lnt_batch", "lnt_batind"],
+            ["", 3, "N", "lnt_cono", "lnt_acno", "lnt_loan", "lnt_type",
+                "lnt_refno"]]},
+    "lprize": {
+        "fld": [
+            [0, "lop_type", "UA", 1.0, "Game Type", "T"],
+            [1, "lop_draw", "UI", 5.0, "Draw Number", "D-Num"],
+            [2, "lop_date", "D1", 10.0, "Draw Date", "Draw--Date"],
+            [3, "lop_div1", "UD", 12.2, "Division 1", "Division-1"],
+            [4, "lop_div2", "UD", 12.2, "Division 2", "Division-2"],
+            [5, "lop_div3", "UD", 12.2, "Division 3", "Division-3"],
+            [6, "lop_div4", "UD", 12.2, "Division 4", "Division-4"],
+            [7, "lop_div5", "UD", 12.2, "Division 5", "Division-5"],
+            [8, "lop_div6", "UD", 12.2, "Division 6", "Division-6"],
+            [9, "lop_div7", "UD", 12.2, "Division 7", "Division-7"],
+            [10, "lop_div8", "UD", 12.2, "Division 8", "Division-8"],
+            [11, "lop_div9", "UD", 12.2, "Division 9", "Division-9"]],
+        "idx": [
+            ["Lotto Prizes", 1, "U", "lop_type", "lop_date"]]},
+    "ltrans": {
+        "fld": [
+            [0, "lot_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [1, "lot_refno", "Na", 7.0, "Reference Number", "Ref-Num"],
+            [2, "lot_tramt", "SD", 13.2, "Transaction Amount", "Trans-Amount"],
+            [3, "lot_desc", "TX", 30.0, "Description", "Description"],
+            [4, "lot_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Lotto Transactions", 1, "U", "lot_seq"]]},
+    "memadd": {
+        "fld": [
+            [0, "mla_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mla_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mla_type", "UA", 1.0, "Address Type", "T"],
+            [3, "mla_add1", "TX", 30.0, "Address Line 1", "Address-Line-1"],
+            [4, "mla_add2", "TX", 30.0, "Address Line 2", "Address-Line-2"],
+            [5, "mla_add3", "TX", 30.0, "Address Line 3", "Address-Line-3"],
+            [6, "mla_city", "TX", 30.0, "Address City", "Address-City"],
+            [7, "mla_code", "TX", 4.0, "Postal Code", "PCode"],
+            [8, "mla_region", "TX", 30.0, "Address Region", "Address-Region"],
+            [9, "mla_country", "TX", 30.0, "Address Country",
+                "Address-Country"],
+            [10, "mla_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Membership Addresses", 1, "U", "mla_cono", "mla_memno",
+                "mla_type"]]},
+    "memage": {
+        "fld": [
+            [0, "mta_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mta_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mta_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "mta_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "mta_curdt", "D2", 7.0, "Aged Date", "Aged-Dt"],
+            [5, "mta_atyp", "UI", 2.0, "Allocation Type", "AT"],
+            [6, "mta_aref", "Na", 9.0, "Allocation Number", "Alloc-Ref"],
+            [7, "mta_amnt", "SD", 11.2, "Allocation Amount", "Alloc-Amnt"],
+            [8, "mta_xflag", "UA", 1.0, "Export Flag", "X"],
+            [9, "mta_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Members Ageing", 1, "U", "mta_seq"],
+            ["", 2, "N", "mta_cono", "mta_memno", "mta_type", "mta_refno",
+                "mta_curdt"]]},
+    "memcat": {
+        "fld": [
+            [0, "mlc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mlc_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mlc_type", "UA", 1.0, "Category Type", "T"],
+            [3, "mlc_code", "UI", 2.0, "Category Code", "SC"],
+            [4, "mlc_note", "TX", 20.0, "Notes", "Notes"],
+            [5, "mlc_start", "D1", 10.0, "Start Date", "Start-Date"],
+            [6, "mlc_end", "d1", 10.0, "End Date", "End-Date"],
+            [7, "mlc_last", "d1", 10.0, "Last Raised", "Last-Date"],
+            [8, "mlc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Membership Categories", 1, "U", "mlc_cono", "mlc_memno",
+                "mlc_type", "mlc_code"]]},
+    "memctc": {
+        "fld": [
+            [0, "mcc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mcc_type", "UA", 1.0, "Type", "T"],
+            [2, "mcc_code", "UI", 2.0, "Code", "Cd"],
+            [3, "mcc_desc", "TX", 30.0, "Description", "Description"],
+            [4, "mcc_rgrp", "UA", 2.0, "Report Group", "RG"],
+            [5, "mcc_freq", "UA", 1.0, "Frequency", "F"],
+            [6, "mcc_age_l", "UI", 2.0, "Age Limit", "AG"],
+            [7, "mcc_and_s", "UI", 2.0, "And Service", "AL"],
+            [8, "mcc_or_s", "UI", 2.0, "Or Service", "OL"],
+            [9, "mcc_ncode", "UI", 2.0, "Next Code", "NC"],
+            [10, "mcc_glac", "UI", 7.0, "G/L Account Number", "GL-AcNo"],
+            [11, "mcc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Member Categories", 1, "U", "mcc_cono", "mcc_type", "mcc_code"]]},
+    "memctk": {
+        "fld": [
+            [0, "mck_code", "UI", 2.0, "Code", "Cd"],
+            [1, "mck_type", "UA", 1.0, "Type", "T"],
+            [2, "mck_desc", "TX", 50.0, "Description", "Description"],
+            [3, "mck_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Method of Contact Codes", 1, "U", "mck_code"]]},
+    "memctl": {
+        "fld": [
+            [0, "mcm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mcm_glint", "UA", 1.0, "Integration", "I"],
+            [2, "mcm_ldays", "UI", 2.0, "Days Limit", "DL"],
+            [3, "mcm_lme", "d1", 10.0, "Last Month End", "LME-Date"],
+            [4, "mcm_photo", "TX", 50.0, "Photo Directory", "Photo-Directory"],
+            [5, "mcm_logo", "TX", 50.0, "Club Logo", "Club Logo"],
+            [6, "mcm_cftpl", "NA", 20.0, "Card Template - Front",
+                "Member-Card-Front"],
+            [7, "mcm_cbtpl", "NA", 20.0, "Card Template - Back",
+                "Member-Card-Back"],
+            [8, "mcm_sttpl", "NA", 20.0, "Statement Template",
+                "Statement-Template"],
+            [9, "mcm_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [10, "mcm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Members Control", 1, "U", "mcm_cono"]]},
+    "memcto": {
+        "fld": [
+            [0, "mco_code", "UI", 3.0, "Occupation Code", "OC"],
+            [1, "mco_desc", "TX", 40.0, "Description", "Description"],
+            [2, "mco_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Occupation Records", 1, "U", "mco_code"]]},
+    "memctp": {
+        "fld": [
+            [0, "mcp_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mcp_type", "UA", 1.0, "Type", "T"],
+            [2, "mcp_code", "UI", 2.0, "Code", "Cd"],
+            [3, "mcp_date", "D1", 10.0, "Effective Date", "Effect-Dte"],
+            [4, "mcp_penalty", "UD", 5.2, "Penalty Rate", "P-Rte"],
+            [5, "mcp_prorata", "UA", 1.0, "Pro-Rata", "P"],
+            [6, "mcp_rate_01", "UD", 8.2, "Month 1", "Month-01"],
+            [7, "mcp_rate_02", "UD", 8.2, "Month 2", "Month-02"],
+            [8, "mcp_rate_03", "UD", 8.2, "Month 3", "Month-03"],
+            [9, "mcp_rate_04", "UD", 8.2, "Month 4", "Month-04"],
+            [10, "mcp_rate_05", "UD", 8.2, "Month 5", "Month-05"],
+            [11, "mcp_rate_06", "UD", 8.2, "Month 6", "Month-06"],
+            [12, "mcp_rate_07", "UD", 8.2, "Month 7", "Month-07"],
+            [13, "mcp_rate_08", "UD", 8.2, "Month 8", "Month-08"],
+            [14, "mcp_rate_09", "UD", 8.2, "Month 9", "Month-09"],
+            [15, "mcp_rate_10", "UD", 8.2, "Month 10", "Month-10"],
+            [16, "mcp_rate_11", "UD", 8.2, "Month 11", "Month-11"],
+            [17, "mcp_rate_12", "UD", 8.2, "Month 12", "Month-12"],
+            [18, "mcp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Member Prices", 1, "U", "mcp_cono", "mcp_type", "mcp_code",
+                "mcp_date"]]},
+    "memkon": {
+        "fld": [
+            [0, "mlk_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mlk_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mlk_code", "UI", 2.0, "Contact Code", "CC"],
+            [3, "mlk_detail", "TX", 20.0, "Contact Details", "Contact Details"],
+            [4, "mlk_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Membership Contacts", 1, "U", "mlk_cono", "mlk_memno", "mlk_code",
+                "mlk_detail"]]},
+    "memlnk": {
+        "fld": [
+            [0, "mll_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mll_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mll_lnkno", "UI", 6.0, "Linked Member", "Member"],
+            [3, "mll_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Membership Links", 1, "U", "mll_cono", "mll_memno",
+                "mll_lnkno"]]},
+    "memmst": {
+        "fld": [
+            [0, "mlm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mlm_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mlm_title", "NA", 6.0, "Title", "Title"],
+            [3, "mlm_initial", "UA", 5.0, "Initials", "Inl"],
+            [4, "mlm_surname", "TX", 30.0, "Surname", "Surname"],
+            [5, "mlm_names", "TX", 30.0, "Names", "Names"],
+            [6, "mlm_gender", "UA", 1.0, "Gender Code", "G"],
+            [7, "mlm_nation", "UA", 2.0, "Nationality", "NA"],
+            [8, "mlm_dob", "d1", 10.0, "Date of Birth", "Birth-Date"],
+            [9, "mlm_idnum", "NA", 13.0, "Identity Number", "ID-Number"],
+            [10, "mlm_occup", "UI", 3.0, "Occupation", "OC"],
+            [11, "mlm_proposer", "UI", 6.0, "Proposer", "Propos"],
+            [12, "mlm_seconder", "UI", 6.0, "Seconder", "Second"],
+            [13, "mlm_entry", "D1", 10.0, "Entry Date", "Entry-Date"],
+            [14, "mlm_payplan", "UA", 1.0, "Payment Plan", "P"],
+            [15, "mlm_oldno", "UI", 6.0, "Old Membership Number", "Old-No"],
+            [16, "mlm_state", "UA", 1.0, "Current Status", "S"],
+            [17, "mlm_sdate", "D1", 10.0, "Status Date", "Status-Dte"],
+            [18, "mlm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Membership Masterfile", 1, "U", "mlm_cono", "mlm_memno"]]},
+    "memsta": {
+        "fld": [
+            [0, "mls_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mls_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mls_status", "UA", 1.0, "Status Code", "S"],
+            [3, "mls_date", "D1", 10.0, "Status Date", "Status-Dte"],
+            [4, "mls_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [5, "mls_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [6, "mls_xflag", "UA", 1.0, "Export Flag", "X"],
+            [7, "mls_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Membership Status", 1, "U", "mls_seq"],
+            ["", 2, "N", "mls_cono", "mls_memno", "mls_status"]]},
+    "memtrn": {
+        "fld": [
+            [0, "mlt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mlt_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mlt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "mlt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "mlt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [5, "mlt_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [6, "mlt_tramt", "SD", 13.2, "Transaction Amount", "Trn-Amount"],
+            [7, "mlt_taxamt", "SD", 13.2, "Tax Amount", "Tax-Amount"],
+            [8, "mlt_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [9, "mlt_ctyp", "UA", 1.0, "Category Type", "T"],
+            [10, "mlt_ccod", "UI", 2.0, "Category Code", "Cd"],
+            [11, "mlt_desc", "TX", 30.0, "Description", "Description"],
+            [12, "mlt_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [13, "mlt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [14, "mlt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [15, "mlt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [16, "mlt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [17, "mlt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Members Transactions", 1, "U", "mlt_seq"],
+            ["", 2, "U", "mlt_cono", "mlt_memno", "mlt_type", "mlt_refno"],
+            ["", 3, "N", "mlt_cono", "mlt_type", "mlt_batch", "mlt_batind"]]},
+    "memtrs": {
+        "fld": [
+            [0, "mst_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "mst_memno", "UI", 6.0, "Membership Number", "Mem-No"],
+            [2, "mst_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "mst_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "mst_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [5, "mst_tramt", "SD", 11.2, "Transaction Amount", "Trn-Amount"],
+            [6, "mst_ctyp", "UA", 1.0, "Category Type", "T"],
+            [7, "mst_ccod", "UI", 2.0, "Category Code", "Cd"],
+            [8, "mst_desc", "TX", 30.0, "Description", "Description"],
+            [9, "mst_xflag", "UA", 1.0, "Export Flag", "X"],
+            [10, "mst_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Members Sportsman Transactions", 1, "U", "mst_seq"],
+            ["", 2, "U", "mst_cono", "mst_memno", "mst_type", "mst_refno"],
+            ["", 3, "N", "mst_cono", "mst_type"]]},
+    "rcacon": {
+        "fld": [
+            [0, "rcc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rcc_owner", "NA", 7.0, "Owner Code", "Own-Cod"],
+            [2, "rcc_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [3, "rcc_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [4, "rcc_cnum", "UI", 3.0, "Contract Number", "Seq"],
+            [5, "rcc_payind", "UA", 1.0, "Payment Frequency", "F"],
+            [6, "rcc_start", "D1", 10.0, "Commencement Date", "Start-Date"],
+            [7, "rcc_period", "UI", 3.0, "Number of Periods", "Per"],
+            [8, "rcc_rtlamt", "UD", 12.2, "Rental Amount", "Rent-Amount"],
+            [9, "rcc_deposit", "UD", 12.2, "Deposit Amount", "Depo-Amount"],
+            [10, "rcc_wamt", "UD", 12.2, "Water Amount", "Watr-Amount"],
+            [11, "rcc_wtyp", "UI", 12.2, "Water Type", "W"],
+            [12, "rcc_eamt", "UD", 12.2, "Electricity Amount", "Elec-Amount"],
+            [13, "rcc_etyp", "UI", 12.2, "Electricity Type", "E"],
+            [14, "rcc_status", "UA", 1.0, "Status Flag", "S"],
+            [15, "rcc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Contract", 1, "U", "rcc_cono", "rcc_owner", "rcc_code",
+                "rcc_acno", "rcc_cnum"]]},
+    "rcactl": {
+        "fld": [
+            [0, "cte_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cte_glint", "UA", 1.0, "Integration", "I"],
+            [2, "cte_glbnk", "UI", 7.0, "G/L Bank Account", "Bank-Ac"],
+            [3, "cte_lme", "d1", 10.0, "Last Month End", "LME-Date"],
+            [4, "cte_tplown", "NA", 20.0, "Owner Template", "Owner-Template"],
+            [5, "cte_tpltnt", "NA", 20.0, "Tenant Template", "Tenant-Template"],
+            [6, "cte_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [7, "cte_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Control", 1, "U", "cte_cono"]]},
+    "rcaint": {
+        "fld": [
+            [0, "rci_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rci_date", "D1", 10.0, "Date of Change", "Date-Chg"],
+            [2, "rci_prime", "UD", 5.2, "Prime Rate", "Prime"],
+            [3, "rci_bankr", "UD", 5.2, "Bank Rate", "BankR"],
+            [4, "rci_admin", "UD", 5.2, "Admin Rate", "Admin"],
+            [5, "rci_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Interest", 1, "U", "rci_cono", "rci_date"]]},
+    "rcaowm": {
+        "fld": [
+            [0, "rom_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rom_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [2, "rom_name", "NA", 30.0, "Name", "Name"],
+            [3, "rom_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [4, "rom_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [5, "rom_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [6, "rom_pcod", "NA", 4.0, "Postal Code", "Pcod"],
+            [7, "rom_home", "NA", 20.0, "Home Number", "Home Number"],
+            [8, "rom_office", "NA", 20.0, "Office Number", "Office Number"],
+            [9, "rom_mobile", "NA", 20.0, "Mobile Number", "Mobile Number"],
+            [10, "rom_fax", "NA", 20.0, "Fax Number", "Fax Number"],
+            [11, "rom_email", "TX", 50.0, "E-mail Address", "E-mail Address"],
+            [12, "rom_vatno", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [13, "rom_vatdf", "UA", 1.0, "VAT Default", "V"],
+            [14, "rom_bname", "NA", 20.0, "Bank Name", "Bank-Name"],
+            [15, "rom_bibt", "UI", 8.0, "Bank Branch", "Bank-IBT"],
+            [16, "rom_bacno", "NA", 16.0, "Bank Account", "Bank-Account-Num"],
+            [17, "rom_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Owner Masterfile", 1, "U", "rom_cono", "rom_acno"]]},
+    "rcaowt": {
+        "fld": [
+            [0, "rot_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rot_acno", "NA", 7.0, "Account Number", "Own-Num"],
+            [2, "rot_type", "UI", 2.0, "Transaction Type", "TT"],
+            [3, "rot_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [4, "rot_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [5, "rot_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [6, "rot_tramt", "SD", 11.2, "Transaction Amount", "Trn-Amount"],
+            [7, "rot_taxamt", "SD", 11.2, "Tax Amount", "Tax-Amount"],
+            [8, "rot_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [9, "rot_desc", "NA", 30.0, "Description", "Description"],
+            [10, "rot_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [11, "rot_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [12, "rot_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [13, "rot_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [14, "rot_xflag", "UA", 1.0, "Export Flag", "X"],
+            [15, "rot_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Rental Owner Transaction", 1, "U", "rot_seq"],
+            ["", 2, "N", "rot_cono", "rot_acno", "rot_type", "rot_refno"]]},
+    "rcaprm": {
+        "fld": [
+            [0, "rcp_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rcp_owner", "NA", 7.0, "Owners Code", "Own-Cod"],
+            [2, "rcp_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [3, "rcp_desc", "NA", 30.0, "Description", "Description"],
+            [4, "rcp_addr1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [5, "rcp_addr2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [6, "rcp_addr3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [7, "rcp_pcode", "NA", 4.0, "Postal Code", "Pcod"],
+            [8, "rcp_crate", "UD", 6.2, "Commission Rate", "C-Rate"],
+            [9, "rcp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Premises", 1, "U", "rcp_cono", "rcp_owner", "rcp_code"]]},
+    "rcatnm": {
+        "fld": [
+            [0, "rtn_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rtn_owner", "NA", 7.0, "Owner Code", "Own-Cod"],
+            [2, "rtn_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [3, "rtn_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [4, "rtn_name", "NA", 30.0, "Name of Tenant", "Name-of-Tenant"],
+            [5, "rtn_addr1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [6, "rtn_addr2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [7, "rtn_addr3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [8, "rtn_pcode", "NA", 4.0, "Postal Code", "Pcod"],
+            [9, "rtn_telno", "NA", 20.0, "Telephone Number",
+                "Telephone Number"],
+            [10, "rtn_email", "TX", 50.0, "E-mail Address", "E-mail Address"],
+            [11, "rtn_vatnum", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [12, "rtn_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Tenant Masterfile", 1, "U", "rtn_cono", "rtn_owner",
+                "rtn_code", "rtn_acno"]]},
+    "rcatnt": {
+        "fld": [
+            [0, "rtu_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rtu_owner", "NA", 7.0, "Owner Code", "Own-Cod"],
+            [2, "rtu_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [3, "rtu_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [4, "rtu_cnum", "UI", 3.0, "Contract Number", "Seq"],
+            [5, "rtu_type", "UI", 2.0, "Transaction Type", "TT"],
+            [6, "rtu_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [7, "rtu_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [8, "rtu_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [9, "rtu_mtyp", "UI", 1.0, "Movement Type", "M"],
+            [10, "rtu_tramt", "SD", 11.2, "Transaction Amount", "Trn-Amount"],
+            [11, "rtu_taxamt", "SD", 11.2, "Tax Amount", "Tax-Amount"],
+            [12, "rtu_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [13, "rtu_desc", "NA", 30.0, "Description", "Description"],
+            [14, "rtu_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [15, "rtu_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [16, "rtu_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [17, "rtu_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [18, "rtu_xflag", "UA", 1.0, "Export Flag", "X"],
+            [19, "rtu_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Rental Tenant Transactions", 1, "U", "rtu_seq"],
+            ["", 2, "N", "rtu_cono", "rtu_owner", "rtu_code", "rtu_acno",
+                "rtu_cnum", "rtu_type", "rtu_refno"]]},
+    "rptcol": {
+        "fld": [
+            [0, "rpc_rnam", "NA", 10.0, "Report Name", "Report-Nam"],
+            [1, "rpc_seq", "UI", 2.0, "Sequence", "Sq"],
+            [2, "rpc_typ", "NA", 1.0, "Column Type (C/E)", "T"],
+            [3, "rpc_label", "NA", 20.0, "Column Label", "Column-Label"],
+            [4, "rpc_detail", "NA", 100.0, "Column or Expression",
+                "Column-or-Expression"],
+            [5, "rpc_type", "NA", 2.0, "Display Type", "Tp"],
+            [6, "rpc_size", "UD", 6.1, "Display Size", "D-Size"],
+            [7, "rpc_head", "NA", 50.0, "Display Heading", "Display-Heading"],
+            [8, "rpc_group", "NA", 1.0, "Group (y/n)", "G"],
+            [9, "rpc_stot", "NA", 1.0, "Sub Total (y/n)", "S"],
+            [10, "rpc_stot_na", "NA", 30.0, "Sub-Total Narration", "Narration"],
+            [11, "rpc_stot_pg", "NA", 1.0, "New Page After Sub-Total (y/n)",
+                "P"],
+            [12, "rpc_gtot", "NA", 1.0, "Grand Total (y/n)", "G"],
+            [13, "rpc_disp", "NA", 1.0, "Display Column (y/n)", "D"],
+            [14, "rpc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Colums", 1, "U", "rpc_rnam", "rpc_seq"]]},
+    "rptexc": {
+        "fld": [
+            [0, "rpx_rnam", "NA", 10.0, "Report Name", "Name"],
+            [1, "rpx_seq", "UI", 2.0, "Sequence", "Sq"],
+            [2, "rpx_exc", "TX", 100.0, "Exception", "Exception"],
+            [3, "rpx_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Exception File", 1, "U", "rpx_rnam", "rpx_seq"]]},
+    "rptjon": {
+        "fld": [
+            [0, "rpj_rnam", "NA", 10.0, "Report Name", "Name"],
+            [1, "rpj_seq", "UI", 2.0, "Sequence", "Sq"],
+            [2, "rpj_typ", "UA", 1.0, "Join Type", "T"],
+            [3, "rpj_tab", "NA", 6.0, "Join Table", "Table"],
+            [4, "rpj_col", "NA", 100.0, "Join Columns", "Columns"],
+            [5, "rpj_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Exception File", 1, "U", "rpj_rnam", "rpj_seq"]]},
+    "rptmst": {
+        "fld": [
+            [0, "rpm_rnam", "NA", 10.0, "Report Name", "Name"],
+            [1, "rpm_desc", "NA", 30.0, "Report Description", "Description"],
+            [2, "rpm_head_1", "NA", 50.0, "Report Heading 1", "Heading 1"],
+            [3, "rpm_head_2", "NA", 50.0, "Report Heading 2", "Heading 2"],
+            [4, "rpm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Masterfile", 1, "U", "rpm_rnam"]]},
+    "rptord": {
+        "fld": [
+            [0, "rpo_rnam", "NA", 10.0, "Report Name", "Name"],
+            [1, "rpo_seq", "UI", 2.0, "Sequence", "Sq"],
+            [2, "rpo_column", "NA", 20.0, "Column Name", "Name"],
+            [3, "rpo_type", "NA", 1.0, "Ascending or Descending", "O"],
+            [4, "rpo_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Order Records", 1, "U", "rpo_rnam", "rpo_seq"]]},
+    "rptstm": {
+        "fld": [
+            [0, "rsm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rsm_rgrp", "NA", 30.0, "Report Group-Name",
+                "Report-Group-Name"],
+            [2, "rsm_emad", "TX", 50.0, "Email Address", "Email-Addres"],
+            [3, "rsm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Stream Masterfile", 1, "U", "rsm_cono", "rsm_rgrp"]]},
+    "rptstr": {
+        "fld": [
+            [0, "rsr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rsr_rgrp", "NA", 30.0, "Report Group Name",
+                "Report-Group-Name"],
+            [2, "rsr_rcod", "NA", 6.0, "Report Code", "Report"],
+            [3, "rsr_work", "TX", 50.0, "Report Work", "Report-Work"],
+            [4, "rsr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Stream Reports", 1, "U", "rsr_cono", "rsr_rgrp",
+                "rsr_rcod"]]},
+    "rpttab": {
+        "fld": [
+            [0, "rpt_rnam", "NA", 10.0, "Report Name", "Name"],
+            [1, "rpt_tabl", "NA", 20.0, "Report Table", "Table"],
+            [2, "rpt_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Tables", 1, "U", "rpt_rnam", "rpt_tabl"]]},
+    "rptvar": {
+        "fld": [
+            [0, "rpv_rnam", "NA", 10.0, "Report Name", "Rep-Name"],
+            [1, "rpv_seq", "UI", 2.0, "Sequence", "Sq"],
+            [2, "rpv_var", "NA", 30.0, "Variable", "Description"],
+            [3, "rpv_type", "NA", 2.0, "Variable Type", "Tp"],
+            [4, "rpv_size", "UD", 6.1, "Variable Size", "F-Size"],
+            [5, "rpv_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Report Variable Records", 1, "U", "rpv_rnam", "rpv_seq"]]},
+    "rtlcon": {
+        "fld": [
+            [0, "rtc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rtc_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [2, "rtc_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [3, "rtc_cnum", "UI", 3.0, "Contract Number", "Seq"],
+            [4, "rtc_payind", "UA", 1.0, "Payment Frequency", "F"],
+            [5, "rtc_start", "D1", 10.0, "Commencement Date", "Start-Date"],
+            [6, "rtc_period", "UI", 3.0, "Number of Periods", "Per"],
+            [7, "rtc_rtlamt", "UD", 12.2, "Rental Amount", "Rent-Amount"],
+            [8, "rtc_status", "UA", 1.0, "Status Flag", "S"],
+            [9, "rtc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Contract", 1, "U", "rtc_cono", "rtc_code", "rtc_acno",
+                "rtc_cnum"]]},
+    "rtlctl": {
+        "fld": [
+            [0, "ctr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctr_glint", "UA", 1.0, "Integration", "I"],
+            [2, "ctr_lme", "d1", 10.0, "Last Month End", "LME-Date"],
+            [3, "ctr_tplnam", "NA", 20.0, "Statement Template",
+                "Template-Name"],
+            [4, "ctr_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [5, "ctr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Control", 1, "U", "ctr_cono"]]},
+    "rtlmst": {
+        "fld": [
+            [0, "rtm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rtm_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [2, "rtm_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [3, "rtm_name", "NA", 30.0, "Name of Tenant", "Name-of-Tenant"],
+            [4, "rtm_addr1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [5, "rtm_addr2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [6, "rtm_addr3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [7, "rtm_pcode", "NA", 4.0, "Postal Code", "Pcod"],
+            [8, "rtm_telno", "NA", 20.0, "Telephone Number",
+                "Telephone Number"],
+            [9, "rtm_email", "NA", 50.0, "E-mail Address", "E-mail Address"],
+            [10, "rtm_vatind", "UA", 1.0, "VAT Indicator", "V"],
+            [11, "rtm_vatnum", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [12, "rtm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental Masterfile", 1, "U", "rtm_cono", "rtm_code", "rtm_acno"]]},
+    "rtlprm": {
+        "fld": [
+            [0, "rtp_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rtp_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [2, "rtp_desc", "NA", 30.0, "Description", "Description"],
+            [3, "rtp_addr1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [4, "rtp_addr2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [5, "rtp_addr3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [6, "rtp_pcode", "NA", 4.0, "Postal Code", "Pcod"],
+            [7, "rtp_rtlacc", "UI", 7.0, "G/L Rental Account", "Rtl-Acc"],
+            [8, "rtp_incacc", "UI", 7.0, "G/L Income Account", "Inc-Acc"],
+            [9, "rtp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Rental System Premises", 1, "U", "rtp_cono", "rtp_code"]]},
+    "rtltrn": {
+        "fld": [
+            [0, "rtt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "rtt_code", "NA", 7.0, "Premises Code", "Pr-Code"],
+            [2, "rtt_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [3, "rtt_cnum", "UI", 3.0, "Contract Number", "Seq"],
+            [4, "rtt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [5, "rtt_refno", "Na", 9.0, "Reference Number", "Reference"],
+            [6, "rtt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [7, "rtt_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [8, "rtt_tramt", "SD", 11.2, "Transaction Amount", "Trn-Amount"],
+            [9, "rtt_taxamt", "SD", 11.2, "Tax Amount", "Tax-Amount"],
+            [10, "rtt_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [11, "rtt_desc", "NA", 30.0, "Description", "Description"],
+            [12, "rtt_taxind", "UA", 1.0, "Tax Indicator", "V"],
+            [13, "rtt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [14, "rtt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [15, "rtt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [16, "rtt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [17, "rtt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Rental Transactions", 1, "U", "rtt_seq"],
+            ["", 2, "N", "rtt_cono", "rtt_type", "rtt_batch", "rtt_batind"],
+            ["", 3, "N", "rtt_cono", "rtt_code", "rtt_acno", "rtt_cnum",
+                "rtt_type", "rtt_refno"]]},
+    "scpclb": {
+        "fld": [
+            [0, "scc_club", "UI", 3.0, "Club Code", "Cod"],
+            [1, "scc_name", "NA", 30.0, "Club Name", "Name"],
+            [2, "scc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Bowling Clubs", 1, "U", "scc_club"]]},
+    "scpcmp": {
+        "fld": [
+            [0, "scp_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "scp_ccod", "UI", 3.0, "Competition Code", "CCD"],
+            [2, "scp_name", "TX", 50.0, "Competition Name", "Name"],
+            [3, "scp_tsex", "UA", 1.0, "Team Gender", "G"],
+            [4, "scp_tsiz", "UI", 1.0, "Team Size", "S"],
+            [5, "scp_fmat", "UA", 1.0, "Format", "F"],
+            [6, "scp_logo", "TX", 50.0, "Sponsor's Logo", "Sponsor's-Logo"],
+            [7, "scp_nsec", "UI", 2.0, "Number of Sections", "NS"],
+            [8, "scp_nent", "UI", 2.0, "Entries per Section", "ES"],
+            [9, "scp_subs", "UA", 1.0, "Sub-Sections", "S"],
+            [10, "scp_qual", "UA", 1.0, "Section Qualifiers", "Q"],
+            [11, "scp_clup", "UA", 1.0, "Closed-Up", "C"],
+            [12, "scp_mrnds", "UI", 2.0, "Number of M Rounds", "MR"],
+            [13, "scp_prnds", "UI", 2.0, "Number of P Rounds", "PR"],
+            [14, "scp_state", "UI", 1.0, "Status", "X"],
+            [15, "scp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Competition Masterfile", 1, "U", "scp_cono", "scp_ccod"]]},
+    "scpent": {
+        "fld": [
+            [0, "sce_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "sce_ccod", "UI", 3.0, "Competition Code", "CCD"],
+            [2, "sce_scod", "UI", 6.0, "Skip's Code", "S-Code"],
+            [3, "sce_pcod", "UI", 6.0, "Lead's Code", "L-Code"],
+            [4, "sce_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Entry Forms", 1, "U", "sce_cono", "sce_ccod", "sce_scod"]]},
+    "scpgme": {
+        "fld": [
+            [0, "scg_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "scg_ccod", "UI", 3.0, "Competition Code", "CCD"],
+            [2, "scg_ctyp", "UA", 1.0, "Competition Type", "T"],
+            [3, "scg_snum", "UI", 2.0, "Section Number", "SN"],
+            [4, "scg_subs", "UA", 1.0, "Sub-Section", "S"],
+            [5, "scg_rnum", "UI", 2.0, "Round Number", "RN"],
+            [6, "scg_ktyp", "UA", 1.0, "Key Type", "K"],
+            [7, "scg_scod", "UI", 6.0, "Skip Code", "S-Code"],
+            [8, "scg_ocod", "UI", 6.0, "Opposition Code", "O-Code"],
+            [9, "scg_rink", "UA", 2.0, "Rink Code", "RK"],
+            [10, "scg_sfor", "UI", 2.0, "Shots For", "SF"],
+            [11, "scg_sagt", "UI", 2.0, "Shots Against", "SA"],
+            [12, "scg_pnts", "UD", 3.1, "Points", "Pnts"],
+            [13, "scg_group", "UI", 1.0, "Group", "G"],
+            [14, "scg_seed", "UI", 2.0, "Seed Number", "SN"],
+            [15, "scg_pair", "UI", 2.0, "Pair Number", "PN"],
+            [16, "scg_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Competition Game", 1, "U", "scg_cono", "scg_ccod", "scg_ctyp",
+                "scg_snum", "scg_subs", "scg_rnum", "scg_ktyp", "scg_scod"]]},
+    "scpmem": {
+        "fld": [
+            [0, "scm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "scm_scod", "UI", 6.0, "Member's Code", "M-Code"],
+            [2, "scm_surname", "UA", 30.0, "Surname", "Surname"],
+            [3, "scm_names", "UA", 30.0, "Names", "Names"],
+            [4, "scm_gender", "UA", 1.0, "Gender Code", "G"],
+            [5, "scm_club", "UI", 3.0, "Club Code", "CCd"],
+            [6, "scm_email", "TX", 20.0, "Email Address", "Email-Address"],
+            [7, "scm_phone", "TX", 20.0, "Phone Number", "Phone-Number"],
+            [8, "scm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Competition Skips", 1, "U", "scm_cono", "scm_scod"]]},
+    "scprnd": {
+        "fld": [
+            [0, "scr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "scr_ccod", "UI", 3.0, "Competiton Code", "CCD"],
+            [2, "scr_rnum", "UI", 2.0, "Round Number", "RN"],
+            [3, "scr_date", "D1", 10.0, "Round Date", "Round-Date"],
+            [4, "scr_time", "UI", 4.0, "Starting Time", "STime"],
+            [5, "scr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Competition Round Records", 1, "U", "scr_cono", "scr_ccod",
+                "scr_rnum"]]},
+    "scpsec": {
+        "fld": [
+            [0, "scs_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "scs_ccod", "UI", 3.0, "Competiton Code", "CCD"],
+            [2, "scs_snum", "UI", 2.0, "Section Number", "SN"],
+            [3, "scs_rnum", "UI", 2.0, "Round Number", "RN"],
+            [4, "scs_club", "UI", 3.0, "Club Code", "Cod"],
+            [5, "scs_name", "NA", 30.0, "Club Name", "Club-Name"],
+            [6, "scs_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Competiton Section Records", 1, "U", "scs_cono", "scs_ccod",
+                "scs_snum", "scs_rnum"]]},
+    "slsctl": {
+        "fld": [
+            [0, "ctv_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctv_delnos", "UA", 1.0, "Delivery Notes", "D"],
+            [2, "ctv_delval", "UA", 1.0, "Print Values", "V"],
+            [3, "ctv_tplnam", "NA", 20.0, "Document Template", "Template-Name"],
+            [4, "ctv_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [5, "ctv_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Sales Invoicing Control", 1, "U", "ctv_cono"]]},
+    "slsiv1": {
+        "fld": [
+            [0, "si1_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "si1_rtn", "UA", 1.0, "Document Type", "T"],
+            [2, "si1_docno", "UI", 9.0, "Document Number", "Doc-Num"],
+            [3, "si1_mode", "UA", 1.0, "Payment Method", "M"],
+            [4, "si1_level", "UI", 1.0, "Price Level", "L"],
+            [5, "si1_chain", "UI", 3.0, "Chain Number", "Chn"],
+            [6, "si1_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [7, "si1_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [8, "si1_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [9, "si1_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [10, "si1_add4", "NA", 30.0, "Address Line 4", "Address Line 4"],
+            [11, "si1_date", "D1", 10.0, "Date", "Doc-Date"],
+            [12, "si1_our_ord", "Na", 9.0, "Our Order Number", "Ord-Num"],
+            [13, "si1_cus_ord", "Na", 14.0, "Customer Order Number",
+                "Cust-Ord-Num"],
+            [14, "si1_jobno", "Na", 7.0, "Job Number", "Job-Num"],
+            [15, "si1_contact", "NA", 30.0, "Contact", "Contact"],
+            [16, "si1_vatno", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [17, "si1_rep", "Na", 3.0, "Rep Number", "Rep"],
+            [18, "si1_inex", "UA", 1.0, "In/Exclusive Prices", "V"],
+            [19, "si1_mess", "TX", 150.0, "Message", "Message"],
+            [20, "si1_invno", "Na", 9.0, "Invoice Number", "Inv-Num"],
+            [21, "si1_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [22, "si1_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [23, "si1_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Sales Invoice Masterfile", 1, "U", "si1_cono", "si1_rtn",
+                "si1_docno"]]},
+    "slsiv2": {
+        "fld": [
+            [0, "si2_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "si2_rtn", "NA", 1.0, "Document Type", "T"],
+            [2, "si2_docno", "UI", 9.0, "Document Number", "Doc-Num"],
+            [3, "si2_seq", "UI", 3.0, "Sequence", "Seq"],
+            [4, "si2_group", "UA", 3.0, "Product Group", "Grp"],
+            [5, "si2_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [6, "si2_loc", "UA", 1.0, "Location", "L"],
+            [7, "si2_uoi", "NA", 10.0, "Unit Of Issue", "U.O.I."],
+            [8, "si2_desc", "TX", 30.0, "Description", "Description"],
+            [9, "si2_disc_per", "UD", 6.2, "Discount Percentage", "Disc-%"],
+            [10, "si2_qty", "SD", 11.2, "Quantity", "Quantity"],
+            [11, "si2_price", "UD", 10.2, "Unit Price", "Unit-Price"],
+            [12, "si2_vat_code", "UA", 1.0, "VAT Code", "V"],
+            [13, "si2_vat_rate", "UD", 6.2, "VAT Rate", "Rate"],
+            [14, "si2_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [15, "si2_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [16, "si2_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Sales Invoice Transactions", 1, "U", "si2_cono", "si2_rtn",
+                "si2_docno", "si2_seq"]]},
+    "slsiv3": {
+        "fld": [
+            [0, "si3_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "si3_rtn", "NA", 1.0, "Document Type", "T"],
+            [2, "si3_docno", "UI", 9.0, "Document Number", "Doc-Num"],
+            [3, "si3_seq", "UI", 3.0, "Invoice Line", "Seq"],
+            [4, "si3_rgroup", "UA", 3.0, "Product Group", "Grp"],
+            [5, "si3_rcode", "NA", 20.0, "Product Code", "Product-Code"],
+            [6, "si3_rqty", "UD", 11.2, "Quantity", "Quantity"],
+            [7, "si3_cost", "SD", 11.2, "Cost Price", "Cost-Price"],
+            [8, "si3_xflag", "UA", 1.0, "Export Flag", "X"],
+            [9, "si3_seqnum", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Sales Recipe Transactions", 1, "U", "si3_seqnum"],
+            ["", 2, "N", "si3_cono", "si3_rtn", "si3_docno", "si3_seq"]]},
+    "strcmu": {
+        "fld": [
+            [0, "smc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "smc_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "smc_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "smc_loc", "UA", 1.0, "Location", "L"],
+            [4, "smc_level", "UI", 1.0, "Price Level", "P"],
+            [5, "smc_markup", "UD", 6.2, "Percentage Markup", "%-Tage"],
+            [6, "smc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Code Price Markups", 1, "U", "smc_cono", "smc_group",
+                "smc_code", "smc_loc", "smc_level"]]},
     "strcst": {
         "fld": [
-            [0, 'stc_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'stc_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'stc_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'stc_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'stc_cost', 'UD', 10.2, 'Standard Cost', 'Cost-Price']],
-        "idx": [
-            ['Stores Standard Cost Prices', 1, 'U', 'stc_cono', 'stc_group',
-                'stc_code', 'stc_loc']]},
-    'strctl': {
-        'fld': [
-            [0, 'cts_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'cts_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'cts_locs', 'UA', 1.0, 'Multiple Locations', 'L'],
-            [3, 'cts_plevs', 'UI', 1.0, 'Selling Price Levels', 'P'],
-            [4, 'cts_automu', 'UA', 1.0, 'Automatic Markup', 'M'],
-            [5, 'cts_tplnam', 'NA', 20.0, 'Orders Template', 'Template-Name'],
-            [6, 'cts_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [7, 'cts_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Control', 1, 'U', 'cts_cono']]},
-    'strgmu': {
-        'fld': [
-            [0, 'smg_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'smg_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'smg_level', 'UI', 1.0, 'Price Level', 'P'],
-            [3, 'smg_markup', 'UD', 6.2, 'Percentage Markup', '%-Tage'],
-            [4, 'smg_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Group Price Markups', 1, 'U', 'smg_cono', 'smg_group',
-                'smg_level']]},
-    'strgrp': {
-        'fld': [
-            [0, 'gpm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'gpm_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'gpm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'gpm_vatcode', 'UA', 1.0, 'Vat Code', 'V'],
-            [4, 'gpm_sales', 'UI', 7.0, 'G/L Sales Code Number', 'Acc-Num'],
-            [5, 'gpm_costs', 'UI', 7.0, 'G/L COS Code Number', 'Acc-Num'],
-            [6, 'gpm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Groups', 1, 'U', 'gpm_cono', 'gpm_group']]},
-    'strloc': {
-        'fld': [
-            [0, 'srl_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'srl_loc', 'UA', 1.0, 'Location', 'L'],
-            [2, 'srl_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'srl_addr1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [4, 'srl_addr2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [5, 'srl_addr3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [6, 'srl_addr4', 'NA', 30.0, 'Address Line 4', 'Address Line 4'],
-            [7, 'srl_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Locations', 1, 'U', 'srl_cono', 'srl_loc']]},
-    'strmf1': {
-        'fld': [
-            [0, 'st1_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'st1_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'st1_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'st1_type', 'UA', 1.0, 'Type of Item (N/R)', 'T'],
-            [4, 'st1_desc', 'NA', 30.0, 'Description', 'Description'],
-            [5, 'st1_uoi', 'NA', 10.0, 'Units Of Issue', 'U.O.I'],
-            [6, 'st1_value_ind', 'UA', 1.0, 'Value Indicator', 'V'],
-            [7, 'st1_vatcode', 'UA', 1.0, 'VAT Code', 'V'],
-            [8, 'st1_chn_excl', 'UI', 3.0, 'Exclusive Chain', 'Exc'],
-            [9, 'st1_acc_excl', 'NA', 7.0, 'Exclusive Account', 'Exa'],
-            [10, 'st1_sls', 'UI', 7.0, 'Sales Account', 'Sal-Acc'],
-            [11, 'st1_cos', 'UI', 7.0, 'COS Account', 'COS-Acc'],
-            [12, 'st1_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Masterfile 1', 1, 'U', 'st1_cono', 'st1_group',
-                'st1_code']]},
-    'strmf2': {
-        'fld': [
-            [0, 'st2_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'st2_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'st2_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'st2_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'st2_bin', 'UA', 8.0, 'Bin Number', 'Bin-Num'],
-            [5, 'st2_reord_ind', 'UA', 1.0, 'Re-Order Indicator', 'R'],
-            [6, 'st2_reord_level', 'UI', 7.0, 'Re-Order Level', 'Re-Level'],
-            [7, 'st2_reord_qty', 'UI', 7.0, 'Re-Order Quantity', 'Re-Qty'],
-            [8, 'st2_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Masterfile 2', 1, 'U', 'st2_cono', 'st2_group', 'st2_code',
-                'st2_loc']]},
-    'strpom': {
-        'fld': [
-            [0, 'pom_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'pom_ordno', 'UI', 9.0, 'Order Number', 'Doc-Num'],
-            [2, 'pom_loc', 'UA', 1.0, 'Location Code', 'L'],
-            [3, 'pom_date', 'D1', 10.0, 'Date of Order', 'Ord-Date'],
-            [4, 'pom_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [5, 'pom_add1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [6, 'pom_add2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [7, 'pom_add3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [8, 'pom_add4', 'NA', 30.0, 'Address Line 4', 'Address Line 4'],
-            [9, 'pom_cusord', 'NA', 15.0, 'Customer Order Number',
-                'Cus-Ord-Number'],
-            [10, 'pom_jobnum', 'NA', 7.0, 'Job Number', 'Job-Num'],
-            [11, 'pom_contact', 'NA', 30.0, 'Contact Person', 'Contact-Person'],
-            [12, 'pom_vatno', 'NA', 10.0, 'VAT Number', 'VAT-Number'],
-            [13, 'pom_ordby', 'Na', 3.0, 'Ordered By', 'Ord'],
-            [14, 'pom_mess', 'NA', 150.0, 'Message', 'Message'],
-            [15, 'pom_delno', 'Na', 7.0, 'Delivery Note Number', 'Del-Not'],
-            [16, 'pom_deldt', 'd1', 10.0, 'Delivery Date', 'Deliv-Date'],
-            [17, 'pom_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [18, 'pom_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [19, 'pom_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Purchase Order Master', 1, 'U', 'pom_cono', 'pom_ordno'],
-            ['', 2, 'U', 'pom_cono', 'pom_ordno', 'pom_loc'],
-            ['', 3, 'U', 'pom_cono', 'pom_ordno', 'pom_loc', 'pom_date']]},
-    'strpot': {
-        'fld': [
-            [0, 'pot_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'pot_ordno', 'UI', 9.0, 'Order Number', 'Ord-Num'],
-            [2, 'pot_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [3, 'pot_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [4, 'pot_uoi', 'NA', 10.0, 'Units Of Issue', 'U.O.I'],
-            [5, 'pot_desc', 'NA', 30.0, 'Description', 'Description'],
-            [6, 'pot_qty', 'SD', 11.2, 'Quantity Ordered', 'Qty-Order'],
-            [7, 'pot_price', 'UD', 10.2, 'Unit Price', 'Unit Price'],
-            [8, 'pot_disper', 'UD', 6.2, 'Discount', 'Disc-%'],
-            [9, 'pot_vatcod', 'UA', 1.0, 'VAT Code', 'V'],
-            [10, 'pot_vatrat', 'UD', 6.2, 'VAT Rate', 'Rate'],
-            [11, 'pot_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [12, 'pot_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [13, 'pot_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [14, 'pot_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Purchase Order Transactions', 1, 'U', 'pot_seq'],
-            ['', 2, 'U', 'pot_cono', 'pot_ordno', 'pot_group', 'pot_code'],
-            ['', 3, 'N', 'pot_cono', 'pot_ordno']]},
-    'strprc': {
-        'fld': [
-            [0, 'stp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'stp_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'stp_code', 'NA', 20.0, 'Stock Number', 'Product-Code'],
-            [3, 'stp_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'stp_level', 'UI', 1.0, 'Price Level', 'P'],
-            [5, 'stp_price', 'UD', 10.2, 'Selling Price', 'Unit-Price'],
-            [6, 'stp_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Selling Prices', 1, 'U', 'stp_cono', 'stp_group',
-                'stp_code', 'stp_loc', 'stp_level']]},
-    'strrcp': {
-        'fld': [
-            [0, 'srr_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'srr_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'srr_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'srr_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'srr_rgroup', 'UA', 3.0, 'Product Group', 'Grp'],
-            [5, 'srr_rcode', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [6, 'srr_rqty', 'UD', 11.2, 'Quantity', 'Quantity'],
-            [7, 'srr_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Recipe Records', 1, 'U', 'srr_cono', 'srr_group',
-                'srr_code', 'srr_loc', 'srr_rgroup', 'srr_rcode']]},
-    'strtrn': {
-        'fld': [
-            [0, 'stt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'stt_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'stt_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'stt_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'stt_trdt', 'D1', 10.0, 'Transaction Date', 'Trans-Date'],
-            [5, 'stt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [6, 'stt_ref1', 'Na', 9.0, 'Reference 1', 'Reference'],
-            [7, 'stt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [8, 'stt_ref2', 'Na', 9.0, 'Reference 2', 'Ref-Num-2'],
-            [9, 'stt_qty', 'SD', 11.2, 'Transaction Quantity', 'Quantity'],
-            [10, 'stt_cost', 'SD', 11.2, 'Transaction Cost', 'Cost-Value'],
-            [11, 'stt_sell', 'SD', 11.2, 'Transaction Sale', 'Sale-Value'],
-            [12, 'stt_curdt', 'D2', 7.0, 'Current Date', 'Curr-Dt'],
-            [13, 'stt_desc', 'NA', 30.0, 'Description', 'Description'],
-            [14, 'stt_chain', 'UI', 3.0, 'Chain', 'Chn'],
-            [15, 'stt_acno', 'NA', 7.0, 'Account Number', 'Acc-Num'],
-            [16, 'stt_rep', 'Na', 3.0, 'Salesman', 'Rep'],
-            [17, 'stt_styp', 'UA', 3.0, 'System Type', 'Sys'],
-            [18, 'stt_trdis', 'UD', 6.2, 'Trade Discount', 'Tr-Dis'],
-            [19, 'stt_batind', 'UA', 1.0, 'Batch Indicator', 'B'],
-            [20, 'stt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [21, 'stt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [22, 'stt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [23, 'stt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Stores Transactions', 1, 'U', 'stt_seq'],
-            ['', 2, 'N', 'stt_cono', 'stt_group', 'stt_code', 'stt_loc'],
-            ['', 3, 'N', 'stt_cono', 'stt_curdt', 'stt_batch', 'stt_type'],
-            ['', 4, 'N', 'stt_cono', 'stt_type', 'stt_batch', 'stt_batind'],
-            ['', 5, 'N', 'stt_cono', 'stt_group', 'stt_code', 'stt_loc',
-                'stt_curdt'],
-            ['', 6, 'N', 'stt_cono', 'stt_type', 'stt_loc', 'stt_ref1']]},
-    'struoi': {
-        'fld': [
-            [0, 'unm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'unm_unit', 'NA', 10.0, 'Unit Of Issue', 'U.O.I'],
-            [2, 'unm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [3, 'unm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Stores Units Of Issue Records', 1, 'U', 'unm_cono', 'unm_unit']]},
-    'strvar': {
-        'fld': [
-            [0, 'stv_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'stv_group', 'UA', 3.0, 'Product Group', 'Grp'],
-            [2, 'stv_code', 'NA', 20.0, 'Product Code', 'Product-Code'],
-            [3, 'stv_loc', 'UA', 1.0, 'Location', 'L'],
-            [4, 'stv_bin', 'UA', 8.0, 'Bin Number', 'Bin-Num'],
-            [5, 'stv_qty', 'SD', 9.2, 'Quantity', 'Quantity'],
-            [6, 'stv_ucost', 'UD', 8.2, 'Unit Cost Price', 'Unit-Cost'],
-            [7, 'stv_usell', 'UD', 8.2, 'Unit Selling Price', 'Unit-Sell']],
-        'idx': [
-            ['Stock Take Variance', 1, 'U', 'stv_cono', 'stv_group', 'stv_code',
-                'stv_loc']]},
-    'telcon': {
-        'fld': [
-            [0, 'tdc_name', 'NA', 50.0, 'Name', 'Name'],
-            [1, 'tdc_contact', 'NA', 50.0, 'Contact Name', 'Contact-Name'],
-            [2, 'tdc_desig', 'NA', 20.0, 'Designation', 'Designation'],
-            [3, 'tdc_telno', 'NA', 20.0, 'Direct Number', 'Direct-Number'],
-            [4, 'tdc_celno', 'NA', 20.0, 'Cell Number', 'Cell-Number'],
-            [5, 'tdc_email', 'TX', 50.0, 'Email Address', 'Email-Address'],
-            [6, 'tdc_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Telephone Directory', 1, 'U', 'tdc_name', 'tdc_contact']]},
-    'telgrp': {
-        'fld': [
-            [0, 'tdg_group', 'UA', 3.0, 'Group Code', 'Grp'],
-            [1, 'tdg_desc', 'NA', 30.0, 'Description', 'Description'],
-            [2, 'tdg_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Group Records', 1, 'U', 'tdg_group']]},
-    'telmst': {
-        'fld': [
-            [0, 'tdm_name', 'TX', 50.0, 'Name', 'Name'],
-            [1, 'tdm_adr1', 'TX', 30.0, 'Address Line 1', 'Address-Line-1'],
-            [2, 'tdm_adr2', 'TX', 30.0, 'Address Line 2', 'Address-Line-2'],
-            [3, 'tdm_adr3', 'TX', 30.0, 'Address Line 3', 'Address-Line-3'],
-            [4, 'tdm_pcode', 'TX', 4.0, 'Postal Code', 'Post-Code'],
-            [5, 'tdm_telno', 'TX', 20.0, 'Phone Number', 'Phone-Number'],
-            [6, 'tdm_faxno', 'TX', 20.0, 'Fax Number', 'Facsimile-Number'],
-            [7, 'tdm_mobile', 'TX', 20.0, 'Mobile Number', 'Mobile-Number'],
-            [8, 'tdm_email', 'TX', 50.0, 'Email Address', 'Email-Address'],
-            [9, 'tdm_group', 'TX', 50.0, 'Contact Groups', 'Contact-Groups'],
-            [10, 'tdm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Telephone Directory', 1, 'U', 'tdm_name']]},
-    'tpldet': {
-        'fld': [
-            [0, 'tpd_tname', 'NA', 20.0, 'Template Name', 'Template'],
-            [1, 'tpd_detseq', 'UD', 6.2, 'Line Number', 'Line'],
-            [2, 'tpd_type', 'UA', 1.0, 'Line Type', 'T'],
-            [3, 'tpd_place', 'UA', 1.0, 'Placement', 'P'],
-            [4, 'tpd_ttyp', 'TX', 1.0, 'Text Type', 'T'],
-            [5, 'tpd_text', 'TX', 30.0, 'Text', 'Text'],
-            [6, 'tpd_font', 'NA', 20.0, 'Font Name', 'Font Name'],
-            [7, 'tpd_size', 'UI', 2.0, 'Font Size', 'SZ'],
-            [8, 'tpd_colour', 'NA', 7.0, 'Font Colour', '#Colour'],
-            [9, 'tpd_bold', 'UA', 1.0, 'Bold', 'B'],
-            [10, 'tpd_italic', 'UA', 1.0, 'Italic', 'I'],
-            [11, 'tpd_uline', 'UA', 1.0, 'Underline', 'U'],
-            [12, 'tpd_align', 'UA', 1.0, 'Alignment', 'A'],
-            [13, 'tpd_border', 'UA', 4.0, 'Draw Border', 'Bord'],
-            [14, 'tpd_fill', 'UA', 1.0, 'Fill Background', 'F'],
-            [15, 'tpd_x1', 'UD', 6.2, 'X1 Co-Ordinate', 'X1'],
-            [16, 'tpd_chrs', 'UI', 3.0, 'Width in Characters', 'WWW'],
-            [17, 'tpd_x2', 'UD', 6.2, 'X2 Co-Ordinate', 'X2'],
-            [18, 'tpd_y1', 'UD', 6.2, 'Y1 Co-Ordinate', 'Y1'],
-            [19, 'tpd_lh', 'UI', 3.0, 'Line Height', 'HHH'],
-            [20, 'tpd_y2', 'UD', 6.2, 'Y2 Co-Ordinate', 'Y2'],
-            [21, 'tpd_thick', 'UD', 3.1, 'Line Thickness', 'LTN'],
-            [22, 'tpd_mrgcod', 'TX', 20.0, 'Merge Code', 'Merge Code'],
-            [23, 'tpd_mrg_font', 'NA', 20.0, 'Font Name', 'Font Name'],
-            [24, 'tpd_mrg_size', 'UI', 2.0, 'Font/Line Size', 'SZ'],
-            [25, 'tpd_mrg_colour', 'NA', 7.0, 'Font Colour', '#Colour'],
-            [26, 'tpd_mrg_bold', 'UA', 1.0, 'Bold', 'B'],
-            [27, 'tpd_mrg_italic', 'UA', 1.0, 'Italic', 'I'],
-            [28, 'tpd_mrg_uline', 'UA', 1.0, 'Underline', 'U'],
-            [29, 'tpd_mrg_align', 'UA', 1.0, 'Alignment', 'A'],
-            [30, 'tpd_mrg_border', 'UA', 4.0, 'Draw Border', 'Bord'],
-            [31, 'tpd_mrg_fill', 'UA', 1.0, 'Fill Background', 'F'],
-            [32, 'tpd_mrg_x1', 'UD', 6.2, 'X1 Co-Ordinate', 'X1'],
-            [33, 'tpd_mrg_chrs', 'UI', 3.0, 'Width in Characters', 'WWW'],
-            [34, 'tpd_mrg_x2', 'UD', 6.2, 'X2 Co-Ordinate', 'X2'],
-            [35, 'tpd_mrg_y1', 'UD', 6.2, 'Y1 Co-Ordinate', 'Y1'],
-            [36, 'tpd_mrg_lh', 'UI', 3.0, 'Line Height', 'HHH'],
-            [37, 'tpd_mrg_y2', 'UD', 6.2, 'Y2 Co-Ordinate', 'Y2'],
-            [38, 'tpd_lines', 'UI', 2.0, 'Number of Lines', 'L'],
-            [39, 'tpd_repeat', 'UI', 2.0, 'Times to Repeat', 'R']],
-        'idx': [
-            ['Template Details', 1, 'U', 'tpd_tname', 'tpd_detseq']]},
-    'tplmst': {
-        'fld': [
-            [0, 'tpm_tname', 'NA', 20.0, 'Template Name', 'Template'],
-            [1, 'tpm_title', 'TX', 20.0, 'Template Title', 'Title'],
-            [2, 'tpm_type', 'UA', 1.0, 'Template Type', 'T'],
-            [3, 'tpm_system', 'UA', 3.0, 'System', 'Sys'],
-            [4, 'tpm_sttp', 'UA', 1.0, 'Statement Type', 'S'],
-            [5, 'tpm_pgsize', 'UA', 2.0, 'Page Size', 'PS'],
-            [6, 'tpm_orient', 'UA', 1.0, 'Orientation', 'O']],
-        'idx': [
-            ['Template Master', 1, 'U', 'tpm_tname']]},
-    'verupd': {
-        'fld': [
-            [0, 'ver_version', 'NA', 10.0, 'Version Number', 'Version-No'],
-            [1, 'ver_upddate', 'D1', 10.0, 'Date Updated', 'Updated-On']],
-        'idx': [
-            ['Version Updated', 1, 'U', 'ver_version']]},
-    'wagbal': {
-        'fld': [
-            [0, 'wbl_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wbl_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wbl_balno', 'UI', 3.0, 'Balance Number', 'Bal'],
-            [3, 'wbl_balance', 'SD', 13.2, 'Balance Amount', 'Balance-Amnt'],
-            [4, 'wbl_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Wages Balance Records', 1, 'U', 'wbl_cono', 'wbl_empno',
-                'wbl_balno']]},
-    'wagcap': {
-        'fld': [
-            [0, 'wcp_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wcp_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wcp_dept', 'UI', 3.0, 'Dept Code', 'Dep'],
-            [3, 'wcp_job', 'UI', 5.0, 'Job Number', 'JobNo'],
-            [4, 'wcp_type', 'UA', 1.0, 'Type', 'T'],
-            [5, 'wcp_code', 'UI', 3.0, 'Code Number', 'Cod'],
-            [6, 'wcp_ind', 'UA', 1.0, 'Pay Indicator', 'P'],
-            [7, 'wcp_amt', 'SD', 9.2, 'Amount', 'Amount'],
-            [8, 'wcp_paid', 'UA', 1.0, 'Paid Flag', 'P'],
-            [9, 'wcp_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [10, 'wcp_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [11, 'wcp_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Wages Data Capture', 1, 'U', 'wcp_seq'],
-            ['', 2, 'N', 'wcp_cono', 'wcp_empno', 'wcp_type', 'wcp_code']]},
-    'wagcod': {
-        'fld': [
-            [0, 'wcd_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wcd_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wcd_type', 'UA', 1.0, 'Type', 'T'],
-            [3, 'wcd_code', 'UI', 3.0, 'Code Number', 'Cod'],
-            [4, 'wcd_eamt', 'UD', 8.2, 'Employee Amount', 'Ee-Amount'],
-            [5, 'wcd_ramt', 'UD', 8.2, 'Employer Amount', 'Er-Amount'],
-            [6, 'wcd_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Employees Earn and Ded Codes', 1, 'U', 'wcd_cono', 'wcd_empno',
-                'wcd_type', 'wcd_code']]},
-    'wagctl': {
-        'fld': [
-            [0, 'ctw_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ctw_glint', 'UA', 1.0, 'Integration', 'I'],
-            [2, 'ctw_regno', 'NA', 10.0, 'Registration Number', 'Reg-Num'],
-            [3, 'ctw_sdlno', 'NA', 10.0, 'SDL Number', 'SDL-Num'],
-            [4, 'ctw_uifno', 'NA', 10.0, 'UIF Number', 'UIF-Num'],
-            [5, 'ctw_trade', 'UI', 4.0, 'Trade Code', 'T-CD'],
-            [6, 'ctw_d_hrs', 'UD', 6.2, 'Daily Hours', 'Hrs-Day'],
-            [7, 'ctw_w_hrs', 'UD', 6.2, 'Weekly Hours', 'Hrs-Week'],
-            [8, 'ctw_m_hrs', 'UD', 6.2, 'Monthly Hours', 'Hrs-Month'],
-            [9, 'ctw_irp_dip', 'UA', 1.0, 'IRP5 Diplomatic', 'D'],
-            [10, 'ctw_i_rate', 'UD', 6.2, 'Interest Rate', 'Rate-%'],
-            [11, 'ctw_i_date', 'd1', 10.0, 'Last Interest Raised Date',
-                'Last-IDate'],
-            [12, 'ctw_bestac', 'NA', 4.0, 'Best Account Code', 'Best'],
-            [13, 'ctw_besttp', 'UI', 2.0, 'Best Account Type', 'BT'],
-            [14, 'ctw_tplnam', 'NA', 20.0, 'Payslip Template', 'Template-Name'],
-            [15, 'ctw_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [16, 'ctw_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Wages Control', 1, 'U', 'ctw_cono']]},
-    'wagedc': {
-        'fld': [
-            [0, 'ced_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'ced_type', 'UA', 1.0, 'Type', 'T'],
-            [2, 'ced_code', 'UI', 3.0, 'Code Number', 'Cod'],
-            [3, 'ced_desc', 'NA', 30.0, 'Description', 'Description'],
-            [4, 'ced_var', 'UA', 1.0, 'Fixed or Variable', 'F'],
-            [5, 'ced_eind', 'UA', 1.0, 'Rate or Amount', 'R'],
-            [6, 'ced_ebase', 'UI', 3.0, 'Based On', 'B'],
-            [7, 'ced_eamt', 'UD', 8.2, 'Amount', 'Amount'],
-            [8, 'ced_elimit', 'UD', 8.2, 'Limit', 'Limit'],
-            [9, 'ced_eglco', 'UI', 3.0, 'G/L Cono', 'Coy'],
-            [10, 'ced_eglno', 'UI', 7.0, 'G/L Acno', 'G/L-Num'],
-            [11, 'ced_earntype', 'UA', 1.0, 'Earnings Type', 'T'],
-            [12, 'ced_rind', 'UA', 1.0, 'Rate or Amount', 'R'],
-            [13, 'ced_rbase', 'UI', 3.0, 'Based On', 'B'],
-            [14, 'ced_ramt', 'UD', 8.2, 'Amount', 'Amount'],
-            [15, 'ced_rlimit', 'UD', 8.2, 'Limit', 'Limit'],
-            [16, 'ced_rglco', 'UI', 3.0, 'G/L Cono', 'Coy'],
-            [17, 'ced_rglno', 'UI', 7.0, 'G/L Acno', 'G/L-Num'],
-            [18, 'ced_taxcode', 'UA', 1.0, 'Tax Code', 'T'],
-            [19, 'ced_taxportion', 'UD', 6.2, 'Tax Percentage', 'TAX-%'],
-            [20, 'ced_ror', 'UI', 4.0, 'Receiver of Revenue Code', 'Code'],
-            [21, 'ced_report', 'UA', 1.0, 'Include in Report', 'I'],
-            [22, 'ced_must', 'UA', 1.0, 'Must Pay Indicator', 'M'],
-            [23, 'ced_balno', 'UI', 1.0, 'Balance Number', 'B'],
-            [24, 'ced_hr_limit', 'UD', 5.2, 'Hourly Limit', 'HrLim'],
-            [25, 'ced_monthly', 'UA', 1.0, 'Monthly Deduction', 'M'],
-            [26, 'ced_uifportion', 'UD', 6.2, 'UIF Percentage', 'UIF-%'],
-            [27, 'ced_sdlportion', 'UD', 6.2, 'SDL Percentage', 'SDL-%'],
-            [28, 'ced_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Earnings and Deduction Codes', 1, 'U', 'ced_cono', 'ced_type',
-                'ced_code']]},
-    'wagirp': {
-        'fld': [
-            [0, 'wip_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wip_year', 'UI', 4.0, 'Tax Tear', 'Year'],
-            [2, 'wip_genno', 'UI', 5.0, 'Generation Number', 'GenNo'],
-            [3, 'wip_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [4, 'wip_irpno', 'UI', 9.0, 'Last IRP5 Number', 'IrpNo'],
-            [5, 'wip_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Wages IRP5 Control', 1, 'U', 'wip_cono', 'wip_year', 'wip_genno',
-                'wip_empno']]},
-    'waglmf': {
-        'fld': [
-            [0, 'wlm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wlm_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wlm_loan', 'UI', 2.0, 'Loan', 'Ln'],
-            [3, 'wlm_desc', 'NA', 30.0, 'Description', 'Description'],
-            [4, 'wlm_code', 'UI', 3.0, 'Deduction Code', 'Cod'],
-            [5, 'wlm_rate', 'UD', 6.2, 'Interest Percentage', 'Int-%'],
-            [6, 'wlm_start', 'D1', 10.0, 'Start Date', 'Start-Date'],
-            [7, 'wlm_repay', 'UD', 10.2, 'Deduction Amount', 'Ded-Amount'],
-            [8, 'wlm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Staff Loans Masterfile', 1, 'U', 'wlm_cono', 'wlm_empno',
-                'wlm_loan']]},
-    'wagltf': {
-        'fld': [
-            [0, 'wlt_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wlt_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wlt_loan', 'UI', 2.0, 'Loan Number', 'Ln'],
-            [3, 'wlt_batch', 'Na', 7.0, 'Batch Number', 'BatchNo'],
-            [4, 'wlt_type', 'UI', 2.0, 'Transaction Type', 'TT'],
-            [5, 'wlt_trdt', 'D1', 10.0, 'Transaction Date', 'Date'],
-            [6, 'wlt_ref', 'Na', 9.0, 'Reference Number', 'Reference'],
-            [7, 'wlt_amt', 'SD', 13.2, 'Transaction Amount', 'Trn-Amount'],
-            [8, 'wlt_cap', 'SD', 13.2, 'Capital Amount', 'Cap-Amount'],
-            [9, 'wlt_ded', 'SD', 13.2, 'Deduction Amount', 'Ded-Amount'],
-            [10, 'wlt_per', 'UD', 6.2, 'Interest Percentage', 'Int-%'],
-            [11, 'wlt_curdt', 'D2', 7.0, 'Current Date', 'Cur-Date'],
-            [12, 'wlt_desc', 'TX', 30.0, 'Description', 'Description'],
-            [13, 'wlt_batind', 'NA', 1.0, 'Batch Indicator', 'B'],
-            [14, 'wlt_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [15, 'wlt_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [16, 'wlt_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [17, 'wlt_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Staff Loans Transactions', 1, 'U', 'wlt_seq'],
-            ['', 2, 'N', 'wlt_cono', 'wlt_type', 'wlt_batch', 'wlt_batind'],
-            ['', 3, 'N', 'wlt_cono', 'wlt_empno', 'wlt_loan', 'wlt_type',
-                'wlt_ref']]},
-    'wagmst': {
-        'fld': [
-            [0, 'wgm_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wgm_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wgm_dept', 'UI', 3.0, 'Department', 'Dep'],
-            [3, 'wgm_class', 'UI', 1.0, 'Class', 'C'],
-            [4, 'wgm_sname', 'NA', 30.0, 'Surname', 'Surname'],
-            [5, 'wgm_fname', 'NA', 30.0, 'First Names', 'First Names'],
-            [6, 'wgm_dob', 'd1', 10.0, 'Date of Birth', 'DOB'],
-            [7, 'wgm_idno', 'NA', 13.0, 'Identity Number', 'ID-Number'],
-            [8, 'wgm_spouse', 'NA', 16.0, 'Spouse Name', 'Spouse Name'],
-            [9, 'wgm_spouse_id', 'NA', 13.0, 'Spouse ID-Number', 'ID-Number'],
-            [10, 'wgm_addr1', 'NA', 30.0, 'Address Line 1', 'Address Line 1'],
-            [11, 'wgm_addr2', 'NA', 30.0, 'Address Line 2', 'Address Line 2'],
-            [12, 'wgm_addr3', 'NA', 30.0, 'Address Line 3', 'Address Line 3'],
-            [13, 'wgm_pcode', 'NA', 4.0, 'Postal Code', 'Pcod'],
-            [14, 'wgm_telno', 'NA', 16.0, 'Telephone Number',
-                'Telephone Number'],
-            [15, 'wgm_emadd', 'TX', 50.0, 'Email Address', 'Email Address'],
-            [16, 'wgm_start', 'd1', 10.0, 'Start Date', 'Start-Date'],
-            [17, 'wgm_payamt', 'UD', 10.2, 'Salary/Rate', 'Salary/Rte'],
-            [18, 'wgm_freq', 'UA', 1.0, 'Pay Frequency', 'F'],
-            [19, 'wgm_ptype', 'UA', 1.0, 'Pay Type', 'T'],
-            [20, 'wgm_paye', 'UA', 1.0, 'Pay PAYE (Y/N)', 'P'],
-            [21, 'wgm_taxoff', 'NA', 16.0, 'Tax Office', 'Tax Office'],
-            [22, 'wgm_taxno', 'NA', 10.0, 'Tax Number', 'Tax Num'],
-            [23, 'wgm_nature', 'UA', 1.0, 'Nature of Employee', 'N'],
-            [24, 'wgm_regno', 'UI', 9.0, 'Registration Number', 'Reg-Num'],
-            [25, 'wgm_vol_over', 'UA', 1.0, 'Voluntary Overdeduction', 'V'],
-            [26, 'wgm_fix_rate', 'UD', 6.2, 'Fixed Rate', 'FixRate'],
-            [27, 'wgm_direct', 'NA', 13.0, 'Directive', 'Directive'],
-            [28, 'wgm_btype', 'UA', 1.0, 'Account Type', 'T'],
-            [29, 'wgm_bname', 'NA', 30.0, 'Bank Name', 'Bank-Name'],
-            [30, 'wgm_bbranch', 'UI', 8.0, 'Bank Branch Code', 'B-Branch'],
-            [31, 'wgm_bacno', 'NA', 16.0, 'Bank Account Number',
-                'B-Account-Number'],
-            [32, 'wgm_bpayee', 'NA', 30.0, 'Bank Payee Name', 'B-Payee-Name'],
-            [33, 'wgm_relate', 'UI', 1.0, 'Payee Relationship', 'R'],
-            [34, 'wgm_term', 'd1', 10.0, 'Term Date', 'Term-Date'],
-            [35, 'wgm_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Wages Master Records', 1, 'U', 'wgm_cono', 'wgm_empno']]},
-    'wagrcv': {
-        'fld': [
-            [0, 'rcv_code', 'UI', 4.0, 'Code Number', 'Code'],
-            [1, 'rcv_desc', 'NA', 50.0, 'Description', 'Description']],
-        'idx': [
-            ['Receiver Of Revenue Codes', 1, 'U', 'rcv_code']]},
-    'wagtf1': {
-        'fld': [
-            [0, 'wt1_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wt1_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wt1_page', 'UI', 5.0, 'Payslip Number', 'Page'],
-            [3, 'wt1_date', 'D1', 10.0, 'Payrun Date', 'Pay-Date'],
-            [4, 'wt1_freq', 'UA', 1.0, 'Pay Frequency', 'F'],
-            [5, 'wt1_type', 'UA', 1.0, 'Pay Type (C/Q/E)', 'P'],
-            [6, 'wt1_dept', 'UI', 3.0, 'Department Code', 'Dep'],
-            [7, 'wt1_rate', 'SD', 13.2, 'Salary', 'Salary'],
-            [8, 'wt1_nhrs', 'SD', 13.2, 'Normal Hours', 'Normal-Hrs'],
-            [9, 'wt1_npay', 'SD', 13.2, 'Normal Pay', 'Normal-Pay'],
-            [10, 'wt1_taxbl', 'SD', 13.2, 'Taxable Pay', 'Taxable-Pay'],
-            [11, 'wt1_notax', 'SD', 13.2, 'Non Taxable', 'Non-Tax-Pay'],
-            [12, 'wt1_rtpay', 'SD', 13.2, 'Retrench', 'Retrench-Pay'],
-            [13, 'wt1_anpay', 'SD', 13.2, 'Annual Pay', 'Annual-Pay'],
-            [14, 'wt1_pspay', 'SD', 13.2, 'Pseudo Pay', 'Pseudo-Pay'],
-            [15, 'wt1_taxdd', 'SD', 13.2, 'Tax Ded Ded', 'Tax-Ded-Ded'],
-            [16, 'wt1_nondd', 'SD', 13.2, 'Non Ded Ded', 'Non-Ded-Ded'],
-            [17, 'wt1_psded', 'SD', 13.2, 'Pseudo Deduction', 'Pseudo-Ded'],
-            [18, 'wt1_uifpay', 'UI', 9.0, 'UIF Deduction Pay', 'UIF-Pay'],
-            [19, 'wt1_sdlpay', 'UI', 9.0, 'SDL Deduction Pay', 'SDL-Pay'],
-            [20, 'wt1_shift', 'SD', 13.2, 'Shifts', 'Shifts'],
-            [21, 'wt1_drbal', 'SD', 13.2, 'Balance C/F', 'Balance'],
-            [22, 'wt1_capnm', 'TX', 20.0, 'Capture Name', 'Capture-Name'],
-            [23, 'wt1_capdt', 'd1', 10.0, 'Capture Date', 'Capture-Dt'],
-            [24, 'wt1_xflag', 'UA', 1.0, 'Export Flag', 'X'],
-            [25, 'wt1_seq', 'US', 10.0, 'Sequence', 'Sequence']],
-        'idx': [
-            ['Wages Transactions 1', 1, 'U', 'wt1_seq'],
-            ['', 2, 'U', 'wt1_cono', 'wt1_empno', 'wt1_page', 'wt1_date',
-                'wt1_freq']]},
-    'wagtf2': {
-        'fld': [
-            [0, 'wt2_cono', 'UI', 3.0, 'Company Number', 'Coy'],
-            [1, 'wt2_empno', 'UI', 5.0, 'Employee Number', 'EmpNo'],
-            [2, 'wt2_page', 'UI', 5.0, 'Payslip Number', 'Page'],
-            [3, 'wt2_date', 'D1', 10.0, 'Payrun Date', 'Pay-Date'],
-            [4, 'wt2_type', 'UA', 1.0, 'Earning or Deduction', 'T'],
-            [5, 'wt2_code', 'UI', 3.0, 'Earn/Ded Code', 'Cod'],
-            [6, 'wt2_hrs', 'SD', 13.2, 'Hours', 'Hours'],
-            [7, 'wt2_eamt', 'SD', 13.2, 'Employee Amount', 'E-Amount'],
-            [8, 'wt2_ramt', 'SD', 13.2, 'Employer Amount', 'R-Amount'],
-            [9, 'wt2_taxcode', 'UA', 1.0, 'Tax Code', 'T'],
-            [10, 'wt2_taxportion', 'UD', 6.2, 'Tax Percentage', 'TAX-%'],
-            [11, 'wt2_gl_type', 'UA', 1.0, 'G/L Type', 'T'],
-            [12, 'wt2_gl_econo', 'UI', 3.0, 'G/L Company Number', 'Coy'],
-            [13, 'wt2_gl_eacno', 'UI', 7.0, 'G/L Account Number', 'Acc-Num'],
-            [14, 'wt2_gl_rcono', 'UI', 3.0, 'G/L Company Number', 'Coy'],
-            [15, 'wt2_gl_racno', 'UI', 7.0, 'G/L Account Number', 'Acc-Num'],
-            [16, 'wt2_xflag', 'UA', 1.0, 'Export Flag', 'X']],
-        'idx': [
-            ['Wages Transactions 2', 1, 'U', 'wt2_cono', 'wt2_empno',
-                'wt2_page', 'wt2_date', 'wt2_type', 'wt2_code']]},
-    'wagtxa': {
-        'fld': [
-            [0, 'wta_year', 'UI', 4.0, 'Tax Year', 'Year'],
-            [1, 'wta_rebatep', 'UI', 7.0, 'Normal Rebate', 'Rebate'],
-            [2, 'wta_rebate1', 'UI', 7.0, '65 Plus Rebate', '65+-Reb'],
-            [3, 'wta_rebate2', 'UI', 7.0, '75 Plus Rebate', '75+-Reb'],
-            [4, 'wta_retrench', 'UI', 7.0, 'Retrench Allowance', 'Ret-All'],
-            [5, 'wta_site', 'UI', 7.0, 'Site Limit', 'SITE-LT'],
-            [6, 'wta_uif_e', 'UD', 5.2, 'UIF Employee Rate', 'UIF-E'],
-            [7, 'wta_uif_r', 'UD', 5.2, 'UIF Employer Rate', 'UIF-R'],
-            [8, 'wta_sdl_e', 'UD', 5.2, 'SDL Employee Rate', 'UIF-E'],
-            [9, 'wta_sdl_r', 'UD', 5.2, 'SDL Employer Rate', 'UIF-R']],
-        'idx': [
-            ['PAYE Tax Master', 1, 'U', 'wta_year']]},
-    'wagtxr': {
-        'fld': [
-            [0, 'wtr_year', 'UI', 4.0, 'Tax Year', 'Year'],
-            [1, 'wtr_from', 'UI', 7.0, 'From Earnings', 'From'],
-            [2, 'wtr_to', 'UI', 7.0, 'To Earnings', 'To'],
-            [3, 'wtr_tax', 'UI', 7.0, 'Tax Amount', 'Tax-Amt'],
-            [4, 'wtr_rate', 'UD', 5.2, 'Rate', 'Rate']],
-        'idx': [
-            ['PAYE Rates', 1, 'U', 'wtr_year', 'wtr_from']]}}
+            [0, "stc_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "stc_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "stc_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "stc_loc", "UA", 1.0, "Location", "L"],
+            [4, "stc_cost", "UD", 10.2, "Standard Cost", "Cost-Price"]],
+        "idx": [
+            ["Stores Standard Cost Prices", 1, "U", "stc_cono", "stc_group",
+                "stc_code", "stc_loc"]]},
+    "strctl": {
+        "fld": [
+            [0, "cts_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "cts_glint", "UA", 1.0, "Integration", "I"],
+            [2, "cts_locs", "UA", 1.0, "Multiple Locations", "L"],
+            [3, "cts_plevs", "UI", 1.0, "Selling Price Levels", "P"],
+            [4, "cts_automu", "UA", 1.0, "Automatic Markup", "M"],
+            [5, "cts_tplnam", "NA", 20.0, "Orders Template", "Template-Name"],
+            [6, "cts_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [7, "cts_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Control", 1, "U", "cts_cono"]]},
+    "strgmu": {
+        "fld": [
+            [0, "smg_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "smg_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "smg_level", "UI", 1.0, "Price Level", "P"],
+            [3, "smg_markup", "UD", 6.2, "Percentage Markup", "%-Tage"],
+            [4, "smg_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Group Price Markups", 1, "U", "smg_cono", "smg_group",
+                "smg_level"]]},
+    "strgrp": {
+        "fld": [
+            [0, "gpm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "gpm_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "gpm_desc", "NA", 30.0, "Description", "Description"],
+            [3, "gpm_vatcode", "UA", 1.0, "Vat Code", "V"],
+            [4, "gpm_sales", "UI", 7.0, "G/L Sales Code Number", "Acc-Num"],
+            [5, "gpm_costs", "UI", 7.0, "G/L COS Code Number", "Acc-Num"],
+            [6, "gpm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Groups", 1, "U", "gpm_cono", "gpm_group"]]},
+    "strloc": {
+        "fld": [
+            [0, "srl_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "srl_loc", "UA", 1.0, "Location", "L"],
+            [2, "srl_desc", "NA", 30.0, "Description", "Description"],
+            [3, "srl_addr1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [4, "srl_addr2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [5, "srl_addr3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [6, "srl_addr4", "NA", 30.0, "Address Line 4", "Address Line 4"],
+            [7, "srl_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Locations", 1, "U", "srl_cono", "srl_loc"]]},
+    "strmf1": {
+        "fld": [
+            [0, "st1_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "st1_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "st1_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "st1_type", "UA", 1.0, "Type of Item (N/R)", "T"],
+            [4, "st1_desc", "NA", 30.0, "Description", "Description"],
+            [5, "st1_uoi", "NA", 10.0, "Units Of Issue", "U.O.I"],
+            [6, "st1_value_ind", "UA", 1.0, "Value Indicator", "V"],
+            [7, "st1_vatcode", "UA", 1.0, "VAT Code", "V"],
+            [8, "st1_chn_excl", "UI", 3.0, "Exclusive Chain", "Exc"],
+            [9, "st1_acc_excl", "NA", 7.0, "Exclusive Account", "Exa"],
+            [10, "st1_sls", "UI", 7.0, "Sales Account", "Sal-Acc"],
+            [11, "st1_cos", "UI", 7.0, "COS Account", "COS-Acc"],
+            [12, "st1_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Masterfile 1", 1, "U", "st1_cono", "st1_group",
+                "st1_code"]]},
+    "strmf2": {
+        "fld": [
+            [0, "st2_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "st2_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "st2_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "st2_loc", "UA", 1.0, "Location", "L"],
+            [4, "st2_bin", "UA", 8.0, "Bin Number", "Bin-Num"],
+            [5, "st2_reord_ind", "UA", 1.0, "Re-Order Indicator", "R"],
+            [6, "st2_reord_level", "UI", 7.0, "Re-Order Level", "Re-Level"],
+            [7, "st2_reord_qty", "UI", 7.0, "Re-Order Quantity", "Re-Qty"],
+            [8, "st2_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Masterfile 2", 1, "U", "st2_cono", "st2_group", "st2_code",
+                "st2_loc"]]},
+    "strpom": {
+        "fld": [
+            [0, "pom_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "pom_ordno", "UI", 9.0, "Order Number", "Doc-Num"],
+            [2, "pom_loc", "UA", 1.0, "Location Code", "L"],
+            [3, "pom_date", "D1", 10.0, "Date of Order", "Ord-Date"],
+            [4, "pom_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [5, "pom_add1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [6, "pom_add2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [7, "pom_add3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [8, "pom_add4", "NA", 30.0, "Address Line 4", "Address Line 4"],
+            [9, "pom_cusord", "NA", 15.0, "Customer Order Number",
+                "Cus-Ord-Number"],
+            [10, "pom_jobnum", "NA", 7.0, "Job Number", "Job-Num"],
+            [11, "pom_contact", "NA", 30.0, "Contact Person", "Contact-Person"],
+            [12, "pom_vatno", "NA", 10.0, "VAT Number", "VAT-Number"],
+            [13, "pom_ordby", "Na", 3.0, "Ordered By", "Ord"],
+            [14, "pom_mess", "NA", 150.0, "Message", "Message"],
+            [15, "pom_delno", "Na", 7.0, "Delivery Note Number", "Del-Not"],
+            [16, "pom_deldt", "d1", 10.0, "Delivery Date", "Deliv-Date"],
+            [17, "pom_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [18, "pom_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [19, "pom_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Purchase Order Master", 1, "U", "pom_cono", "pom_ordno"],
+            ["", 2, "U", "pom_cono", "pom_ordno", "pom_loc"],
+            ["", 3, "U", "pom_cono", "pom_ordno", "pom_loc", "pom_date"]]},
+    "strpot": {
+        "fld": [
+            [0, "pot_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "pot_ordno", "UI", 9.0, "Order Number", "Ord-Num"],
+            [2, "pot_group", "UA", 3.0, "Product Group", "Grp"],
+            [3, "pot_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [4, "pot_uoi", "NA", 10.0, "Units Of Issue", "U.O.I"],
+            [5, "pot_desc", "NA", 30.0, "Description", "Description"],
+            [6, "pot_qty", "SD", 11.2, "Quantity Ordered", "Qty-Order"],
+            [7, "pot_price", "UD", 10.2, "Unit Price", "Unit Price"],
+            [8, "pot_disper", "UD", 6.2, "Discount", "Disc-%"],
+            [9, "pot_vatcod", "UA", 1.0, "VAT Code", "V"],
+            [10, "pot_vatrat", "UD", 6.2, "VAT Rate", "Rate"],
+            [11, "pot_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [12, "pot_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [13, "pot_xflag", "UA", 1.0, "Export Flag", "X"],
+            [14, "pot_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Purchase Order Transactions", 1, "U", "pot_seq"],
+            ["", 2, "U", "pot_cono", "pot_ordno", "pot_group", "pot_code"],
+            ["", 3, "N", "pot_cono", "pot_ordno"]]},
+    "strprc": {
+        "fld": [
+            [0, "stp_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "stp_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "stp_code", "NA", 20.0, "Stock Number", "Product-Code"],
+            [3, "stp_loc", "UA", 1.0, "Location", "L"],
+            [4, "stp_level", "UI", 1.0, "Price Level", "P"],
+            [5, "stp_price", "UD", 10.2, "Selling Price", "Unit-Price"],
+            [6, "stp_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Selling Prices", 1, "U", "stp_cono", "stp_group",
+                "stp_code", "stp_loc", "stp_level"]]},
+    "strrcp": {
+        "fld": [
+            [0, "srr_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "srr_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "srr_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "srr_loc", "UA", 1.0, "Location", "L"],
+            [4, "srr_rgroup", "UA", 3.0, "Product Group", "Grp"],
+            [5, "srr_rcode", "NA", 20.0, "Product Code", "Product-Code"],
+            [6, "srr_rqty", "UD", 11.2, "Quantity", "Quantity"],
+            [7, "srr_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Recipe Records", 1, "U", "srr_cono", "srr_group",
+                "srr_code", "srr_loc", "srr_rgroup", "srr_rcode"]]},
+    "strtrn": {
+        "fld": [
+            [0, "stt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "stt_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "stt_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "stt_loc", "UA", 1.0, "Location", "L"],
+            [4, "stt_trdt", "D1", 10.0, "Transaction Date", "Trans-Date"],
+            [5, "stt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [6, "stt_ref1", "Na", 9.0, "Reference 1", "Reference"],
+            [7, "stt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [8, "stt_ref2", "Na", 9.0, "Reference 2", "Ref-Num-2"],
+            [9, "stt_qty", "SD", 11.2, "Transaction Quantity", "Quantity"],
+            [10, "stt_cost", "SD", 11.2, "Transaction Cost", "Cost-Value"],
+            [11, "stt_sell", "SD", 11.2, "Transaction Sale", "Sale-Value"],
+            [12, "stt_curdt", "D2", 7.0, "Current Date", "Curr-Dt"],
+            [13, "stt_desc", "NA", 30.0, "Description", "Description"],
+            [14, "stt_chain", "UI", 3.0, "Chain", "Chn"],
+            [15, "stt_acno", "NA", 7.0, "Account Number", "Acc-Num"],
+            [16, "stt_rep", "Na", 3.0, "Salesman", "Rep"],
+            [17, "stt_styp", "UA", 3.0, "System Type", "Sys"],
+            [18, "stt_trdis", "UD", 6.2, "Trade Discount", "Tr-Dis"],
+            [19, "stt_batind", "UA", 1.0, "Batch Indicator", "B"],
+            [20, "stt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [21, "stt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [22, "stt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [23, "stt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Stores Transactions", 1, "U", "stt_seq"],
+            ["", 2, "N", "stt_cono", "stt_group", "stt_code", "stt_loc"],
+            ["", 3, "N", "stt_cono", "stt_curdt", "stt_batch", "stt_type"],
+            ["", 4, "N", "stt_cono", "stt_type", "stt_batch", "stt_batind"],
+            ["", 5, "N", "stt_cono", "stt_group", "stt_code", "stt_loc",
+                "stt_curdt"],
+            ["", 6, "N", "stt_cono", "stt_type", "stt_loc", "stt_ref1"]]},
+    "struoi": {
+        "fld": [
+            [0, "unm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "unm_unit", "NA", 10.0, "Unit Of Issue", "U.O.I"],
+            [2, "unm_desc", "NA", 30.0, "Description", "Description"],
+            [3, "unm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Stores Units Of Issue Records", 1, "U", "unm_cono", "unm_unit"]]},
+    "strvar": {
+        "fld": [
+            [0, "stv_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "stv_group", "UA", 3.0, "Product Group", "Grp"],
+            [2, "stv_code", "NA", 20.0, "Product Code", "Product-Code"],
+            [3, "stv_loc", "UA", 1.0, "Location", "L"],
+            [4, "stv_bin", "UA", 8.0, "Bin Number", "Bin-Num"],
+            [5, "stv_qty", "SD", 9.2, "Quantity", "Quantity"],
+            [6, "stv_ucost", "UD", 8.2, "Unit Cost Price", "Unit-Cost"],
+            [7, "stv_usell", "UD", 8.2, "Unit Selling Price", "Unit-Sell"]],
+        "idx": [
+            ["Stock Take Variance", 1, "U", "stv_cono", "stv_group", "stv_code",
+                "stv_loc"]]},
+    "telcon": {
+        "fld": [
+            [0, "tdc_name", "NA", 50.0, "Name", "Name"],
+            [1, "tdc_contact", "NA", 50.0, "Contact Name", "Contact-Name"],
+            [2, "tdc_desig", "NA", 20.0, "Designation", "Designation"],
+            [3, "tdc_telno", "NA", 20.0, "Direct Number", "Direct-Number"],
+            [4, "tdc_celno", "NA", 20.0, "Cell Number", "Cell-Number"],
+            [5, "tdc_email", "TX", 50.0, "Email Address", "Email-Address"],
+            [6, "tdc_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Telephone Directory", 1, "U", "tdc_name", "tdc_contact"]]},
+    "telgrp": {
+        "fld": [
+            [0, "tdg_group", "UA", 3.0, "Group Code", "Grp"],
+            [1, "tdg_desc", "NA", 30.0, "Description", "Description"],
+            [2, "tdg_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Group Records", 1, "U", "tdg_group"]]},
+    "telmst": {
+        "fld": [
+            [0, "tdm_name", "TX", 50.0, "Name", "Name"],
+            [1, "tdm_adr1", "TX", 30.0, "Address Line 1", "Address-Line-1"],
+            [2, "tdm_adr2", "TX", 30.0, "Address Line 2", "Address-Line-2"],
+            [3, "tdm_adr3", "TX", 30.0, "Address Line 3", "Address-Line-3"],
+            [4, "tdm_pcode", "TX", 4.0, "Postal Code", "Post-Code"],
+            [5, "tdm_telno", "TX", 20.0, "Phone Number", "Phone-Number"],
+            [6, "tdm_faxno", "TX", 20.0, "Fax Number", "Facsimile-Number"],
+            [7, "tdm_mobile", "TX", 20.0, "Mobile Number", "Mobile-Number"],
+            [8, "tdm_email", "TX", 50.0, "Email Address", "Email-Address"],
+            [9, "tdm_group", "TX", 50.0, "Contact Groups", "Contact-Groups"],
+            [10, "tdm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Telephone Directory", 1, "U", "tdm_name"]]},
+    "tpldet": {
+        "fld": [
+            [0, "tpd_tname", "NA", 20.0, "Template Name", "Template"],
+            [1, "tpd_detseq", "UD", 6.2, "Line Number", "Line"],
+            [2, "tpd_type", "UA", 1.0, "Line Type", "T"],
+            [3, "tpd_place", "UA", 1.0, "Placement", "P"],
+            [4, "tpd_ttyp", "TX", 1.0, "Text Type", "T"],
+            [5, "tpd_text", "TX", 30.0, "Text", "Text"],
+            [6, "tpd_font", "NA", 20.0, "Font Name", "Font Name"],
+            [7, "tpd_size", "UI", 2.0, "Font Size", "SZ"],
+            [8, "tpd_colour", "NA", 7.0, "Font Colour", "#Colour"],
+            [9, "tpd_bold", "UA", 1.0, "Bold", "B"],
+            [10, "tpd_italic", "UA", 1.0, "Italic", "I"],
+            [11, "tpd_uline", "UA", 1.0, "Underline", "U"],
+            [12, "tpd_align", "UA", 1.0, "Alignment", "A"],
+            [13, "tpd_border", "UA", 4.0, "Draw Border", "Bord"],
+            [14, "tpd_fill", "UA", 1.0, "Fill Background", "F"],
+            [15, "tpd_x1", "UD", 6.2, "X1 Co-Ordinate", "X1"],
+            [16, "tpd_chrs", "UI", 3.0, "Width in Characters", "WWW"],
+            [17, "tpd_x2", "UD", 6.2, "X2 Co-Ordinate", "X2"],
+            [18, "tpd_y1", "UD", 6.2, "Y1 Co-Ordinate", "Y1"],
+            [19, "tpd_lh", "UI", 3.0, "Line Height", "HHH"],
+            [20, "tpd_y2", "UD", 6.2, "Y2 Co-Ordinate", "Y2"],
+            [21, "tpd_thick", "UD", 3.1, "Line Thickness", "LTN"],
+            [22, "tpd_mrgcod", "TX", 20.0, "Merge Code", "Merge Code"],
+            [23, "tpd_mrg_font", "NA", 20.0, "Font Name", "Font Name"],
+            [24, "tpd_mrg_size", "UI", 2.0, "Font/Line Size", "SZ"],
+            [25, "tpd_mrg_colour", "NA", 7.0, "Font Colour", "#Colour"],
+            [26, "tpd_mrg_bold", "UA", 1.0, "Bold", "B"],
+            [27, "tpd_mrg_italic", "UA", 1.0, "Italic", "I"],
+            [28, "tpd_mrg_uline", "UA", 1.0, "Underline", "U"],
+            [29, "tpd_mrg_align", "UA", 1.0, "Alignment", "A"],
+            [30, "tpd_mrg_border", "UA", 4.0, "Draw Border", "Bord"],
+            [31, "tpd_mrg_fill", "UA", 1.0, "Fill Background", "F"],
+            [32, "tpd_mrg_x1", "UD", 6.2, "X1 Co-Ordinate", "X1"],
+            [33, "tpd_mrg_chrs", "UI", 3.0, "Width in Characters", "WWW"],
+            [34, "tpd_mrg_x2", "UD", 6.2, "X2 Co-Ordinate", "X2"],
+            [35, "tpd_mrg_y1", "UD", 6.2, "Y1 Co-Ordinate", "Y1"],
+            [36, "tpd_mrg_lh", "UI", 3.0, "Line Height", "HHH"],
+            [37, "tpd_mrg_y2", "UD", 6.2, "Y2 Co-Ordinate", "Y2"],
+            [38, "tpd_lines", "UI", 2.0, "Number of Lines", "L"],
+            [39, "tpd_repeat", "UI", 2.0, "Times to Repeat", "R"]],
+        "idx": [
+            ["Template Details", 1, "U", "tpd_tname", "tpd_detseq"]]},
+    "tplmst": {
+        "fld": [
+            [0, "tpm_tname", "NA", 20.0, "Template Name", "Template"],
+            [1, "tpm_title", "TX", 20.0, "Template Title", "Title"],
+            [2, "tpm_type", "UA", 1.0, "Template Type", "T"],
+            [3, "tpm_system", "UA", 3.0, "System", "Sys"],
+            [4, "tpm_sttp", "UA", 1.0, "Statement Type", "S"],
+            [5, "tpm_pgsize", "UA", 2.0, "Page Size", "PS"],
+            [6, "tpm_orient", "UA", 1.0, "Orientation", "O"]],
+        "idx": [
+            ["Template Master", 1, "U", "tpm_tname"]]},
+    "verupd": {
+        "fld": [
+            [0, "ver_version", "NA", 10.0, "Version Number", "Version-No"],
+            [1, "ver_upddate", "D1", 10.0, "Date Updated", "Updated-On"]],
+        "idx": [
+            ["Version Updated", 1, "U", "ver_version"]]},
+    "wagbal": {
+        "fld": [
+            [0, "wbl_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wbl_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wbl_balno", "UI", 3.0, "Balance Number", "Bal"],
+            [3, "wbl_balance", "SD", 13.2, "Balance Amount", "Balance-Amnt"],
+            [4, "wbl_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Wages Balance Records", 1, "U", "wbl_cono", "wbl_empno",
+                "wbl_balno"]]},
+    "wagcap": {
+        "fld": [
+            [0, "wcp_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wcp_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wcp_dept", "UI", 3.0, "Dept Code", "Dep"],
+            [3, "wcp_job", "UI", 5.0, "Job Number", "JobNo"],
+            [4, "wcp_type", "UA", 1.0, "Type", "T"],
+            [5, "wcp_code", "UI", 3.0, "Code Number", "Cod"],
+            [6, "wcp_ind", "UA", 1.0, "Pay Indicator", "P"],
+            [7, "wcp_amt", "SD", 9.2, "Amount", "Amount"],
+            [8, "wcp_paid", "UA", 1.0, "Paid Flag", "P"],
+            [9, "wcp_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [10, "wcp_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [11, "wcp_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Wages Data Capture", 1, "U", "wcp_seq"],
+            ["", 2, "N", "wcp_cono", "wcp_empno", "wcp_type", "wcp_code"]]},
+    "wagcod": {
+        "fld": [
+            [0, "wcd_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wcd_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wcd_type", "UA", 1.0, "Type", "T"],
+            [3, "wcd_code", "UI", 3.0, "Code Number", "Cod"],
+            [4, "wcd_eamt", "UD", 8.2, "Employee Amount", "Ee-Amount"],
+            [5, "wcd_ramt", "UD", 8.2, "Employer Amount", "Er-Amount"],
+            [6, "wcd_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Employees Earn and Ded Codes", 1, "U", "wcd_cono", "wcd_empno",
+                "wcd_type", "wcd_code"]]},
+    "wagctl": {
+        "fld": [
+            [0, "ctw_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ctw_glint", "UA", 1.0, "Integration", "I"],
+            [2, "ctw_regno", "NA", 10.0, "Registration Number", "Reg-Num"],
+            [3, "ctw_sdlno", "NA", 10.0, "SDL Number", "SDL-Num"],
+            [4, "ctw_uifno", "NA", 10.0, "UIF Number", "UIF-Num"],
+            [5, "ctw_trade", "UI", 4.0, "Trade Code", "T-CD"],
+            [6, "ctw_d_hrs", "UD", 6.2, "Daily Hours", "Hrs-Day"],
+            [7, "ctw_w_hrs", "UD", 6.2, "Weekly Hours", "Hrs-Week"],
+            [8, "ctw_m_hrs", "UD", 6.2, "Monthly Hours", "Hrs-Month"],
+            [9, "ctw_irp_dip", "UA", 1.0, "IRP5 Diplomatic", "D"],
+            [10, "ctw_i_rate", "UD", 6.2, "Interest Rate", "Rate-%"],
+            [11, "ctw_i_date", "d1", 10.0, "Last Interest Raised Date",
+                "Last-IDate"],
+            [12, "ctw_bestac", "NA", 4.0, "Best Account Code", "Best"],
+            [13, "ctw_besttp", "UI", 2.0, "Best Account Type", "BT"],
+            [14, "ctw_tplnam", "NA", 20.0, "Payslip Template", "Template-Name"],
+            [15, "ctw_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [16, "ctw_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Wages Control", 1, "U", "ctw_cono"]]},
+    "wagedc": {
+        "fld": [
+            [0, "ced_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "ced_type", "UA", 1.0, "Type", "T"],
+            [2, "ced_code", "UI", 3.0, "Code Number", "Cod"],
+            [3, "ced_desc", "NA", 30.0, "Description", "Description"],
+            [4, "ced_var", "UA", 1.0, "Fixed or Variable", "F"],
+            [5, "ced_eind", "UA", 1.0, "Rate or Amount", "R"],
+            [6, "ced_ebase", "UI", 3.0, "Based On", "B"],
+            [7, "ced_eamt", "UD", 8.2, "Amount", "Amount"],
+            [8, "ced_elimit", "UD", 8.2, "Limit", "Limit"],
+            [9, "ced_eglco", "UI", 3.0, "G/L Cono", "Coy"],
+            [10, "ced_eglno", "UI", 7.0, "G/L Acno", "G/L-Num"],
+            [11, "ced_earntype", "UA", 1.0, "Earnings Type", "T"],
+            [12, "ced_rind", "UA", 1.0, "Rate or Amount", "R"],
+            [13, "ced_rbase", "UI", 3.0, "Based On", "B"],
+            [14, "ced_ramt", "UD", 8.2, "Amount", "Amount"],
+            [15, "ced_rlimit", "UD", 8.2, "Limit", "Limit"],
+            [16, "ced_rglco", "UI", 3.0, "G/L Cono", "Coy"],
+            [17, "ced_rglno", "UI", 7.0, "G/L Acno", "G/L-Num"],
+            [18, "ced_taxcode", "UA", 1.0, "Tax Code", "T"],
+            [19, "ced_taxportion", "UD", 6.2, "Tax Percentage", "TAX-%"],
+            [20, "ced_ror", "UI", 4.0, "Receiver of Revenue Code", "Code"],
+            [21, "ced_report", "UA", 1.0, "Include in Report", "I"],
+            [22, "ced_must", "UA", 1.0, "Must Pay Indicator", "M"],
+            [23, "ced_balno", "UI", 1.0, "Balance Number", "B"],
+            [24, "ced_hr_limit", "UD", 5.2, "Hourly Limit", "HrLim"],
+            [25, "ced_monthly", "UA", 1.0, "Monthly Deduction", "M"],
+            [26, "ced_uifportion", "UD", 6.2, "UIF Percentage", "UIF-%"],
+            [27, "ced_sdlportion", "UD", 6.2, "SDL Percentage", "SDL-%"],
+            [28, "ced_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Earnings and Deduction Codes", 1, "U", "ced_cono", "ced_type",
+                "ced_code"]]},
+    "wagirp": {
+        "fld": [
+            [0, "wip_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wip_year", "UI", 4.0, "Tax Tear", "Year"],
+            [2, "wip_genno", "UI", 5.0, "Generation Number", "GenNo"],
+            [3, "wip_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [4, "wip_irpno", "UI", 9.0, "Last IRP5 Number", "IrpNo"],
+            [5, "wip_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Wages IRP5 Control", 1, "U", "wip_cono", "wip_year", "wip_genno",
+                "wip_empno"]]},
+    "waglmf": {
+        "fld": [
+            [0, "wlm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wlm_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wlm_loan", "UI", 2.0, "Loan", "Ln"],
+            [3, "wlm_desc", "NA", 30.0, "Description", "Description"],
+            [4, "wlm_code", "UI", 3.0, "Deduction Code", "Cod"],
+            [5, "wlm_rate", "UD", 6.2, "Interest Percentage", "Int-%"],
+            [6, "wlm_start", "D1", 10.0, "Start Date", "Start-Date"],
+            [7, "wlm_repay", "UD", 10.2, "Deduction Amount", "Ded-Amount"],
+            [8, "wlm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Staff Loans Masterfile", 1, "U", "wlm_cono", "wlm_empno",
+                "wlm_loan"]]},
+    "wagltf": {
+        "fld": [
+            [0, "wlt_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wlt_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wlt_loan", "UI", 2.0, "Loan Number", "Ln"],
+            [3, "wlt_batch", "Na", 7.0, "Batch Number", "BatchNo"],
+            [4, "wlt_type", "UI", 2.0, "Transaction Type", "TT"],
+            [5, "wlt_trdt", "D1", 10.0, "Transaction Date", "Date"],
+            [6, "wlt_ref", "Na", 9.0, "Reference Number", "Reference"],
+            [7, "wlt_amt", "SD", 13.2, "Transaction Amount", "Trn-Amount"],
+            [8, "wlt_cap", "SD", 13.2, "Capital Amount", "Cap-Amount"],
+            [9, "wlt_ded", "SD", 13.2, "Deduction Amount", "Ded-Amount"],
+            [10, "wlt_per", "UD", 6.2, "Interest Percentage", "Int-%"],
+            [11, "wlt_curdt", "D2", 7.0, "Current Date", "Cur-Date"],
+            [12, "wlt_desc", "TX", 30.0, "Description", "Description"],
+            [13, "wlt_batind", "NA", 1.0, "Batch Indicator", "B"],
+            [14, "wlt_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [15, "wlt_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [16, "wlt_xflag", "UA", 1.0, "Export Flag", "X"],
+            [17, "wlt_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Staff Loans Transactions", 1, "U", "wlt_seq"],
+            ["", 2, "N", "wlt_cono", "wlt_type", "wlt_batch", "wlt_batind"],
+            ["", 3, "N", "wlt_cono", "wlt_empno", "wlt_loan", "wlt_type",
+                "wlt_ref"]]},
+    "wagmst": {
+        "fld": [
+            [0, "wgm_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wgm_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wgm_dept", "UI", 3.0, "Department", "Dep"],
+            [3, "wgm_class", "UI", 1.0, "Class", "C"],
+            [4, "wgm_sname", "NA", 30.0, "Surname", "Surname"],
+            [5, "wgm_fname", "NA", 30.0, "First Names", "First Names"],
+            [6, "wgm_dob", "d1", 10.0, "Date of Birth", "DOB"],
+            [7, "wgm_idno", "NA", 13.0, "Identity Number", "ID-Number"],
+            [8, "wgm_spouse", "NA", 16.0, "Spouse Name", "Spouse Name"],
+            [9, "wgm_spouse_id", "NA", 13.0, "Spouse ID-Number", "ID-Number"],
+            [10, "wgm_addr1", "NA", 30.0, "Address Line 1", "Address Line 1"],
+            [11, "wgm_addr2", "NA", 30.0, "Address Line 2", "Address Line 2"],
+            [12, "wgm_addr3", "NA", 30.0, "Address Line 3", "Address Line 3"],
+            [13, "wgm_pcode", "NA", 4.0, "Postal Code", "Pcod"],
+            [14, "wgm_telno", "NA", 16.0, "Telephone Number",
+                "Telephone Number"],
+            [15, "wgm_emadd", "TX", 50.0, "Email Address", "Email Address"],
+            [16, "wgm_start", "d1", 10.0, "Start Date", "Start-Date"],
+            [17, "wgm_payamt", "UD", 10.2, "Salary/Rate", "Salary/Rte"],
+            [18, "wgm_freq", "UA", 1.0, "Pay Frequency", "F"],
+            [19, "wgm_ptype", "UA", 1.0, "Pay Type", "T"],
+            [20, "wgm_paye", "UA", 1.0, "Pay PAYE (Y/N)", "P"],
+            [21, "wgm_taxoff", "NA", 16.0, "Tax Office", "Tax Office"],
+            [22, "wgm_taxno", "NA", 10.0, "Tax Number", "Tax Num"],
+            [23, "wgm_nature", "UA", 1.0, "Nature of Employee", "N"],
+            [24, "wgm_regno", "UI", 9.0, "Registration Number", "Reg-Num"],
+            [25, "wgm_vol_over", "UA", 1.0, "Voluntary Overdeduction", "V"],
+            [26, "wgm_fix_rate", "UD", 6.2, "Fixed Rate", "FixRate"],
+            [27, "wgm_direct", "NA", 13.0, "Directive", "Directive"],
+            [28, "wgm_btype", "UA", 1.0, "Account Type", "T"],
+            [29, "wgm_bname", "NA", 30.0, "Bank Name", "Bank-Name"],
+            [30, "wgm_bbranch", "UI", 8.0, "Bank Branch Code", "B-Branch"],
+            [31, "wgm_bacno", "NA", 16.0, "Bank Account Number",
+                "B-Account-Number"],
+            [32, "wgm_bpayee", "NA", 30.0, "Bank Payee Name", "B-Payee-Name"],
+            [33, "wgm_relate", "UI", 1.0, "Payee Relationship", "R"],
+            [34, "wgm_term", "d1", 10.0, "Term Date", "Term-Date"],
+            [35, "wgm_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Wages Master Records", 1, "U", "wgm_cono", "wgm_empno"]]},
+    "wagrcv": {
+        "fld": [
+            [0, "rcv_code", "UI", 4.0, "Code Number", "Code"],
+            [1, "rcv_desc", "NA", 50.0, "Description", "Description"]],
+        "idx": [
+            ["Receiver Of Revenue Codes", 1, "U", "rcv_code"]]},
+    "wagtf1": {
+        "fld": [
+            [0, "wt1_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wt1_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wt1_page", "UI", 5.0, "Payslip Number", "Page"],
+            [3, "wt1_date", "D1", 10.0, "Payrun Date", "Pay-Date"],
+            [4, "wt1_freq", "UA", 1.0, "Pay Frequency", "F"],
+            [5, "wt1_type", "UA", 1.0, "Pay Type (C/Q/E)", "P"],
+            [6, "wt1_dept", "UI", 3.0, "Department Code", "Dep"],
+            [7, "wt1_rate", "SD", 13.2, "Salary", "Salary"],
+            [8, "wt1_nhrs", "SD", 13.2, "Normal Hours", "Normal-Hrs"],
+            [9, "wt1_npay", "SD", 13.2, "Normal Pay", "Normal-Pay"],
+            [10, "wt1_taxbl", "SD", 13.2, "Taxable Pay", "Taxable-Pay"],
+            [11, "wt1_notax", "SD", 13.2, "Non Taxable", "Non-Tax-Pay"],
+            [12, "wt1_rtpay", "SD", 13.2, "Retrench", "Retrench-Pay"],
+            [13, "wt1_anpay", "SD", 13.2, "Annual Pay", "Annual-Pay"],
+            [14, "wt1_pspay", "SD", 13.2, "Pseudo Pay", "Pseudo-Pay"],
+            [15, "wt1_taxdd", "SD", 13.2, "Tax Ded Ded", "Tax-Ded-Ded"],
+            [16, "wt1_nondd", "SD", 13.2, "Non Ded Ded", "Non-Ded-Ded"],
+            [17, "wt1_psded", "SD", 13.2, "Pseudo Deduction", "Pseudo-Ded"],
+            [18, "wt1_uifpay", "UI", 9.0, "UIF Deduction Pay", "UIF-Pay"],
+            [19, "wt1_sdlpay", "UI", 9.0, "SDL Deduction Pay", "SDL-Pay"],
+            [20, "wt1_shift", "SD", 13.2, "Shifts", "Shifts"],
+            [21, "wt1_drbal", "SD", 13.2, "Balance C/F", "Balance"],
+            [22, "wt1_capnm", "TX", 20.0, "Capture Name", "Capture-Name"],
+            [23, "wt1_capdt", "d1", 10.0, "Capture Date", "Capture-Dt"],
+            [24, "wt1_xflag", "UA", 1.0, "Export Flag", "X"],
+            [25, "wt1_seq", "US", 10.0, "Sequence", "Sequence"]],
+        "idx": [
+            ["Wages Transactions 1", 1, "U", "wt1_seq"],
+            ["", 2, "U", "wt1_cono", "wt1_empno", "wt1_page", "wt1_date",
+                "wt1_freq"]]},
+    "wagtf2": {
+        "fld": [
+            [0, "wt2_cono", "UI", 3.0, "Company Number", "Coy"],
+            [1, "wt2_empno", "UI", 5.0, "Employee Number", "EmpNo"],
+            [2, "wt2_page", "UI", 5.0, "Payslip Number", "Page"],
+            [3, "wt2_date", "D1", 10.0, "Payrun Date", "Pay-Date"],
+            [4, "wt2_type", "UA", 1.0, "Earning or Deduction", "T"],
+            [5, "wt2_code", "UI", 3.0, "Earn/Ded Code", "Cod"],
+            [6, "wt2_hrs", "SD", 13.2, "Hours", "Hours"],
+            [7, "wt2_eamt", "SD", 13.2, "Employee Amount", "E-Amount"],
+            [8, "wt2_ramt", "SD", 13.2, "Employer Amount", "R-Amount"],
+            [9, "wt2_taxcode", "UA", 1.0, "Tax Code", "T"],
+            [10, "wt2_taxportion", "UD", 6.2, "Tax Percentage", "TAX-%"],
+            [11, "wt2_gl_type", "UA", 1.0, "G/L Type", "T"],
+            [12, "wt2_gl_econo", "UI", 3.0, "G/L Company Number", "Coy"],
+            [13, "wt2_gl_eacno", "UI", 7.0, "G/L Account Number", "Acc-Num"],
+            [14, "wt2_gl_rcono", "UI", 3.0, "G/L Company Number", "Coy"],
+            [15, "wt2_gl_racno", "UI", 7.0, "G/L Account Number", "Acc-Num"],
+            [16, "wt2_xflag", "UA", 1.0, "Export Flag", "X"]],
+        "idx": [
+            ["Wages Transactions 2", 1, "U", "wt2_cono", "wt2_empno",
+                "wt2_page", "wt2_date", "wt2_type", "wt2_code"]]},
+    "wagtxa": {
+        "fld": [
+            [0, "wta_year", "UI", 4.0, "Tax Year", "Year"],
+            [1, "wta_rebatep", "UI", 7.0, "Normal Rebate", "Rebate"],
+            [2, "wta_rebate1", "UI", 7.0, "65 Plus Rebate", "65+-Reb"],
+            [3, "wta_rebate2", "UI", 7.0, "75 Plus Rebate", "75+-Reb"],
+            [4, "wta_retrench", "UI", 7.0, "Retrench Allowance", "Ret-All"],
+            [5, "wta_site", "UI", 7.0, "Site Limit", "SITE-LT"],
+            [6, "wta_uif_e", "UD", 5.2, "UIF Employee Rate", "UIF-E"],
+            [7, "wta_uif_r", "UD", 5.2, "UIF Employer Rate", "UIF-R"],
+            [8, "wta_sdl_e", "UD", 5.2, "SDL Employee Rate", "UIF-E"],
+            [9, "wta_sdl_r", "UD", 5.2, "SDL Employer Rate", "UIF-R"]],
+        "idx": [
+            ["PAYE Tax Master", 1, "U", "wta_year"]]},
+    "wagtxr": {
+        "fld": [
+            [0, "wtr_year", "UI", 4.0, "Tax Year", "Year"],
+            [1, "wtr_from", "UI", 7.0, "From Earnings", "From"],
+            [2, "wtr_to", "UI", 7.0, "To Earnings", "To"],
+            [3, "wtr_tax", "UI", 7.0, "Tax Amount", "Tax-Amt"],
+            [4, "wtr_rate", "UD", 5.2, "Rate", "Rate"]],
+        "idx": [
+            ["PAYE Rates", 1, "U", "wtr_year", "wtr_from"]]}}
 # Standard Menu
 """
 Module Types
@@ -3970,7 +3865,6 @@ tarmen = {
         ["MM","mm_dr","Debtor's Ledger"],
         ["MM","mm_st","Store's Ledger"],
         ["MM","mm_si","Sales Invoicing"],
-        ["MM","mm_ps","Point of Sale"],
         ["MM","mm_ar","Asset's Register"],
         ["MM","mm_bk","Bookings Manager"],
         ["MM","mm_ln","Loan's Ledger"],
@@ -4009,6 +3903,7 @@ tarmen = {
         ["PYNN","ms_rp","ms3010",3,"V.A.T. Statement"],
         ["PNNN","ms_rp","ms3030",3,"Email Log Report"],
         ["PNNN","ms_rp","ms3040",3,"Changes Log Report"],
+        ["PNNN","ms_rp","ms3050",3,"Application Usage Report"],
         ["PYYY","ms_ye","msy010",6,"Financial Year End Routine"],
         ["PYYY","ms_ye","msy020",6,"Change Year End Date"],
         ["PYNN","mm_uy","bm1010",3,"Bulk Mail/SMS Utility"],
@@ -4209,15 +4104,6 @@ tarmen = {
         ["PYNN","si_tb","si6020",5,"Cancel Outstanding Documents"],
         ["F","mm_si","doManual SLS",0,"Help"]],
 
-    # Point of Sale Routines
-    "psmen": [],
-    "psmod": [
-        ["PYNY","mm_ps","psc110",5,"Terminal Records"],
-        ["PYLY","mm_ps","ps2010",2,"Data Capture"],
-        ["PYLY","mm_ps","ps2020",1,"Cash Declaration"],
-        ["PYYN","mm_ps","ps2030",5,"Cash Reconciliation"],
-        ["F","mm_ps","doManual POS",0,"Help"]],
-
     # Assets Register
     "armen": [
         ["CM","mm_ar","ar_fm","File Maintenance"],
@@ -4370,7 +4256,7 @@ tarmen = {
         ["PYNY","rc_rp","rc3060",1,"Tenants Statements"],
         ["PYNN","rc_rp","rc3080",1,"Tenants Notes Listing"],
         ["PYNN","rc_rp","rc3090",1,"Tenants Deposit Listing"],
-        ["PNNN","rc_rp","rcc220",1,"Statement Messages"],
+        ["PYNN","rc_rp","rcc220",1,"Statement Messages"],
         ["PYNY","rc_qy","rc4010",0,"Owners Interrogation"],
         ["PYNY","rc_qy","rc4020",0,"Tenants Interrogation"],
         ["PYNY","mm_rc","rc2010",2,"Data Capture"],
@@ -4631,9 +4517,6 @@ datdic = {
         ["memctc", "mcc_code", "memctc", "mcc_code"],
         ["memctc", "mcc_type", "memcat", "mlc_type"],
         ["memctc", "mcc_code", "memcat", "mlc_code"],
-        ["posmst", "psm_cono", "postrn", "pst_cono"],
-        ["posmst", "psm_host", "postrn", "pst_host"],
-        ["posmst", "psm_docno", "postrn", "pst_docno"],
         ["rcaowm", "rom_cono", "rcaprm", "rcp_cono"],
         ["rcaowm", "rom_acno", "rcaprm", "rcp_owner"],
         ["rcaowm", "rom_cono", "rcatnm", "rtn_cono"],
@@ -4958,9 +4841,6 @@ datdic = {
         ["purchase_order", "Purchase Order", "O", "STR", "", "A4", "L"],
         ["remittance_advice", "Remittance Advice", "R", "CRS", "", "A4", "P"],
         ["sales_document", "Sales Document", "I", "INV", "", "A4", "L"],
-        ["pos_invoice", "Point of Sales Invoice", "J", "POS", "", "A4", "L"],
-        ["pos_slip_6", "Point of Sales Slip", "J", "POS", "", "S6", "P"],
-        ["pos_slip_8", "Point of Sales Slip", "J", "POS", "", "S8", "P"],
         ["statement_loan", "Statement (Loan)", "S", "LON", "N", "A4", "P"],
         ["statement_member", "Statement (Member)", "S", "MEM", "N", "A4", "P"],
         ["statement_normal", "Statement (Normal)", "S", "DRS", "N", "A4", "P"],
@@ -6035,299 +5915,6 @@ datdic = {
             30, 278.0, 163.0, 5.0, 168.0, 0.0, "terms", "courier", 10,
             "#000000", "N", "N", "N", "L", "LRB", "N", 212.0, 30, 278.0,
             168.0, 4.0, 172.0, 5, 1],
-        ["pos_invoice", 1.0, "I", "A", "", "", "", 0, "#000000", "", "", "",
-            "", "", "", 30.0, 0, 160.0, 7.0, 27, 34.0, 0.0, "ctm_logo", "",
-            0, "#000000", "N", "", "", "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0,
-            0, 0],
-        ["pos_invoice", 2.0, "C", "A", "N", "", "", 0, "#000000", "", "", "",
-            "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "ctm_name", "courier",
-            18, "#000000", "Y", "N", "N", "L", "", "N", 30.0, 30, 144.0, 7.0,
-            5, 12.0, 1, 1],
-        ["pos_invoice", 3.0, "C", "A", "N", "", "", 0, "#000000", "", "", "",
-            "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "ctm_add1", "courier",
-            10, "#000000", "Y", "N", "N", "L", "", "N", 30.0, 30, 93.0, 14.0,
-            5, 19.0, 1, 1],
-        ["pos_invoice", 4.0, "C", "A", "L", "RegNo:", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "", "N", 124.0, 7, 139.0, 14.0, 5,
-            19.0, 0.0, "ctm_regno", "courier", 10, "#000000", "Y", "N", "N",
-            "L", "", "N", 139.0, 20, 181.0, 14.0, 5, 19.0, 1, 1],
-        ["pos_invoice", 5.0, "C", "A", "N", "", "", 0, "#000000", "", "", "",
-            "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "ctm_add2", "courier",
-            10, "#000000", "Y", "N", "N", "L", "", "N", 30.0, 30, 93.0, 18.0,
-            5, 23.0, 1, 1],
-        ["pos_invoice", 6.0, "C", "A", "L", "TaxNo:", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "", "N", 124.0, 7, 139.0, 18.0, 5,
-            23.0, 0.0, "ctm_taxno", "courier", 10, "#000000", "Y", "N", "N",
-            "L", "", "N", 139.0, 20, 181.0, 18.0, 5, 23.0, 1, 1],
-        ["pos_invoice", 7.0, "C", "A", "N", "", "", 0, "#000000", "", "", "",
-            "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "ctm_add3", "courier",
-            10, "#000000", "Y", "N", "N", "L", "", "N", 30.0, 30, 93.0, 22.0,
-            5, 27.0, 1, 1],
-        ["pos_invoice", 8.0, "C", "A", "L", "TelNo:", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "", "N", 124.0, 7, 139.0, 22.0, 5,
-            27.0, 0.0, "ctm_tel", "courier", 10, "#000000", "Y", "N", "N",
-            "L", "", "N", 139.0, 15, 171.0, 22.0, 5, 27.0, 1, 1],
-        ["pos_invoice", 9.0, "C", "A", "N", "", "", 0, "#000000", "", "", "",
-            "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "ctm_pcode",
-            "courier", 10, "#000000", "Y", "N", "N", "L", "", "N", 30.0, 4,
-            38.0, 26.0, 5, 31.0, 1, 1],
-        ["pos_invoice", 10.0, "C", "A", "L", "FaxNo:", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "", "N", 124.0, 7, 139.0, 26.0, 5,
-            31.0, 0.0, "ctm_fax", "courier", 10, "#000000", "Y", "N", "N",
-            "L", "", "N", 139.0, 15, 171.0, 26.0, 5, 31.0, 1, 1],
-        ["pos_invoice", 11.0, "C", "A", "N", "", "", 0, "#000000", "", "",
-            "", "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "document_type",
-            "courier", 12, "#000000", "Y", "N", "N", "R", "", "N", 222.0, 22,
-            278.0, 15.0, 5, 20.0, 1, 1],
-        ["pos_invoice", 12.0, "C", "A", "H", "Charge To:", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 30.0, 30, 96.0, 35.0,
-            5, 40.0, 0.0, "account_details", "courier", 10, "#000000", "N",
-            "N", "N", "L", "TLRB", "N", 30.0, 30, 96.0, 40.0, 4, 44.0, 5, 1],
-        ["pos_invoice", 13.0, "C", "A", "H", "Acc-Num", "courier", 10,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 30.0, 7, 47.0, 63.0,
-            5, 68.0, 0.0, "psm_acno", "courier", 10, "#000000", "N", "N",
-            "N", "C", "TLRB", "N", 30.0, 7, 47.0, 68.0, 4, 72.0, 1, 1],
-        ["pos_invoice", 14.0, "C", "A", "H", "V.A.T. Number", "courier", 10,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 47.0, 13, 77.0, 63.0,
-            5, 68.0, 0.0, "drm_vatno", "courier", 10, "#000000", "N", "N",
-            "N", "C", "TLRB", "N", 47.0, 13, 77.0, 68.0, 4, 72.0, 1, 1],
-        ["pos_invoice", 15.0, "C", "A", "H", "Contact Person", "courier", 10,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 77.0, 30, 143.0,
-            63.0, 5, 68.0, 0.0, "drm_sls", "courier", 10, "#000000", "N",
-            "N", "N", "C", "TLRB", "N", 77.0, 30, 143.0, 68.0, 4, 72.0, 1,
-            1],
-        ["pos_invoice", 16.0, "C", "A", "H", "Cashier", "courier", 10,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 143.0, 41, 232.0,
-            63.0, 5, 68.0, 0.0, "pst_capnm", "courier", 10, "#000000", "N",
-            "N", "N", "L", "TLRB", "N", 143.0, 41, 232.0, 68.0, 4, 72.0, 1,
-            1],
-        ["pos_invoice", 17.0, "C", "A", "H", "Date", "courier", 10,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 232.0, 10, 255.0,
-            63.0, 5, 68.0, 0.0, "psm_date", "courier", 10, "#000000", "N",
-            "N", "N", "C", "TLRB", "N", 232.0, 10, 255.0, 68.0, 4, 72.0, 1,
-            1],
-        ["pos_invoice", 18.0, "C", "A", "H", "Doc-Number", "courier", 10,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 255.0, 10, 278.0,
-            63.0, 5, 68.0, 0.0, "psm_docno", "courier", 10, "#000000", "N",
-            "N", "N", "C", "TLRB", "N", 255.0, 10, 278.0, 68.0, 4, 72.0, 1,
-            1],
-        ["pos_invoice", 19.0, "C", "B", "H", "Grp", "courier", 10, "#000000",
-            "Y", "N", "N", "C", "TLRB", "Y", 30.0, 3, 38.0, 72.0, 5, 77.0,
-            0.0, "pst_group", "courier", 10, "#000000", "N", "N", "N", "L",
-            "LR", "N", 30.0, 3, 38.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 20.0, "C", "B", "H", "Product Code", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 38.0, 20, 82.0, 72.0,
-            5, 77.0, 0.0, "pst_code", "courier", 10, "#000000", "N", "N",
-            "N", "L", "R", "N", 38.0, 20, 82.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 21.0, "C", "B", "H", "Description", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 82.0, 40, 169.0,
-            72.0, 5, 77.0, 0.0, "pst_desc", "courier", 10, "#000000", "N",
-            "N", "N", "L", "R", "N", 82.0, 40, 169.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 22.0, "C", "B", "H", "Quantity", "courier", 10,
-            "#000000", "Y", "N", "N", "R", "TLRB", "Y", 168.0, 11, 193.0,
-            72.0, 5, 77.0, 0.0, "pst_qty", "courier", 10, "#000000", "N",
-            "N", "N", "R", "R", "N", 168.0, 11, 193.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 23.0, "C", "B", "H", "Price", "courier", 10,
-            "#000000", "Y", "N", "N", "R", "TLRB", "Y", 193.0, 11, 218.0,
-            72.0, 5, 77.0, 0.0, "pst_prc", "courier", 10, "#000000", "N",
-            "N", "N", "R", "R", "N", 193.0, 11, 218.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 24.0, "C", "B", "H", "Disc-%", "courier", 10,
-            "#000000", "Y", "N", "N", "R", "TLRB", "Y", 218.0, 6, 233.0,
-            72.0, 5, 77.0, 0.0, "pst_disp", "courier", 10, "#000000", "N",
-            "N", "N", "R", "R", "N", 218.0, 6, 233.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 25.0, "C", "B", "H", "Tax-%", "courier", 10,
-            "#000000", "Y", "N", "N", "R", "TLRB", "Y", 233.0, 6, 248.0,
-            72.0, 5, 77.0, 0.0, "pst_vrte", "courier", 10, "#000000", "N",
-            "N", "N", "R", "R", "N", 233.0, 6, 248.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 26.0, "C", "B", "H", "Value", "courier", 10,
-            "#000000", "Y", "N", "N", "R", "TLRB", "Y", 248.0, 13, 278.0,
-            72.0, 5, 77.0, 0.0, "pst_incl", "courier", 10, "#000000", "N",
-            "N", "N", "R", "R", "N", 248.0, 13, 278.0, 77.0, 4, 81.0, 1, 20],
-        ["pos_invoice", 27.0, "C", "C", "N", "", "", 0, "#000000", "", "",
-            "", "", "", "", 0.0, 0, 0.0, 0.0, 0, 0.0, 0.0, "carried_forward",
-            "courier", 10, "#000000", "Y", "N", "N", "R", "TLRB", "N", 229.0,
-            22, 278.0, 157.0, 5, 162.0, 1, 1],
-        ["pos_invoice", 28.0, "C", "C", "L", "Total Cash", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 30.0, 14, 62.0,
-            157.0, 5, 162.0, 0.0, "total_cash", "courier", 10, "#000000",
-            "Y", "N", "N", "R", "TLRB", "N", 62.0, 13, 92.0, 157.0, 5, 162.0,
-            1, 1],
-        ["pos_invoice", 29.0, "C", "C", "L", "Total Card", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 92.0, 14, 124.0,
-            157.0, 5, 162.0, 0.0, "total_card", "courier", 10, "#000000",
-            "Y", "N", "N", "R", "TLRB", "N", 124.0, 13, 154.0, 157.0, 5,
-            162.0, 1, 1],
-        ["pos_invoice", 30.0, "C", "C", "L", "Total Voucher", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 154.0, 14, 186.0,
-            157.0, 5, 162.0, 0.0, "total_vouchers", "courier", 10, "#000000",
-            "Y", "N", "N", "R", "TLRB", "N", 186.0, 13, 216.0, 157.0, 5,
-            162.0, 1, 1],
-        ["pos_invoice", 31.0, "C", "C", "L", "Total Value", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 216.0, 14, 248.0,
-            157.0, 5, 162.0, 0.0, "total_value", "courier", 10, "#000000",
-            "Y", "N", "N", "R", "TLRB", "N", 248.0, 13, 278.0, 157.0, 5,
-            162.0, 1, 1],
-        ["pos_slip_6", 1.0, "I", "A", "", "", "", 0, "", "", "", "", "",
-            "", "", 3.0, 0, 55.0, 4.0, 22.0, 26.0, 0.0, "ctm_logo", "", 0,
-            "", "", "", "", "", "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0],
-        ["pos_slip_6", 2.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_name", "courier",
-            8, "#000000", "Y", "N", "N", "C", "", "N", 3.0, 30, 55.0, 4.0,
-            5.0, 9.0, 1, 1],
-        ["pos_slip_6", 3.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_add1", "courier",
-            7, "#000000", "Y", "N", "N", "L", "", "N", 3.0, 30, 55.0, 9.0,
-            3.0, 12.0, 1, 1],
-        ["pos_slip_6", 4.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_add2", "courier",
-            7, "#000000", "Y", "N", "N", "L", "", "N", 3.0, 30, 55.0, 12.0,
-            3.0, 15.0, 1, 1],
-        ["pos_slip_6", 5.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_add3", "courier",
-            7, "#000000", "Y", "N", "N", "L", "", "N", 3.0, 30, 55.0, 15.0,
-            3.0, 18.0, 1, 1],
-        ["pos_slip_6", 6.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_pcode", "courier",
-            7, "#000000", "Y", "N", "N", "L", "", "N", 3.0, 4, 11.0, 18.0,
-            3.0, 21.0, 1, 1],
-        ["pos_slip_6", 7.0, "C", "A", "H", "Charge To:", "courier", 6,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 3.0, 30, 42.0, 26.0,
-            4.0, 30.0, 0.0, "account_details", "courier", 5, "#000000", "N",
-            "N", "N", "L", "TLRB", "N", 3.0, 30, 42.0, 30.0, 3.0, 33.0, 5,
-            1],
-        ["pos_slip_6", 8.0, "C", "A", "H", "Doc-Num", "courier", 5,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 3.0, 9, 14.0, 45.0,
-            2.0, 47.0, 0.0, "psm_docno", "courier", 5, "#000000", "N", "N",
-            "N", "C", "TLRB", "N", 3.0, 9, 14.0, 47.0, 2.0, 49.0, 1, 1],
-        ["pos_slip_6", 9.0, "C", "A", "H", "Date", "courier", 5, "#000000",
-            "Y", "N", "N", "C", "TLRB", "Y", 14.0, 10, 26.0, 45.0, 2.0, 47.0,
-            0.0, "psm_date", "courier", 5, "#000000", "N", "N", "N", "C",
-            "TLRB", "N", 14.0, 10, 26.0, 47.0, 2.0, 49.0, 1, 1],
-        ["pos_slip_6", 10.0, "C", "A", "H", "Document Type", "courier", 5,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 26.0, 26, 55.0, 45.0,
-            2.0, 47.0, 0.0, "document_type", "courier", 5, "#000000", "N",
-            "N", "N", "C", "TLRB", "N", 26.0, 26, 55.0, 47.0, 2.0, 49.0, 1, 1],
-        ["pos_slip_6", 11.0, "C", "B", "H", "Description", "courier", 4,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 3.0, 37, 35.0, 49.0,
-            2, 51.0, 0.0, "pst_desc", "courier", 4, "#000000", "N", "N", "N",
-            "L", "LR", "N", 3.0, 37, 35.0, 51.0, 2, 53.0, 1, 99],
-        ["pos_slip_6", 12.0, "C", "B", "H", "Qty", "courier", 4, "#000000",
-            "Y", "N", "N", "R", "TLRB", "Y", 35.0, 11, 45.0, 49.0, 2, 51.0,
-            0.0, "pst_qty", "courier", 4, "#000000", "N", "N", "N", "R", "R",
-            "N", 35.0, 11, 45.0, 51.0, 2, 53.0, 1, 99],
-        ["pos_slip_6", 13.0, "C", "B", "H", "Amount", "courier", 4, "#000000",
-            "Y", "N", "N", "R", "TLRB", "Y", 45.0, 11, 55.0, 49.0, 2, 51.0,
-            0.0, "pst_incl", "courier", 4, "#000000", "N", "N", "N", "R", "R",
-            "N", 45.0, 11, 55.0, 51.0, 2, 53.0, 1, 99],
-        ["pos_slip_6", 14.0, "C", "C", "L", "Total Sale", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "TL", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_value", "courier", 5, "#000000", "Y", "N",
-            "N", "R", "TR", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_6", 15.0, "C", "C", "L", "Total Discount", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "L", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_discount", "courier", 5, "#000000", "Y",
-            "N", "N", "R", "R", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_6", 16.0, "C", "C", "L", "Total Vouchers", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "L", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_vouchers", "courier", 5, "#000000", "Y",
-            "N", "N", "R", "R", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_6", 17.0, "C", "C", "L", "Total V.A.T.", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "L", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_tax", "courier", 5, "#000000", "Y", "N",
-            "N", "R", "R", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_6", 18.0, "C", "C", "L", "Cash", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "LB", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_cash", "courier", 5, "#000000", "Y", "N",
-            "N", "R", "RB", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_6", 19.0, "C", "C", "L", "Credit Card", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "LB", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_card", "courier", 5, "#000000", "Y", "N",
-            "N", "R", "RB", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_6", 20.0, "C", "C", "L", "On Account", "courier", 5,
-            "#000000", "Y", "N", "N", "L", "LB", "N", 3.0, 34, 40.0, 0.0,
-            2.0, 2.0, 0.0, "total_cred", "courier", 5, "#000000", "Y", "N",
-            "N", "R", "RB", "N", 40.0, 13, 55.0, 0.0, 2.0, 2.0, 1, 1],
-        ["pos_slip_8", 1.0, "I", "A", "", "", "", 0, "", "", "", "", "",
-            "", "", 5.0, 0, 71.0, 7.0, 27.0, 34.0, 0.0, "ctm_logo", "", 0,
-            "", "", "", "", "", "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0],
-        ["pos_slip_8", 2.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_name", "courier",
-            11, "#000000", "Y", "N", "N", "L", "", "N", 5.0, 30, 77.0, 7.0,
-            5.0, 12.0, 1, 1],
-        ["pos_slip_8", 3.0, "C", "A", "N", "", "", 0, "", "", "", "", "",
-            "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_add1", "courier",
-            10, "#000000", "Y", "N", "N", "L", "", "N", 5.0, 30, 71.0, 14.0,
-            5.0, 19.0, 1, 1],
-        ["pos_slip_8", 4.0, "C", "A", "N", "", "", 0, "#000000", "", "",
-            "", "", "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_add2",
-            "courier", 10, "#000000", "Y", "N", "N", "L", "", "N", 5.0, 30,
-            68.0, 18.0, 5.0, 23.0, 1, 1],
-        ["pos_slip_8", 5.0, "C", "A", "N", "", "", 0, "#000000", "", "",
-            "", "", "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_add3",
-            "courier", 10, "#000000", "Y", "N", "N", "L", "", "N", 5.0, 30,
-            68.0, 22.0, 5.0, 27.0, 1, 1],
-        ["pos_slip_8", 6.0, "C", "A", "N", "", "", 0, "#000000", "", "",
-            "", "", "", "", 0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, "ctm_pcode",
-            "courier", 10, "#000000", "Y", "N", "N", "L", "", "N", 5.0, 4,
-            13.0, 26.0, 5.0, 31.0, 1, 1],
-        ["pos_slip_8", 7.0, "C", "A", "H", "Charge To:", "courier", 10,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 5.0, 30, 72.0, 35.0,
-            5.0, 40.0, 0.0, "account_details", "courier", 10, "#000000", "N",
-            "N", "N", "L", "TLRB", "N", 5.0, 30, 72.0, 40.0, 4.0, 44.0, 5,
-            1],
-        ["pos_slip_8", 8.0, "C", "A", "H", "Doc-Num", "courier", 7,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 5.0, 9, 20.0, 60.0,
-            4.0, 64.0, 0.0, "psm_docno", "courier", 7, "#000000", "N", "N",
-            "N", "C", "TLRB", "N", 5.0, 9, 20.0, 64.0, 4.0, 68.0, 1, 1],
-        ["pos_slip_8", 9.0, "C", "A", "H", "Date", "courier", 7, "#000000",
-            "Y", "N", "N", "C", "TLRB", "Y", 20.0, 10, 36.0, 60.0, 4.0, 64.0,
-            0.0, "psm_date", "courier", 7, "#000000", "N", "N", "N", "C",
-            "TLRB", "N", 20.0, 10, 36.0, 64.0, 4.0, 68.0, 1, 1],
-        ["pos_slip_8", 10.0, "C", "A", "H", "Document Type", "courier", 7,
-            "#000000", "Y", "N", "N", "C", "TLRB", "Y", 36.0, 23, 72.0, 60.0,
-            4.0, 64.0, 0.0, "document_type", "courier", 7, "#000000", "N",
-            "N", "N", "C", "TLRB", "N", 36.0, 23, 72.0, 64.0, 4.0, 68.0, 1,
-            1],
-        ["pos_slip_8", 11.0, "C", "B", "H", "Description", "courier", 6,
-            "#000000", "Y", "N", "N", "L", "TLRB", "Y", 5.0, 30, 44.0, 68.0,
-            4, 72.0, 0.0, "pst_desc", "courier", 6, "#000000", "N", "N", "N",
-            "L", "LR", "N", 5.0, 30, 44.0, 72.0, 4, 76.0, 1, 99],
-        ["pos_slip_8", 12.0, "C", "B", "H", "Qty", "courier", 6, "#000000",
-            "Y", "N", "N", "R", "TLRB", "Y", 44.0, 7, 54.0, 68.0, 4, 72.0,
-            0.0, "pst_qty", "courier", 6, "#000000", "N", "N", "N", "R", "R",
-            "N", 44.0, 7, 54.0, 72.0, 4, 76.0, 1, 99],
-        ["pos_slip_8", 13.0, "C", "B", "H", "Amount", "courier", 6, "#000000",
-            "Y", "N", "N", "R", "TLRB", "Y", 54.0, 13, 72.0, 68.0, 4, 72.0,
-            0.0, "pst_incl", "courier", 6, "#000000", "N", "N", "N", "R", "R",
-            "N", 54.0, 13, 72.0, 72.0, 4, 76.0, 1, 99],
-        ["pos_slip_8", 14.0, "C", "C", "L", "Total Sale", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "TL", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_value", "courier", 7, "#000000", "Y", "N",
-            "N", "R", "TR", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
-        ["pos_slip_8", 15.0, "C", "C", "L", "Total Discount", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "L", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_discount", "courier", 7, "#000000", "Y",
-            "N", "N", "R", "R", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
-        ["pos_slip_8", 16.0, "C", "C", "L", "Total Vouchers", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "L", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_vouchers", "courier", 7, "#000000", "Y",
-            "N", "N", "R", "R", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
-        ["pos_slip_8", 17.0, "C", "C", "L", "Total V.A.T.", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "L", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_tax", "courier", 7, "#000000", "Y", "N",
-            "N", "R", "R", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
-        ["pos_slip_8", 18.0, "C", "C", "L", "Cash", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "LB", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_cash", "courier", 7, "#000000", "Y", "N",
-            "N", "R", "RB", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
-        ["pos_slip_8", 19.0, "C", "C", "L", "Credit Card", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "LB", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_card", "courier", 7, "#000000", "Y", "N",
-            "N", "R", "RB", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
-        ["pos_slip_8", 20.0, "C", "C", "L", "On Account", "courier", 7,
-            "#000000", "Y", "N", "N", "L", "LB", "N", 5.0, 30, 51.0, 0.0,
-            4.0, 4.0, 0.0, "total_cred", "courier", 7, "#000000", "Y", "N",
-            "N", "R", "RB", "N", 51.0, 13, 72.0, 0.0, 4.0, 4.0, 1, 1],
         ["statement_loan", 1.0, "I", "A", "", "", "", 0, "#000000", "", "",
             "", "", "", "", 10.0, 0, 130.0, 15.0, 20.0, 35.0, 0.0,
             "ctm_logo", "", 0, "#000000", "", "", "", "", "", "", 0.0, 0,
diff --git a/uty/bm1010.py b/uty/bm1010.py
old mode 100755
new mode 100644
diff --git a/uty/dopip.bat b/uty/dopip.bat
old mode 100755
new mode 100644
index e367460..865c567
--- a/uty/dopip.bat
+++ b/uty/dopip.bat
@@ -16,10 +16,10 @@ pip install pygal --upgrade
 pip install pyinstaller --upgrade
 pip install pymupdf --upgrade
 pip install pysmb --upgrade
-pip install python-escpos --upgrade
 pip install pywin32 --upgrade
 pip install requests --upgrade
 pip install send2trash --upgrade
+pip install setuptools --upgrade
 pip install svglib --upgrade
 pip install tkcolorpicker --upgrade
 pip install tkinterhtml --upgrade
diff --git a/uty/fc1010.py b/uty/fc1010.py
old mode 100755
new mode 100644
diff --git a/uty/pkgprg.py b/uty/pkgprg.py
old mode 100755
new mode 100644
index 839719b..7779f2f
--- a/uty/pkgprg.py
+++ b/uty/pkgprg.py
@@ -12,6 +12,9 @@ bd = os.path.expanduser("~")  # Base directory
 sv = "root@mail"              # ftp login@server
 vv = 6                        # Version number
 bv = "Tartan-%s" % vv         # Version directory
+bx = "TartanExe"              # Executable directory
+bo = "TartanOld"              # Old directory
+bs = "TartanSve"              # Save directory
 vd = os.path.join(bd, bv)
 if not os.path.isdir(vd):
     print("Invalid Version Directory: %s" % vd)
@@ -43,28 +46,44 @@ def addPage(doc, fle, last=False):
         doc.write("\n")
     data.close()
 
+def getName(nam, x, y, z=None):
+    dd = os.path.join(bd, bo)
+    if z is None:
+        exe = "%s/Tartan_%s.%s.exe" % (dd, x, y)
+    else:
+        exe = "%s/Tartan_%s.%s.%s.exe" % (dd, x, y, z)
+    if os.path.isfile(exe):
+        dt = time.localtime(os.path.getmtime(exe))
+        nam = "%s %04i-%02i-%02i" % (nam, dt.tm_year, dt.tm_mon, dt.tm_mday)
+    return nam
+
 print("Packaging...")
+bits = ("32", "64")
 email = False
 mkcd = False
-pipupd = False
 newver = None
 publish = False
 test = False
+upgpip = False
 verinc = False
 windows = False
-opts, args = getopt.getopt(sys.argv[1:], "b:cehiptv:w")
+opts, args = getopt.getopt(sys.argv[1:], "a:b:cehiptuv:w")
 for o, v in opts:
     if o == "-h":
-        print("Usage: pkgprg [-b base directory] [-c create cd] [-d pipupd] "\
-                "[-e email] [-h help] [-i increment] [-p publish] [-t test] "\
-                "[-v new version] [-w windows]")
+        print("Usage: pkgprg [-a arch] [-b base directory] [-c create cd] "\
+                "[-e email] [-h help] [-i increment] [-p publish] "\
+                "[-t test] [-u upgpip] [-v new version] [-w windows]")
         sys.exit()
+    elif o == "-a":
+        if v in ("32", "64"):
+            bits = (v,)
+        else:
+            print("Invalid Architecture")
+            sys.exit()
     elif o == "-b":
         bd = v
     elif o == "-c":
         mkcd = True
-    elif o == "-d":
-        pipupd = True
     elif o == "-e":
         email = True
     elif o == "-i":
@@ -74,10 +93,20 @@ for o, v in opts:
         windows = True
     elif o == "-t":
         test = True
+    elif o == "-u":
+        upgpip = True
     elif o == "-v":
         newver = v
     elif o == "-w":
         windows = True
+if windows:
+    names = []
+    # Check if wine or windows
+    proc = subprocess.Popen("/usr/bin/virsh list --name --state-running",
+        shell=True, bufsize=0, stdin=subprocess.PIPE,
+        stdout=subprocess.PIPE, close_fds=True)
+    for l in proc.stdout:
+        names.append(l.strip().decode("utf-8"))
 if publish:
     mkcd = True
 if not os.path.exists(bd):
@@ -87,9 +116,9 @@ pypath = findFile(start=[bd], name=bv, ftyp="d")
 if not pypath:
     print("%s/%s directory not found" % (bd, bv))
     sys.exit()
-for d in ("TartanExe", "TartanOld", "TartanSve"):
-    if not os.path.exists(os.path.join(bd, d)):
-        os.makedirs(os.path.join(bd, d))
+for dd in (bx, bo, bs):
+    if not os.path.exists(os.path.join(bd, dd)):
+        os.makedirs(os.path.join(bd, dd))
 csys = "Tartan"
 cver = list(VERSION)
 if not newver:
@@ -113,11 +142,6 @@ if newver and newver != "%s.%s" % VERSION:
     if not os.path.isfile("changes.txt"):
         input("changes.txt File Not Found! Ctl-C to Abort")
     try:
-        if pipupd:
-            # Update sependancies
-            exeCmd("sh %s/uty/dopip.bat")
-            if windows:
-                exeCmd("wine %s/uty/dopip.bat")
         # Change version number in ms0000.py, SYS.rst, Downloads.rst
         old = open("ms0000.py", "r")
         lin = old.readlines()
@@ -172,12 +196,8 @@ if newver and newver != "%s.%s" % VERSION:
             new.write(l)
         new.close()
         # Update repository version control
-        if vv == 5:
-            sta = "/usr/bin/bzr status"
-            dif = "/usr/bin/bzr diff"
-        else:
-            sta = "/usr/bin/git status"
-            dif = "/usr/bin/git diff"
+        sta = "/usr/bin/git status"
+        dif = "/usr/bin/git diff"
         sta += " > ver/ver_%s.%s.status" % tuple(cver)
         exeCmd(sta)
         dif += " > ver/ver_%s.%s.diff" % tuple(cver)
@@ -192,6 +212,7 @@ if newver and newver != "%s.%s" % VERSION:
                 nam = "ver_%s.%s" % (x, y)
                 fle = os.path.join("ver", "%s.changes" % nam)
                 if os.path.isfile(fle):
+                    nam = getName(nam, x, y)
                     chg.write(nam + "\n")
                     chg.write(("=" * len(nam)) + "\n")
                     lines = open(fle, "r")
@@ -203,6 +224,7 @@ if newver and newver != "%s.%s" % VERSION:
                     nam = "ver_%s.%s.%s" % (x, y, z)
                     fle = os.path.join("ver", "%s.changes" % nam)
                     if os.path.isfile(fle):
+                        nam = getName(nam, x, y, z)
                         chg.write(nam + "\n")
                         chg.write(("=" * len(nam)) + "\n")
                         lines = open(fle, "r")
@@ -217,32 +239,28 @@ if newver and newver != "%s.%s" % VERSION:
         rst.write(chg.changes)
         rst.close()
         # Create current file
-        cur = open("%s/TartanExe/current" % bd, "w")
+        cur = open("%s/%s/current" % (bd, bx), "w")
         cur.write("%s\n" % newver)
         cur.close()
         # Commit repository
-        if vv == 5:
-            exeCmd("/usr/bin/bzr commit -m 'ver_%s.%s'" % tuple(cver))
-            exeCmd("/usr/bin/bzr log > ver/ver_%s.%s.log" % tuple(cver))
-        else:
-            exeCmd("/usr/bin/git add ver")
-            exeCmd("/usr/bin/git commit -am 'ver_%s.%s'" % tuple(cver))
-            if not test:
-                push = input("Push Version (y/n): ")
-                if push == "y":
-                    exeCmd("/usr/bin/git push -u origin master")
-    except:
-        print("Error Creating New Version")
+        exeCmd("/usr/bin/git add ver")
+        exeCmd("/usr/bin/git commit -am 'ver_%s.%s'" % tuple(cver))
+        if not test:
+            push = input("Push Version (y/n): ")
+            if push == "y":
+                exeCmd("/usr/bin/git push -u origin master")
+    except Exception as err:
+        print("Error Creating New Version (%s)" % err)
         sys.exit()
 # Create a zip of the repository
 if os.path.exists("%s/tarzip.zip" % bd):
     os.remove("%s/tarzip.zip" % bd)
-if vv == 5:
-    exeCmd("/usr/bin/bzr export --format=zip --root= %s/tarzip.zip" % bd)
-else:
-    exeCmd("/usr/bin/git archive --format=zip HEAD -o %s/tarzip.zip" % bd)
+exeCmd("/usr/bin/git archive --format=zip HEAD -o %s/tarzip.zip" % bd)
+exeCmd("zip -qd %s/tarzip doc/POS.rst" % bd)
+exeCmd("zip -qd %s/tarzip pos/*" % bd)
+exeCmd("zip -qd %s/tarzip pos" % bd)
 # Update the zip with tarchg.py tartan.ico and uncommitted files
-exeCmd("zip -qr %s/tarzip tarchg.py tartan.ico ass/*.py bkm/*.py bks/*.py bwl/*.py crs/*.py csh/*.py drs/*.py gen/*.py lon/*.py mem/*.py mst/*.py pos/*.py rca/*.py rtl/*.py scp/*.py sls/*.py str/*.py tab/*.py ms0000.py TartanClasses.py tartanFunctions.py tartanImages.py tartanWork.py uty/*.py wag/*.py" % bd)
+exeCmd("zip -qr %s/tarzip tarchg.py tartan.ico ass/*.py bkm/*.py bks/*.py bwl/*.py crs/*.py csh/*.py drs/*.py gen/*.py lon/*.py mem/*.py mst/*.py rca/*.py rtl/*.py scp/*.py sls/*.py str/*.py tab/*.py ms0000.py TartanClasses.py tartanFunctions.py tartanImages.py tartanWork.py uty/*.py wag/*.py" % bd)
 # Create a new system directory
 if os.path.exists("%s/tartan" % bd):
     shutil.rmtree("%s/tartan" % bd)
@@ -258,7 +276,6 @@ if os.path.isdir("ver"):
 # Create tarimp module for pyinstaller
 ofl = open("tarimp.py", "w")
 ofl.write("# Tartan Modules to Include with Pyinstaller Exe\n")
-ofl.write("import pkg_resources.py2_warn\n")
 ofl.write("import sys\n")
 for fle in glob.iglob("*.py"):
     if fle.count("__pycache__"):
@@ -274,30 +291,32 @@ print("")
 os.chdir(bd)
 # Create zip file for pyinstaller
 zipfle = "tartan-%s" % vv
-print("Creating %s.zip in TartanSve directory ..... Please Wait" % zipfle)
-if os.path.exists("%s/TartanSve/%s.zip" % (bd, zipfle)):
-    os.remove("%s/TartanSve/%s.zip" % (bd, zipfle))
-if vv == 5:
-    exeCmd("zip -qr %s/TartanSve/%s tartan --exclude \.bzr\*" % (bd, zipfle))
-else:
-    exeCmd("zip -qr %s/TartanSve/%s tartan --exclude \.git\*" % (bd, zipfle))
+print("Creating %s.zip in %s directory ..... Please Wait" % (zipfle, bs))
+if os.path.exists("%s/%s/%s.zip" % (bd, bs, zipfle)):
+    os.remove("%s/%s/%s.zip" % (bd, bs, zipfle))
+exeCmd("zip -qr %s/%s/%s tartan --exclude \.git\*" % (bd, bs, zipfle))
 if windows:
     # Python windows executable
-    if vv == 5:
-        dd = "%s/.wine2/drive_c/PyInstall" % bd
-        exeCmd("wine2 cmd /c %s/maker.bat tartan" % dd)
+    if "Windows10" in names:
+        if upgpip:
+            # Update dependancies
+            exeCmd("ssh windows PyInstall\\\\dopip.bat")
+        exeCmd("ssh windows PyInstall\\\\maker.bat tartan")
+        os.rename("%s/%s/tartan-%s.exe" % (bd, bx, vv),
+            "%s/%s/tartan-%s-64.exe" % (bd, bx, vv))
     else:
-        names = []
-        proc = subprocess.Popen("/usr/bin/virsh list --name --state-running",
-            shell=True, bufsize=0, stdin=subprocess.PIPE,
-            stdout=subprocess.PIPE, close_fds=True)
-        for l in proc.stdout:
-            names.append(l.strip().decode("utf-8"))
-        if "win10" in names:
-            os.system("ssh windows PyInstall\\\\maker.bat tartan")
-        else:
-            dd = "%s/.wine3/drive_c/PyInstall" % bd
-            exeCmd("wine3 cmd /c %s/maker.bat tartan" % dd)
+        for bit in bits:
+            print("Packaging %s bit" % bit)
+            if upgpip:
+                # Update dependancies
+                exeCmd("wine%s cmd /c %s/uty/dopip.bat" % (bit, bv))
+            xpth = "/home/paul/.wine%s/dosdevices/x:" % bit
+            if not os.path.exists(xpth):
+                os.symlink("/home/paul", xpth)
+            dd = "%s/.wine%s/drive_c/PyInstall" % (bd, bit)
+            exeCmd("wine%s cmd /c %s/maker.bat tartan" % (bit, dd))
+            os.rename("%s/%s/tartan-%s.exe" % (bd, bx, vv),
+                "%s/%s/tartan-%s-%s.exe" % (bd, bx, vv, bit))
 if publish:
     # Publish
     # Change to pypath directory
@@ -307,9 +326,9 @@ if publish:
     fles = ["doc/SYS.rst", "doc/CTL.rst", "doc/GEN.rst", "doc/ASS.rst",
             "doc/BKM.rst", "doc/CRS.rst", "doc/DRS.rst", "doc/LON.rst",
             "doc/MEM.rst", "doc/RTL.rst", "doc/RCA.rst", "doc/STR.rst",
-            "doc/SLS.rst", "doc/POS.rst", "doc/WAG.rst", "doc/SLN.rst",
-            "doc/BKS.rst", "doc/BWL.rst", "doc/CSH.rst", "doc/SCP.rst",
-            "doc/UTY.rst", "doc/HLP.rst"]
+            "doc/SLS.rst", "doc/WAG.rst", "doc/SLN.rst", "doc/BKS.rst",
+            "doc/BWL.rst", "doc/CSH.rst", "doc/SCP.rst", "doc/UTY.rst",
+            "doc/HLP.rst"]
     doc = open(man, "w")
     for fle in fles:
         if fle == fles[-1]:
@@ -317,41 +336,45 @@ if publish:
         else:
             addPage(doc, fle)
     doc.close()
+    exeCmd("rst2pdf %s/%s/doc/Manual.rst -o /tmp/Manual.pdf "\
+            "-s %s/%s/doc/mystylesheet" % (bd, bv, bd, bv))
     # Move Current to Old
-    exeCmd("mv %s/TartanExe/%s_%s.* %s/TartanOld/" % (bd, csys, vv, bd))
+    exeCmd("mv %s/%s/%s_%s.* %s/%s/" %
+        (bd, bx, csys, vv, bd, bo))
     # Create Source tgz and zip
-    exeCmd("tar -czf %s/TartanExe/%s_%s.%s.tgz %s/tartan" %
-        (bd, csys, cver[0], cver[1], bd))
-    exeCmd("cp -p %s/TartanSve/tartan-%s.zip %s/TartanSve/%s_%s.%s.zip" %
-        (bd, vv, bd, csys, cver[0], cver[1]))
+    exeCmd("tar -czf %s/%s/%s_%s.%s.tgz %s/tartan" %
+        (bd, bx, csys, cver[0], cver[1], bd))
+    exeCmd("cp -p %s/%s/tartan-%s.zip %s/%s/%s_%s.%s.zip" %
+        (bd, bs, vv, bd, bs, csys, cver[0], cver[1]))
     # Rename Windows exe's
-    exeCmd("cp -p %s/TartanExe/tartan-%s.exe %s/TartanExe/%s_%s.%s.exe" %
-        (bd, vv, bd, csys, cver[0], cver[1]))
+    exeCmd("cp -p %s/%s/tartan-%s-32.exe %s/%s/%s_%s.%s-32.exe" %
+        (bd, bx, vv, bd, bx, csys, cver[0], cver[1]))
+    exeCmd("cp -p %s/%s/tartan-%s-64.exe %s/%s/%s_%s.%s-64.exe" %
+        (bd, bx, vv, bd, bx, csys, cver[0], cver[1]))
     print("")
     print("Version Number is %s.%s" % tuple(cver))
     print("")
     if not test:
         # Dropbox
         exeCmd("rm /home/paul/Dropbox/Updates/%s*" % csys)
-        exeCmd("cp -p %s/TartanExe/%s_%s.%s.tgz "\
-            "/home/paul/Dropbox/Updates/" % (bd, csys, cver[0], cver[1]))
-        exeCmd("cp -p %s/TartanExe/%s_%s.%s.exe "\
-            "/home/paul/Dropbox/Updates/" % (bd, csys, cver[0], cver[1]))
+        exeCmd("cp -p %s/%s/%s_%s.%s.tgz /home/paul/Dropbox/Updates/" %
+            (bd, bx, csys, cver[0], cver[1]))
+        exeCmd("cp -p %s/%s/%s_%s.%s.exe /home/paul/Dropbox/Updates/" %
+            (bd, bx, csys, cver[0], cver[1]))
         # FTP Server
         exeCmd("ssh %s rm /srv/ftp/%s*" % (sv, csys))
-        exeCmd("rsync -az %s/TartanOld/Tartan_2.5.29.* %s:/srv/ftp/ "\
-            "--progress" % (bd, sv))
-        exeCmd("rsync -az %s/TartanOld/Tartan_3.4.51.* %s:/srv/ftp/ "\
-            "--progress" % (bd, sv))
-        exeCmd("rsync -az %s/TartanOld/Tartan_4.1.14.* %s:/srv/ftp/ "\
-            "--progress" % (bd, sv))
-        exeCmd("rsync -az %s/TartanOld/Tartan_5.5.* %s:/srv/ftp/ "\
-            "--progress" % (bd, sv))
-        exeCmd("rsync -az %s/TartanExe/current %s:/srv/ftp/ "\
-            "--progress" % (bd, sv))
-        exeCmd("rsync -az %s/TartanExe/%s* %s:/srv/ftp/ "\
-            "--progress" % (bd, csys, sv))
-        exeCmd("ssh %s chmod a+r /srv/ftp/*" % sv)
+        exeCmd("rsync -az %s/%s/Tartan_4.1.14.* %s:/srv/ftp/ "\
+            "--progress" % (bd, bo, sv))
+        exeCmd("rsync -az %s/%s/Tartan_5.5.* %s:/srv/ftp/ "\
+            "--progress" % (bd, bo, sv))
+        exeCmd("rsync -az %s/%s/Tartan_5.13.* %s:/srv/ftp/ "\
+            "--progress" % (bd, bo, sv))
+        exeCmd("rsync -az %s/%s/current %s:/srv/ftp/ "\
+            "--progress" % (bd, bx, sv))
+        exeCmd("rsync -az %s/%s/%s* %s:/srv/ftp/ "\
+            "--progress" % (bd, bx, csys, sv))
+        exeCmd("rsync -az /tmp/Manual.pdf %s:/srv/ftp/ --progress" % sv)
+        exeCmd("ssh %s chmod a+rx /srv/ftp/*" % sv)
         exeCmd("ssh %s chown paul:paul /srv/ftp/*" % sv)
         # Web documents
         exeCmd("rsync -az %s/%s/doc/Manual.rst "\
@@ -375,8 +398,8 @@ if publish:
         # Executables
         exeCmd("mkdir %s/tempcd" % bd)
         exeCmd("mkdir %s/tempcd/Other" % bd)
-        exeCmd("cp -p %s/TartanExe/Tartan* %s/tempcd/" % (bd, bd))
-        exeCmd("cp -pr %s/TartanExe/* %s/tempcd/Other/" % (bd, bd))
+        exeCmd("cp -p %s/%s/Tartan* %s/tempcd/" % (bd, bx, bd))
+        exeCmd("cp -pr %s/%s/* %s/tempcd/Other/" % (bd, bx, bd))
         exeCmd("rm %s/tempcd/Other/Tartan*" % bd)
         exeCmd("rm %s/tempcd/Other/Rnehol*" % bd)
         exeCmd("rm %s/tempcd/Other/??????-[5,6].exe" % bd)
@@ -389,19 +412,18 @@ if publish:
         exeCmd("todos -o %s/tempcd/AUTORUN.INF" % bd)
         exeCmd("chmod a+x %s/tempcd/AUTORUN.INF" % bd)
         # Add Documentation
-        exeCmd("rst2pdf %s/%s/doc/Manual.rst -o %s/tempcd/Manual.pdf "\
-            "-s %s/%s/doc/mystylesheet" % (bd, bv, bd, bd, bv))
+        exeCmd("cp /tmp/Manual.pdf %s/tempcd/Manual.pdf" % bd)
         # Make CD iso
         exeCmd("mkisofs -r -J -l -D -V 'Tartan Systems %s.%s' "\
             "-p 'Paul Malherbe paul@tartan.co.za' -copyright 'Paul Malherbe' "\
             "-o %s/TartanCD/Tartan.iso -graft-points /\=%s/tempcd" %
             (cver[0], cver[1], bd, bd))
         shutil.rmtree("%s/tempcd" % bd)
-        #if verinc and windows:
-        #    # Sourceforge
-        #    os.chdir("%s/TartanExe" % bd)
-        #    exeCmd("cp -p %s/doc/readme.md ." % pypath)
-        #    exeCmd("%s/uty/upload.sh %s" % (pypath, newver))
+        if verinc and windows:
+            # Sourceforge
+            os.chdir("%s/%s" % (bd, bx))
+            exeCmd("cp -p %s/doc/readme.md ." % pypath)
+            exeCmd("%s/uty/upload.sh %s" % (pypath, newver))
 if email and not test:
     # Email Users
     chgfle = "%s/ver/ver_%s.%s.changes" % (pypath, cver[0], cver[1])
@@ -438,12 +460,14 @@ if email and not test:
             "lorraine@multitrust.net",
             "marindag@buildinn-el.co.za",
             "marlene@acsonline.co.za",
+            "marlene@fourthquadrant.co.za",
             "mcbagro@gmail.com",
             "mel@acsaccounting.co.za",
             "mike@annettelaing.co.za",
             "no2pigstash@hotmail.com",
             "paul@tartan.co.za",
             "paulabergh@mweb.co.za",
+            "pevensey@futurenet.co.za",
             "rob@itennis.co.za",
             "rene@agfin.co.za",
             "ruthmiles52@gmail.com",
diff --git a/uty/pm1010.py b/uty/pm1010.py
old mode 100755
new mode 100644
index 6c377ff..b3e97b0
--- a/uty/pm1010.py
+++ b/uty/pm1010.py
@@ -87,7 +87,10 @@ class pm1010(object):
         txt = (self.doExitSecret,)
         self.sw = TartanDialog(self.opts["mf"], tops=True, title=tit,
             eflds=fld, butt=but, tend=tnd, txit=txt)
-        self.sw.mstFrame.wait_window()
+        self.opts["mf"].startLoop()
+        if self.change:
+            self.change = False
+            self.getSecret()
 
     def doSecret(self, frt, pag, r, c, p, i, w):
         self.doEncrypt(w)
@@ -123,9 +126,7 @@ class pm1010(object):
 
     def doExitSecret(self):
         self.sw.closeProcess()
-        if self.change:
-            self.change = False
-            self.getSecret()
+        self.opts["mf"].closeLoop()
 
     def mainProcess(self):
         pwm = {
@@ -241,7 +242,7 @@ This file will be treated as a Temporary File when Exiting Tartan.""" % fle)
         self.df.focusField("T", 0, self.df.col)
 
     def doPrint(self):
-        self.fpdf = MyFpdf(name="pm1010", head=133, auto=True, foot=True)
+        self.fpdf = MyFpdf(name="pm1010", head=133, auto=True)
         self.fpdf.header = self.doHead
         self.fpdf.add_page()
         codes = list(self.data[self.opts["capnm"]].keys())
diff --git a/uty/pw1010.py b/uty/pw1010.py
old mode 100755
new mode 100644
diff --git a/uty/rp1010.py b/uty/rp1010.py
old mode 100755
new mode 100644
diff --git a/uty/rp1020.py b/uty/rp1020.py
old mode 100755
new mode 100644
diff --git a/uty/td1010.py b/uty/td1010.py
old mode 100755
new mode 100644
diff --git a/uty/tdc110.py b/uty/tdc110.py
old mode 100755
new mode 100644
diff --git a/uty/tp1010.py b/uty/tp1010.py
old mode 100755
new mode 100644
index 1f48344..8d7d6d2
--- a/uty/tp1010.py
+++ b/uty/tp1010.py
@@ -27,8 +27,8 @@ COPYING
 """
 
 import operator, os
-from TartanClasses import ViewPDF, DrawForm, FileDialog, MyFpdf, RepPrt
-from TartanClasses import Sql, TartanDialog
+from TartanClasses import ViewPDF, DrawForm, FileDialog, RepPrt, Sql
+from TartanClasses import TartanDialog, tkfont
 from tartanFunctions import askQuestion, showError, showInfo
 from tartanWork import allsys, stdtpl, tptrtp
 
@@ -788,7 +788,6 @@ class tp1010(object):
         else:
             self.sql.updRec("tplmst", data=self.df.t_work[0][0],
                 where=[("tpm_tname", "=", self.template)])
-        self.pdf = MyFpdf()
         self.df.selPage("Sequence")
         self.df.focusField("T", 1, 1)
 
@@ -903,7 +902,7 @@ class tp1010(object):
         self.frm.add_page()
         for key in self.frm.newkey:
             line = self.frm.newdic[key]
-            if line[2] in ("C", "I"):
+            if line[self.sql.tpldet_col.index("tpd_type")] in ("C", "I"):
                 mrgcod = line[self.sql.tpldet_col.index("tpd_mrgcod")]
             else:
                 mrgcod = ""
@@ -913,7 +912,8 @@ class tp1010(object):
                 dat = line[self.sql.tpldet_col.index("tpd_text")]
             if not dat:
                 if line[self.sql.tpldet_col.index("tpd_type")] == "I":
-                    dat = "rectangle"
+                    line[self.sql.tpldet_col.index("tpd_type")] = "R"
+                    dat = "Image"
                 else:
                     dat = " "
             line[self.sql.tpldet_col.index("tpd_text")] = dat
@@ -1010,11 +1010,16 @@ class tp1010(object):
             chrs = len(data)
         else:
             chrs = data
-        style = ""
+        style = "normal"
         if bold == "Y":
-            style += "B"
-        self.pdf.set_font(font, style, size)
-        return int(round(self.pdf.get_string_width("X"*(chrs+pad)), 0))
+            style = "bold"
+        txt = tkfont.Font(family=font, size=size, weight=style)
+        width = (txt.measure("X"*(chrs+pad)) / 96) * 25.4
+        if width % 1:
+            width = int(width) + 1
+        else:
+            width = int(width)
+        return width
 
     def doT0Exit(self):
         self.df.closeProcess()
diff --git a/ver/ver_5.0.1.diff b/ver/ver_5.0.1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.1.log b/ver/ver_5.0.1.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.1.status b/ver/ver_5.0.1.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.10.changes b/ver/ver_5.0.10.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.10.diff b/ver/ver_5.0.10.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.10.log b/ver/ver_5.0.10.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.10.status b/ver/ver_5.0.10.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.11.changes b/ver/ver_5.0.11.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.11.diff b/ver/ver_5.0.11.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.11.log b/ver/ver_5.0.11.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.11.rc4.diff b/ver/ver_5.0.11.rc4.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.11.rc5.diff b/ver/ver_5.0.11.rc5.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.11.status b/ver/ver_5.0.11.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.12.changes b/ver/ver_5.0.12.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.12.diff b/ver/ver_5.0.12.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.12.log b/ver/ver_5.0.12.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.12.rc1.diff b/ver/ver_5.0.12.rc1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.12.rc2.diff b/ver/ver_5.0.12.rc2.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.12.status b/ver/ver_5.0.12.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.13.changes b/ver/ver_5.0.13.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.13.diff b/ver/ver_5.0.13.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.13.log b/ver/ver_5.0.13.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.13.status b/ver/ver_5.0.13.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.14.changes b/ver/ver_5.0.14.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.14.diff b/ver/ver_5.0.14.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.14.log b/ver/ver_5.0.14.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.14.status b/ver/ver_5.0.14.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.15.changes b/ver/ver_5.0.15.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.15.diff b/ver/ver_5.0.15.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.15.log b/ver/ver_5.0.15.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.15.status b/ver/ver_5.0.15.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.16.changes b/ver/ver_5.0.16.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.16.diff b/ver/ver_5.0.16.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.16.log b/ver/ver_5.0.16.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.16.status b/ver/ver_5.0.16.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.17.changes b/ver/ver_5.0.17.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.17.diff b/ver/ver_5.0.17.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.17.log b/ver/ver_5.0.17.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.17.rc1.diff b/ver/ver_5.0.17.rc1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.17.status b/ver/ver_5.0.17.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.18.changes b/ver/ver_5.0.18.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.18.diff b/ver/ver_5.0.18.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.18.log b/ver/ver_5.0.18.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.18.status b/ver/ver_5.0.18.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.2.diff b/ver/ver_5.0.2.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.2.log b/ver/ver_5.0.2.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.2.status b/ver/ver_5.0.2.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.3.diff b/ver/ver_5.0.3.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.3.log b/ver/ver_5.0.3.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.3.status b/ver/ver_5.0.3.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.4.diff b/ver/ver_5.0.4.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.4.log b/ver/ver_5.0.4.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.4.status b/ver/ver_5.0.4.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.5.diff b/ver/ver_5.0.5.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.5.log b/ver/ver_5.0.5.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.5.status b/ver/ver_5.0.5.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.6.diff b/ver/ver_5.0.6.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.6.log b/ver/ver_5.0.6.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.6.status b/ver/ver_5.0.6.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.7.changes b/ver/ver_5.0.7.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.7.diff b/ver/ver_5.0.7.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.7.log b/ver/ver_5.0.7.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.7.status b/ver/ver_5.0.7.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.8.diff b/ver/ver_5.0.8.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.8.log b/ver/ver_5.0.8.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.8.status b/ver/ver_5.0.8.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.9.diff b/ver/ver_5.0.9.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.9.log b/ver/ver_5.0.9.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.0.9.status b/ver/ver_5.0.9.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.0.changes b/ver/ver_5.1.0.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.0.diff b/ver/ver_5.1.0.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.0.log b/ver/ver_5.1.0.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.0.status b/ver/ver_5.1.0.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.1.changes b/ver/ver_5.1.1.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.1.diff b/ver/ver_5.1.1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.1.log b/ver/ver_5.1.1.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.1.status b/ver/ver_5.1.1.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.2.changes b/ver/ver_5.1.2.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.2.diff b/ver/ver_5.1.2.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.2.log b/ver/ver_5.1.2.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.2.status b/ver/ver_5.1.2.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.3.changes b/ver/ver_5.1.3.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.3.diff b/ver/ver_5.1.3.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.3.log b/ver/ver_5.1.3.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.3.status b/ver/ver_5.1.3.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.4.changes b/ver/ver_5.1.4.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.4.diff b/ver/ver_5.1.4.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.4.log b/ver/ver_5.1.4.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.1.4.status b/ver/ver_5.1.4.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.10.changes b/ver/ver_5.10.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.10.diff b/ver/ver_5.10.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.10.log b/ver/ver_5.10.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.10.status b/ver/ver_5.10.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.11.changes b/ver/ver_5.11.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.11.diff b/ver/ver_5.11.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.11.log b/ver/ver_5.11.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.11.status b/ver/ver_5.11.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.12.changes b/ver/ver_5.12.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.12.diff b/ver/ver_5.12.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.12.log b/ver/ver_5.12.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.12.status b/ver/ver_5.12.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.13.changes b/ver/ver_5.13.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.13.diff b/ver/ver_5.13.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.13.log b/ver/ver_5.13.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.13.status b/ver/ver_5.13.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.0.changes b/ver/ver_5.2.0.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.0.diff b/ver/ver_5.2.0.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.0.log b/ver/ver_5.2.0.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.0.status b/ver/ver_5.2.0.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.1.changes b/ver/ver_5.2.1.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.1.diff b/ver/ver_5.2.1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.1.log b/ver/ver_5.2.1.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.1.status b/ver/ver_5.2.1.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.2.changes b/ver/ver_5.2.2.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.2.diff b/ver/ver_5.2.2.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.2.log b/ver/ver_5.2.2.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.2.status b/ver/ver_5.2.2.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.3.changes b/ver/ver_5.2.3.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.3.diff b/ver/ver_5.2.3.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.3.log b/ver/ver_5.2.3.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.3.status b/ver/ver_5.2.3.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.4.changes b/ver/ver_5.2.4.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.4.diff b/ver/ver_5.2.4.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.4.log b/ver/ver_5.2.4.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.4.status b/ver/ver_5.2.4.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.5.changes b/ver/ver_5.2.5.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.5.diff b/ver/ver_5.2.5.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.5.log b/ver/ver_5.2.5.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.5.status b/ver/ver_5.2.5.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.6.changes b/ver/ver_5.2.6.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.6.diff b/ver/ver_5.2.6.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.6.log b/ver/ver_5.2.6.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.6.status b/ver/ver_5.2.6.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.7.changes b/ver/ver_5.2.7.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.7.diff b/ver/ver_5.2.7.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.7.log b/ver/ver_5.2.7.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.7.status b/ver/ver_5.2.7.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.8.changes b/ver/ver_5.2.8.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.8.diff b/ver/ver_5.2.8.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.8.log b/ver/ver_5.2.8.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.2.8.status b/ver/ver_5.2.8.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.0.changes b/ver/ver_5.3.0.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.0.diff b/ver/ver_5.3.0.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.0.log b/ver/ver_5.3.0.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.0.status b/ver/ver_5.3.0.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.1.changes b/ver/ver_5.3.1.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.1.diff b/ver/ver_5.3.1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.1.log b/ver/ver_5.3.1.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.1.status b/ver/ver_5.3.1.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.10.changes b/ver/ver_5.3.10.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.10.diff b/ver/ver_5.3.10.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.10.log b/ver/ver_5.3.10.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.10.status b/ver/ver_5.3.10.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.11.changes b/ver/ver_5.3.11.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.11.diff b/ver/ver_5.3.11.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.11.log b/ver/ver_5.3.11.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.11.status b/ver/ver_5.3.11.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.12.changes b/ver/ver_5.3.12.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.12.diff b/ver/ver_5.3.12.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.12.log b/ver/ver_5.3.12.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.12.status b/ver/ver_5.3.12.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.13.changes b/ver/ver_5.3.13.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.13.diff b/ver/ver_5.3.13.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.13.log b/ver/ver_5.3.13.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.13.status b/ver/ver_5.3.13.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.2.changes b/ver/ver_5.3.2.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.2.diff b/ver/ver_5.3.2.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.2.log b/ver/ver_5.3.2.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.2.status b/ver/ver_5.3.2.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.3.changes b/ver/ver_5.3.3.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.3.diff b/ver/ver_5.3.3.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.3.log b/ver/ver_5.3.3.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.3.status b/ver/ver_5.3.3.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.4.changes b/ver/ver_5.3.4.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.4.diff b/ver/ver_5.3.4.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.4.log b/ver/ver_5.3.4.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.4.status b/ver/ver_5.3.4.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.5.changes b/ver/ver_5.3.5.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.5.diff b/ver/ver_5.3.5.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.5.log b/ver/ver_5.3.5.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.5.status b/ver/ver_5.3.5.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.6.changes b/ver/ver_5.3.6.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.6.diff b/ver/ver_5.3.6.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.6.log b/ver/ver_5.3.6.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.6.status b/ver/ver_5.3.6.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.7.changes b/ver/ver_5.3.7.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.7.diff b/ver/ver_5.3.7.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.7.log b/ver/ver_5.3.7.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.7.status b/ver/ver_5.3.7.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.8.changes b/ver/ver_5.3.8.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.8.diff b/ver/ver_5.3.8.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.8.log b/ver/ver_5.3.8.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.8.status b/ver/ver_5.3.8.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.9.changes b/ver/ver_5.3.9.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.9.diff b/ver/ver_5.3.9.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.9.log b/ver/ver_5.3.9.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.3.9.status b/ver/ver_5.3.9.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.0.changes b/ver/ver_5.4.0.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.0.diff b/ver/ver_5.4.0.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.0.log b/ver/ver_5.4.0.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.0.status b/ver/ver_5.4.0.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.1.changes b/ver/ver_5.4.1.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.1.diff b/ver/ver_5.4.1.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.1.log b/ver/ver_5.4.1.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.1.status b/ver/ver_5.4.1.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.2.changes b/ver/ver_5.4.2.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.2.diff b/ver/ver_5.4.2.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.2.log b/ver/ver_5.4.2.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.2.status b/ver/ver_5.4.2.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.4.changes b/ver/ver_5.4.4.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.4.diff b/ver/ver_5.4.4.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.4.log b/ver/ver_5.4.4.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.4.status b/ver/ver_5.4.4.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.5.changes b/ver/ver_5.4.5.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.5.diff b/ver/ver_5.4.5.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.5.log b/ver/ver_5.4.5.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.5.status b/ver/ver_5.4.5.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.6.changes b/ver/ver_5.4.6.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.6.diff b/ver/ver_5.4.6.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.6.log b/ver/ver_5.4.6.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.6.status b/ver/ver_5.4.6.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.7.changes b/ver/ver_5.4.7.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.7.diff b/ver/ver_5.4.7.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.7.log b/ver/ver_5.4.7.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.7.status b/ver/ver_5.4.7.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.8.changes b/ver/ver_5.4.8.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.8.diff b/ver/ver_5.4.8.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.8.log b/ver/ver_5.4.8.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.4.8.status b/ver/ver_5.4.8.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.5.changes b/ver/ver_5.5.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.5.diff b/ver/ver_5.5.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.5.log b/ver/ver_5.5.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.5.status b/ver/ver_5.5.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.6.changes b/ver/ver_5.6.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.6.diff b/ver/ver_5.6.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.6.log b/ver/ver_5.6.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.6.status b/ver/ver_5.6.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.7.changes b/ver/ver_5.7.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.7.diff b/ver/ver_5.7.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.7.log b/ver/ver_5.7.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.7.status b/ver/ver_5.7.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.8.changes b/ver/ver_5.8.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.8.diff b/ver/ver_5.8.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.8.log b/ver/ver_5.8.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.8.status b/ver/ver_5.8.status
old mode 100755
new mode 100644
diff --git a/ver/ver_5.9.changes b/ver/ver_5.9.changes
old mode 100755
new mode 100644
diff --git a/ver/ver_5.9.diff b/ver/ver_5.9.diff
old mode 100755
new mode 100644
diff --git a/ver/ver_5.9.log b/ver/ver_5.9.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.9.rc1.log b/ver/ver_5.9.rc1.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.9.rc2.log b/ver/ver_5.9.rc2.log
old mode 100755
new mode 100644
diff --git a/ver/ver_5.9.status b/ver/ver_5.9.status
old mode 100755
new mode 100644
diff --git a/wag/sl1010.py b/wag/sl1010.py
old mode 100755
new mode 100644
diff --git a/wag/sl2010.py b/wag/sl2010.py
old mode 100755
new mode 100644
diff --git a/wag/sl2020.py b/wag/sl2020.py
old mode 100755
new mode 100644
diff --git a/wag/sl2030.py b/wag/sl2030.py
old mode 100755
new mode 100644
diff --git a/wag/sl3010.py b/wag/sl3010.py
old mode 100755
new mode 100644
index cfa4f3f..ac42955
--- a/wag/sl3010.py
+++ b/wag/sl3010.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, ProgressBar, Sql
 from TartanClasses import TartanDialog
 from tartanFunctions import getModName, doPrinter, showError
@@ -47,9 +46,6 @@ class sl3010(object):
         if not wagctl:
             return
         self.fromad = wagctl["ctw_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % (t[0],
-            t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -117,12 +113,9 @@ class sl3010(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %39s %6s" %
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-77s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.btot = [0, 0]
-        self.pgnum = 0
         self.pglin = 999
         bc = self.sql.ctlbat_col
         tc = self.sql.wagltf_col
@@ -182,11 +175,9 @@ class sl3010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-31s %42s %5s" %
-            ("Staff Loans Batch Error Listing", "Page", self.pgnum))
+        self.fpdf.drawText("Staff Loans Batch Error Listing")
         self.fpdf.drawText()
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/wag/sl3020.py b/wag/sl3020.py
old mode 100755
new mode 100644
index e930836..01d42aa
--- a/wag/sl3020.py
+++ b/wag/sl3020.py
@@ -50,8 +50,6 @@ class sl3020(object):
         self.fromad = wagctl["ctw_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         if lir:
             fy = int(lir / 10000)
             fm = int(lir / 100) - (fy * 100) + 1
@@ -161,13 +159,9 @@ class sl3020(object):
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
         if self.totsonly == "Y":
-            self.head = ("%03u %-30s %38s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+            self.head = "%03u %-76s" % (self.opts["conum"], self.opts["conam"])
         else:
-            self.head = ("%03u %-30s %12s %33s %12s %6s" % (self.opts["conum"],
-                self.opts["conam"], "", self.sysdttm, "",
-                    self.__class__.__name__))
+            self.head = "%03u %-97s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.bqty = 0
         self.bamt = 0
@@ -179,7 +173,6 @@ class sl3020(object):
         self.gam = [0,0,0,0,0,0,0]
         self.gdd = [0,0,0,0,0,0,0]
         self.trtp = 0
-        self.pgnum = 0
         self.pglin = 999
         col = self.sql.wagltf_col
         for num, dat in enumerate(recs):
@@ -243,19 +236,11 @@ class sl3020(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        if self.totsonly == "Y":
-            self.fpdf.drawText(
-            "%-34s %-7s %2s %-7s %20s %5s" % \
-            ("Staff Loans Audit Trail for Period",
-            self.sdatd, "to", self.edatd, "Page", self.pgnum))
-        else:
-            self.fpdf.drawText(
-            "%-34s %-7s %-2s %-7s %41s %5s" % \
+        self.fpdf.drawText("%-34s %-7s %2s %-7s" % \
             ("Staff Loans Audit Trail for Period",
-            self.sdatd, "to", self.edatd, "Page", self.pgnum))
+            self.sdatd, "to", self.edatd))
         self.fpdf.drawText()
         self.pglin = 4
         if self.totind == "N":
diff --git a/wag/sl3030.py b/wag/sl3030.py
old mode 100755
new mode 100644
index f061054..1a35409
--- a/wag/sl3030.py
+++ b/wag/sl3030.py
@@ -49,8 +49,6 @@ class sl3030(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -109,12 +107,9 @@ class sl3030(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %77s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-115s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         tot = 0
-        self.pgnum = 0
         self.pglin = 999
         for num, dat in enumerate(recs):
             p.displayProgress(num)
@@ -129,6 +124,8 @@ class sl3030(object):
             per = CCD(dat[7], "UD", 6.2)
             ded = CCD(dat[8], "SD", 13.2)
             bal = CCD(dat[9], "SD", 13.2)
+            if self.zero == "Y" and not bal.work:
+                continue
             tot = float(ASD(tot) + ASD(bal.work))
             if self.pglin > self.fpdf.lpp:
                 self.pageHeading()
@@ -151,12 +148,10 @@ class sl3030(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-29s %-10s %72s %5s" % \
-            ("Staff Loans Master List as at", self.sysdtd,
-                "Page", self.pgnum))
+        self.fpdf.drawText("%-29s %-10s" % \
+            ("Staff Loans Master List as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-15s%-1s%-3s%-16s%-1s%-3s%-4s%-1s%-1s" % \
             ("(Options: Sort-", self.df.t_disp[0][0][0], "",
diff --git a/wag/sl3040.py b/wag/sl3040.py
old mode 100755
new mode 100644
index 9f67e49..846a339
--- a/wag/sl3040.py
+++ b/wag/sl3040.py
@@ -50,11 +50,7 @@ class sl3040(object):
         self.fromad = wagctl["ctw_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
-        self.head = ("%03u %-30s %80s %6s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-118s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         return True
 
@@ -137,7 +133,6 @@ class sl3040(object):
         self.opts["mf"].closeLoop()
 
     def doProcess(self, emp):
-        self.pgnum = 0
         self.totbal = 0
         wlc = self.sql.waglmf_col
         self.emp = CCD(emp[wlc.index("wlm_empno")], "UI", 5)
@@ -182,12 +177,11 @@ class sl3040(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-27s %-15s %2s %15s %53s %5s" % \
+        self.fpdf.drawText("%-27s %-15s %2s %15s" % \
             ("Staff Loans Statements from", self.df.t_disp[0][0][0],
-            "to", self.df.t_disp[0][0][1], "Page", self.pgnum))
+            "to", self.df.t_disp[0][0][1]))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 4
diff --git a/wag/sl4010.py b/wag/sl4010.py
old mode 100755
new mode 100644
index d958d5d..b3b1da1
--- a/wag/sl4010.py
+++ b/wag/sl4010.py
@@ -52,8 +52,6 @@ class sl4010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         # Get the current period starting date
         period = self.sql.getRec("ctlynd", cols=["max(cye_period)"],
             where=[("cye_cono", "=", self.opts["conum"])], limit=1)[0]
@@ -275,13 +273,11 @@ class sl4010(object):
         self.df.focusField(self.df.frt, self.df.pag, self.df.col)
 
     def doPrintOption(self, opt):
+        print(opt)
         if opt == "N":
             return
-        self.head = ("%03u %-30s %51s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-93s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt != "T":
             self.pageHeading()
@@ -362,12 +358,9 @@ class sl4010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-31s %-10s %48s %5s" % \
-            ("Staff Loans Interrogation as at", self.sysdtd, "Page",
-            self.pgnum))
+        self.fpdf.drawText("Staff Loans Interrogation as at %s" % self.sysdtd)
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 3
diff --git a/wag/wg1010.py b/wag/wg1010.py
old mode 100755
new mode 100644
diff --git a/wag/wg2010.py b/wag/wg2010.py
old mode 100755
new mode 100644
diff --git a/wag/wg2020.py b/wag/wg2020.py
old mode 100755
new mode 100644
index ddbeecc..52e71b3
--- a/wag/wg2020.py
+++ b/wag/wg2020.py
@@ -75,8 +75,6 @@ class wg2020(object):
         self.sysdtd = CCD(self.sysdtw, "d1", 10).disp
         self.s_per = int(self.opts["period"][1][0] / 100)
         self.e_per = int(self.opts["period"][2][0] / 100)
-        self.head = ("%03u %-30s %40s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdtd, "wg2020"))
         self.etotal = 0
         self.pgnum = 0
         self.empnos = []
diff --git a/wag/wg2030.py b/wag/wg2030.py
old mode 100755
new mode 100644
diff --git a/wag/wg3010.py b/wag/wg3010.py
old mode 100755
new mode 100644
index 3ba28ea..9b6acce
--- a/wag/wg3010.py
+++ b/wag/wg3010.py
@@ -95,8 +95,7 @@ class wg3010(object):
                 return
             col = sql.wagmst_col
             dic = sql.wagmst_dic
-            self.fpdf = MyFpdf(name=self.__class__.__name__, head=80,
-                auto=True, foot=True)
+            self.fpdf = MyFpdf(name=self.__class__.__name__, head=80, auto=True)
             self.fpdf.header = self.doHead
             self.fpdf.set_font("Courier", "B", 12)
             cwth = self.fpdf.get_string_width("X")
diff --git a/wag/wg3020.py b/wag/wg3020.py
old mode 100755
new mode 100644
index bb77833..e532c51
--- a/wag/wg3020.py
+++ b/wag/wg3020.py
@@ -47,8 +47,6 @@ class wg3020(object):
         self.fromad = wagctl["ctw_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def doProcess(self):
@@ -84,10 +82,8 @@ class wg3020(object):
 
     def doPrintReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%03u %-30s %10s %49s %10s %10s" % (self.opts["conum"],
-            self.opts["conam"], "", self.sysdttm, "", self.__class__.__name__))
+        self.head = "%03u %-113s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         old_empno = 0
         for num, dat in enumerate(recs):
@@ -125,12 +121,10 @@ class wg3020(object):
     def doPageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-35s %-10s %64s %5s" % (
-            "Salaries Data Capture Report as at", self.date,
-            "Page", self.pgnum))
+        self.fpdf.drawText("%-35s %-10s" %
+            ("Salaries Data Capture Report as at", self.date))
         self.fpdf.drawText()
         self.fpdf.drawText(
             "%-5s %-50s %-1s %-5s %-1s %-3s %-30s %-1s %13s" % ("EmpNo",
diff --git a/wag/wg3030.py b/wag/wg3030.py
old mode 100755
new mode 100644
index d46e731..73bf2b5
--- a/wag/wg3030.py
+++ b/wag/wg3030.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import ASD, CCD, GetCtl, MyFpdf, Sql, TartanDialog
 from tartanFunctions import doPrinter, getModName
 
@@ -45,9 +44,6 @@ class wg3030(object):
         if not wagctl:
             return
         self.fromad = wagctl["ctw_emadd"]
-        t = time.localtime()
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -81,10 +77,9 @@ class wg3030(object):
 
     def doEnd(self):
         self.df.closeProcess()
-        self.head = ("%03u %-30s %38s %10s" % (self.opts["conum"],
-            self.opts["conam"], self.sysdttm, self.__class__.__name__))
         pdfnam = getModName(self.opts["mf"].rcdic["wrkdir"],
             self.__class__.__name__, self.opts["conum"], ext="pdf")
+        self.head = "%03u %-80s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         cod = self.sql.getRec("wagedc", cols=["ced_code"],
             where=[("ced_cono", "=", self.opts["conum"]), ("ced_type",
@@ -171,7 +166,7 @@ class wg3030(object):
         self.fpdf.drawText("%-71s %13s" % ("Control Total", totl.disp))
         self.fpdf.drawText()
         self.fpdf.drawText("Summary of SDL Payment")
-        self.fpdf.underLine(txt="X" * 61)
+        self.fpdf.underLine(txt=self.head)
         keys = list(emp.keys())
         keys.sort()
         for k in keys:
diff --git a/wag/wg3040.py b/wag/wg3040.py
old mode 100755
new mode 100644
diff --git a/wag/wg3050.py b/wag/wg3050.py
old mode 100755
new mode 100644
index 2d9f743..529de49
--- a/wag/wg3050.py
+++ b/wag/wg3050.py
@@ -50,8 +50,6 @@ class wg3050(object):
         self.fromad = wagctl["ctw_emadd"]
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         ctc = self.sql.getRec("ctlmst", where=[("ctm_cono", "=",
             self.opts["conum"])], limit=1)
         ctw = self.sql.getRec("wagctl", where=[("ctw_cono", "=",
@@ -68,7 +66,10 @@ class wg3050(object):
         self.cname = ctc[self.sql.ctlmst_col.index("ctm_contact")]
         self.cotel = ctc[self.sql.ctlmst_col.index("ctm_tel")]
         self.coeml = ctc[self.sql.ctlmst_col.index("ctm_email")].strip()
-        self.regno = ctw[self.sql.wagctl_col.index("ctw_regno")]
+        try:
+            self.regno = int(ctw[self.sql.wagctl_col.index("ctw_regno")])
+        except:
+            return
         self.sdlno = ctw[self.sql.wagctl_col.index("ctw_sdlno")]
         self.uifno = ctw[self.sql.wagctl_col.index("ctw_uifno")]
         self.trade = ctw[self.sql.wagctl_col.index("ctw_trade")]
@@ -297,10 +298,10 @@ class wg3050(object):
             for code in (2010,2015,2020,2022,2024,2025,2026,2027,2028,2030,
                     2031, 2035,2064,2065,2066,2080,9999):
                 self.totcode += code
-        except:
+        except Exception as err:
             showError(None, "Header Record Error", "There is a Problem "\
                 "with your Company or Control Records, Please Fix the "\
-                "Problem and then Reprint")
+                "Problem and then Reprint\n\n%s" % err)
             self.error = True
 
     def doSelCoy(self):
@@ -389,7 +390,10 @@ class wg3050(object):
         for i in fname:
             self.inits = self.inits + i[0]
         self.nature = wgm[col.index("wgm_nature")]
-        self.idno = wgm[col.index("wgm_idno")]
+        try:
+            self.idno = int(wgm[col.index("wgm_idno")])
+        except:
+            self.idno = 0
         self.dob = CCD(wgm[col.index("wgm_dob")], "D1", 10)
         self.emadd = wgm[col.index("wgm_emadd")].strip()
         self.addr1 = wgm[col.index("wgm_addr1")]
@@ -736,6 +740,10 @@ Please Amend the Earnings or Deduction Codes containing It and then Try Again.""
                 bacno = int(self.bacno)
             except:
                 bacno = 0
+            try:
+                taxno = int(self.taxno.work)
+            except:
+                taxno = 0
             self.emprec = '3010,"%s",3015,"%s",3020,"%1s",3025,%04i,'\
                 '3030,"%s",3040,"%s",3050,"%s",3060,%013i,3080,%08i,'\
                 '3100,%010i,3125,"%s",3136,"%s",3147,"%s",3148,"%s",'\
@@ -744,11 +752,11 @@ Please Amend the Earnings or Deduction Codes containing It and then Try Again.""
                 '3217,"%s",3218,"X",3230,"%s",3240,%01i,3241,%s,3242,%s,'\
                 '3245,"%s",3246,%01i' % (self.irp5, self.ttyp, self.nature,
                 self.taxyr, self.sname, self.fname, self.inits, self.idno,
-                self.dob.work, int(self.taxno.work), self.emadd,
-                self.cotel[:11].strip(), self.coad1[:24].strip(),
-                self.coad2.strip(), self.coad3[:21].strip(), self.cocod,
-                self.emp, self.start.work, self.term.work, self.base,
-                self.pers, self.addr1, self.addr2, self.addr3, self.pcode,
+                self.dob.work, taxno, self.emadd, self.cotel[:11].strip(),
+                self.coad1[:24].strip(), self.coad2.strip(),
+                self.coad3[:21].strip(), self.cocod, self.emp,
+                self.start.work, self.term.work, self.base, self.pers,
+                self.addr1, self.addr2, self.addr3, self.pcode,
                 self.direct, btype, bacno, self.branch, self.payee,
                 self.relate)
             for code in (3010,3015,3020,3025,3030,3040,3050,3060,3080,
@@ -757,10 +765,10 @@ Please Amend the Earnings or Deduction Codes containing It and then Try Again.""
                     3242,3245,3246):
                 self.totcode += code
             self.totrecs += 1
-        except:
+        except Exception as err:
             showError(None, "Header Record Error", "There is a Problem "\
                 "with Employee %s's Record. Please Fix the Problem and "\
-                "then Reprint" % self.emp)
+                "then Reprint\n\n%s" % (self.emp, err))
             self.error = True
 
     def printGross(self):
diff --git a/wag/wg3060.py b/wag/wg3060.py
old mode 100755
new mode 100644
diff --git a/wag/wg3070.py b/wag/wg3070.py
old mode 100755
new mode 100644
diff --git a/wag/wg4010.py b/wag/wg4010.py
old mode 100755
new mode 100644
index e043b51..0edcb79
--- a/wag/wg4010.py
+++ b/wag/wg4010.py
@@ -51,8 +51,6 @@ class wg4010(object):
         t = time.localtime()
         self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         if t[1] < 3:
             self.taxyr = t[0]
         else:
@@ -296,11 +294,8 @@ class wg4010(object):
     def doPrintOption(self, opt):
         if opt == "N":
             return
-        self.head = ("%03u %-30s %68s %10s" % \
-            (self.opts["conum"], self.opts["conam"], self.sysdttm,
-                self.__class__.__name__))
+        self.head = "%03u %-110s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
-        self.pgnum = 0
         self.pglin = 999
         if opt != "T":
             self.pageHeading()
@@ -457,12 +452,10 @@ class wg4010(object):
     def pageHeading(self):
         self.fpdf.add_page()
         self.fpdf.setFont(style="B")
-        self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-38s %-10s %58s %5s" % \
-            ("Salaries and Wages Interrogation as at", self.sysdtd, "Page",
-            self.pgnum))
+        self.fpdf.drawText("%-38s %-10s" % \
+            ("Salaries and Wages Interrogation as at", self.sysdtd))
         self.fpdf.underLine(txt=self.head)
         self.fpdf.setFont()
         self.pglin = 6
diff --git a/wag/wgc110.py b/wag/wgc110.py
old mode 100755
new mode 100644
diff --git a/wag/wgc210.py b/wag/wgc210.py
old mode 100755
new mode 100644
diff --git a/wag/wgc220.py b/wag/wgc220.py
old mode 100755
new mode 100644
index 83eb5a6..c648c5d
--- a/wag/wgc220.py
+++ b/wag/wgc220.py
@@ -24,22 +24,14 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import RepPrt, TartanDialog
 
 class wgc220(object):
     def __init__(self, **opts):
         self.opts = opts
-        self.setVariables()
         self.mainProcess()
         self.opts["mf"].startLoop()
 
-    def setVariables(self):
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
-
     def mainProcess(self):
         r1s = (("Number","N"),("Description","D"))
         fld = (
diff --git a/wag/wgc310.py b/wag/wgc310.py
old mode 100755
new mode 100644
diff --git a/wag/wgc320.py b/wag/wgc320.py
old mode 100755
new mode 100644
index 5cac281..aead37b
--- a/wag/wgc320.py
+++ b/wag/wgc320.py
@@ -24,7 +24,6 @@ COPYING
     along with this program. If not, see <https://www.gnu.org/licenses/>.
 """
 
-import time
 from TartanClasses import GetCtl, RepPrt, Sql, TartanDialog
 from tartanFunctions import showError
 
@@ -45,10 +44,6 @@ class wgc320(object):
         if not wagctl:
             return
         self.fromad = wagctl["ctw_emadd"]
-        t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
diff --git a/wag/wgc410.py b/wag/wgc410.py
old mode 100755
new mode 100644
diff --git a/wag/wgc420.py b/wag/wgc420.py
old mode 100755
new mode 100644
index ca367b5..eefb4db
--- a/wag/wgc420.py
+++ b/wag/wgc420.py
@@ -47,10 +47,7 @@ class wgc420(object):
             return
         self.fromad = wagctl["ctw_emadd"]
         t = time.localtime()
-        self.sysdtw = (t[0] * 10000) + (t[1] * 100) + t[2]
         self.sysdtd = "%i/%02i/%02i" % (t[0], t[1], t[2])
-        self.sysdttm = "(Printed on: %i/%02i/%02i at %02i:%02i)" % \
-            (t[0], t[1], t[2], t[3], t[4])
         return True
 
     def mainProcess(self):
@@ -75,8 +72,7 @@ class wgc420(object):
 
     def printReport(self, recs):
         p = ProgressBar(self.opts["mf"].body, mxs=len(recs), esc=True)
-        self.head = ("%-24s %37s %5s %6s" % ("Tartan Systems", self.sysdttm,
-            "", self.__class__.__name__))
+        self.head = "%-3u %-76s" % (self.opts["conum"], self.opts["conam"])
         self.fpdf = MyFpdf(name=self.__class__.__name__, head=self.head)
         self.pgnum = 0
         self.pglin = 999
@@ -123,8 +119,8 @@ class wgc420(object):
         self.pgnum += 1
         self.fpdf.drawText(self.head)
         self.fpdf.drawText()
-        self.fpdf.drawText("%-20s %-10s %37s %5s" %
-            ("Wages Messages as at", self.sysdtd, "Page", self.pgnum))
+        self.fpdf.drawText("%-s %-10s" %
+            ("Salaries and Wages Messages as at", self.sysdtd))
         self.fpdf.drawText()
         self.fpdf.drawText("%-14s %-3s %-10s %-30s" %
             ("", "Num", "", "Message"))
diff --git a/wag/wgc510.py b/wag/wgc510.py
old mode 100755
new mode 100644
